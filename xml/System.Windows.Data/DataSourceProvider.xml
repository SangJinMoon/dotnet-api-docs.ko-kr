<Type Name="DataSourceProvider" FullName="System.Windows.Data.DataSourceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b69b026e4c25cdaac8db8887e388b431180c5d47" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32692383" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceProvider : System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceProvider extends System.Object implements class System.ComponentModel.INotifyPropertyChanged, class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.DataSourceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceProvider&#xA;Implements INotifyPropertyChanged, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceProvider abstract : System::ComponentModel::INotifyPropertyChanged, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0c52f-101">일부 쿼리를 실행하여 바인딩 소스 개체로 사용할 수 있는 단일 개체 또는 개체 목록을 생성하는 팩터리인 <see cref="T:System.Windows.Data.DataSourceProvider" /> 개체에 대한 공통 기본 클래스 및 계약입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c52f-101">Common base class and contract for <see cref="T:System.Windows.Data.DataSourceProvider" /> objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-102"><xref:System.Windows.Data.DataSourceProvider> 기존 데이터 모델; 사용 되는 편리한 래퍼 모든 데이터 모델을 대체 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-102"><xref:System.Windows.Data.DataSourceProvider> is a convenience wrapper around an existing data model; it does not replace any data model.</span></span> <span data-ttu-id="0c52f-103">데이터 공급자는 복잡 하 고 ADO와 같은 몇 가지 속성을 사용 하는 단일 개체에는 데이터 모델의 다양 한 기능을 시도 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-103">A data provider does not attempt to condense the complexity and versatility of a data model such as ADO into one single object with a few properties.</span></span>  
  
 <span data-ttu-id="0c52f-104"><xref:System.Windows.Data.DataSourceProvider>는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-104"><xref:System.Windows.Data.DataSourceProvider> is an abstract class.</span></span> <span data-ttu-id="0c52f-105">파생된 클래스는 중 하나를 사용 하 여 <xref:System.Windows.Data.XmlDataProvider> 및 <xref:System.Windows.Data.ObjectDataProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-105">Use one of the derived classes, which are <xref:System.Windows.Data.XmlDataProvider> and <xref:System.Windows.Data.ObjectDataProvider>.</span></span> <span data-ttu-id="0c52f-106"><xref:System.Windows.Data.DataSourceProvider> 인식는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 스레딩 및 발송자 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-106">The <xref:System.Windows.Data.DataSourceProvider> is aware of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] threading and dispatcher model.</span></span> <span data-ttu-id="0c52f-107">스레드를 만들 때 가정은 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-107">It assumes the thread at creation time to be the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread.</span></span> <span data-ttu-id="0c52f-108">이벤트 마샬링됩니다 작업자 스레드에서 응용 프로그램의 UI 스레드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-108">Events will get marshaled from a worker thread to the UI thread of the application.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-109">
            <see cref="T:System.Windows.Data.DataSourceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-109">Initializes a new instance of the <see cref="T:System.Windows.Data.DataSourceProvider" /> class.</span>
          </span>
          <span data-ttu-id="0c52f-110">이 생성자는 protected 생성자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-110">This is a protected constructor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="protected virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-111">이 개체의 초기화가 시작되려고 함을 나타냅니다. 짝을 이루는 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> 메서드가 호출될 때까지 암시적인 <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />가 발생하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-111">Indicates that initialization of this object is about to begin; no implicit <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> occurs until the matched <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> method is called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="protected virtual void BeginQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BeginQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.BeginQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BeginQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BeginQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-112">파생 클래스에서 재정의되는 경우 이 기본 클래스에서 <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> 또는 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />가 호출되었을 때 이 메서드를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-112">When overridden in a derived class, this base class calls this method when <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> or <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> has been called.</span>
          </span>
          <span data-ttu-id="0c52f-113">새로 고침이 지연되거나 초기 로드가 비활성화된 경우 기본 클래스에서 호출을 지연합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-113">The base class delays the call if refresh is deferred or initial load is disabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-114">**구현자 참고 사항:** 동일한 스레드에서 하거나 백그라운드에서 쿼리를 실행 하도록 선택할 수 있습니다 스레드 또는 사용 하 여 `IsAsynchronous`합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-114">**Notes to Implementers:** You can choose to execute the query on the same thread or on a background thread or using `IsAsynchronous`.</span></span> <span data-ttu-id="0c52f-115">쿼리가 완료 되 면 호출 <xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A> 공용 속성을 업데이트 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-115">When the query is complete, call <xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A> to have the public properties updated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public object Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Data { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-116">기본 데이터 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-116">Gets the underlying data object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c52f-117">기본 데이터 개체인 <see cref="T:System.Object" /> 형식의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-117">A value of type <see cref="T:System.Object" /> that is the underlying data object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-118">때는 <xref:System.Windows.Data.DataSourceProvider> 사용 바인딩 소스로 결과 바인딩 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-118">When the <xref:System.Windows.Data.DataSourceProvider> is used as the source of a binding, this is the resulting binding source object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" />
      </Docs>
    </Member>
    <Member MemberName="DataChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.DataSourceProvider.DataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DataChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-119">
            <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 속성에 새 값을 사용하면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-119">Occurs when the <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> property has a new value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-120">**구현자 참고 사항:** 이 이벤트는 새 데이터 개체에서 사용 가능 해지면 발생는 <xref:System.Windows.Data.DataSourceProvider.Data%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-120">**Notes to implementers:** Raise this event when a new data object becomes available on the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferRefresh">
      <MemberSignature Language="C#" Value="public virtual IDisposable DeferRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable DeferRefresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeferRefresh () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ DeferRefresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-121">공급자 속성을 변경하고 자동 새로 고침을 지연하는 데 사용할 수 있는 지연 주기를 입력합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-121">Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c52f-122">호출하는 개체를 삭제하는 데 사용할 수 있는 <see cref="T:System.IDisposable" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-122">An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-123">일반적인 사용법은 만들려는 `using` 이 방법으로 범위가 지정 되 고 다음 범위 내에서 여러 속성 변경 내용을 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-123">The typical usage is to create a `using` scope with this method and then place multiple property changes within the scope.</span></span> <span data-ttu-id="0c52f-124">이 지연 주기가 종료 될 때까지 자동 새로 고침을 지연 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-124">This delays automatic refresh until the defer cycle is exited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="protected System.Windows.Threading.Dispatcher Dispatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Protected Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); void set(System::Windows::Threading::Dispatcher ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-125">사용할 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 스레드에 대한 현재 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-125">Gets or sets the current <see cref="T:System.Windows.Threading.Dispatcher" /> object to the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c52f-126">현재 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 스레드를 사용 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-126">The current <see cref="T:System.Windows.Threading.Dispatcher" /> object to the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread to use.</span>
          </span>
          <span data-ttu-id="0c52f-127">이 개체는 기본적으로 인스턴스를 만든 스레드에 연결되는 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-127">By default, this is the <see cref="T:System.Windows.Threading.Dispatcher" /> object that is associated with the thread on which this instance was created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="protected virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.EndInit" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-128">이 개체의 초기화가 완료되었음을 나타냅니다. 처리 중인 다른 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />가 없으면 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-128">Indicates that the initialization of this object has completed; this causes a <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> if no other <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> is outstanding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-129">마지막 쿼리 작업의 오류를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-129">Gets the error of the last query operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c52f-130">마지막 쿼리 작업의 오류인 <see cref="T:System.Exception" /> 형식의 값입니다. 오류가 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-130">A value of type <see cref="T:System.Exception" /> that is the error of the last query operation, or <see langword="null" /> if there was no error.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialLoad">
      <MemberSignature Language="C#" Value="public void InitialLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitialLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitialLoad ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitialLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-131">기본 데이터 모델에 대한 초기 쿼리를 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-131">Starts the initial query to the underlying data model.</span>
          </span>
          <span data-ttu-id="0c52f-132">결과는 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 속성에 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-132">The result is returned on the <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-133">종속 데이터 바인딩을 활성화 될 때이 메서드는 일반적으로 바인딩 엔진에 의해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-133">This method is typically called by the binding engine when dependent data bindings are activated.</span></span> <span data-ttu-id="0c52f-134">설정 <xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A> 를 `false` 을 방지 하거나 데이터의 자동 로드를 지연 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-134">Set <xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A> to `false` to prevent or delay the automatic loading of data.</span></span>  
  
 <span data-ttu-id="0c52f-135"><xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> 메서드가 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-135">The <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> method can be called multiple times.</span></span> <span data-ttu-id="0c52f-136">공급자; 초기 쿼리를 실행 중이면 후속 호출은 무시 공급자 이미 실행 중인 다시 시작 되지 않으면 쿼리할 때 <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> 를 다시 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-136">The provider ignores subsequent calls once it is busy executing the initial query; the provider does not restart an already running query when <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> is called again.</span></span> <span data-ttu-id="0c52f-137">쿼리가 완료 되 면 성공적으로 모든 <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> 호출 여전히 다시 쿼리하지 않습니다 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-137">When the query finishes successfully, any <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> call still does not re-query data.</span></span> <span data-ttu-id="0c52f-138"><xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> 작업은 일반적으로 비동기는 <xref:System.Windows.Data.DataSourceProvider.DataChanged> 이벤트가 발생할 때는 <xref:System.Windows.Data.DataSourceProvider.Data%2A> 속성에 새 값이 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-138">The <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A> operation is typically asynchronous, a <xref:System.Windows.Data.DataSourceProvider.DataChanged> event is raised when the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property assumed a new value.</span></span>  
  
 <span data-ttu-id="0c52f-139">응용 프로그램 호출 <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> 에 데이터를 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-139">The application calls <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> to cause a refresh of the data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialLoadEnabled">
      <MemberSignature Language="C#" Value="public bool IsInitialLoadEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialLoadEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInitialLoadEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialLoadEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-140">데이터 자동 로드를 방해하거나 지연할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-140">Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c52f-141">데이터 자동 로드를 방해하거나 지연하면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-141">
              <see langword="false" /> to prevent or delay the automatic loading of data; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="0c52f-142">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-142">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-143">일반적으로 <xref:System.Windows.Data.DataSourceProvider> 해당 쿼리를 실행 하 고 설정의 <xref:System.Windows.Data.DataSourceProvider.Data%2A> 속성 바인딩에 이미 사용 되는 처음 또는 <xref:System.Windows.Data.CollectionViewSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-143">Typically the <xref:System.Windows.Data.DataSourceProvider> runs its query and sets its <xref:System.Windows.Data.DataSourceProvider.Data%2A> property the first time it is used by a binding or a <xref:System.Windows.Data.CollectionViewSource>.</span></span> <span data-ttu-id="0c52f-144">설정 하 여이 단계를 생략할 수는 <xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A> 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-144">You can omit this step by setting the <xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A> property to `false`.</span></span> <span data-ttu-id="0c52f-145">이 경우 응용 프로그램이 명시적으로 호출 해야 <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> 해당 데이터를 가져오는 경우 공급자를 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-145">In this case, the application must explicitly call <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> to cause the provider to obtain its data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRefreshDeferred">
      <MemberSignature Language="C#" Value="protected bool IsRefreshDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRefreshDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsRefreshDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsRefreshDeferred { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-146">사용하고 있는 처리 중인 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />가 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-146">Gets a value that indicates whether there is an outstanding <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> in use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c52f-147">사용하고 있는 처리 중인 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-147">
              <see langword="true" /> if there is an outstanding <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> in use; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-148">**구현자 참고 사항:** 를 새로 고침 deferral는 최상의 이용을 호출 하지 마십시오 <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> 이 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-148">**Notes to implementers:** To get the best use out of refresh deferral, do not call <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> when this property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c52f-149">발생하는 이벤트의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-149">Arguments of the event being raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c52f-150">제공된 인수를 사용하여 <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-150">Raises the <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> event with the provided arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnQueryFinished">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-151">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-151">Derived classes call this method to indicate that a query has finished.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnQueryFinished">
      <MemberSignature Language="C#" Value="protected void OnQueryFinished (object newData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnQueryFinished(object newData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnQueryFinished (newData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnQueryFinished(System::Object ^ newData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newData">
          <span data-ttu-id="0c52f-152">쿼리 결과인 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-152">The data that is the result of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c52f-153">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-153">Derived classes call this method to indicate that a query has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-154">이 콜백은 모든 스레드에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-154">This callback can be called from any thread.</span></span> <span data-ttu-id="0c52f-155">이 구현은 다시 결과를 마샬링합니다.는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 공용 속성을 설정 하기 전에 및 모든 이벤트를 발생 시키기 전에 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-155">This implementation marshals back the result to the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread before setting any of the public properties and before raising any events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryFinished">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryFinished (object newData, Exception error, System.Windows.Threading.DispatcherOperationCallback completionWork, object callbackArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryFinished(object newData, class System.Exception error, class System.Windows.Threading.DispatcherOperationCallback completionWork, object callbackArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryFinished (newData As Object, error As Exception, completionWork As DispatcherOperationCallback, callbackArguments As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryFinished(System::Object ^ newData, Exception ^ error, System::Windows::Threading::DispatcherOperationCallback ^ completionWork, System::Object ^ callbackArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newData" Type="System.Object" />
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="completionWork" Type="System.Windows.Threading.DispatcherOperationCallback" />
        <Parameter Name="callbackArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newData">
          <span data-ttu-id="0c52f-156">쿼리 결과인 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-156">The data that is the result of the query.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="0c52f-157">쿼리를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-157">The error that occurred while running the query.</span>
          </span>
          <span data-ttu-id="0c52f-158">오류가 없는 경우 이 값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-158">This value is <see langword="null" /> if there is no error.</span>
          </span>
        </param>
        <param name="completionWork">
          <span data-ttu-id="0c52f-159">추가 속성 설정 등 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 스레드에서 완성 기능을 실행하는 데 사용되는 선택적 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-159">Optional delegate that is used to execute completion work on the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread, for example, to set additional properties.</span>
          </span>
        </param>
        <param name="callbackArguments">
          <span data-ttu-id="0c52f-160">
            <c>completionWork</c> 대리자와 함께 매개 변수로 전송할 선택적 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-160">Optional arguments to send as a parameter with the <c>completionWork</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c52f-161">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-161">Derived classes call this method to indicate that a query has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-162">이 콜백은 모든 스레드에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-162">This callback can be called from any thread.</span></span> <span data-ttu-id="0c52f-163">이 구현은 다시 결과를 마샬링합니다.는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 공용 속성을 설정 하기 전에 및 모든 이벤트를 발생 시키기 전에 스레드입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-163">This implementation marshals back the result to the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] thread before setting any of the public properties and before raising any events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-164">속성 값이 변경될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-164">Occurs when a property value changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-165">기본 데이터 모델의 새로 고침 작업을 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-165">Initiates a refresh operation to the underlying data model.</span>
          </span>
          <span data-ttu-id="0c52f-166">결과는 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 속성에 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-166">The result is returned on the <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c52f-167">새로 고침 작업은 일반적으로 비동기는 <xref:System.Windows.Data.DataSourceProvider.DataChanged> 이벤트가 발생할 때는 <xref:System.Windows.Data.DataSourceProvider.Data%2A> 속성에 새 값이 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-167">A refresh operation is typically asynchronous, a <xref:System.Windows.Data.DataSourceProvider.DataChanged> event is raised when the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property assumed a new value.</span></span> <span data-ttu-id="0c52f-168">새로 고침 작업이 실패 하면는 <xref:System.Windows.Data.DataSourceProvider.Data%2A> 속성이 `null`; <xref:System.Windows.Data.DataSourceProvider.Error%2A> 오류 예외로 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-168">If the refresh operation fails, the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property is set to `null`; the <xref:System.Windows.Data.DataSourceProvider.Error%2A> property is set with the error exception.</span></span> <span data-ttu-id="0c52f-169">응용 프로그램에서 호출할 수 <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> 이전 새로 고침을 계속 진행 하는 동안 합니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-169">The application can call <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> while a previous refresh is still underway.</span></span> <span data-ttu-id="0c52f-170">호출 <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> 를 두 번 발생는 <xref:System.Windows.Data.DataSourceProvider.DataChanged> 이벤트를 두 번입니다.</span><span class="sxs-lookup"><span data-stu-id="0c52f-170">Calling <xref:System.Windows.Data.DataSourceProvider.Refresh%2A> twice raises the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event twice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-171">이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-171">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c52f-172">이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c52f-172">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>