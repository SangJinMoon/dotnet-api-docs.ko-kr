<Type Name="DefaultWorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a309ca3084748679a112dc3e7fc94a7f6c28bdf7" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53298519" /></Metadata><TypeSignature Language="C#" Value="public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultWorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultWorkflowSchedulerService&#xA;Inherits WorkflowSchedulerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultWorkflowSchedulerService : System::Workflow::Runtime::Hosting::WorkflowSchedulerService" />
  <TypeSignature Language="F#" Value="type DefaultWorkflowSchedulerService = class&#xA;    inherit WorkflowSchedulerService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowSchedulerService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="531e4-101">워크플로 런타임 엔진에서 워크플로 인스턴스를 실행하는 스레드를 만들고 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-101">Creates and manages the threads that run workflow instances on the workflow runtime engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="531e4-102"><xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>는 기본적으로 워크플로 런타임 엔진에서 사용되며,</span><span class="sxs-lookup"><span data-stu-id="531e4-102"><xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> is used by the workflow runtime engine by default.</span></span> <span data-ttu-id="531e4-103">여기에는 런타임 스레드 풀에 여러 워크플로 인스턴스가 대기 중인 경우에 대한 기본 지원이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-103">It includes default support for having multiple workflow instances queued in the runtime thread pool.</span></span> <span data-ttu-id="531e4-104">워크플로를 실행하는 스레드를 제어하려면 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-104">If you want to control the thread that is responsible for executing the workflow, use <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="531e4-105"><see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-105">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="531e4-106"><see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-106">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="531e4-107">초기화 정보를 포함하는 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-107">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that holds initialization information.</span></span></param>
        <summary><span data-ttu-id="531e4-108"><see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-108">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531e4-109">이 생성자는 워크플로 런타임 엔진이 응용 프로그램 구성 파일에서 서비스를 로드할 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-109">This constructor is invoked when the workflow runtime engine loads services from an application configuration file.</span></span> <span data-ttu-id="531e4-110">올바른 매개 변수는 동시에 실행할 수 있는 워크플로 수를 지정하는 `maxSimultaneousWorkflows`뿐입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-110">The only valid parameter is `maxSimultaneousWorkflows`, which can specify the number of workflows that can be run at the same time.</span></span>  
  
 <span data-ttu-id="531e4-111">`maxSimultaneousWorkflows`를 높은 값으로 설정하면 .NET 스레드 풀이 고갈될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-111">Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve.</span></span> <span data-ttu-id="531e4-112"><xref:System.Transactions.Transaction> 개체도 .NET 스레드 풀을 사용하므로 이로 인해 유지 서비스가 지속성 트랜잭션을 완료하려고 할 때 시간이 초과될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-112">This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.</span></span>  
  
 <span data-ttu-id="531e4-113">생성자나 구성 파일에 지정되지 않은 경우 `maxSimultaneousWorkflows`의 기본값은 단일 프로세서 컴퓨터의 경우 5이고 다중 프로세서 컴퓨터의 경우 (int)(5 \* Environment.ProcessorCount \* .8)입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-113">If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 \* Environment.ProcessorCount \* .8) for a multiple-processor machine.</span></span> <span data-ttu-id="531e4-114">정수 산술 연산의 규칙 때문에 (int)(5 \* Environment.ProcessorCount \* .8)은 (int)(4 \* Environment.ProcessorCount)와 항상 동일하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-114">Note that (int)(5 \* Environment.ProcessorCount \* .8) is not always the same as (int)(4 \* Environment.ProcessorCount), because of the rules of integer arithmetic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="531e4-115"><paramref name="parameters" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-115"><paramref name="parameters" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="531e4-116"><paramref name="parameters" /> 컬렉션의 키 값 중 하나에 null 참조(<see langword="Nothing" />)가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-116">One of the key values in the <paramref name="parameters" /> collection contains a null reference (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="531e4-117">또는</span><span class="sxs-lookup"><span data-stu-id="531e4-117">-or-</span></span> 
<span data-ttu-id="531e4-118"><paramref name="parameters" /> 컬렉션의 키 값 중 하나가 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />의 기본 키와 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-118">One of the key values in the <paramref name="parameters" /> collection does not match the default key for <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="531e4-119">매개 변수 중 하나를 <see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />와 일치하는 배정밀도 부동 소수점 실수로 변환할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-119">One of the parameters cannot be converted to a double-precision floating point number that matches <see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="531e4-120"><see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />가 1보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-120"><see cref="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" /> is less than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxSimultaneousWorkflows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (maxSimultaneousWorkflows As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultWorkflowSchedulerService(int maxSimultaneousWorkflows);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService : int -&gt; System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService maxSimultaneousWorkflows" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maxSimultaneousWorkflows" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxSimultaneousWorkflows"><span data-ttu-id="531e4-121">스레드 풀 큐에 저장할 수 있는 워크플로 인스턴스의 최대 개수를 결정하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-121">An integer that determines the maximum number of workflow instances that can be stored in the thread pool queue.</span></span></param>
        <summary><span data-ttu-id="531e4-122">서비스가 동시에 실행할 수 있는 워크플로 인스턴스의 지정된 최대 개수를 사용하여 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-122">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> class by using the specified maximum number of workflow instances that the service can run simultaneously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531e4-123">`maxSimultaneousWorkflows`를 높은 값으로 설정하면 .NET 스레드 풀이 고갈될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-123">Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve.</span></span> <span data-ttu-id="531e4-124"><xref:System.Transactions.Transaction> 개체도 .NET 스레드 풀을 사용하므로 이로 인해 유지 서비스가 지속성 트랜잭션을 완료하려고 할 때 시간이 초과될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-124">This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.</span></span>  
  
 <span data-ttu-id="531e4-125">생성자나 구성 파일에 지정되지 않은 경우 `maxSimultaneousWorkflows`의 기본값은 단일 프로세서 컴퓨터의 경우 5이고 다중 프로세서 컴퓨터의 경우 (int)(5 \* Environment.ProcessorCount \* .8)입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-125">If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 \* Environment.ProcessorCount \* .8) for a multiple-processor machine.</span></span> <span data-ttu-id="531e4-126">정수 산술 연산의 규칙 때문에 (int)(5 \* Environment.ProcessorCount \* .8)은 (int)(4 \* Environment.ProcessorCount)와 항상 동일하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-126">Note that (int)(5 \* Environment.ProcessorCount \* .8) is not always the same as (int)(4 \* Environment.ProcessorCount), because of the rules of integer arithmetic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="531e4-127"><paramref name="maxSimultaneousWorkflows" />가 1보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-127"><paramref name="maxSimultaneousWorkflows" /> is less than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal override void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Cancel(Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Cancel : Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Cancel timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId"><span data-ttu-id="531e4-128">취소할 기존의 예약된 작업 항목과 연결된 <see cref="T:System.Guid" />입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-128">The <see cref="T:System.Guid" /> associated with the existing scheduled work item to cancel.</span></span></param>
        <summary><span data-ttu-id="531e4-129">지정된 기존 워크플로 인스턴스 작업 항목을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-129">Cancels the specified existing workflow instance work item.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="531e4-130"><paramref name="timerId" />가 빈 GUID인 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-130"><paramref name="timerId" /> is an empty GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxSimultaneousWorkflows">
      <MemberSignature Language="C#" Value="public int MaxSimultaneousWorkflows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSimultaneousWorkflows" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxSimultaneousWorkflows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSimultaneousWorkflows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSimultaneousWorkflows : int" Usage="System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="531e4-131">스레드 풀 큐에 저장할 수 있는 워크플로 인스턴스의 최대 개수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-131">Gets the maximum number of workflow instances that can be stored in the thread pool queue.</span></span></summary>
        <value><span data-ttu-id="531e4-132">스레드 풀 큐에 저장할 수 있는 워크플로 인스턴스의 최대 개수를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-132">An integer that represents the maximum number of workflow instances that can be stored in the thread pool queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531e4-133">이 메서드의 기본값은 단일 프로세서 컴퓨터의 경우 5이고 다중 프로세서 컴퓨터의 경우 (int)(5 \* Environment.ProcessorCount \* .8)입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-133">The default value for this method is 5 for a single-processor machine, and (int)(5 \* Environment.ProcessorCount \* .8) for a multiple-processor machine.</span></span> <span data-ttu-id="531e4-134">정수 산술 연산의 규칙 때문에 (int)(5 \* Environment.ProcessorCount \* .8)은 (int)(4 \* Environment.ProcessorCount)와 항상 동일하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-134">Note that (int)(5 \* Environment.ProcessorCount \* .8) is not always the same as (int)(4 \* Environment.ProcessorCount), because of the rules of integer arithmetic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="defaultWorkflowSchedulerService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="531e4-135">워크플로 인스턴스가 실행되기 시작했다고 <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" />에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-135">Notifies the <see cref="T:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService" /> that a workflow instance has started to run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531e4-136"><xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted%2A>는 워크플로 인스턴스 스레드 풀에 포함되기 위해 대기 중인 항목 목록의 첫 번째 작업 항목에 대한 스레드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-136"><xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted%2A> creates a thread for the first work item in the list of items waiting to be included in the workflow instance thread pool.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="531e4-137">보류 중인 작업 항목 큐에 워크플로 인스턴스를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-137">Adds a workflow instance to the pending work items queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Schedule (callback, workflowInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="531e4-138">실행할 메서드를 나타내는 <see cref="T:System.Threading.WaitCallback" /> 멀티캐스트 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-138">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span></span></param>
        <param name="workflowInstanceId"><span data-ttu-id="531e4-139">워크플로 인스턴스를 나타내는 <see cref="T:System.Guid" />입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-139">A <see cref="T:System.Guid" /> that represents the workflow instance.</span></span></param>
        <summary><span data-ttu-id="531e4-140">지정된 멀티캐스트 대리자를 사용하여 지정된 워크플로 인스턴스로 보류 중인 작업 항목 큐에 워크플로 인스턴스를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-140">Adds a workflow instance to the pending work items queue using the specified workflow instance using the specified multicast delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531e4-141"><xref:System.Threading.WaitCallback> 생성자를 사용하여 새 스레드에서 실행될 대리자 메서드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-141">Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="531e4-142"><paramref name="callback" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-142"><paramref name="callback" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid * DateTime * Guid -&gt; unit" Usage="defaultWorkflowSchedulerService.Schedule (callback, workflowInstanceId, whenUtc, timerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="531e4-143">실행할 메서드를 나타내는 <see cref="T:System.Threading.WaitCallback" /> 멀티캐스트 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-143">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span></span></param>
        <param name="workflowInstanceId"><span data-ttu-id="531e4-144">워크플로 인스턴스를 나타내는 <see cref="T:System.Guid" />입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-144">A <see cref="T:System.Guid" /> that represents the workflow instance.</span></span></param>
        <param name="whenUtc"><span data-ttu-id="531e4-145">스레드 실행을 시작할 시간을 나타내는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-145">The <see cref="T:System.DateTime" /> that indicates the time to begin running the thread.</span></span></param>
        <param name="timerId"><span data-ttu-id="531e4-146">예약된 스레드를 나타내는 <see cref="T:System.Guid" />입니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-146">A <see cref="T:System.Guid" /> that represents the scheduled thread.</span></span></param>
        <summary><span data-ttu-id="531e4-147">지정된 멀티캐스트 대리자, <see cref="T:System.DateTime" /> 및 GUID를 사용하여 보류 중인 작업 항목 큐에 지정된 워크플로 인스턴스를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-147">Adds the specified workflow instance to the pending work item queue using the specified multicast delegate, <see cref="T:System.DateTime" /> and GUIDs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531e4-148"><xref:System.Threading.WaitCallback> 생성자를 사용하여 새 스레드에서 실행될 대리자 메서드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-148">Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="531e4-149"><paramref name="callback" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-149"><paramref name="callback" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="531e4-150"><paramref name="workflowInstanceId" /> 또는 <paramref name="timerId" />가 빈 GUID인 경우</span><span class="sxs-lookup"><span data-stu-id="531e4-150"><paramref name="workflowInstanceId" /> or <paramref name="timerId" /> is an empty GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="defaultWorkflowSchedulerService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="531e4-151">워크플로 인스턴스에서 현재 실행 중인 스레드와 실행 중인 모든 타이머를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="531e4-151">Stops the currently running thread on the workflow instance and any timers that are running.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>