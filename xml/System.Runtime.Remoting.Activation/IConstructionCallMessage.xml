<Type Name="IConstructionCallMessage" FullName="System.Runtime.Remoting.Activation.IConstructionCallMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37911fb4eecb46af5676685cd246f116cbc9568b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30486957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IConstructionCallMessage : System.Runtime.Remoting.Messaging.IMethodCallMessage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConstructionCallMessage implements class System.Runtime.Remoting.Messaging.IMessage, class System.Runtime.Remoting.Messaging.IMethodCallMessage, class System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConstructionCallMessage&#xA;Implements IMethodCallMessage" />
  <TypeSignature Language="C++ CLI" Value="public interface class IConstructionCallMessage : System::Runtime::Remoting::Messaging::IMethodCallMessage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMethodCallMessage</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>개체의 생성 호출 요청을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하 여 새 클라이언트 활성 개체의 인스턴스를 만들 때 `new` 또는 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> 스레드가 사용자 코드에 반환 되기 전에 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> 원격 응용 프로그램에 전송 됩니다. 원격 활성기에서 처리 된 원격 응용 프로그램에 생성 메시지가 도착 하면, (한 개 또는 하나에 지정 된 기본은 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator%2A> 속성) 및 새 개체가 만들어집니다. 그런 다음 원격 응용 프로그램 반환는 <xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage> 로컬 응용 프로그램에 있습니다. <xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage> 인스턴스가 포함 된 <xref:System.Runtime.Remoting.ObjRef>, 원격 개체에 대 한 정보를 패키지 하는 합니다. 원격 인프라 변환는 <xref:System.Runtime.Remoting.ObjRef> 인스턴스 사용자 코드에 반환 되는 원격 개체에 대 한 프록시를 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivationType">
      <MemberSignature Language="C#" Value="public Type ActivationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ActivationType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ActivationType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>활성화할 원격 개체의 형식을 가져옵니다.</summary>
        <value>활성화할 원격 개체의 형식입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ActivationTypeName">
      <MemberSignature Language="C#" Value="public string ActivationTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivationTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivationTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>활성화할 원격 형식의 전체 형식 이름을 가져옵니다.</summary>
        <value>활성화할 원격 형식의 전체 형식 이름입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Activator">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Activation.IActivator Activator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Activation.IActivator Activator" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator" />
      <MemberSignature Language="VB.NET" Value="Public Property Activator As IActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Activation::IActivator ^ Activator { System::Runtime::Remoting::Activation::IActivator ^ get(); void set(System::Runtime::Remoting::Activation::IActivator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Activation.IActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>원격 개체를 활성화하는 활성기를 가져오거나 설정합니다.</summary>
        <value>원격 개체를 활성화하는 활성기입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 계층의 정렬 된 활성기의 체인 활성화 프로세스에 관련 된 다양 한 작업을 완료 합니다. 사용자 지정 활성기에 연결 하려는 경우 다음 활성기 계층 구조를 적절 한 위치에서 프로그램 활성기에 연결 합니다. 사용 하 여는 <xref:System.Runtime.Remoting.Activation.IActivator.NextActivator%2A?displayProperty=nameWithType> 활성기 활성기의 체인을 탐색 하려면 현재 속성에서 반환 되는 속성입니다.  
  
 클라이언트 쪽에서 메시지의 활성기 체인에 사용자 지정 활성기를 추가 하는 경우 활성기를 직렬화 하 고 필요 하다 고 판단 하는 경우 서버 쪽에 전송 되어 수 있습니다. 이러한 이유로 활성기 사용자 지정 serialization 요구 사항 측면에서 매우 경량 이어야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CallSiteActivationAttributes">
      <MemberSignature Language="C#" Value="public object[] CallSiteActivationAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] CallSiteActivationAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallSiteActivationAttributes As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ CallSiteActivationAttributes { cli::array &lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호출 사이트 활성화 특성을 가져옵니다.</summary>
        <value>호출 사이트 활성화 특성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes%2A> 인덱서를 사용 하면 개체 활성화 중에 사용할 추가 특성을 지정할 수 있습니다. 사용자 지정의 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes%2A> 에 `activationAttributes` 매개 변수를 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContextProperties">
      <MemberSignature Language="C#" Value="public System.Collections.IList ContextProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContextProperties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextProperties As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ ContextProperties { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체를 생성할 컨텍스트를 정의하는 컨텍스트 속성 목록을 가져옵니다.</summary>
        <value>개체를 생성할 컨텍스트의 속성 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 새 개체의 컨텍스트는 클래스의 메타 데이터 특성에 따라 선택 합니다. 컨텍스트 선택 메커니즘은 클래스 메타 데이터에 컴파일되는 정적 컨텍스트 속성이 라고도 하는 사용자 지정 특성을 통해 확장 가능 합니다. 개체를 원격으로 활성화 하는 경우는 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A> 생성 호출 메시지의 다양 한 특성에서 속성의 목록을 포함 합니다. 이러한 속성은 서버 개체가 활성화 되는 컨텍스트를 만드는 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 인프라 코드와 작동 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
      </Docs>
    </Member>
  </Members>
</Type>