<Type Name="CompositionContext" FullName="System.Composition.CompositionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a2cea34c03f45767ff89c06499c7fa51454191f" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49135686" /></Metadata><TypeSignature Language="C#" Value="public abstract class CompositionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.CompositionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionContext abstract" />
  <TypeSignature Language="F#" Value="type CompositionContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Runtime</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1b10e-101">컴퍼지션에서 내보내기를 검색하는 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-101">Provides methods to retrieve exports from the composition.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CompositionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CompositionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b10e-102"><see cref="T:System.Composition.CompositionContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-102">Initializes a new instance of the <see cref="T:System.Composition.CompositionContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="1b10e-103">이 생성자를 하 게 보호; 참고 파생 된 클래스 에서만 호출할 수는 <see cref="T:System.Composition.CompositionContext"/> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-103">Note that this constructor is protected; it can only be called by classes derived from the <see cref="T:System.Composition.CompositionContext"/> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public object GetExport (System.Composition.Hosting.Core.CompositionContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExport(class System.Composition.Hosting.Core.CompositionContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport(System.Composition.Hosting.Core.CompositionContract)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport (contract As CompositionContract) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExport(System::Composition::Hosting::Core::CompositionContract ^ contract);" />
      <MemberSignature Language="F#" Value="member this.GetExport : System.Composition.Hosting.Core.CompositionContract -&gt; obj" Usage="compositionContext.GetExport contract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="1b10e-104">일치하는 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-104">The contract to match.</span></span></param>
        <summary><span data-ttu-id="1b10e-105">지정된 계약과 일치하는 내보내기를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-105">Retrieves the export that matches the specified contract.</span></span></summary>
        <returns><span data-ttu-id="1b10e-106">내보낸 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-106">The exported value.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.Composition.Hosting.CompositionFailedException"><span data-ttu-id="1b10e-107"><paramref name="contract" />에 대한 내보내기가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-107">No export found for <paramref name="contract" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public object GetExport (Type exportType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExport(class System.Type exportType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport (exportType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExport(Type ^ exportType);" />
      <MemberSignature Language="F#" Value="member this.GetExport : Type -&gt; obj" Usage="compositionContext.GetExport exportType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="exportType"><span data-ttu-id="1b10e-108">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-108">The type to match.</span></span></param>
        <summary><span data-ttu-id="1b10e-109">지정된 형식과 일치하는 내보내기를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-109">Retrieves the export that matches the specified type.</span></span></summary>
        <returns><span data-ttu-id="1b10e-110">내보낸 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-110">The exported value.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public object GetExport (Type exportType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExport(class System.Type exportType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport (exportType As Type, contractName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExport(Type ^ exportType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : Type * string -&gt; obj" Usage="compositionContext.GetExport (exportType, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exportType"><span data-ttu-id="1b10e-111">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-111">The type to match.</span></span></param>
        <param name="contractName"><span data-ttu-id="1b10e-112">일치시킬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-112">The name to match.</span></span></param>
        <summary><span data-ttu-id="1b10e-113">지정된 이름 및 형식과 일치하는 내보내기를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-113">Retrieves the export that matches the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="1b10e-114">내보낸 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-114">The exported value.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public TExport GetExport&lt;TExport&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TExport GetExport&lt;TExport&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of TExport) () As TExport" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; TExport GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; 'Export" Usage="compositionContext.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TExport</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TExport"><span data-ttu-id="1b10e-115">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-115">The type to match.</span></span></typeparam>
        <summary><span data-ttu-id="1b10e-116">지정된 제네릭 형식 매개 변수와 일치하는 내보내기를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-116">Retrieves the export that matches the specified generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="1b10e-117">내보낸 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-117">The exported value.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public TExport GetExport&lt;TExport&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TExport GetExport&lt;TExport&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExport``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of TExport) (contractName As String) As TExport" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; TExport GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; 'Export" Usage="compositionContext.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TExport</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TExport"><span data-ttu-id="1b10e-118">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-118">The type to match.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1b10e-119">일치시킬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-119">The name to match.</span></span></param>
        <summary><span data-ttu-id="1b10e-120">지정된 제네릭 형식 매개 변수 및 계약 이름과 일치하는 내보내기를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-120">Retrieves the export that matches the specified generic type parameter and contract name.</span></span></summary>
        <returns><span data-ttu-id="1b10e-121">내보낸 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-121">The exported value.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetExports (Type exportType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetExports(class System.Type exportType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (exportType As Type) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetExports(Type ^ exportType);" />
      <MemberSignature Language="F#" Value="member this.GetExports : Type -&gt; seq&lt;obj&gt;" Usage="compositionContext.GetExports exportType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="exportType"><span data-ttu-id="1b10e-122">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-122">The type to match.</span></span></param>
        <summary><span data-ttu-id="1b10e-123">지정된 형식과 일치하는 모든 내보내기의 컬렉션을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-123">Retrieves a collection of all exports that match the specified type.</span></span></summary>
        <returns><span data-ttu-id="1b10e-124">내보낸 값의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-124">A collection of exported values.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetExports (Type exportType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetExports(class System.Type exportType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (exportType As Type, contractName As String) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetExports(Type ^ exportType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : Type * string -&gt; seq&lt;obj&gt;" Usage="compositionContext.GetExports (exportType, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exportType"><span data-ttu-id="1b10e-125">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-125">The type to match.</span></span></param>
        <param name="contractName"><span data-ttu-id="1b10e-126">일치시킬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-126">The name to match.</span></span></param>
        <summary><span data-ttu-id="1b10e-127">지정된 계약 이름 및 형식과 일치하는 내보내기를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-127">Retrieves all exports that match the specified contract name and type.</span></span></summary>
        <returns><span data-ttu-id="1b10e-128">내보낸 값의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-128">A collection of exported values.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TExport&gt; GetExports&lt;TExport&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TExport&gt; GetExports&lt;TExport&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of TExport) () As IEnumerable(Of TExport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TExport&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;'Export&gt;" Usage="compositionContext.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TExport&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TExport"><span data-ttu-id="1b10e-129">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-129">The type to match.</span></span></typeparam>
        <summary><span data-ttu-id="1b10e-130">지정된 제네릭 형식 매개 변수와 일치하는 내보내기를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-130">Retrieves all exports that match the specified generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="1b10e-131">내보낸 값의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-131">A collection of exported values.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TExport&gt; GetExports&lt;TExport&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TExport&gt; GetExports&lt;TExport&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.GetExports``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of TExport) (contractName As String) As IEnumerable(Of TExport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TExport&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;'Export&gt;" Usage="compositionContext.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TExport&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TExport"><span data-ttu-id="1b10e-132">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-132">The type to match.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1b10e-133">일치시킬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-133">The name to match.</span></span></param>
        <summary><span data-ttu-id="1b10e-134">지정된 제네릭 형식 매개 변수 및 계약 이름과 일치하는 내보내기를 모두 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-134">Retrieves all exports that match the specified generic type parameter and contract name.</span></span></summary>
        <returns><span data-ttu-id="1b10e-135">내보낸 값의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-135">A collection of exported values.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public abstract bool TryGetExport (System.Composition.Hosting.Core.CompositionContract contract, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetExport(class System.Composition.Hosting.Core.CompositionContract contract, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport(System.Composition.Hosting.Core.CompositionContract,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetExport (contract As CompositionContract, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetExport(System::Composition::Hosting::Core::CompositionContract ^ contract, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberSignature Language="F#" Value="abstract member TryGetExport : System.Composition.Hosting.Core.CompositionContract *  -&gt; bool" Usage="compositionContext.TryGetExport (contract, export)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="export" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="1b10e-136">일치하는 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-136">The contract to match.</span></span></param>
        <param name="export"><span data-ttu-id="1b10e-137">이 메서드가 반환될 때 일치하는 내보내기나 <see langword="null" />을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-137">When this method returns, contains the matched export or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1b10e-138">지정된 계약과 일치하는 내보내기를 반환하거나 일치하는 항목이 없을 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-138">Returns the export that matches the specified contract, or returns <see langword="null" /> if no match is found.</span></span></summary>
        <returns><span data-ttu-id="1b10e-139">내보내기가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-139"><see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public bool TryGetExport (Type exportType, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport(class System.Type exportType, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport(System.Type,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport (exportType As Type, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExport(Type ^ exportType, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberSignature Language="F#" Value="member this.TryGetExport : Type *  -&gt; bool" Usage="compositionContext.TryGetExport (exportType, export)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="export" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exportType"><span data-ttu-id="1b10e-140">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-140">The type to match.</span></span></param>
        <param name="export"><span data-ttu-id="1b10e-141">이 메서드가 반환될 때 일치하는 내보내기나 <see langword="null" />을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-141">When this method returns, contains the matched export or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1b10e-142">지정된 형식과 일치하는 내보내기를 반환하거나 일치하는 항목이 없을 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-142">Returns the export that matches the specified type, or returns <see langword="null" /> if no match is found.</span></span></summary>
        <returns><span data-ttu-id="1b10e-143">내보내기가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-143"><see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public bool TryGetExport (Type exportType, string contractName, out object export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport(class System.Type exportType, string contractName, [out] object&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport (exportType As Type, contractName As String, ByRef export As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExport(Type ^ exportType, System::String ^ contractName, [Runtime::InteropServices::Out] System::Object ^ % export);" />
      <MemberSignature Language="F#" Value="member this.TryGetExport : Type * string *  -&gt; bool" Usage="compositionContext.TryGetExport (exportType, contractName, export)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="export" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exportType"><span data-ttu-id="1b10e-144">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-144">The type to match.</span></span></param>
        <param name="contractName"><span data-ttu-id="1b10e-145">일치시킬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-145">The name to match.</span></span></param>
        <param name="export"><span data-ttu-id="1b10e-146">이 메서드가 반환될 때 일치하는 내보내기나 <see langword="null" />을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-146">When this method returns, contains the matched export or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1b10e-147">지정된 계약 이름 및 형식과 일치하는 내보내기를 반환하거나 일치하는 항목이 없을 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-147">Returns the export that matches the specified contract name and type, or returns <see langword="null" /> if no match is found.</span></span></summary>
        <returns><span data-ttu-id="1b10e-148">내보내기가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-148"><see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetExport&lt;TExport&gt; (out TExport export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport&lt;TExport&gt;([out] !!TExport&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport(Of TExport) (ByRef export As TExport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; bool TryGetExport([Runtime::InteropServices::Out] TExport % export);" />
      <MemberSignature Language="F#" Value="member this.TryGetExport :  -&gt; bool" Usage="compositionContext.TryGetExport export" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="export" Type="TExport" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TExport"><span data-ttu-id="1b10e-149">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-149">The type to match.</span></span></typeparam>
        <param name="export"><span data-ttu-id="1b10e-150">이 메서드가 반환될 때 일치하는 내보내기나 <see langword="null" />을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-150">When this method returns, contains the matched export or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1b10e-151">지정된 제네릭 형식 매개 변수와 일치하는 내보내기를 반환하거나 일치하는 항목이 없을 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-151">Returns the export that matches the specified generic type parameter, or returns <see langword="null" /> if no match is found.</span></span></summary>
        <returns><span data-ttu-id="1b10e-152">내보내기가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-152"><see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport&lt;TExport&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetExport&lt;TExport&gt; (string contractName, out TExport export);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExport&lt;TExport&gt;(string contractName, [out] !!TExport&amp; export) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.CompositionContext.TryGetExport``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExport(Of TExport) (contractName As String, ByRef export As TExport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExport&gt;&#xA; bool TryGetExport(System::String ^ contractName, [Runtime::InteropServices::Out] TExport % export);" />
      <MemberSignature Language="F#" Value="member this.TryGetExport : string *  -&gt; bool" Usage="compositionContext.TryGetExport (contractName, export)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExport" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="export" Type="TExport" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TExport"><span data-ttu-id="1b10e-153">일치시킬 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-153">The type to match.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1b10e-154">일치시킬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-154">The name to match.</span></span></param>
        <param name="export"><span data-ttu-id="1b10e-155">이 메서드가 반환될 때 일치하는 내보내기나 <see langword="null" />을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-155">When this method returns, contains the matched export or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1b10e-156">지정된 제네릭 형식 매개 변수 및 계약 이름과 일치하는 내보내기를 반환하거나 일치하는 항목이 없을 경우 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-156">Returns the export that matches the specified generic type parameter and contract name, or returns <see langword="null" /> if no match is found.</span></span></summary>
        <returns><span data-ttu-id="1b10e-157">내보내기가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1b10e-157"><see langword="true" /> if an export was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>