<Type Name="WorkflowMarkupSerializationManager" FullName="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54f601520164295a979f5fb052e3dd60800d5aab" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowMarkupSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowMarkupSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowMarkupSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowMarkupSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="45f79-101">워크플로에 대한 XAML(extensible Application Markup Language)과의 디자인 타임 serialization을 관리합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45f79-101">Manages design-time serialization to and from extensible Application Markup Language (XAML) for workflows.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="45f79-102">워크플로 또는 활동 디자이너는 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager>를 사용하여 디자인 타임 serialization 프로세스 관리에 유용한 서비스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-102">A workflow or activity designer can use <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="45f79-103">예를 들어 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager>는 개체를 만들고, 형식을 조회하고, 개체를 식별하고, 특정 형식의 serialization을 사용자 지정하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-103">For example, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> can be used to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMarkupSerializationManager (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowMarkupSerializationManager(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="45f79-104">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />를 초기화하는 데 사용할 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-104">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-105">지정된 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />을 사용하여 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-105">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> class by using the specified <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="45f79-106">추가할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-107">지정된 serialization 공급자를 serialization 관리자에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-107">Adds the specified serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A>는 사용자 지정 serialization 공급자를 serialization 관리자에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A> adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="45f79-109">serialization 공급자는 사용자 지정 serializer에 개체의 특정 형식이나 개체 형식의 집합을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-109">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="45f79-110">serialize하는 동안 각 사용자 지정 serialization 공급자는 지정된 데이터 형식에 대한 serializer가 있는 경우 이를 반환하도록 쿼리됩니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-110">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="45f79-111">serialization 관리자는 특정 형식에 대한 기본 serializer를 사용하기 전에 이 메서드에서 제공하는 사용자 지정 serializer를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-111">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45f79-112">serializer 간의 통신에 유용한 스택 기반의 사용자 정의 저장소 영역을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-112">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45f79-113">serialize되고 있는 현재 개체에 대한 정보를 포함하는 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-113">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that contains information about the current object being serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-114">일부 serializer는 상태를 올바로 유지하기 위해 개체의 컨텍스트 정보가 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-114">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="45f79-115"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A>를 사용하면 serializer가 다른 serializer에서 액세스할 수 있는 <xref:System.ComponentModel.Design.Serialization.ContextStack>으로 serialize하고 있는 개체의 컨텍스트 데이터를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-115"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A> enables a serializer to set data about the context of an object that it is serializing to a <xref:System.ComponentModel.Design.Serialization.ContextStack> where another serializer can access it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="45f79-116">serializer를 검색할 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-116">The <see cref="T:System.Type" /> for which to retrieve the serializer.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="45f79-117">검색할 serializer의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-117">The <see cref="T:System.Type" /> of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-118">지정된 형식의 개체에 대해 지정된 형식의 serializer를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-118">Returns a serializer of the specified type for an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-119">요청된 serializer 또는 해당 serializer를 찾을 수 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-119">The requested serializer, or a null reference (<see langword="Nothing" /> in Visual Basic) if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="45f79-120">반환할 서비스 개체의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-120">The <see cref="T:System.Type" /> of service object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-121">지정한 형식의 서비스 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-121">Returns a service object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-122">
            <paramref name="serviceType" /> 형식의 서비스 개체 또는 <see langword="Nothing" /> 형식의 서비스 개체가 없는 경우 null 참조(Visual Basic의 경우 <paramref name="serviceType" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-122">A service object of type <paramref name="serviceType" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="45f79-123">지정한 이름과 연결된 <see cref="T:System.Type" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-123">Returns the <see cref="T:System.Type" /> associated with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="45f79-124">로드할 <see cref="T:System.Type" />의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-124">The fully-qualified name of the <see cref="T:System.Type" /> to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-125">지정된 이름의 형식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-125">Returns a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-126">
            <see cref="T:System.Type" />과 연결된 <paramref name="typeName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-126">The <see cref="T:System.Type" /> associated with <paramref name="typeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (System.Xml.XmlQualifiedName xmlQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(class System.Xml.XmlQualifiedName xmlQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::Xml::XmlQualifiedName ^ xmlQualifiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlQualifiedName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="xmlQualifiedName">
          <span data-ttu-id="45f79-127">로드할 형식의 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-127">The <see cref="T:System.Xml.XmlQualifiedName" /> of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-128">지정된 XML 정규화된 이름과 연결된 형식을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-128">Returns that type associated with the specified XML qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-129">
            <see cref="T:System.Type" />과 연결된 <paramref name="xmlQualifiedName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-129">The <see cref="T:System.Type" /> associated with <paramref name="xmlQualifiedName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-130">정규화된 XML 이름은 정규화된 네임스페이스 로컬 이름(namespace:localname 형식)입니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-130">An XML qualified name is a namespace-qualified local name, in the format of namespace:localname.</span></span>  
  
 <span data-ttu-id="45f79-131">접두사는 XML을 유지하거나 읽는 경우에만 필요하므로 <xref:System.Xml.XmlQualifiedName> 개체와 관계가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-131">Because prefixes are only required when XML is persisted or read, they are irrelevant for <xref:System.Xml.XmlQualifiedName> objects.</span></span> <span data-ttu-id="45f79-132">로컬 이름에 ":"이 포함되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-132">It is the responsibility of the user to ensure the local name does not contain a ":"</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45f79-133">
            <paramref name="xmlQualifiedName" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-133">
              <paramref name="xmlQualifiedName" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlQualifiedName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlQualifiedName GetXmlQualifiedName (Type type, out string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlQualifiedName GetXmlQualifiedName(class System.Type type, [out] string&amp; prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetXmlQualifiedName(System.Type,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlQualifiedName ^ GetXmlQualifiedName(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="45f79-134">XML 정규화된 이름을 반환할 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-134">The <see cref="T:System.Type" /> for which to return the XML-qualified name.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="45f79-135">이 메서드가 반환할 때 접두사가 정의되지 않은 경우 정규화된 이름의 XML 접두사 또는 빈 문자열을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-135">When this method returns, contains the XML prefix for the qualified name or an empty string if no prefix is defined.</span>
          </span>
          <span data-ttu-id="45f79-136">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-136">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-137">지정된 형식과 연결된 XML 정규화된 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-137">Returns the XML-qualified name associated with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-138">
            <see cref="T:System.Xml.XmlQualifiedName" />과 연결된 <paramref name="type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-138">The <see cref="T:System.Xml.XmlQualifiedName" /> associated with <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45f79-139">
            <paramref name="type" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-139">
              <paramref name="type" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45f79-140">현재 serializer와 연결된 어셈블리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-140">Gets or sets the assembly that is associated with the current serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45f79-141">현재 serializer와 연결된 <see cref="T:System.Reflection.Assembly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-141">The <see cref="T:System.Reflection.Assembly" /> that is associated with the current serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="45f79-142">제거할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-142">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          </span>
          <span data-ttu-id="45f79-143">
            <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />를 사용하여 이 공급자가 추가되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-143">This provider must be added using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-144">사용자 지정 serialization 공급자를 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-144">Removes a custom serialization provider from the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReportError(System::Object ^ errorInformation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="45f79-145">보고할 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-145">The error to report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-146">serialization의 오류를 보고합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-146">Reports an error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-147">`errorInformation`은 모든 개체 유형일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-147">`errorInformation` can be of any object type.</span></span> <span data-ttu-id="45f79-148">이 개체가 예외인 경우에는 예외 메시지를 추출하여 사용자에게 보고하고</span><span class="sxs-lookup"><span data-stu-id="45f79-148">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="45f79-149">다른 형식인 경우에는 <xref:System.Object.ToString%2A>을 호출하여 정보를 사용자에게 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-149">If it is any other type, <xref:System.Object.ToString%2A> is called to display the information to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationManager">
      <MemberSignature Language="C#" Value="protected internal System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property SerializationManager As IDesignerSerializationManager" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ SerializationManager { System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ get(); void set(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45f79-150">현재 serializer에 사용할 serialization 관리자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-150">Gets or sets the serialization manager to use with the current serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45f79-151">현재 serializer에 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-151">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use with the current serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="45f79-152">만들 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-152">The <see cref="T:System.Type" /> to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="45f79-153">
            <c>type</c>의 인수를 포함하는 <see cref="T:System.Collections.ICollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-153">An <see cref="T:System.Collections.ICollection" /> that contains the arguments for <c>type</c>.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="45f79-154">개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-154">The name of the object.</span>
          </span>
          <span data-ttu-id="45f79-155">이 이름은 나중에 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />를 통해 개체에 액세스하는 데 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-155">This name can be used to access the object later using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="45f79-156">null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 전달되면 개체가 만들어지지만 이름으로 액세스할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-156">If a null reference (<see langword="Nothing" /> in Visual Basic) is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="45f79-157">이 개체를 디자인 컨테이너에 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-157">
              <see langword="true" /> to add the object to the design container; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-158">지정된 형식의 인스턴스를 만들어 명명된 인스턴스의 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-158">Creates an instance of the specified type and adds it to a collection of named instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-159">새로 만든 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-159">The newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-160">`addToContainer`가 `true`로 설정된 경우 개체에서 <xref:System.ComponentModel.IComponent>를 구현해야 이 매개 변수가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-160">If `addToContainer` is set to `true`, the object must implement <xref:System.ComponentModel.IComponent> for this to have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="45f79-161">검색할 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-161">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-162">지정된 이름을 가진 생성된 개체의 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-162">Returns an instance of a created object of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-163">지정된 이름을 가진 개체 인스턴스 또는 해당 이름을 가진 개체가 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-163">An instance of the object with the given name, or a null reference (<see langword="Nothing" /> in Visual Basic) if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-164">`name`이 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>에 대한 이전 호출에서 설정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-164">`name` must be set through a prior call to <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="45f79-165">이름을 검색할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-165">The <see cref="T:System.Object" /> for which to retrieve the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-166">지정된 개체의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-166">Returns the name of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45f79-167">개체 이름 또는 개체에 이름이 없는 경우 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-167">The name of the object, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45f79-168">사용 가능한 serializer로 serialize할 수 있는 속성 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-168">Gets a collection of properties that can be serialized with available serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45f79-169">serialize할 속성을 포함하는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-169">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties to serialize.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-170">이 속성에는 빈 컬렉션이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-170">This property can contain an empty collection.</span></span> <span data-ttu-id="45f79-171">serializer에서는 속성이 존재한다고 가정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-171">A serializer should never assume that any properties exist.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="45f79-172">이름을 지정할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-172">The object to name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="45f79-173">개체에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-173">The name to assign to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45f79-174">지정된 기존 개체의 이름을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45f79-174">Sets the name of the specified existing object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45f79-175"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)>은 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>를 사용하지 않고 개체의 인스턴스를 만들어 이름을 지정해야 할 때 유용합니다.</span><span class="sxs-lookup"><span data-stu-id="45f79-175"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)> is useful when you need to create and then name an instance of an object without using <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>