<Type Name="ServiceCredentialsSecurityTokenManager" FullName="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="77868b7c96cb56f0631e89ad578882aa655d0a86" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32691983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager implements class System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceCredentialsSecurityTokenManager&#xA;Inherits SecurityTokenManager&#xA;Implements IEndpointIdentityProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCredentialsSecurityTokenManager : System::IdentityModel::Selectors::SecurityTokenManager, System::ServiceModel::Security::IEndpointIdentityProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IEndpointIdentityProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="dfbd4-101">서비스에서 구성된 <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />를 기반으로 보안 토큰 serializer를 제공하는 <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> 구현을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dfbd4-101">Represents a <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> implementation that provides security token serializers based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> configured on the service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfbd4-102">이 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-102">This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class.</span></span> <span data-ttu-id="dfbd4-103">각 서비스 채널 수신기에 이 클래스의 인스턴스가 하나씩 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-103">There is one instance of this class for each service channel listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfbd4-104">다음 코드에서는 사용자 지정 서비스 자격 증명 토큰 관리자를 만들기 위해 이 클래스를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-104">The following code shows how to override this class to create a customized Service Credentials Token Manager.</span></span>  
  
 [!code-csharp[c_CustomCredentials#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#5)]
 [!code-vb[c_CustomCredentials#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ServiceCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceCredentialsSecurityTokenManager(System::ServiceModel::Description::ServiceCredentials ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="dfbd4-105">서비스 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-105">The service credentials.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfbd4-106">전달된 <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />를 기반으로 <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> class based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> passed in.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationTokenAuthenticator">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator(class System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; sctResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateSecureConversationTokenAuthenticator (recipientRequirement As RecipientServiceModelSecurityTokenRequirement, preserveBootstrapTokens As Boolean, ByRef sctResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecureConversationTokenAuthenticator(System::ServiceModel::Security::Tokens::RecipientServiceModelSecurityTokenRequirement ^ recipientRequirement, bool preserveBootstrapTokens, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % sctResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipientRequirement" Type="System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />
        <Parameter Name="preserveBootstrapTokens" Type="System.Boolean" />
        <Parameter Name="sctResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="recipientRequirement">
          <span data-ttu-id="dfbd4-107">수신기와 관련된 특정 보안 속성 요구 사항을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-107">Represents security property requirements specific to the listener.</span>
          </span>
        </param>
        <param name="preserveBootstrapTokens">
          <span data-ttu-id="dfbd4-108">부트스트랩 토큰을 유지해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-108">
              <see langword="true" /> if the bootstrap tokens should be preserved; Otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="sctResolver">
          <span data-ttu-id="dfbd4-109">키 식별자나 키 식별자 절이 있는 경우 보안 토큰이나 키를 검색할 수 있는 보안 토큰 확인자 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-109">A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfbd4-110">전달된 속성 요구 사항에 기반하여 보안 대화 토큰 인증자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-110">Creates a secure conversation token authenticator based on the property requirements passed in.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfbd4-111">보안 토큰 인증자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-111">A security token authenticator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenAuthenticator (tokenRequirement As SecurityTokenRequirement, ByRef outOfBandTokenResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecurityTokenAuthenticator(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % outOfBandTokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">
          <span data-ttu-id="dfbd4-112">보안 토큰 요구 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-112">The security token requirement.</span>
          </span>
        </param>
        <param name="outOfBandTokenResolver">
          <span data-ttu-id="dfbd4-113">이 메서드가 반환되는 경우 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-113">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.</span>
          </span>
          <span data-ttu-id="dfbd4-114">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-114">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfbd4-115">
            <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />를 기반으로 보안 토큰 인증자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-115">Creates a security token authenticator based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfbd4-116">보안 토큰 인증자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-116">The security token authenticator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfbd4-117">`outOfBand` 토큰 확인 자가 SOAP에 없는 토큰 보안을 처리할 때 메시지를 해결 하려면 WCF 보안 프로세서에서 사용 되는 방법으로 선택적으로 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-117">An `outOfBand` token resolver can optionally be returned by the method, which is used by the WCF security processor to resolve tokens that are not in the SOAP message when processing security.</span></span> <span data-ttu-id="dfbd4-118">이 메서드가 반환하는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>는 토큰의 유효성을 확인하고 클레임을 추출합니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-118">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims.</span></span> <span data-ttu-id="dfbd4-119"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>에서 파생된 각 클래스마다 하나의 <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-119">One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfbd4-120">다음 코드는 이 메서드를 재정의하는 방법의 예제입니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-120">The following code is an example of how to override this method.</span></span>  
  
 [!code-csharp[c_CustomTokenAuthenticator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)]
 [!code-vb[c_CustomTokenAuthenticator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfbd4-121">
            <paramref name="tokenRequirement" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-121">
              <paramref name="tokenRequirement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dfbd4-122">전달된<paramref name="tokenRequirement" />에 대한 보안 토큰 인증자를 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-122">A security token authenticator cannot be created for the <paramref name="tokenRequirement" /> that was passed in.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenProvider (requirement As SecurityTokenRequirement) As SecurityTokenProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenProvider ^ CreateSecurityTokenProvider(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">
          <span data-ttu-id="dfbd4-123">보안 토큰 요구 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-123">The security token requirement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfbd4-124">
            <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />를 기반으로 보안 토큰 공급자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-124">Creates a security token provider based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfbd4-125">보안 토큰 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-125">The security token provider.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfbd4-126"><xref:System.IdentityModel.Selectors.SecurityTokenProvider> 클래스는 지정된 <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>에 맞는 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-126">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span> <span data-ttu-id="dfbd4-127">필요한 경우 토큰 공급자는 토큰 갱신과 취소도 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-127">Optionally, token providers can support renewing and canceling tokens as well.</span></span> <span data-ttu-id="dfbd4-128">토큰 공급자는 구성에 따라 토큰을 캐시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-128">The token provider can cache tokens if it is configured to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfbd4-129">다음 코드에서는 이 메서드를 재정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-129">The following code shows how to override this method.</span></span>  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#4)]
 [!code-vb[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfbd4-130">
            <paramref name="requirement" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-130">
              <paramref name="requirement" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dfbd4-131">전달된 <paramref name="requirement" />에 대한 보안 토큰 공급자를 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-131">A security token provider cannot be created for the <paramref name="requirement" /> that was passed in.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenSerializer (version As SecurityTokenVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::IdentityModel::Selectors::SecurityTokenVersion ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="dfbd4-132">보안 토큰의 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-132">The version of the security token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfbd4-133">전달된 보안 토큰 버전을 기반으로 보안 토큰 serializer를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-133">Creates a security token serializer based on the security token version passed in.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfbd4-134">보안 토큰 serializer입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-134">The security token serializer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfbd4-135"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer>는 보안 토큰 및 보안 토큰 참조를 쓰고 읽는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-135">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references.</span></span> <span data-ttu-id="dfbd4-136">XML에서 토큰을 deserialize하는 경우 반환된 토큰은 암호화 작업을 수행할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-136">When deserializing the token from XML, the returned token must be able to perform cryptographic operations.</span></span> <span data-ttu-id="dfbd4-137">토큰 serializer는 토큰이 Kerberos 티켓 처리, X.509 디코딩, SAML 디코딩 등의 암호화 작업을 수행할 수 있는지 확인하도록 충분한 유효성 검사를 수행할 수 있어야 하지만 응용 프로그램 신뢰 결정은 인증자가 하도록 연기해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-137">The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dfbd4-138">전달된 <paramref name="version" />에 대한 보안 토큰 serializer를 만들 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-138">A security token serializer cannot be created for the  <paramref name="version" /> that was passed in.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityOfSelf">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.EndpointIdentity GetIdentityOfSelf(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityOfSelf (tokenRequirement As SecurityTokenRequirement) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::EndpointIdentity ^ GetIdentityOfSelf(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">
          <span data-ttu-id="dfbd4-139">보안 토큰 요구 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-139">The security token requirement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfbd4-140">보안 토큰 요구 사항을 기반으로 <see cref="T:System.ServiceModel.EndpointIdentity" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-140">Gets the <see cref="T:System.ServiceModel.EndpointIdentity" /> based on the security token requirement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfbd4-141">
            <paramref name="tokenRequirement" />에 해당하는 끝점 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-141">The endpoint identity that corresponds to the <paramref name="tokenRequirement" />.</span>
          </span>
          <span data-ttu-id="dfbd4-142">
            <see langword="null" />에서 ID를 만들 수 없을 경우 <paramref name="tokenRequirement" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-142">
              <see langword="null" /> is returned if an identity cannot be created from the <paramref name="tokenRequirement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfbd4-143">이 메서드를 가져올 WCF 인프라에서 호출 됩니다는 <xref:System.ServiceModel.EndpointIdentity> 서비스 끝점에 해당 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-143">This method is called by the WCF infrastructure to obtain the <xref:System.ServiceModel.EndpointIdentity> that corresponds to a service endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfbd4-144">
            <paramref name="tokenRequirement" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-144">
              <paramref name="tokenRequirement" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsIssuedSecurityTokenRequirement (requirement As SecurityTokenRequirement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsIssuedSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">
          <span data-ttu-id="dfbd4-145">보안 토큰 요구 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-145">The security token requirement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dfbd4-146">보안 토큰 요구 사항이 발급된 토큰을 위한 것인지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-146">Determines whether the security token requirement is for an issued token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dfbd4-147">보안 토큰 요구 사항이 발급된 토큰을 위한 것이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-147">
              <see langword="true" /> if the security token requirement is for an issued token; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials ServiceCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceCredentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ ServiceCredentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dfbd4-148">이 클래스의 이 인스턴스를 생성하는 데 사용되는 서비스 자격 증명을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-148">Gets the service credentials used to construct this instance of this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dfbd4-149">서비스 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dfbd4-149">The service credentials.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfbd4-150"><xref:System.ServiceModel.Description.ServiceCredentials> 개체를 사용하면 서비스 자격 증명 인증 설정뿐 아니라 서비스 자격 증명도 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dfbd4-150">The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>