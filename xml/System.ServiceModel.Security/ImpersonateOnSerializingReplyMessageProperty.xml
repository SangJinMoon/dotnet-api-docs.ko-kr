<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImpersonateOnSerializingReplyMessageProperty.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55d3b3dcc8cbf09ae49800f488e29343a5c51de8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d3b3dcc8cbf09ae49800f488e29343a5c51de8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
          <source>A helper class to enable impersonation while serializing the body of the reply message.</source>
          <target state="translated">회신 메시지의 본문을 serialize하는 동안 가장을 사용하도록 설정하는 도우미 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy">
          <source>Creates a copy of the message property.</source>
          <target state="translated">메시지 속성의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy">
          <source>The copy of the message property.</source>
          <target state="translated">메시지 속성의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name">
          <source>Gets the name of the message property.</source>
          <target state="translated">메시지 속성의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name">
          <source>The name of the message property.</source>
          <target state="translated">메시지 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>When this method returns, contains the impersonated context.</source>
          <target state="translated">이 메서드가 반환될 때 가장된 컨텍스트를 포함합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter is treated as uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>When this method returns, contains the original principal on the thread before invoking this method.</source>
          <target state="translated">이 메서드가 반환되면 이 메서드를 호출하기 전에 스레드에 원래 보안 주체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter is treated as uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>When this method returns, contains a value that indicates whether the principal was set on the thread by this method.</source>
          <target state="translated">이 메서드가 반환될 때 주체가 이 메서드를 통해 스레드에 설정되었는지 여부를 나타내는 값을 포함합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the operation context was not available to impersonate.</source>
          <target state="translated">이 매개 변수는 작업 컨텍스트를 가장하는 데 사용할 수 없는 경우 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>This parameter is treated as uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)">
          <source>Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.</source>
          <target state="translated">서비스에서 가장이 활성화되면 호출자의 컨텍스트로 가장하기 시작하고 서비스 구성에 따라 스레드에서 적절한 주체를 설정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>The impersonation context to revert.</source>
          <target state="translated">되돌릴 가장 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>The original principal to set on the thread.</source>
          <target state="translated">스레드에서 설정할 원래 보안 주체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>A value that indicates whether the thread principal was set during impersonation.</source>
          <target state="translated">가장 도중에 스레드 보안 주체가 설정되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the principal was set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">보안 주체가 설정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)">
          <source>Reverts impersonation and sets the specified original principal on the thread.</source>
          <target state="translated">가장을 되돌리고 지정된 원래 보안 주체를 스레드에 설정합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property from the specified message or message properties.</source>
          <target state="translated">지정된 메시지 또는 메시지 속성에서 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>The message from which to extract the property.</source>
          <target state="translated">속성을 추출할 메시지입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property extracted from the message.</source>
          <target state="translated">이 메서드가 반환될 때 메서드에서 추출된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property from the specified message.</source>
          <target state="translated">지정한 메시지에서 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the  property was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>The message properties object from which to extract the property.</source>
          <target state="translated">속성을 추출할 메시지 속성 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property extracted from the message.</source>
          <target state="translated">이 메서드가 반환될 때 메서드에서 추출된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> property from the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> object..</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /&gt;</ph> 개체에서 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.MessageProperties" /&gt;</ph> 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the  property was found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>