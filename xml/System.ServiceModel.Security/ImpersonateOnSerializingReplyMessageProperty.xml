<Type Name="ImpersonateOnSerializingReplyMessageProperty" FullName="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d3b3dcc8cbf09ae49800f488e29343a5c51de8f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImpersonateOnSerializingReplyMessageProperty : System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImpersonateOnSerializingReplyMessageProperty extends System.Object implements class System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class ImpersonateOnSerializingReplyMessageProperty&#xA;Implements IMessageProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImpersonateOnSerializingReplyMessageProperty : System::ServiceModel::Channels::IMessageProperty" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IMessageProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b534e-101">회신 메시지의 본문을 serialize하는 동안 가장을 사용하도록 설정하는 도우미 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b534e-101">A helper class to enable impersonation while serializing the body of the reply message.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IMessageProperty CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IMessageProperty CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As IMessageProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::IMessageProperty ^ CreateCopy();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IMessageProperty.CreateCopy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IMessageProperty</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b534e-102">메시지 속성의 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-102">Creates a copy of the message property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b534e-103">메시지 속성의 복사본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-103">The copy of the message property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public static string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b534e-104">메시지 속성의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-104">Gets the name of the message property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b534e-105">메시지 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-105">The name of the message property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartImpersonation">
      <MemberSignature Language="C#" Value="public void StartImpersonation (out IDisposable impersonationContext, out System.Security.Principal.IPrincipal originalPrincipal, out bool isThreadPrincipalSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartImpersonation([out] class System.IDisposable&amp; impersonationContext, [out] class System.Security.Principal.IPrincipal&amp; originalPrincipal, [out] bool&amp; isThreadPrincipalSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartImpersonation (ByRef impersonationContext As IDisposable, ByRef originalPrincipal As IPrincipal, ByRef isThreadPrincipalSet As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartImpersonation([Runtime::InteropServices::Out] IDisposable ^ % impersonationContext, [Runtime::InteropServices::Out] System::Security::Principal::IPrincipal ^ % originalPrincipal, [Runtime::InteropServices::Out] bool % isThreadPrincipalSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impersonationContext" Type="System.IDisposable&amp;" RefType="out" />
        <Parameter Name="originalPrincipal" Type="System.Security.Principal.IPrincipal&amp;" RefType="out" />
        <Parameter Name="isThreadPrincipalSet" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="impersonationContext">
          <span data-ttu-id="b534e-106">이 메서드가 반환될 때 가장된 컨텍스트를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-106">When this method returns, contains the impersonated context.</span>
          </span>
          <span data-ttu-id="b534e-107">이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-107">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <param name="originalPrincipal">
          <span data-ttu-id="b534e-108">이 메서드가 반환되면 이 메서드를 호출하기 전에 스레드에 원래 보안 주체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-108">When this method returns, contains the original principal on the thread before invoking this method.</span>
          </span>
          <span data-ttu-id="b534e-109">이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-109">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <param name="isThreadPrincipalSet">
          <span data-ttu-id="b534e-110">이 메서드가 반환될 때 주체가 이 메서드를 통해 스레드에 설정되었는지 여부를 나타내는 값을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-110">When this method returns, contains a value that indicates whether the principal was set on the thread by this method.</span>
          </span>
          <span data-ttu-id="b534e-111">이 매개 변수는 작업 컨텍스트를 가장하는 데 사용할 수 없는 경우 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-111">This parameter returns <see langword="false" /> if the operation context was not available to impersonate.</span>
          </span>
          <span data-ttu-id="b534e-112">이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-112">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b534e-113">서비스에서 가장이 활성화되면 호출자의 컨텍스트로 가장하기 시작하고 서비스 구성에 따라 스레드에서 적절한 주체를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-113">Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopImpersonation">
      <MemberSignature Language="C#" Value="public void StopImpersonation (IDisposable impersonationContext, System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopImpersonation(class System.IDisposable impersonationContext, class System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopImpersonation (impersonationContext As IDisposable, originalPrincipal As IPrincipal, isThreadPrincipalSet As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopImpersonation(IDisposable ^ impersonationContext, System::Security::Principal::IPrincipal ^ originalPrincipal, bool isThreadPrincipalSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impersonationContext" Type="System.IDisposable" />
        <Parameter Name="originalPrincipal" Type="System.Security.Principal.IPrincipal" />
        <Parameter Name="isThreadPrincipalSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="impersonationContext">
          <span data-ttu-id="b534e-114">되돌릴 가장 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-114">The impersonation context to revert.</span>
          </span>
        </param>
        <param name="originalPrincipal">
          <span data-ttu-id="b534e-115">스레드에서 설정할 원래 보안 주체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-115">The original principal to set on the thread.</span>
          </span>
        </param>
        <param name="isThreadPrincipalSet">
          <span data-ttu-id="b534e-116">가장 도중에 스레드 보안 주체가 설정되었는지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-116">A value that indicates whether the thread principal was set during impersonation.</span>
          </span>
          <span data-ttu-id="b534e-117">보안 주체가 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-117">
              <see langword="true" /> if the principal was set; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b534e-118">가장을 되돌리고 지정된 원래 보안 주체를 스레드에 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-118">Reverts impersonation and sets the specified original principal on the thread.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGet">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b534e-119">지정된 메시지 또는 메시지 속성에서 <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> 속성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-119">Gets the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property from the specified message or message properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&amp; property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Security::ImpersonateOnSerializingReplyMessageProperty ^ % property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="property" Type="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b534e-120">속성을 추출할 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-120">The message from which to extract the property.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="b534e-121">이 메서드가 반환될 때 메서드에서 추출된 <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> 속성을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-121">When this method returns, contains the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property extracted from the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b534e-122">지정한 메시지에서 <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> 속성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-122">Gets the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property from the specified message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b534e-123">속성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-123">
              <see langword="true" /> if the  property was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.MessageProperties properties, [out] class System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&amp; property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGet (properties As MessageProperties, ByRef property As ImpersonateOnSerializingReplyMessageProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::MessageProperties ^ properties, [Runtime::InteropServices::Out] System::ServiceModel::Security::ImpersonateOnSerializingReplyMessageProperty ^ % property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
        <Parameter Name="property" Type="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="b534e-124">속성을 추출할 메시지 속성 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-124">The message properties object from which to extract the property.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="b534e-125">이 메서드가 반환될 때 메서드에서 추출된 <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> 속성을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-125">When this method returns, contains the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property extracted from the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b534e-126">지정한 <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> 개체에서 <see cref="T:System.ServiceModel.Channels.MessageProperties" /> 속성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-126">Gets the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property from the specified <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b534e-127">속성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b534e-127">
              <see langword="true" /> if the  property was found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>