<Type Name="IdentityVerifier" FullName="System.ServiceModel.Security.IdentityVerifier">
  <TypeSignature Language="C#" Value="public abstract class IdentityVerifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityVerifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.IdentityVerifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IdentityVerifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityVerifier abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8563b-101">원격 끝점을 나타내는 인증 컨텍스트에 대한 예상 ID를 확인하거나 끝점 주소로부터 ID를 만들기 위해 구현할 수 있는 <see langword="abstract" /> 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-101">An <see langword="abstract" /> base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8563b-102">WCF 인프라 호출은 <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> 메서드는 메시지에서 서비스의 id를 검색 하기 위해 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-102">The WCF infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message.</span></span> <span data-ttu-id="8563b-103">그런 다음 인프라는 반환된 <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> 및 <xref:System.ServiceModel.EndpointIdentity>와 함께 <xref:System.IdentityModel.Policy.AuthorizationContext> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-103">Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.</span></span>  
  
 <span data-ttu-id="8563b-104">클래스를 구현 하는 방법에 대 한 자세한 내용은 참조 [하는 방법: 사용자 지정 클라이언트 Id 검증 도구 만들기](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-104">For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityVerifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IdentityVerifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8563b-105">이 클래스의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-105">Creates an instance of this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.EndpointIdentity identity, class System.IdentityModel.Policy.AuthorizationContext authContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckAccess (identity As EndpointIdentity, authContext As AuthorizationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CheckAccess(System::ServiceModel::EndpointIdentity ^ identity, System::IdentityModel::Policy::AuthorizationContext ^ authContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="authContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="8563b-106">확인할 <see cref="T:System.ServiceModel.EndpointIdentity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-106">The <see cref="T:System.ServiceModel.EndpointIdentity" /> to verify.</span></span></param>
        <param name="authContext"><span data-ttu-id="8563b-107"><c>ID</c>를 테스트할 대상 <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-107">The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> to test the <c>identity</c> against.</span></span></param>
        <summary><span data-ttu-id="8563b-108">ID를 확인하기 위해 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-108">Implements a method to verify an identity.</span></span></summary>
        <returns>
          <span data-ttu-id="8563b-109">ID가 확인되면<see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-109"><see langword="true" /> if the identity is verified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8563b-110">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-110">The default is <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Security.IdentityVerifier CreateDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault () As IdentityVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Security::IdentityVerifier ^ CreateDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IdentityVerifier</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8563b-111">이 클래스의 기본 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-111">Creates a default instance of this class.</span></span></summary>
        <returns><span data-ttu-id="8563b-112"><see cref="T:System.ServiceModel.Security.IdentityVerifier" />의 기본 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-112">A default instance of <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetIdentity">
      <MemberSignature Language="C#" Value="public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetIdentity(class System.ServiceModel.EndpointAddress reference, [out] class System.ServiceModel.EndpointIdentity&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetIdentity (reference As EndpointAddress, ByRef identity As EndpointIdentity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetIdentity(System::ServiceModel::EndpointAddress ^ reference, [Runtime::InteropServices::Out] System::ServiceModel::EndpointIdentity ^ % identity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="8563b-113">ID를 만드는 데 사용할 <see cref="T:System.ServiceModel.EndpointAddress" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> to use for creating the identity.</span></span></param>
        <param name="identity"><span data-ttu-id="8563b-114">반환되는 <see cref="T:System.ServiceModel.EndpointIdentity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-114">The <see cref="T:System.ServiceModel.EndpointIdentity" /> that is returned.</span></span></param>
        <summary><span data-ttu-id="8563b-115">끝점에서 ID를 만들려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-115">Tries to create an identity from an endpoint.</span></span></summary>
        <returns>
          <span data-ttu-id="8563b-116">ID가 반환되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-116"><see langword="true" /> if the identity is returned; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8563b-117">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-117">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8563b-118">명시적 <xref:System.ServiceModel.Security.IdentityVerifier>가 <xref:System.ServiceModel.DnsEndpointIdentity>의 일부로 지정되지 않은 경우, 기본값 <xref:System.ServiceModel.EndpointAddress.Uri%2A>는 <xref:System.ServiceModel.EndpointIdentity>의 호스트 이름 부분을 기반으로 <xref:System.ServiceModel.EndpointAddress>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8563b-118">The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>