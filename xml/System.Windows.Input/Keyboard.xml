<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7f573a4ba18bded8545efa1eed98e40782d2d79" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6c19d-101">키보드 장치를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c19d-101">Represents the keyboard device.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-102"><xref:System.Windows.Input.Keyboard> 키보드 관련 이벤트, 메서드 및 속성 키보드의 상태에 대 한 정보를 제공 하는 클래스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="6c19d-103">각 이벤트는 <xref:System.Windows.Input.Keyboard> 정의 연결된 된 이벤트의 클래스에 의해 다시 노출 됩니다 <xref:System.Windows.UIElement> 및 <xref:System.Windows.ContentElement> 새 라우트된 이벤트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="6c19d-104">응용 프로그램에 대 한 키보드 이벤트를 처리 하는 편리한 방법을 일반적으로 <xref:System.Windows.UIElement> 및 <xref:System.Windows.ContentElement>를 사용 하는 대신는 <xref:System.Windows.Input.Keyboard> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="6c19d-105">자세한 내용은 참조 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="6c19d-106">키보드 입력을 받는 요소에 대 한 순서로 요소가 포커스를 받을 수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="6c19d-107">대부분 <xref:System.Windows.UIElement> 파생된 개체는 기본적으로 포커스를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="6c19d-108">그렇지 않은 경우 요소가 포커스를 받을 수 설정를 <xref:System.Windows.UIElement.Focusable%2A> 속성을 기본 요소의 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="6c19d-109">기본 요소에 대 한 자세한 내용은 참조 하십시오. [기본 요소 개요](~/docs/framework/wpf/advanced/base-elements-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="6c19d-110"><xref:System.Windows.Controls.Panel> 와 같은 클래스 <xref:System.Windows.Controls.StackPanel> 및 <xref:System.Windows.Controls.Canvas>, 설정의 기본값 <xref:System.Windows.UIElement.Focusable%2A> 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="6c19d-111">키보드 포커스를 받으려면 이러한 개체에 대 한 따라서 <xref:System.Windows.UIElement.Focusable%2A> 로 설정 해야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="6c19d-112">키보드 포커스 키보드 입력을 수신 하는 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="6c19d-113">키보드 포커스가 있는 요소에 <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="6c19d-114">전체 데스크톱에 키보드 포커스가 있는 요소는 하나만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="6c19d-115">논리 포커스 포커스가 있는 포커스 범위 내에서 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="6c19d-116">논리 포커스 포커스, 키보드 포커스, 등에 대 한 자세한 내용은 참조 하십시오. [입력 개요](~/docs/framework/wpf/advanced/input-overview.md) 및 [포커스 개요](~/docs/framework/wpf/advanced/focus-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="6c19d-117">정적 멤버는 <xref:System.Windows.Input.Keyboard> 주 클래스 대리자 <xref:System.Windows.Input.KeyboardDevice> 호출 스레드의 되므로 반드시 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-118">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> 전환 된 상태에서 키가 있는지 확인 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="6c19d-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="6c19d-119">경우는 <xref:System.Windows.Input.Key> 에 전달 된 <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> 은 설정/해제 단추의 배경을 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-120">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-121">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-121">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-122">
            <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-123">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-124">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-125">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-125">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-126">
            <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-127">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-128">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-129">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-129">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-130">
            <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-131">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-132">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-133">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-133">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-134">
            <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-135">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-136">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-137">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-137">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-138">
            <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-139">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-140">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-141">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-141">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-142">
            <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-143">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-144">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-145">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-145">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-146">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-147">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-148">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-149">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-149">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-150">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-151">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-152">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-153">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-153">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-154">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-155">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-156">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-157">추가할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-157">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-158">
            <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-159">이 메서드는 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하 고 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 특성 처리는 <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-160">포커스를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-160">Clears focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-161">WPF를 호출 하는 Win32 창 내에 포커스가 있는 경우는 <xref:System.Windows.Input.Keyboard.ClearFocus%2A> 메뉴가 닫힐 때 포커스 복원에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="6c19d-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="6c19d-162">메뉴 모드를 벗어날 때 Win32 포커스는 HWND에 호스트 된 자식도 돌아와 요소에 WPF 포커스 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-163">포커스를 복원할 때 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]의 동작을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c19d-164">포커스를 복원할 때 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]의 동작을 지정하는 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span>
          </span>
          <span data-ttu-id="6c19d-165">기본값은 <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-166">키보드 포커스를 설정할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-166">The element on which to set keyboard focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-167">지정한 요소에 키보드 포커스를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-167">Sets keyboard focus on the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c19d-168">키보드 포커스를 가지는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-168">The element with keyboard focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-169">키보드 입력을 받는 요소에 대 한 요소가 포커스를 받을 수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="6c19d-170">요소가 포커스를 설정의 <xref:System.Windows.UIElement.Focusable%2A> 속성을 기본 요소의 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="6c19d-171">기본 요소에 대 한 자세한 내용은 참조 하십시오. [기본 요소 개요](~/docs/framework/wpf/advanced/base-elements-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="6c19d-172"><xref:System.Windows.Controls.Panel> 와 같은 클래스 <xref:System.Windows.Controls.StackPanel> 및 <xref:System.Windows.Controls.Canvas>, 설정의 기본값 <xref:System.Windows.UIElement.Focusable%2A> 를 `false`키보드 포커스를 받으려면 이러한 개체에 대 한 따라서; <xref:System.Windows.UIElement.Focusable%2A> 로 설정 해야 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="6c19d-173">키보드 포커스 키보드 입력을 수신 하는 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="6c19d-174">키보드 포커스가 있는 요소에 <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="6c19d-175">전체 데스크톱에 키보드 포커스가 있는 요소는 하나만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="6c19d-176">논리 포커스 포커스가 있는 포커스 범위 내에서 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="6c19d-177">논리 포커스 포커스, 키보드 포커스, 등에 대 한 자세한 내용은 참조 하십시오. [입력 개요](~/docs/framework/wpf/advanced/input-overview.md) 및 [포커스 개요](~/docs/framework/wpf/advanced/focus-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="6c19d-178">키보드 포커스가 있는 요소에는 다음과 같은 요소에 속하는 포커스 범위에 대 한 논리 포커스가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="6c19d-179">논리적 포커스가 있는 요소 수도 있습니다 키보드 포커스를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-180">다음 예제에서는 한 <xref:System.Windows.FrameworkElement.Loaded> 에 키보드 포커스를 설정 하는 이벤트 처리기는 <xref:System.Windows.Controls.Button>합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-181">키보드 포커스를 갖는 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-181">Gets the element that has keyboard focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c19d-182">포커스가 있는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-182">The focused element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-183">키보드 포커스 키보드 입력을 수신 하는 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="6c19d-184">키보드 포커스가 있는 요소에 <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="6c19d-185">전체 데스크톱에 키보드 포커스가 있는 요소는 하나만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="6c19d-186">논리 포커스 포커스가 있는 포커스 범위 내에서 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="6c19d-187">논리 포커스 포커스, 키보드 포커스, 등에 대 한 자세한 내용은 참조 하십시오. [입력 개요](~/docs/framework/wpf/advanced/input-overview.md) 및 [포커스 개요](~/docs/framework/wpf/advanced/focus-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="6c19d-188">키보드 포커스가 있는 요소에는 다음과 같은 요소에 속하는 포커스 범위에 대 한 논리 포커스가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="6c19d-189">논리적 포커스가 있는 요소 수도 있습니다 키보드 포커스를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-190">다음 예제에서는 키보드 포커스가 있는 요소를 가져와서으로 캐스팅 한 <xref:System.Windows.Controls.Control>합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="6c19d-191">키보드 포커스가 있는 요소는 경우는 <xref:System.Windows.Controls.Control>, 요소의 배경이 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6c19d-192">지정된 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-192">The specified key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-193">지정한 키의 키 상태 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-193">Gets the set of key states for the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c19d-194">
            <see cref="T:System.Windows.Input.KeyStates" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-195"><xref:System.Windows.Input.KeyStates> 비트 필드 열거형입니다. 따라서 여러 상태에 있는 것으로 키에 대 한 같습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="6c19d-196">예를 들어 키는 눌린 상태로 이면 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="6c19d-197">비트 비교 연산자를 사용 하 여 키의 정확한 상태를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="6c19d-198"><xref:System.Windows.Input.Keyboard> 클래스는 다양 한 키 상태 정보를 얻으려면도 사용할 수 있는 정적 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="6c19d-199">메서드는: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, 및 <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-200">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> 여부를 확인 하는 메서드는 <xref:System.Windows.Input.Key.Return> 키가 있는 <xref:System.Windows.Input.KeyStates.Down> 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="6c19d-201">비트 AND 연산을 비교에 사용 되는 <xref:System.Windows.Input.KeyStates> 에서 반환 된 <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> 및 <xref:System.Windows.Input.Key.Down> 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="6c19d-202">키의 배경을 다운가 <xref:System.Windows.Controls.Button> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-203">
            <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-203">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-204">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-204">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-205">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-205">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-206">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-206">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6c19d-207">지정된 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-207">The specified key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-208">지정한 키가 눌러져 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-208">Determines whether the specified key is pressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c19d-209">
            <paramref name="key" />가 눌러져 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-209">
              <see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-210"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> 일련의 특정 키의 상태를 확인 하려면 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-210">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-211">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> 메서드 특정 키의 상태를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-211">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="6c19d-212"><xref:System.Windows.Input.Key.Return> 키에 전달 되는 <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6c19d-212">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="6c19d-213">메서드에서 반환 되 면 `true`, 배경의 <xref:System.Windows.Controls.Button> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-213">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6c19d-214">지정된 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-214">The specified key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-215">지정한 키가 전환되었는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-215">Determines whether the specified key is toggled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c19d-216">
            <paramref name="key" />가 전환된 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-216">
              <see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-217"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> 일련의 특정 키의 상태를 확인 하려면 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-217">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-218">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> 메서드 특정 키의 상태를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-218">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="6c19d-219"><xref:System.Windows.Input.Key.Return> 키에 전달 되는 <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6c19d-219">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="6c19d-220">메서드에서 반환 되 면 `true`의 배경을 <xref:System.Windows.Controls.Button> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-220">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="6c19d-221">확인할 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-221">The key to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-222">지정한 키가 놓여 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-222">Determines whether the specified key is released.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c19d-223">
            <paramref name="key" />가 놓여 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-223">
              <see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-224"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> 일련의 특정 키의 상태를 확인 하려면 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-224">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-225">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> 메서드 특정 키의 상태를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-225">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="6c19d-226"><xref:System.Windows.Input.Key.Return> 키에 전달 되는 <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6c19d-226">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="6c19d-227">메서드에서 반환 되 면 `true`의 배경을 <xref:System.Windows.Controls.Button> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-227">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-228">
            <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-228">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-229">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-229">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-230">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-230">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-231">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-231">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-232">
            <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-232">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-233">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-233">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-234">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-234">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-235">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-235">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-236">
            <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-236">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-237">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-237">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-238">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-238">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-239">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-239">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-240">
            <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-240">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-241">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-241">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-242">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-242">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-243">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-243">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-244">현재 눌러져 있는 <see cref="T:System.Windows.Input.ModifierKeys" />의 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-244">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c19d-245">
            <see cref="T:System.Windows.Input.ModifierKeys" /> 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-245">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-246"><xref:System.Windows.Input.ModifierKeys> 비트 필드 열거형 이므로 여러 보조 키를 동시에 누를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-246"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="6c19d-247">보조 키의 정확한 집합을 확인 하려면 비트 연산을 사용 눌렀습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-247">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c19d-248">비트 비교를를 사용 하 여 여부를 확인 하는 다음 예제는 <xref:System.Windows.Input.ModifierKeys.Control> 보조 키를 누르면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-248">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-249">
            <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-249">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-250">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-250">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-251">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-251">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-252">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-252">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-253">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-253">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-254">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-254">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-255">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-255">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-256">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-256">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-257">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-257">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-258">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-258">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-259">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-259">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-260">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-260">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-261">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-262">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-263">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-264">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-265">
            <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> 연결된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-265">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-266">라우트된 이벤트 식별자는 라우트된 이벤트를 등록 하 고 결과 라우트된 이벤트를 등록 하는 클래스에 필드로 저장 됩니다 때 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-266">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="6c19d-267">이러한 식별자는 식별 이름, 소유자 유형, 처리기 형식, 라우팅 전략 및 이벤트 소유자를 추가 하기 위한 유틸리티 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-267">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="6c19d-268">대개 이러한 식별자 이벤트 시스템 메서드의 매개 변수로 사용 특정 라우트된 이벤트를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-268">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c19d-269">기본 키보드 입력 장치를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-269">Gets the primary keyboard input device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6c19d-270">장치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-270">The device.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-271">이 속성은 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-271">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-272">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-272">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-273">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-273">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-274">
            <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-274">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-275">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-275">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-276">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-276">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-277">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-277">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-278">
            <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-278">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-279">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-279">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-280">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-280">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-281">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-281">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-282">
            <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-282">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-283">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-283">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-284">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-284">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-285">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-285">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-286">
            <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-286">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-287">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-287">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-288">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-288">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-289">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-289">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-290">
            <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-290">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-291">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-291">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-292">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-292">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-293">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-293">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-294">
            <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-294">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-295">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-295">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-296">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-296">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-297">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-297">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-298">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-298">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-299">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-299">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-300">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-300">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-301">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-301">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-302">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-302">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-303">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-303">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-304">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-304">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-305">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-305">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-306">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-306">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-307">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-307">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6c19d-308">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-308">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6c19d-309">제거할 이벤트 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-309">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c19d-310">
            <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> 연결된 이벤트에 대한 처리기를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c19d-310">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c19d-311">에 대 한 코드 액세스에 대 한 연결 된 속성 접근자를 제공 하는이 메서드는 <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> 연결 된 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="6c19d-311">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>