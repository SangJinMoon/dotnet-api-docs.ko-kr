<Type Name="ApplicationCommands" FullName="System.Windows.Input.ApplicationCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f44aa3666f85dd8d5534328cb9b88205fbf4671" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39892452" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ApplicationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApplicationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ApplicationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type ApplicationCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="63ff8-101">응용 프로그램 관련 명령의 표준 집합을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="63ff8-101">Provides a standard set of application related commands.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-102">명령에는 <xref:System.Windows.Input.ApplicationCommands> 클래스 및 다른 명령 명령 라이브러리 클래스와 같은 <xref:System.Windows.Input.ComponentCommands> 및 <xref:System.Windows.Input.NavigationCommands>은 응용 프로그램 프로그래머가 자주 하는 일반적인 명령 집합을 나타내는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-102">The commands in the <xref:System.Windows.Input.ApplicationCommands> class and commands in the other command library classes, such as <xref:System.Windows.Input.ComponentCommands> and <xref:System.Windows.Input.NavigationCommands>, are intended to represent a set of common commands that application programmers encounter frequently.</span></span>  <span data-ttu-id="63ff8-103">명령을 인스턴스의 나타냅니다는 <xref:System.Windows.Input.RoutedCommand> 및 명령의 구현 논리 없습니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-103">The commands only represent the instance of the <xref:System.Windows.Input.RoutedCommand> and not the implementation logic for the command.</span></span> <span data-ttu-id="63ff8-104">구현 논리를 사용 하 여 명령이 바인딩되는 <xref:System.Windows.Input.CommandBinding>합니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-104">The implementation logic is bound to the command with a <xref:System.Windows.Input.CommandBinding>.</span></span> <span data-ttu-id="63ff8-105">예를 들어 경우는 <xref:System.Windows.Input.ApplicationCommands.Close%2A> 논리를 수행 하는 컨트롤에 명령이 실행 되는 <xref:System.Windows.Input.ApplicationCommands.Close%2A> 명령 컨트롤을 따라서 응용 프로그램 작성자가 담당 컨트롤은 하는 방법을 결정 하는 논리를 작성 하는 제공 되지 않을 수 있습니다 명령을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-105">For example, if the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command is executed on a control, the logic which performs the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command may not be provided by the control, so the application writer will be responsible for writing the logic that determines how the control will handle the command.</span></span>  
  
 <span data-ttu-id="63ff8-106">많은 컨트롤은 명령 라이브러리에서 명령의 대부분에 대 한 구현 논리를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-106">Many controls do provide implementation logic for many of the commands in the command library.</span></span>  <span data-ttu-id="63ff8-107">예를 들어,를 <xref:System.Windows.Controls.TextBox> 클래스에 대 한 논리를 제공 합니다 <xref:System.Windows.Input.ApplicationCommands.Paste%2A>, <xref:System.Windows.Input.ApplicationCommands.Cut%2A>, <xref:System.Windows.Input.ApplicationCommands.Copy%2A>, <xref:System.Windows.Input.ApplicationCommands.Undo%2A>, 및 <xref:System.Windows.Input.ApplicationCommands.Redo%2A> 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-107">For example, the <xref:System.Windows.Controls.TextBox> class provides logic for the <xref:System.Windows.Input.ApplicationCommands.Paste%2A>, <xref:System.Windows.Input.ApplicationCommands.Cut%2A>, <xref:System.Windows.Input.ApplicationCommands.Copy%2A>, <xref:System.Windows.Input.ApplicationCommands.Undo%2A>, and <xref:System.Windows.Input.ApplicationCommands.Redo%2A> commands.</span></span>  
  
 <span data-ttu-id="63ff8-108">명령 및 명령 실행에 대 한 자세한 내용은 합니다 [명령 개요](~/docs/framework/wpf/advanced/commanding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-108">For more information on commands and commanding see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <Member MemberName="CancelPrint">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CancelPrint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CancelPrint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CancelPrint As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CancelPrint { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelPrint : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-109">인쇄 취소 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-109">Gets the value that represents the Cancel Print command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-110">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-110">The command.</span>
          </span>
          <span data-ttu-id="63ff8-111">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 키 제스처 </term>
                <description> 정의 된 제스처가 없습니다.  </description>
              </item>
              <item>
                <term> UI 텍스트 </term>
                <description> 인쇄 취소  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-111">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> No gesture defined.  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Cancel Print  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-112">이 명령은 인쇄 작업을 취소 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-112">This command indicates intention to cancel a print job.</span></span>  
  
 <span data-ttu-id="63ff8-113">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-113">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CancelPrint"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-114">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-114">XAML Attribute Usage</span></span>  
  
```  
<object property="CancelPrint"/>>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Close { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Close" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Close As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Close { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Close : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Close" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-115">닫기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-115">Gets the value that represents the Close command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-116">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-116">The command.</span>
          </span>
          <span data-ttu-id="63ff8-117">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 키 제스처 </term>
                <description> 정의 된 제스처가 없습니다.  </description>
              </item>
              <item>
                <term> UI 텍스트 </term>
                <description> 닫기  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-117">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> No gesture defined.  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Close  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-118">이 명령은 항목 (파일)을 닫으려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-118">This command indicates intention to close an item (typically a file).</span></span>  
  
 <span data-ttu-id="63ff8-119">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-119">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Close"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-120">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-120">XAML Attribute Usage</span></span>  
  
```  
<object property="Close"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ContextMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextMenu As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ContextMenu { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-121">상황에 맞는 메뉴 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-121">Gets the value that represents the Context Menu command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-122">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-122">The command.</span>
          </span>
          <span data-ttu-id="63ff8-123">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> shift+f10 앱 </description>
              </item>
              <item>
                <term> 마우스 제스처 </term>
                <description> 마우스 제스처는 명령에 연결 되어 있지 않습니다 하지만 대부분의 응용 프로그램 상황에 맞는 메뉴 호출을 마우스 오른쪽 단추로 클릭 제스처를 사용 하 여 규칙을 따릅니다.  </description>
              </item>
              <item>
                <term> UI 텍스트 </term>
                <description> 상황에 맞는 메뉴  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-123">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Shift+F10  Apps  </description>
                </item>
                <item>
                  <term> Mouse Gesture  </term>
                  <description> A Mouse Gesture is not attached to this command, but most applications follow the convention of using the Right Click gesture to invoke the context menu.  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Context Menu  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-124">이 명령은 상황에 맞는 메뉴를 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-124">This command indicates intention to open the context menu.</span></span>  
  
 <span data-ttu-id="63ff8-125">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-125">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ContextMenu"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-126">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-126">XAML Attribute Usage</span></span>  
  
```  
<object property="ContextMenu"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Copy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Copy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Copy As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Copy { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Copy : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Copy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-127">복사 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-127">Gets the value that represents the Copy command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-128">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-128">The command.</span>
          </span>
          <span data-ttu-id="63ff8-129">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + C Ctrl + Insert </description>
              </item>
              <item>
                <term>UI 텍스트가 </term>
                <description> 복사  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-129">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+C  Ctrl+Insert  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Copy  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-130">이 명령은 선택 영역을 클립보드에 복사 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-130">This command indicates intention to copy the selection to the clipboard.</span></span>  
  
 <span data-ttu-id="63ff8-131">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-131">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Copy"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-132">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-132">XAML Attribute Usage</span></span>  
  
```  
<object property="Copy"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="CorrectionList">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectionList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectionList As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectionList { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectionList : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-133">수정 목록 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-133">Gets the value that represents the Correction List command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-134">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-134">The command.</span>
          </span>
          <span data-ttu-id="63ff8-135">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 키 제스처 </term>
                <description> 정의 된 제스처가 없습니다.  </description>
              </item>
              <item>
                <term> UI 텍스트 </term>
                <description> 수정 목록  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-135">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> No gesture defined.  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Correction List  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-136">이 명령은 수정 목록을 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-136">This command indicates intention to open the correction list.</span></span>  
  
 <span data-ttu-id="63ff8-137">수정 목록 컨텍스트에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-137">The correction list is different depending on the context.</span></span> <span data-ttu-id="63ff8-138">예를 들어 [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] 수정 목록은 재 변환을 하면 선택 항목을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-138">For example, with [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] input the correction list identifies reconversion choices.</span></span>  
  
 <span data-ttu-id="63ff8-139">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-139">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectionList"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-140">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-140">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectionList"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Cut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Cut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cut As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Cut { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cut : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Cut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-141">잘라내기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-141">Gets the value that represents the Cut command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-142">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-142">The command.</span>
          </span>
          <span data-ttu-id="63ff8-143">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + X Shift + Delete </description>
              </item>
              <item>
                <term>UI 텍스트가 </term>
                <description> 잘라내기  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-143">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+X  Shift+Delete  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Cut  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-144">이 명령은 클립보드 선택 영역을 잘라내어 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-144">This command indicates intention to cut the selection to the clipboard.</span></span>  
  
 <span data-ttu-id="63ff8-145">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-145">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Cut"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-146">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-146">XAML Attribute Usage</span></span>  
  
```  
<object property="Cut"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-147">삭제 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-147">Gets the value that represents the Delete command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-148">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-148">The command.</span>
          </span>
          <span data-ttu-id="63ff8-149">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Del </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 삭제  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-149">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Del  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Delete  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-150">이 명령은 선택 영역을 삭제 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-150">This command indicates intention to delete the selection.</span></span>  
  
 <span data-ttu-id="63ff8-151">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-151">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-152">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-152">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Find" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Find" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Find As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Find { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Find : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-153">찾기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-153">Gets the value that represents the Find command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-154">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-154">The command.</span>
          </span>
          <span data-ttu-id="63ff8-155">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + F </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 찾기  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-155">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+F  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Find  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-156">이 명령은 전용된 찾기 대화 상자를 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-156">This command indicates intention to open the dedicated Find dialog.</span></span>  
  
 <span data-ttu-id="63ff8-157">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-157">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Find"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-158">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-158">XAML Attribute Usage</span></span>  
  
```  
<object property="Find"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Help" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Help As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Help { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-159">도움말 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-159">Gets the value that represents the Help command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-160">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-160">The command.</span>
          </span>
          <span data-ttu-id="63ff8-161">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> F1 </description>
              </item>
              <item>
                <term> UI 텍스트가 </term>
                <description> 도움말  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-161">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> F1  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Help  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-162">이 명령은 (창) 도움말 대화 상자를 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-162">This command indicates intention to open the Help dialog (window).</span></span>  
  
 <span data-ttu-id="63ff8-163">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-163">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Help"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-164">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-164">XAML Attribute Usage</span></span>  
  
```  
<object property="Help"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand New { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand New" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.New" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property New As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ New { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.New : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.New" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-165">새로 만들기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-165">Gets the value that represents the New command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-166">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-166">The command.</span>
          </span>
          <span data-ttu-id="63ff8-167">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + N </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 새  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-167">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+N  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> New  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-168">이 명령은 새 항목을 만들려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-168">This command indicates intention to create a new item.</span></span>  
  
 <span data-ttu-id="63ff8-169">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-169">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_New"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-170">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-170">XAML Attribute Usage</span></span>  
  
```  
<object property="New"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="NotACommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NotACommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NotACommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotACommand As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NotACommand { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotACommand : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-171">항상 무시되는 명령을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-171">Represents a command which is always ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-172">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-172">The command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-173">이 명령은 항상 무시 되 고 원인이 된 입력된 이벤트를 처리 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-173">This command is always ignored and does not handle the input event that caused it.</span></span>  <span data-ttu-id="63ff8-174">기존 컨트롤에 기본 제공 되는 입력된 바인딩 해제 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-174">This provides a way to turn off an input binding built into an existing control.</span></span>  
  
 <span data-ttu-id="63ff8-175">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-175">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_NotACommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-176">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-176">XAML Attribute Usage</span></span>  
  
```  
<object property="NotACommand"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Open { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Open" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Open" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Open As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Open { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Open : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Open" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-177">열기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-177">Gets the value that represents the Open command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-178">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-178">The command.</span>
          </span>
          <span data-ttu-id="63ff8-179">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + O </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 열기  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-179">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+O  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Open  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-180">이 명령은 (일반적으로 파일) 항목을 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-180">This command indicates intention to open an item (typically a file).</span></span>  
  
 <span data-ttu-id="63ff8-181">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-181">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Open"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-182">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-182">XAML Attribute Usage</span></span>  
  
```  
<object property="Open"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Paste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Paste" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Paste As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Paste { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paste : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Paste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-183">붙여넣기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-183">Gets the value that represents the Paste command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-184">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-184">The command.</span>
          </span>
          <span data-ttu-id="63ff8-185">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + V Shift + Insert </description>
              </item>
              <item>
                <term>UI 텍스트가 </term>
                <description> 붙여넣기  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-185">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+V  Shift+Insert  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Paste  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-186">이 명령은 붙여 클립보드로 선택 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-186">This command indicates intention to paste the selection to the clipboard.</span></span>  
  
 <span data-ttu-id="63ff8-187">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-187">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Paste"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-188">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-188">XAML Attribute Usage</span></span>  
  
```  
<object property="Paste"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Print { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Print" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Print" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Print As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Print { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Print : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Print" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-189">인쇄 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-189">Gets the value that represents the Print command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-190">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-190">The command.</span>
          </span>
          <span data-ttu-id="63ff8-191">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + P </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 인쇄  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-191">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+P  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Print  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-192">이 명령은 현재 항목을 인쇄 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-192">This command indicates intention to prints the current item.</span></span>  
  
 <span data-ttu-id="63ff8-193">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-193">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Print"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-194">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-194">XAML Attribute Usage</span></span>  
  
```  
<object property="Print"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PrintPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PrintPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrintPreview As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PrintPreview { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintPreview : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-195">인쇄 미리 보기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-195">Gets the value that represents the Print Preview command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-196">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-196">The command.</span>
          </span>
          <span data-ttu-id="63ff8-197">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + F2 </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 인쇄 미리 보기  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-197">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+F2  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Print Preview  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-198">이 명령은 인쇄 미리 보기 대화 상자를 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-198">This command indicates intention to open the Print Preview dialog.</span></span>  
  
 <span data-ttu-id="63ff8-199">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-199">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_PrintPreview"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-200">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-200">XAML Attribute Usage</span></span>  
  
```  
<object property="PrintPreview"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Properties { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-201">속성 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-201">Gets the value that represents the Properties command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-202">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-202">The command.</span>
          </span>
          <span data-ttu-id="63ff8-203">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> F4 </description>
              </item>
              <item>
                <term> UI 텍스트가 </term>
                <description> 속성  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-203">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> F4  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Properties  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-204">이 명령은 속성 대화 상자를 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-204">This command indicates intention to open a properties dialog.</span></span>  
  
 <span data-ttu-id="63ff8-205">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-205">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Properties"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-206">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-206">XAML Attribute Usage</span></span>  
  
```  
<object property="Properties"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Redo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Redo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Redo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Redo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Redo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Redo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-207">다시 실행 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-207">Gets the value that represents the Redo command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-208">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-208">The command.</span>
          </span>
          <span data-ttu-id="63ff8-209">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + Y </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 다시 실행  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-209">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+Y  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Redo  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-210">이 명령은 마지막 작업을 다시 실행 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-210">This command indicates intention to redo the last action.</span></span>  
  
 <span data-ttu-id="63ff8-211">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-211">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Redo"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-212">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-212">XAML Attribute Usage</span></span>  
  
```  
<object property="Redo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Replace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Replace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Replace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Replace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Replace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Replace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-213">바꾸기 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-213">Gets the value that represents the Replace command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-214">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-214">The command.</span>
          </span>
          <span data-ttu-id="63ff8-215">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + H </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 대체  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-215">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+H  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Replace  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-216">이 명령은 바꾸기 대화 상자를 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-216">This command indicates intention to open the Replace dialog.</span></span>  
  
 <span data-ttu-id="63ff8-217">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-217">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Replace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-218">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-218">XAML Attribute Usage</span></span>  
  
```  
<object property="Replace"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Save { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Save" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Save" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Save As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Save { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Save : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Save" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-219">저장 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-219">Gets the value that represents the Save command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-220">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-220">The command.</span>
          </span>
          <span data-ttu-id="63ff8-221">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + S </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 저장  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-221">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+S  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Save  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-222">이 명령은 현재 항목을 저장 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-222">This command indicates intention to save the current item.</span></span>  
  
 <span data-ttu-id="63ff8-223">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-223">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Save"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-224">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-224">XAML Attribute Usage</span></span>  
  
```  
<object property="Save"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SaveAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SaveAs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SaveAs As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SaveAs { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SaveAs : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-225">다른 이름으로 저장 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-225">Gets the value that represents the Save As command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-226">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-226">The command.</span>
          </span>
          <span data-ttu-id="63ff8-227">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 키 제스처 </term>
                <description> 정의 된 제스처가 없습니다.  </description>
              </item>
              <item>
                <term> UI 텍스트 </term>
                <description> 로 저장  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-227">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> No gesture defined.  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Save As  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-228">이 명령은 이름으로 저장 대화 상자를 열려면 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-228">This command indicates intention to open the Save As dialog.</span></span>  
  
 <span data-ttu-id="63ff8-229">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-229">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_SaveAs"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-230">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-230">XAML Attribute Usage</span></span>  
  
```  
<object property="SaveAs"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectAll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectAll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectAll As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectAll { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectAll : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-231">모두 선택 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-231">Gets the value that represents the Select All command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-232">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-232">The command.</span>
          </span>
          <span data-ttu-id="63ff8-233">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + A </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 모두 선택  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-233">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl+A  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Select All  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-234">이 명령은 모든 항목을 선택 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-234">This command indicates intention to select all items.</span></span>  
  
 <span data-ttu-id="63ff8-235">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-235">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_SelectAll"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-236">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-236">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectAll"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Stop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Stop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Stop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Stop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Stop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-237">중지 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-237">Gets the value that represents the Stop command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-238">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-238">The command.</span>
          </span>
          <span data-ttu-id="63ff8-239">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Esc </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 중지  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-239">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Esc  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Stop  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-240">이 명령은 처리를 중지 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-240">This command indicates intention to stop processing.</span></span>  
  
 <span data-ttu-id="63ff8-241">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-241">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Stop"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-242">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-242">XAML Attribute Usage</span></span>  
  
```  
<object property="Stop"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Undo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Undo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Undo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Undo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Undo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Undo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63ff8-243">실행 취소 명령을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-243">Gets the value that represents the Undo command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63ff8-244">명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-244">The command.</span>
          </span>
          <span data-ttu-id="63ff8-245">
            <list type="table">
              <listheader>
                <term> 기본값 </term>
                <description></description>
              </listheader>
              <item>
                <term> 제스처 키 </term>
                <description> Ctrl + Z </description>
              </item>
              <item>
                <term> UI 텍스트  </term>
                <description> 실행 취소  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="63ff8-245">
              <list type="table">
                <listheader>
                  <term> Default Values  </term>
                  <description></description>
                </listheader>
                <item>
                  <term> Key Gesture  </term>
                  <description> Ctrl-Z  </description>
                </item>
                <item>
                  <term> UI Text  </term>
                  <description> Undo  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63ff8-246">이 명령은 마지막 작업을 취소 하려고 함을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-246">This command indicates intention to undo the last action.</span></span>  
  
 <span data-ttu-id="63ff8-247">반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 응용 프로그램 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="63ff8-247">There is not necessarily an implementation for the command on any given object; in many cases the implementation for the command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_Undo"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="63ff8-248">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="63ff8-248">XAML Attribute Usage</span></span>  
  
```  
<object property="Undo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>