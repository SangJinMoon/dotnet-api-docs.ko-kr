<Type Name="MouseButtonEventArgs" FullName="System.Windows.Input.MouseButtonEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48a09cd060c302b395117c3fcc68d752a57e1e98" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39991872" /></Metadata><TypeSignature Language="C#" Value="public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseButtonEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseButtonEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseButtonEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseButtonEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseButtonEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="35d8f-101">마우스 단추 관련 이벤트에 대한 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-101">Provides data for mouse button related events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d8f-102"><xref:System.Windows.Input.MouseButtonEventArgs> 다음 이벤트와 함께 사용 됩니다: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>를 <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, 및 해당 이벤트를 터널링 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-102"><xref:System.Windows.Input.MouseButtonEventArgs> is used with the following events: <xref:System.Windows.Input.Mouse.MouseDown>, <xref:System.Windows.Input.Mouse.MouseUp>, <xref:System.Windows.UIElement.MouseLeftButtonDown>, <xref:System.Windows.UIElement.MouseLeftButtonUp>, <xref:System.Windows.UIElement.MouseRightButtonDown>, <xref:System.Windows.UIElement.MouseRightButtonUp>, and the corresponding tunneling events.</span></span>  
  
 <span data-ttu-id="35d8f-103"><xref:System.Windows.Input.Mouse> 클래스는 추가 속성 및 마우스의 상태를 확인 하기 위한 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-103">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d8f-104">다음 예제에서는 이벤트를 발생 시킨 개체의 색을 변경 하는 마우스 단추 이벤트 처리기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-104">The following example creates a mouse button event handler that changes the color of the object that raised the event.</span></span>  <span data-ttu-id="35d8f-105">선택한 색 눌린 마우스 단추에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-105">The color chosen depends on the mouse button which was pressed.</span></span>  <span data-ttu-id="35d8f-106"><xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> 속성을 검사 하는 단추를 눌렀는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-106">The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseButtonState" />
    <altmember cref="T:System.Windows.Input.MouseAction" />
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="35d8f-107"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-107">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, button As MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="35d8f-108">이 이벤트와 연결된 논리적 마우스 디바이스입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-108">The logical Mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="35d8f-109">입력이 이루어진 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-109">The time when the input occurred.</span></span></param>
        <param name="button"><span data-ttu-id="35d8f-110">상태를 설명할 마우스 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-110">The mouse button whose state is being described.</span></span></param>
        <summary><span data-ttu-id="35d8f-111">지정된 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, 타임스탬프 및 <see cref="T:System.Windows.Input.MouseDevice" />을 사용하여 <see cref="T:System.Windows.Input.MouseButton" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-111">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class by using the specified <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, and <see cref="T:System.Windows.Input.MouseButton" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button, class System.Windows.Input.StylusDevice stylusDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button, System::Windows::Input::StylusDevice ^ stylusDevice);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton * System.Windows.Input.StylusDevice -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button, stylusDevice)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
        <Parameter Name="stylusDevice" Type="System.Windows.Input.StylusDevice" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="35d8f-112">이 이벤트와 연결된 논리적 마우스 디바이스입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-112">The logical mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="35d8f-113">이벤트가 발생한 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-113">The time the event occurred.</span></span></param>
        <param name="button"><span data-ttu-id="35d8f-114">이 이벤트와 연결된 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-114">The button associated with this event.</span></span></param>
        <param name="stylusDevice"><span data-ttu-id="35d8f-115">이 이벤트와 연결된 스타일러스 디바이스입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-115">The stylus device associated with this event.</span></span></param>
        <summary><span data-ttu-id="35d8f-116">지정된 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, 타임스탬프, <see cref="T:System.Windows.Input.MouseDevice" /> 및 <see cref="T:System.Windows.Input.MouseButton" />를 사용하여 <see cref="T:System.Windows.Input.StylusDevice" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-116">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> class by using the specified <see cref="T:System.Windows.Input.MouseDevice" />, timestamp, <see cref="T:System.Windows.Input.MouseButton" />, and <see cref="T:System.Windows.Input.StylusDevice" />.</span></span>  <span data-ttu-id="35d8f-117">.</span><span class="sxs-lookup"><span data-stu-id="35d8f-117">.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ButtonState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState ButtonState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState ButtonState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonState As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState ButtonState { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.ButtonState : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35d8f-118">이벤트와 연결된 단추의 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-118">Gets the state of the button associated with the event.</span></span></summary>
        <value><span data-ttu-id="35d8f-119">단추의 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-119">The state the button is in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d8f-120"><xref:System.Windows.Input.Mouse> 클래스는 추가 속성 및 마우스의 상태를 확인 하기 위한 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-120">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d8f-121">다음 예제에서는 이벤트를 처리 하는 개체의 색을 변경 하는 마우스 단추 이벤트 처리기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-121">The following example creates a mouse button event handler that changes the color of the object that handles the event.</span></span>  <span data-ttu-id="35d8f-122">선택한 색 마우스 단추를 누르거나 놓을 여부에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-122">The color that is chosen depends on whether the mouse button was pressed or released.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]
 [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsbuttonstatepressed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ChangedButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButton ChangedButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButton ChangedButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangedButton As MouseButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButton ChangedButton { System::Windows::Input::MouseButton get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangedButton : System.Windows.Input.MouseButton" Usage="System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35d8f-123">이벤트와 관련된 단추를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-123">Gets the button associated with the event.</span></span></summary>
        <value><span data-ttu-id="35d8f-124">눌린 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-124">The button which was pressed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d8f-125"><xref:System.Windows.Input.Mouse> 클래스는 추가 속성 및 마우스의 상태를 확인 하기 위한 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-125">The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d8f-126">다음 예제는 누른 마우스 단추를 따라 개체의 색을 변경 하는 마우스 단추 이벤트 처리기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-126">The following example creates a mouse button event handler that changes the color of an object depending on the mouse button which was pressed.</span></span>  <span data-ttu-id="35d8f-127"><xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> 속성을 검사 하는 단추를 눌렀는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-127">The <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property is checked to determine which button was pressed.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ClickCount">
      <MemberSignature Language="C#" Value="public int ClickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClickCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClickCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClickCount : int" Usage="System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35d8f-128">단추를 클릭한 횟수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-128">Gets the number of times the button was clicked.</span></span></summary>
        <value><span data-ttu-id="35d8f-129">마우스 단추를 클릭한 횟수입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-129">The number of times the mouse button was clicked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d8f-130">한 가지 용도 <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> 마우스 두 번 클릭이 발생 했는지 여부를 결정 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-130">One use of <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> is to determine whether a double mouse click has occurred.</span></span>  <span data-ttu-id="35d8f-131">일부 클래스와 같은 두 번 클릭에 대 한 이벤트를 노출 합니다 <xref:System.Windows.Controls.Control.MouseDoubleClick> 이벤트에는 <xref:System.Windows.Controls.Control> 클래스.</span><span class="sxs-lookup"><span data-stu-id="35d8f-131">Some classes expose events for a double-click, such as the <xref:System.Windows.Controls.Control.MouseDoubleClick> event on the <xref:System.Windows.Controls.Control> class.</span></span> <span data-ttu-id="35d8f-132">두 번 클릭을 사용 하 여 검색할 수 두 번 클릭 이벤트를 클래스에 노출 되지 않습니다, 경우를 <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> 이벤트 데이터의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-132">When a double click event is not exposed on a class, a double click can be detected by using the <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property on the event data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d8f-133">다음 예제에서는 <xref:System.Windows.Input.MouseButtonEventHandler> single, double, 또는 세 번 클릭이 발생 한 경우를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-133">The following example creates a <xref:System.Windows.Input.MouseButtonEventHandler> which determines if a single, double, or triple click occurred.</span></span>  <span data-ttu-id="35d8f-134"><xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> 속성 클릭 수가 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-134"><xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> property is used to determine the number of clicks.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseclickcountdoubleclick)]
 [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseclickcountdoubleclick)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseButtonEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="35d8f-135">형식별 방식으로 호출하는 제네릭 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-135">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="35d8f-136">처리기가 호출되는 대상입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-136">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="35d8f-137">형식별 방식으로 이벤트 처리기를 호출하여 이벤트 시스템의 효율성을 높입니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-137">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d8f-138">이 구현은 캐스팅으로 제네릭 처리기는 <xref:System.Windows.Input.MouseEventHandler> 한 다음 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-138">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it.</span></span> <span data-ttu-id="35d8f-139">이 구현 패턴 및 그 이유에 대 한 내용은 참조 하세요 <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 하 고 [라우트된 이벤트 개요](~/docs/framework/wpf/advanced/routed-events-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="35d8f-139">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
  </Members>
</Type>