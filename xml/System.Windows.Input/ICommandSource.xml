<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8e1ed-101">명령 호출 방법을 알고 있는 개체를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-101">Defines an object that knows how to invoke a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e1ed-102">명령 소스가 명령을 특정 개체에서 호출 하는 방법을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-102">The command source defines how a command is invoked by that particular object.</span></span>  <span data-ttu-id="8e1ed-103">예를 들어 경우는 <xref:System.Windows.Controls.Button> 명령, 명령 연결 되어 때 호출 되는 <xref:System.Windows.Controls.Button> 를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-103">For example, if a <xref:System.Windows.Controls.Button> is associated with a command, the command is invoked when the <xref:System.Windows.Controls.Button> is clicked.</span></span>  
  
 <span data-ttu-id="8e1ed-104">명령 소스가 일반적으로 비활성화 됩니다 현재 명령 대상에서 연결 된 명령을 실행할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-104">A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</span></span>  <span data-ttu-id="8e1ed-105">예를 들어 한 <xref:System.Windows.Controls.MenuItem> 연관는 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> 명령 회색으로 표시 될 때는 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> 현재 명령 대상에서 명령을 실행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-105">For example, a <xref:System.Windows.Controls.MenuItem> associated with the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command will gray itself out when the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command cannot execute on the current command target.</span></span>  
  
 <span data-ttu-id="8e1ed-106">명령 소스를 수신 하는 일반적으로 <xref:System.Windows.Input.ICommand.CanExecuteChanged> 명령에는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-106">Normally, a command source will listen to the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the command.</span></span>  <span data-ttu-id="8e1ed-107">이 키보드 포커스를 손실 등 명령 대상에서 조건이 변경 되 면 명령 소스를 알립니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-107">This informs the command source when conditions change on the command target, such as loss of keyboard focus.</span></span>  <span data-ttu-id="8e1ed-108">명령 소스가 사용 하 여 명령을 확인할 수 있습니다는 <xref:System.Windows.Input.ICommand.CanExecute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-108">The command source can then query the command using the <xref:System.Windows.Input.ICommand.CanExecute%2A> method.</span></span>  
  
 <span data-ttu-id="8e1ed-109">클래스 중 일부 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 구현 하는 <xref:System.Windows.Input.ICommandSource> 됩니다: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, 및 <xref:System.Windows.Documents.Hyperlink>합니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-109">Some of the classes in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that implement <xref:System.Windows.Input.ICommandSource> are: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, and <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
 <span data-ttu-id="8e1ed-110">명령 시스템에서 Windows Presentation Foundation에서는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 속성에는 <xref:System.Windows.Input.ICommandSource> 인 적용 가능한 경우에는 <xref:System.Windows.Input.ICommand> 는 <xref:System.Windows.Input.RoutedCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-110">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="8e1ed-111">경우는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 에 설정 되어는 <xref:System.Windows.Input.ICommandSource> 해당 명령이 아니며는 <xref:System.Windows.Input.RoutedCommand>, 명령 대상이 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-111">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e1ed-112">명령 소스가 호출될 때 실행할 명령을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-112">Gets the command that will be executed when the command source is invoked.</span></span></summary>
        <value><span data-ttu-id="8e1ed-113">명령 소스가 호출될 때 실행할 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-113">The command that will be executed when the command source is invoked.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e1ed-114">실행할 때 명령에 전달될 수 있는 사용자 정의 데이터 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-114">Represents a user defined data value that can be passed to the command when it is executed.</span></span></summary>
        <value><span data-ttu-id="8e1ed-115">명령별 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-115">The command specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e1ed-116">일반적으로 <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> 실행 될 때 명령에 특정 정보를 전달 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-116">Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="8e1ed-117">데이터 형식은 명령에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-117">The type of the data is defined by the command.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e1ed-118">명령이 실행되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-118">The object that the command is being executed on.</span></span></summary>
        <value><span data-ttu-id="8e1ed-119">명령이 실행되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-119">The object that the command is being executed on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e1ed-120">명령 시스템에서 Windows Presentation Foundation에서는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 속성에는 <xref:System.Windows.Input.ICommandSource> 인 적용 가능한 경우에는 <xref:System.Windows.Input.ICommand> 는 <xref:System.Windows.Input.RoutedCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-120">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="8e1ed-121">경우는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 에 설정 되어는 <xref:System.Windows.Input.ICommandSource> 해당 명령이 아니며는 <xref:System.Windows.Input.RoutedCommand>, 명령 대상이 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-121">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="8e1ed-122">와 함께 사용할 경우는 <xref:System.Windows.Input.RoutedCommand>, 명령 대상 개체를은 <xref:System.Windows.Input.CommandManager.Executed> 및 <xref:System.Windows.Input.CommandManager.CanExecute> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-122">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="8e1ed-123">경우는 <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> 속성이 설정 되지 않은, 키보드 포커스가 있는 요소를 대상으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8e1ed-123">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>