<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d4b769aea00916d192fe0ecc8b0cb0ba32aefb0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>명령 호출 방법을 알고 있는 개체를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령 소스가 명령을 특정 개체에서 호출 하는 방법을 정의 합니다.  예를 들어 경우는 <xref:System.Windows.Controls.Button> 명령, 명령 연결 되어 때 호출 되는 <xref:System.Windows.Controls.Button> 를 클릭 합니다.  
  
 명령 소스가 일반적으로 비활성화 됩니다 현재 명령 대상에서 연결 된 명령을 실행할 수 없는 경우.  예를 들어 한 <xref:System.Windows.Controls.MenuItem> 연관는 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> 명령 회색으로 표시 될 때는 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> 현재 명령 대상에서 명령을 실행할 수 없습니다.  
  
 명령 소스를 수신 하는 일반적으로 <xref:System.Windows.Input.ICommand.CanExecuteChanged> 명령에는 이벤트입니다.  이 키보드 포커스를 손실 등 명령 대상에서 조건이 변경 되 면 명령 소스를 알립니다.  명령 소스가 사용 하 여 명령을 확인할 수 있습니다는 <xref:System.Windows.Input.ICommand.CanExecute%2A> 메서드.  
  
 클래스 중 일부 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 구현 하는 <xref:System.Windows.Input.ICommandSource> 됩니다: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, 및 <xref:System.Windows.Documents.Hyperlink>합니다.  
  
 명령 시스템에서 Windows Presentation Foundation에서는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 속성에는 <xref:System.Windows.Input.ICommandSource> 인 적용 가능한 경우에는 <xref:System.Windows.Input.ICommand> 는 <xref:System.Windows.Input.RoutedCommand>합니다.  경우는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 에 설정 되어는 <xref:System.Windows.Input.ICommandSource> 해당 명령이 아니며는 <xref:System.Windows.Input.RoutedCommand>, 명령 대상이 무시 됩니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령 소스가 호출될 때 실행할 명령을 가져옵니다.</summary>
        <value>명령 소스가 호출될 때 실행할 명령입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>실행할 때 명령에 전달될 수 있는 사용자 정의 데이터 값을 나타냅니다.</summary>
        <value>명령별 데이터입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> 실행 될 때 명령에 특정 정보를 전달 하는 데 사용 됩니다.  데이터 형식은 명령에 의해 정의 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령이 실행되는 개체입니다.</summary>
        <value>명령이 실행되는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령 시스템에서 Windows Presentation Foundation에서는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 속성에는 <xref:System.Windows.Input.ICommandSource> 인 적용 가능한 경우에는 <xref:System.Windows.Input.ICommand> 는 <xref:System.Windows.Input.RoutedCommand>합니다.  경우는 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> 에 설정 되어는 <xref:System.Windows.Input.ICommandSource> 해당 명령이 아니며는 <xref:System.Windows.Input.RoutedCommand>, 명령 대상이 무시 됩니다.  
  
 와 함께 사용할 경우는 <xref:System.Windows.Input.RoutedCommand>, 명령 대상 개체를은 <xref:System.Windows.Input.CommandManager.Executed> 및 <xref:System.Windows.Input.CommandManager.CanExecute> 이벤트가 발생 합니다. 경우는 <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> 속성이 설정 되지 않은, 키보드 포커스가 있는 요소를 대상으로 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>