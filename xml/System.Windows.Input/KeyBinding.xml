<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7ffcff8092d477e75345cd0afc6f0d3c265489e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659737" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="38758-101">
        <see cref="T:System.Windows.Input.KeyGesture" />를 <see cref="T:System.Windows.Input.RoutedCommand" />(또는 다른 <see cref="T:System.Windows.Input.ICommand" /> 구현)에 바인딩합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="38758-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38758-102">A <xref:System.Windows.Input.KeyBinding> 연결는 <xref:System.Windows.Input.KeyGesture> 와 <xref:System.Windows.Input.ICommand>와 같은 <xref:System.Windows.Input.RoutedCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="38758-103"><xref:System.Windows.Input.RoutedCommand> 기본 구현에서 <xref:System.Windows.Input.ICommand> 에 대 한 인터페이스는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 명령 시스템입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="38758-104">일반적으로 <xref:System.Windows.Input.KeyGesture> 실행 되는 명령을 호출 하지만 명령 동작은 영향을 받기 명령 별 요소와 같은 <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> 값.</span><span class="sxs-lookup"><span data-stu-id="38758-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="38758-105">명령에 대 한 자세한 내용은 참조는 [명령 실행 개요](~/docs/framework/wpf/advanced/commanding-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-105">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="38758-106">기능 키와 올바른 숫자 키패드의 키를 제외한 <xref:System.Windows.Input.KeyGesture> 하나만 있어야 <xref:System.Windows.Input.Key> 와 하나 이상의 <xref:System.Windows.Input.ModifierKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="38758-107">기능 키 및 숫자 키패드 키가 필요 없습니다 보조키는 유효 하려면 <xref:System.Windows.Input.KeyGesture>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="38758-108">잘못 된 지정할 수는 <xref:System.Windows.Input.KeyGesture> 및 <xref:System.Windows.Input.KeyBinding> 잘못 된 연결을 통해 제스처 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 또는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="38758-109">예를 들어,는 만들고 바인딩할 수 없는 없는 유효성 검사는 <xref:System.Windows.Input.KeyGesture> 비 키만 또는 한정자 하지만 키를 포함 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="38758-110">이러한는 <xref:System.Windows.Input.KeyBinding> 연결 된 명령이 호출 하려고 시도 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="38758-111">정의 하는 경우는 <xref:System.Windows.Input.KeyBinding> 에 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 두 가지 방법으로 지정 하는 <xref:System.Windows.Input.KeyGesture>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="38758-112">설정 하는 첫 번째 방법은 <xref:System.Windows.Input.KeyBinding> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정의 하는 것은 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 특성은 <xref:System.Windows.Input.KeyBinding> 예를 들어 "CTRL + P" 단일 문자열로 키 한정자를 지정 하는 구문을 사용 하는 요소를 합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="38758-113">두 번째 방법은 정의 하는 것은 <xref:System.Windows.Input.KeyBinding.Key%2A> 특성 및 <xref:System.Windows.Input.KeyBinding.Modifiers%2A> 의 특성은 <xref:System.Windows.Input.KeyBinding> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="38758-114">설정의 두 가지 방법을 모두는 <xref:System.Windows.Input.KeyGesture> 동일 하 고 같은 내부 개체를 수정 하지만 할 충돌이 모두 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="38758-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="38758-115">경우에는 경우는 <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, 및 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 특성이 모두 설정 되어, 정의 된 특성 마지막에 사용할는 <xref:System.Windows.Input.KeyGesture>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="38758-116">예를 들어 상황을 잠재적으로 점이 <xref:System.Windows.Input.KeyBinding.Key%2A> 집합 마지막 됩니다 이전 제스처의 키 구성 요소는 방금 덮어쓰되 제스처의 한정자를 그대로 둡니다.</span><span class="sxs-lookup"><span data-stu-id="38758-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="38758-117">일반적으로 것이 좋습니다만 사용 하 여 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 에서 특성 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)];이 모호성을 방지 하는 가장 효율적인된 구문을 제공 되 고, 제공 serialization에 대 한 가장 간단한 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="38758-118">A <xref:System.Windows.Input.KeyBinding> 등록 하 여 특정 개체 또는 클래스 수준에서 정의할 수는 <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> 에 <xref:System.Windows.Input.CommandManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="38758-119">정의 하는 가장 일반적인 방법은 한 <xref:System.Windows.Input.KeyBinding> 컨트롤 템플릿, 설정 내에서 <xref:System.Windows.UIElement.InputBindings%2A> 속성에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 하나 이상의 선언 하 여 <xref:System.Windows.Input.MouseBinding> 또는 <xref:System.Windows.Input.KeyBinding> 요소.</span><span class="sxs-lookup"><span data-stu-id="38758-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38758-120">다음 예제에서는 한 <xref:System.Windows.Input.KeyBinding> 에 추가 <xref:System.Windows.Input.InputBindingCollection> 루트 창.</span><span class="sxs-lookup"><span data-stu-id="38758-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="38758-121">
            <see cref="T:System.Windows.Input.KeyBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="38758-122">
            <see cref="T:System.Windows.Input.KeyBinding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="38758-123">
            <c>gesture</c>와 연결할 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-123">The command to associate with <c>gesture</c>.</span>
          </span>
        </param>
        <param name="gesture">
          <span data-ttu-id="38758-124">
            <c>command</c>와 연결할 키 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-124">The key combination to associate with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38758-125">지정된 <see cref="T:System.Windows.Input.KeyBinding" /> 및 <see cref="T:System.Windows.Input.ICommand" />를 사용하여 <see cref="T:System.Windows.Input.KeyGesture" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="38758-126">
            <paramref name="command" /> 또는 <paramref name="gesture" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-126">
              <paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="38758-127">호출할 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-127">The command to invoke.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="38758-128">
            <c>command</c>와 연결할 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-128">The key to be associated with <c>command</c>.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="38758-129">
            <c>command</c>와 연결할 한정자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-129">The modifiers to be associated with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38758-130">지정된 <see cref="T:System.Windows.Input.KeyBinding" /> 및 <see cref="T:System.Windows.Input.ICommand" />로 변환될 지정된 <see cref="T:System.Windows.Input.Key" />와 <see cref="T:System.Windows.Input.ModifierKeys" />를 사용하여 <see cref="T:System.Windows.Input.KeyGesture" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="38758-131">
            <see cref="T:System.Windows.Input.KeyBinding" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="38758-132">새 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-132">The new object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38758-133">이 <see cref="T:System.Windows.Input.KeyBinding" />과 연결된 제스처를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38758-134">키 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-134">The key sequence.</span>
          </span>
          <span data-ttu-id="38758-135">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-135">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38758-136">기능 키와 숫자 키패드의 키를 제외한는 <xref:System.Windows.Input.KeyGesture> 포함 해야 합니다는 <xref:System.Windows.Input.Key> 와 하나 이상의 <xref:System.Windows.Input.ModifierKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38758-137">다음 예제에서는 바인딩하는 방법을 보여 줍니다.는 <xref:System.Windows.Input.KeyGesture> 에 <xref:System.Windows.Input.RoutedCommand> 를 사용 하 여는 <xref:System.Windows.Input.KeyBinding> (태그 및 코드 예제에서는 서로 다른 키를 지정 하지만 그렇지 않으면 동일).</span><span class="sxs-lookup"><span data-stu-id="38758-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="38758-138">
            <paramref name="gesture" /> 값이 <see cref="T:System.Windows.Input.KeyGesture" />로 설정되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38758-139">이 <see cref="T:System.Windows.Input.Key" />과 연결된 <see cref="T:System.Windows.Input.KeyGesture" />의 <see cref="T:System.Windows.Input.KeyBinding" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38758-140">
            <see cref="T:System.Windows.Input.KeyGesture" />의 키 부분입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="38758-141">기본값은 <see cref="F:System.Windows.Input.Key.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38758-142">기능 키와 숫자 키패드의 키를 제외한는 <xref:System.Windows.Input.KeyGesture> 포함 해야 합니다는 <xref:System.Windows.Input.Key> 와 하나 이상의 <xref:System.Windows.Input.ModifierKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="38758-143">정의 하는 경우는 <xref:System.Windows.Input.KeyBinding> 에 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 두 가지 방법으로 지정 하는 <xref:System.Windows.Input.KeyGesture>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="38758-144">설정 하는 첫 번째 방법은 <xref:System.Windows.Input.KeyBinding> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정의 하는 것은 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 특성은 <xref:System.Windows.Input.KeyBinding> 예를 들어 "CTRL + P" 단일 문자열로 키 한정자를 지정 하는 구문을 사용 하는 요소를 합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="38758-145">두 번째 방법은 정의 하는 것은 <xref:System.Windows.Input.KeyBinding.Key%2A> 특성 및 <xref:System.Windows.Input.KeyBinding.Modifiers%2A> 의 특성은 <xref:System.Windows.Input.KeyBinding> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="38758-146">설정의 두 가지 방법을 모두는 <xref:System.Windows.Input.KeyGesture> 동일 하 고 같은 내부 개체를 수정 하지만 할 충돌이 모두 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="38758-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="38758-147">경우에는 경우는 <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, 및 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 특성이 모두 설정 되어, 정의 된 특성 마지막에 사용할는 <xref:System.Windows.Input.KeyGesture>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="38758-148">예를 들어 상황을 잠재적으로 점이 <xref:System.Windows.Input.KeyBinding.Key%2A> 집합 마지막 됩니다 이전 제스처의 키 구성 요소는 방금 덮어쓰되 제스처의 한정자를 그대로 둡니다.</span><span class="sxs-lookup"><span data-stu-id="38758-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="38758-149">일반적으로 것이 좋습니다만 사용 하 여 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 에서 특성 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)];이 모호성을 방지 하는 가장 효율적인된 구문을 제공 되 고, 제공 serialization에 대 한 가장 간단한 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38758-150">
            <see cref="P:System.Windows.Input.KeyBinding.Key" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38758-151">이 <see cref="T:System.Windows.Input.ModifierKeys" />과 연결된 <see cref="T:System.Windows.Input.KeyGesture" />의 <see cref="T:System.Windows.Input.KeyBinding" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38758-152">
            <see cref="T:System.Windows.Input.KeyGesture" />의 보조키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="38758-153">기본값은 <see cref="F:System.Windows.Input.ModifierKeys.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38758-154">기능 키와 숫자 키패드의 키를 제외한는 <xref:System.Windows.Input.KeyGesture> 포함 해야 합니다는 <xref:System.Windows.Input.Key> 와 하나 이상의 <xref:System.Windows.Input.ModifierKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="38758-155">정의 하는 경우는 <xref:System.Windows.Input.KeyBinding> 에 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 두 가지 방법으로 지정 하는 <xref:System.Windows.Input.KeyGesture>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="38758-156">설정 하는 첫 번째 방법은 <xref:System.Windows.Input.KeyBinding> 에 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정의 하는 것은 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 특성은 <xref:System.Windows.Input.KeyBinding> 예를 들어 "CTRL + P" 단일 문자열로 키 한정자를 지정 하는 구문을 사용 하는 요소를 합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="38758-157">두 번째 방법은 정의 하는 것은 <xref:System.Windows.Input.KeyBinding.Key%2A> 특성 및 <xref:System.Windows.Input.KeyBinding.Modifiers%2A> 의 특성은 <xref:System.Windows.Input.KeyBinding> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="38758-158">설정의 두 가지 방법을 모두는 <xref:System.Windows.Input.KeyGesture> 동일 하 고 같은 내부 개체를 수정 하지만 할 충돌이 모두 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="38758-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="38758-159">경우에는 경우는 <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, 및 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 특성이 모두 설정 되어, 정의 된 특성 마지막에 사용할는 <xref:System.Windows.Input.KeyGesture>합니다.</span><span class="sxs-lookup"><span data-stu-id="38758-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="38758-160">예를 들어 상황을 잠재적으로 점이 <xref:System.Windows.Input.KeyBinding.Key%2A> 집합 마지막 됩니다 이전 제스처의 키 구성 요소는 방금 덮어쓰되 제스처의 한정자를 그대로 둡니다.</span><span class="sxs-lookup"><span data-stu-id="38758-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="38758-161">일반적으로 것이 좋습니다만 사용 하 여 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 에서 특성 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)];이 모호성을 방지 하는 가장 효율적인된 구문을 제공 되 고, 제공 serialization에 대 한 가장 간단한 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="38758-162">XAML 특성 사용</span><span class="sxs-lookup"><span data-stu-id="38758-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="38758-163">XAML 값</span><span class="sxs-lookup"><span data-stu-id="38758-163">XAML Values</span></span>  
 <span data-ttu-id="38758-164">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="38758-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="38758-165">에 정의 된 하나 이상의 보조 키의 <xref:System.Windows.Input.ModifierKeys> "+" 문자로 구분 된 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="38758-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38758-166">
            <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="38758-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>