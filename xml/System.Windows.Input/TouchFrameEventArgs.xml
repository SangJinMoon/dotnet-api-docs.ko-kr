<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TouchFrameEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e6be32d04e3784e962c09555f8fb5dabdbcf7f5b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6be32d04e3784e962c09555f8fb5dabdbcf7f5b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.Touch.FrameReported" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Input.Touch.FrameReported" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event is included in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> to support compatibility with Silverlight.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> 이벤트는 <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> Silverlight 호환성을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>If you do not have to ensure compatibility with Silverlight, use the touch events, such as <ph id="ph1">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>, on <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.UIElement3D&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.ContentElement&gt;</ph>.</source>
          <target state="translated">Silverlight와의 호환성을 확인 해야 하는 경우 사용 하 여 터치 이벤트와 같은 <ph id="ph1">&lt;xref:System.Windows.UIElement.TouchDown&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.UIElement.TouchMove&gt;</ph>의 <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.UIElement3D&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Windows.ContentElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph> to get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> values that are relevant to the touch event.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph> 가져오려는 <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> 터치 이벤트와 관련 된 된 값입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>From the <ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>, you can get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint.Position%2A&gt;</ph> of the touch and determine whether the <ph id="ph3">&lt;xref:System.Windows.Input.TouchAction&gt;</ph> was a <ph id="ph4">&lt;xref:System.Windows.Input.TouchAction.Down&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.TouchAction.Move&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Input.TouchAction.Up&gt;</ph> action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph>, 얻을 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Input.TouchPoint.Position%2A&gt;</ph> 터치의 확인 여부는 <ph id="ph3">&lt;xref:System.Windows.Input.TouchAction&gt;</ph> 했습니다는 <ph id="ph4">&lt;xref:System.Windows.Input.TouchAction.Down&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.TouchAction.Move&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.Windows.Input.TouchAction.Up&gt;</ph> 동작 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> to get the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchPoint&gt;</ph> 가져오려는 <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>From the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>, you can determine the device <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> and get information about the element that is touched.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph>, 장치를 확인할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 있는 위치의 요소에 대 한 정보를 얻을 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>The following example handles the <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> event and accesses the touch data in the <ph id="ph2">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 핸들의 <ph id="ph1">&lt;xref:System.Windows.Input.Touch.FrameReported&gt;</ph> 이벤트 터치 데이터에 액세스 하 고는 <ph id="ph2">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>When a touch is pressed on the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is captured to the <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">터치를 누를 때는 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> 캡처는 <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>When the touch is lifted, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is released.</source>
          <target state="translated">터치가 올리면 때는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>When a touch moves across the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> is checked.</source>
          <target state="translated">터치를 통해 이동 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>If the move came from the first touch, its location is recorded.</source>
          <target state="translated">이동 하는 첫 번째 터치 로부터 전송 된, 해당 위치에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</source>
          <target state="translated">이동 하는 두 번째 터치 로부터 전송 된, 두 번째 터치의 위치에 첫 번째 터치 위치에서 선이 그려집니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.TouchFrameEventArgs">
          <source>This example is part of a larger example that is available in the <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>The element that defines the coordinate space.</source>
          <target state="translated">좌표 공간을 정의하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>To use WPF absolute coordinates, specify <bpt id="p1">&lt;c&gt;</bpt>relativeTo<ept id="p1">&lt;/c&gt;</ept> as <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">WPF 절대 좌표를 사용하려면 <bpt id="p1">&lt;c&gt;</bpt>relativeTo<ept id="p1">&lt;/c&gt;</ept>를 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 지정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>Returns the current touch point of the primary touch device relative to the specified element.</source>
          <target state="translated">지정된 요소를 기준으로 기본 터치 장치의 현재 터치 지점을 반환합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>The current position of the primary <ph id="ph1">&lt;see cref="T:System.Windows.Input.TouchDevice" /&gt;</ph> relative to the specified element; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the primary <ph id="ph3">&lt;see cref="T:System.Windows.Input.TouchDevice" /&gt;</ph> is not active.</source>
          <target state="translated">지정된 요소를 기준으로 기본 <ph id="ph1">&lt;see cref="T:System.Windows.Input.TouchDevice" /&gt;</ph>의 현재 위치이거나, 기본 <ph id="ph3">&lt;see cref="T:System.Windows.Input.TouchDevice" /&gt;</ph>가 활성화되지 않은 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>In a set of active touch devices, the first device to be <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Activated&gt;</ph> is the primary touch device.</source>
          <target state="translated">활성 집합에 touch 장치, 첫 번째 장치 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Activated&gt;</ph> 는 기본 터치 장치입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>For example, if two fingers are touching the screen, the first finger that is down is represented by the primary touch device.</source>
          <target state="translated">예를 들어 두 손가락 화면을 터치 하는 경우 아래에 있는 첫 번째 손가락 기본 터치 장치도 나타납니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>If the first finger is lifted while the second finger is still down, the primary touch device becomes <ph id="ph1">`null`</ph>.</source>
          <target state="translated">두 번째 손가락은 계속 하는 동안 첫 번째 손가락 리프트 된 경우에 기본 터치 장치는 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>The following code processes the touch points that are retrieved from the <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>.</source>
          <target state="translated">검색 된 터치 포인트를 처리 하는 다음 코드는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>When a touch is pressed on the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is captured to the <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">터치를 누를 때는 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> 캡처는 <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>When the touch is lifted, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is released.</source>
          <target state="translated">터치가 올리면 때는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>When a touch moves across the <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> is checked.</source>
          <target state="translated">터치를 통해 이동 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> matches the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> of the primary touch point, which indicates the first touch, its location is recorded.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 일치는 <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 해당 위치가 첫 번째 터치를 나타내는 기본 터치 포인트의 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</source>
          <target state="translated">이동 하는 두 번째 터치 로부터 전송 된, 두 번째 터치의 위치에 첫 번째 터치 위치에서 선이 그려집니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
          <source>This example is part of a larger example that is available in the <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>The element that defines the coordinate space.</source>
          <target state="translated">좌표 공간을 정의하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>To use WPF absolute coordinates, specify <bpt id="p1">&lt;c&gt;</bpt>relativeTo<ept id="p1">&lt;/c&gt;</ept> as <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">WPF 절대 좌표를 사용하려면 <bpt id="p1">&lt;c&gt;</bpt>relativeTo<ept id="p1">&lt;/c&gt;</ept>를 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 지정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>Returns a collection that contains the current touch point for each active touch device relative to the specified element.</source>
          <target state="translated">지정된 요소를 기준으로 각 활성 터치 장치에 대한 현재 터치 지점을 포함하는 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>A collection that contains the current <ph id="ph1">&lt;see cref="T:System.Windows.Input.TouchPoint" /&gt;</ph> for each active <ph id="ph2">&lt;see cref="T:System.Windows.Input.TouchDevice" /&gt;</ph>.</source>
          <target state="translated">각 활성 <ph id="ph1">&lt;see cref="T:System.Windows.Input.TouchPoint" /&gt;</ph>에 대한 현재 <ph id="ph2">&lt;see cref="T:System.Windows.Input.TouchDevice" /&gt;</ph>를 포함하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>The following code processes the touch points retrieved from the <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>.</source>
          <target state="translated">다음 코드에서 터치 포인트를 검색 하는 프로세스는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchFrameEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>When a touch is pressed on the canvas, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is captured to the canvas.</source>
          <target state="translated">캔버스에서 터치를 누를 때는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> 캔버스에 캡처됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>When the touch is raised, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> is released.</source>
          <target state="translated">터치 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice&gt;</ph> 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>When a touch moves across the canvas, the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> is checked.</source>
          <target state="translated">터치 캔버스를 통해 이동 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> matches the <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> of the primary touch point, which indicates the first touch, its location is recorded.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 일치는 <ph id="ph2">&lt;xref:System.Windows.Input.TouchDevice.Id%2A&gt;</ph> 해당 위치가 첫 번째 터치를 나타내는 기본 터치 포인트의 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</source>
          <target state="translated">이동 하는 두 번째 터치 로부터 전송 된, 두 번째 터치의 위치에 첫 번째 터치 위치에서 선이 그려집니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
          <source>This example is part of a larger example that is available in the <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Input.Touch&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp">
          <source>This member is not implemented.</source>
          <target state="translated">이 멤버는 구현되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp">
          <source>This method is provided for Silverlight compatibility.</source>
          <target state="translated">이 메서드는 Silverlight 호환성을 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp">
          <source>Because of device implementation differences, it is not implemented in WPF.</source>
          <target state="translated">장치 구현 차이 때문에 WPF 구현 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.TouchFrameEventArgs.Timestamp">
          <source>Gets the time stamp for this event.</source>
          <target state="translated">이 이벤트에 대한 타임스탬프를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.TouchFrameEventArgs.Timestamp">
          <source>The time stamp for this event.</source>
          <target state="translated">이 이벤트에 대한 타임스탬프입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>