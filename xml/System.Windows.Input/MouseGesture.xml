<Type Name="MouseGesture" FullName="System.Windows.Input.MouseGesture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe51cc5b84e488cd46f702658fd67b15f54297bc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30657607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MouseGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseGesture : System::Windows::Input::InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.MouseGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.MouseGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>명령을 호출하는 데 사용할 수 있는 마우스 입력 제스처를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 달리는 <xref:System.Windows.Input.KeyGesture>, <xref:System.Windows.Input.MouseAction> 와 쌍이 되어야 하지 않아도 <xref:System.Windows.Input.ModifierKeys> 는 유효한 것으로 <xref:System.Windows.Input.MouseGesture>합니다.  
  
 A <xref:System.Windows.Input.MouseGesture> 에 바인딩될 수는 <xref:System.Windows.Input.RoutedCommand> (또는 기타 <xref:System.Windows.Input.ICommand> 구현)를 통해는 <xref:System.Windows.Input.MouseBinding> 명령이 호출 될 수 있도록 때는 <xref:System.Windows.Input.MouseGesture> 발생 합니다.  
  
 에 대 한 <xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 에서 일반적으로 설정 된 속성, 특성 사용 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 은 <xref:System.Windows.Input.MouseBinding.Gesture%2A>, 제스처 마우스로 하나 이상의 보조 키를 모두 나타낼 수 있는 경우에 합니다. 설정할 수도 있습니다는 <xref:System.Windows.Input.MouseBinding.Gesture%2A> 속성을 마우스로 클릭 하면 파일이 수 있도록 합니다. 일반적으로 것이 좋습니다만 사용 하는 <xref:System.Windows.Input.KeyBinding.Gesture%2A> 에서 특성 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]를 설정 하는 대신 <xref:System.Windows.Input.MouseBinding.MouseAction%2A>한정자를 지정 하지 않은 경우에 합니다. 이 모호성을 방지 하는, 가장 효율적인된 구문을 제공 및 serialization에 대 한 가장 간단한 표현을 제공 합니다.  
  
 <xref:System.Windows.Input.MouseGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 개체 요소 사용이 가능 하지만 드물게, 일반적으로 설정할 수 있으므로 <xref:System.Windows.Input.MouseBinding.Gesture%2A> 속성 <xref:System.Windows.Input.MouseBinding> 인라인 속성 요소 구문 사용 하지 않고 있습니다.  
  
<a name="xamlAttributeUsage_MouseGesture"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="mouseAction"/>  
- or -  
<object property="oneOrMoreModifierKeys+mouseAction"/>  
```  
  
<a name="xamlValues_MouseGesture"></a>   
## <a name="xaml-values"></a>XAML 값  
 `mouseAction`  
 <xref:System.Windows.Input.MouseAction>  
  
 단일 마우스 동작입니다.  
  
 `oneOrMoreModifierKeys`  
 에 정의 된 하나 이상의 보조 키의 <xref:System.Windows.Input.ModifierKeys> 열거형입니다. 둘 이상의 한정자 키가 제공 하는 경우 각 보조키 "+" 문자로 구분 됩니다.  
  
   
  
## Examples  
 다음 예제를 만들려면는 <xref:System.Windows.Input.MouseGesture> 와 연결는 <xref:System.Windows.Input.RoutedCommand> 통해는 <xref:System.Windows.Input.MouseBinding>합니다.  마우스 휠을 클릭할 때 동안는 <xref:System.Windows.Input.ModifierKeys.Control> 키를 누르면는 <xref:System.Windows.Input.ApplicationCommands.Open%2A> 가 호출 됩니다.  
  
 [!code-xaml[commandlibrarysnippets#MouseBindingMouseGestureXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#mousebindingmousegesturexaml)]  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Input.MouseGesture" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Input.MouseGesture" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
      </Parameters>
      <Docs>
        <param name="mouseAction">이 제스처와 연결된 동작입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Input.MouseGesture" />를 사용하여 <see cref="T:System.Windows.Input.MouseAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="mouseAction" />은 유효한 <see cref="T:System.Windows.Input.MouseAction" /> 값이 아닙니다.</exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseGesture (System.Windows.Input.MouseAction mouseAction, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.MouseAction mouseAction, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseGesture(System::Windows::Input::MouseAction mouseAction, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouseAction" Type="System.Windows.Input.MouseAction" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="mouseAction">이 제스처와 연결된 동작입니다.</param>
        <param name="modifiers">이 제스처와 연결된 한정자입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Input.MouseGesture" /> 및 <see cref="T:System.Windows.Input.MouseAction" />를 사용하여 <see cref="T:System.Windows.Input.ModifierKeys" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="mouseAction" />이 유효한 <see cref="T:System.Windows.Input.MouseAction" /> 값이 아닌 경우  
  
 또는  
  
 <paramref name="modifiers" />은 유효한 <see cref="T:System.Windows.Input.ModifierKeys" /> 값이 아닙니다.</exception>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement">대상입니다.</param>
        <param name="inputEventArgs">이 제스처와 비교할 입력 이벤트 데이터입니다.</param>
        <summary>
          <see cref="T:System.Windows.Input.MouseGesture" />가 지정한 <see cref="T:System.Windows.Input.InputEventArgs" /> 개체와 연결된 입력과 일치하는지 여부를 확인합니다.</summary>
        <returns>
          이벤트 데이터가 이 <see cref="T:System.Windows.Input.MouseGesture" />와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 테스트 하는 방법을 보여 줍니다. 여부는 <xref:System.Windows.Input.MouseGesture> 의 인스턴스와 연결 된 입력을 일치는 <xref:System.Windows.Input.InputEventArgs>합니다. A <xref:System.Windows.UIElement.MouseDown> 와 이벤트 데이터를 비교 하는 이벤트 처리기는 <xref:System.Windows.Input.MouseGesture> 를 사용 하 여는 <xref:System.Windows.Input.MouseGesture.Matches%2A> 메서드.  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlermousegesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlermousegesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Input.MouseGesture" />와 연결된 보조키를 가져오거나 설정합니다.</summary>
        <value>이 제스처와 연결된 보조키입니다. 기본값은 <see cref="F:System.Windows.Input.ModifierKeys.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 달리는 <xref:System.Windows.Input.KeyGesture>, <xref:System.Windows.Input.MouseAction> 와 쌍이 되어야 하지 않아도 <xref:System.Windows.Input.ModifierKeys> 는 유효 하려면 <xref:System.Windows.Input.MouseGesture>합니다.  
  
 <xref:System.Windows.Input.ModifierKeys> 비트 필드 열거형 이므로 여러 보조 키를 동시에 누를 수 있습니다. 보조 키의 정확한 집합을 확인 하려면 비트 연산을 사용 눌렀습니다.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>XAML 값  
 *oneOrMoreModifierKeys*  
 에 정의 된 하나 이상의 보조 키의 <xref:System.Windows.Input.ModifierKeys> "+" 문자로 구분 된 열거형입니다.  
  
   
  
## Examples  
 다음 예제를 만들려면는 <xref:System.Windows.Input.MouseGesture> 와 연결는 <xref:System.Windows.Input.RoutedCommand> 통해는 <xref:System.Windows.Input.MouseBinding>합니다.  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="MouseAction">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseAction MouseAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseAction MouseAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseGesture.MouseAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseAction As MouseAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseAction MouseAction { System::Windows::Input::MouseAction get(); void set(System::Windows::Input::MouseAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 제스처와 연결된 <see cref="T:System.Windows.Input.MouseAction" />을 가져오거나 설정합니다.</summary>
        <value>이 제스처와 연결된 마우스 동작입니다. 기본값은 <see cref="F:System.Windows.Input.MouseAction.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 달리는 <xref:System.Windows.Input.KeyGesture>, <xref:System.Windows.Input.MouseAction> 와 쌍이 되어야 하지 않아도 <xref:System.Windows.Input.ModifierKeys> 는 유효 하려면 <xref:System.Windows.Input.MouseGesture>합니다.  
  
   
  
## Examples  
 다음 예제를 만들려면는 <xref:System.Windows.Input.MouseGesture> 와 연결는 <xref:System.Windows.Input.RoutedCommand> 통해는 <xref:System.Windows.Input.MouseBinding>합니다.  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedtoinputbinding)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedtoinputbinding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>