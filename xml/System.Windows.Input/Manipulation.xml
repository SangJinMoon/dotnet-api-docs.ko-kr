<Type Name="Manipulation" FullName="System.Windows.Input.Manipulation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f59d0f62945136c7903ad5ee7ba5cce7752e246" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656457" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Manipulation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Manipulation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulation" />
  <TypeSignature Language="VB.NET" Value="Public Class Manipulation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Manipulation abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9cc78-101">조작에 대한 정보를 가져오거나 업데이트하는 메서드를 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9cc78-101">Contains methods to get and update information about a manipulation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cc78-102">조작 하는 개체에 적용 되는 실제 작업으로 터치를 해석할 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-102">A manipulation occurs when touch is interpreted as a physical action that is applied to an object.</span></span> <span data-ttu-id="9cc78-103">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]에서 조작 이벤트는 입력을 변환, 확장 또는 회전 조작으로 해석합니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-103">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation.</span></span> <span data-ttu-id="9cc78-104">일반적으로 조작 이벤트에 대해 정의 된를 통해 조작을와 상호 작용은 <xref:System.Windows.UIElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-104">You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="9cc78-105">그러나는 <xref:System.Windows.Input.Manipulation> 클래스 조작와 상호 작용 하는 데 사용할 수 있는 정적 메서드를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-105">However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.</span></span>  
  
 <span data-ttu-id="9cc78-106">조작에 대 한 자세한 내용은 참조 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-106">For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span> <span data-ttu-id="9cc78-107">예를 보려면 조작에 응답 하는 응용 프로그램 참조 [연습: 만드는 첫 번째 터치 응용 프로그램](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddManipulator">
      <MemberSignature Language="C#" Value="public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-108">조작자를 연결할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-108">The element to associate the manipulator with.</span>
          </span>
        </param>
        <param name="manipulator">
          <span data-ttu-id="9cc78-109">조작을 만들거나 조작에 추가되는 입력의 위치를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-109">The object that provides the position of the input that creates or is added to a manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-110">지정한 요소와 <see cref="T:System.Windows.Input.IManipulator" /> 개체를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-110">Associates a <see cref="T:System.Windows.Input.IManipulator" /> object with the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cc78-111">경우 `element` 이미 연결 되어 있어서 조작 `manipulator` 기존 조작에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-111">If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation.</span></span> <span data-ttu-id="9cc78-112">그렇지 않으면 새 조작 하는 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-112">Otherwise, a new manipulation is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9cc78-113">
            <paramref name="element" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-113">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="9cc78-114">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-114">-or-</span>
          </span>
          <span data-ttu-id="9cc78-115">
            <paramref name="manipulator" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-115">
              <paramref name="manipulator" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9cc78-116">요소의 <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> 속성은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-116">The <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> property on element is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public static void CompleteManipulation (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteManipulation(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompleteManipulation (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompleteManipulation(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-117">조작을 완료할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-117">The element on which to complete manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-118">지정된 요소에 대해 활성 조작을 완료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-118">Completes the active manipulation on the specified element.</span>
          </span>
          <span data-ttu-id="9cc78-119">호출하면 조작 입력이 더 이상 추적되지 않고 지정된 요소에 대한 무활동 상태가 중지됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-119">When called, manipulation input is no longer tracked and inertia on the specified element stops.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cc78-120">경우는 <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> 메서드가 호출 되는 <xref:System.Windows.UIElement.ManipulationCompleted> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9cc78-120">When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetManipulationContainer(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationContainer (element As UIElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetManipulationContainer(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-121">활성 조작이 있는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-121">The element on which there is an active manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-122">조작의 좌표를 정의하는 컨테이너를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-122">Gets the container that defines the coordinates for the manipulation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cc78-123">좌표 공간을 정의하는 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-123">The container that defines the coordinate space.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ManipulationModes GetManipulationMode(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationMode (element As UIElement) As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationModes GetManipulationMode(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-124">조작 모드를 가져올 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-124">The element for which to get the manipulation mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-125">지정된 요소의 <see cref="T:System.Windows.Input.ManipulationModes" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-125">Gets the <see cref="T:System.Windows.Input.ManipulationModes" /> for the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cc78-126">열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-126">One of the enumeration values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationPivot">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.ManipulationPivot GetManipulationPivot(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationPivot (element As UIElement) As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationPivot ^ GetManipulationPivot(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-127">조작이 있는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-127">The element on which there is a manipulation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-128">하나의 사용자 입력 점에서 회전이 수행되는 방법을 설명하는 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-128">Returns an object that describes how a rotation occurs with one point of user input.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cc78-129">하나의 사용자 입력 점에서 회전이 수행되는 방법을 설명하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-129">An object that describes how a rotation occurs with one point of user input.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationActive">
      <MemberSignature Language="C#" Value="public static bool IsManipulationActive (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsManipulationActive(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsManipulationActive (element As UIElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsManipulationActive(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-130">확인할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-130">The element to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-131">조작이 지정된 요소와 연결되었는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-131">Gets a value that indicates whether a manipulation is associated with the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9cc78-132">조작이 지정한 요소와 연결되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-132">
              <see langword="true" /> if a manipulation is associated with the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveManipulator">
      <MemberSignature Language="C#" Value="public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-133">연결된 조작자를 제거할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-133">The element to remove the associated manipulator from.</span>
          </span>
        </param>
        <param name="manipulator">
          <span data-ttu-id="9cc78-134">입력 위치를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-134">The object that provides the position of the input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-135">지정된 <see cref="T:System.Windows.Input.IManipulator" /> 개체와 요소 사이의 연결을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-135">Removes the association between the specified <see cref="T:System.Windows.Input.IManipulator" /> object and the element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationContainer">
      <MemberSignature Language="C#" Value="public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationContainer(class System.Windows.UIElement element, class System.Windows.IInputElement container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationContainer (element As UIElement, container As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationContainer(System::Windows::UIElement ^ element, System::Windows::IInputElement ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="container" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-136">조작이 연결된 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-136">The element with which the manipulation is associated.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="9cc78-137">좌표 공간을 정의하는 컨테이너입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-137">The container that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-138">지정된 요소에 대한 조작의 좌표를 정의하는 요소를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-138">Sets the element that defines the coordinates for the manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationMode">
      <MemberSignature Language="C#" Value="public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationMode(class System.Windows.UIElement element, valuetype System.Windows.Input.ManipulationModes mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationMode (element As UIElement, mode As ManipulationModes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationMode(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationModes mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="mode" Type="System.Windows.Input.ManipulationModes" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-139">조작 모드를 설정할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-139">The element on which to set the manipulation mode.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9cc78-140">새 조작 모드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-140">The new manipulation mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-141">지정된 요소의 조작 모드를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-141">Sets the mode of manipulation for the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationParameter(class System.Windows.UIElement element, class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationParameter (element As UIElement, parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationParameter(System::Windows::UIElement ^ element, System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-142">매개 변수가 추가되는 조작이 있는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-142">The element that has the manipulation that the parameter is added to.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="9cc78-143">추가할 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-143">The parameter to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-144">지정된 요소의 조작에 매개 변수를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-144">Adds parameters to the manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationPivot">
      <MemberSignature Language="C#" Value="public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationPivot(class System.Windows.UIElement element, class System.Windows.Input.ManipulationPivot pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationPivot (element As UIElement, pivot As ManipulationPivot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationPivot(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationPivot ^ pivot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="pivot" Type="System.Windows.Input.ManipulationPivot" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-145">활성 조작이 있는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-145">The element that has an active manipulation.</span>
          </span>
        </param>
        <param name="pivot">
          <span data-ttu-id="9cc78-146">피벗을 설명하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-146">An object that describes the pivot.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-147">지정된 요소의 단일 지점 조작에 대한 피벗을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-147">Sets the pivot of the single-point manipulation of the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public static void StartInertia (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartInertia(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartInertia (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartInertia(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="9cc78-148">무활동 상태를 시작할 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-148">The element on which to begin inertia.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9cc78-149">지정된 요소에 대해 조작을 중지하고 무활동 상태를 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9cc78-149">Stops the manipulation and begins inertia on the specified element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>