<Type Name="ManipulationDelta" FullName="System.Windows.Input.ManipulationDelta">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="be1d0a0984a5063cd75a38a18d153ac17c23114d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36506295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManipulationDelta" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationDelta extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDelta" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationDelta" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDelta" />
  <TypeSignature Language="F#" Value="type ManipulationDelta = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="662e8-101">조작 이벤트가 발생할 때 누적된 변환 데이터를 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="662e8-101">Contains transformation data that is accumulated when manipulation events occur.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e8-102"><xref:System.Windows.Input.ManipulationDelta> 클래스 조작 하는 위치에 변경 내용에 대 한 정보가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-102">The <xref:System.Windows.Input.ManipulationDelta> class contains information about the changes in the position of a manipulation.</span></span>  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]<span data-ttu-id="662e8-103"> 변경 내용을으로 해석 한 <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, 또는 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-103"> interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>.</span></span> <span data-ttu-id="662e8-104">때는 <xref:System.Windows.UIElement.ManipulationDelta> 에서 이벤트가 발생 한 <xref:System.Windows.UIElement>의 속성을 사용는 <xref:System.Windows.Input.ManipulationDelta> 조작 해야 하는 개체를 변환 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-104">When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a <xref:System.Windows.Input.ManipulationDelta> object to transform the object that should be manipulated.</span></span>  <span data-ttu-id="662e8-105"><xref:System.Windows.Input.ManipulationDeltaEventArgs> 클래스 형식의 두 개 속성도 제공 <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> 및 <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-105">The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.</span></span>  
  
 <span data-ttu-id="662e8-106">조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-106">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="662e8-107">예를 보려면 조작에 응답 하는 응용 프로그램 참조 [연습: 만드는 첫 번째 터치 응용 프로그램](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="662e8-108">다음 예제에 대 한 이벤트 처리기는 <xref:System.Windows.UIElement.ManipulationDelta> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-108">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  <span data-ttu-id="662e8-109">예 적용 된 <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, 및 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> 속성 이동, 크기 조정 및 회전을 <xref:System.Windows.Shapes.Rectangle>합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-109">The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="662e8-110">이 예제는에 보다 큰 예제의 일부 [연습: 만드는 첫 번째 터치 응용 프로그램](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-110">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Vector translation, float64 rotation, valuetype System.Windows.Vector scale, valuetype System.Windows.Vector expansion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (translation As Vector, rotation As Double, scale As Vector, expansion As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationDelta(System::Windows::Vector translation, double rotation, System::Windows::Vector scale, System::Windows::Vector expansion);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.ManipulationDelta : System.Windows.Vector * double * System.Windows.Vector * System.Windows.Vector -&gt; System.Windows.Input.ManipulationDelta" Usage="new System.Windows.Input.ManipulationDelta (translation, rotation, scale, expansion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="translation" Type="System.Windows.Vector" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="scale" Type="System.Windows.Vector" />
        <Parameter Name="expansion" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="translation">
          <span data-ttu-id="662e8-111">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]의 조작 선형 동작입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-111">The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
        </param>
        <param name="rotation">
          <span data-ttu-id="662e8-112">조작의 회전(도)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-112">The rotation of the manipulation in degrees.</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="662e8-113">조작의 크기가 승수로 조정된 양입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-113">The amount the manipulation has resized as a multiplier.</span>
          </span>
        </param>
        <param name="expansion">
          <span data-ttu-id="662e8-114">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]에서 조작의 크기가 조정된 양입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-114">The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="662e8-115">
            <see cref="T:System.Windows.Input.ManipulationDelta" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-115">Initializes a new instance of the <see cref="T:System.Windows.Input.ManipulationDelta" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Expansion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Expansion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expansion As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Expansion { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Expansion : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="662e8-116">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]에서 조작의 크기가 조정된 양을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-116">Gets or sets the amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="662e8-117">조작에 크기를 조정할 양 [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-117">The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e8-118"><xref:System.Windows.Input.ManipulationDelta.Scale%2A> 및 <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> 속성 모두 크기 조정 조작을 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-118">The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.</span></span>  <span data-ttu-id="662e8-119">두 기능 간의 차이점에는 값이 보고 되는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-119">The difference between the two is the way in which the value is reported.</span></span>  <span data-ttu-id="662e8-120"><xref:System.Windows.Input.ManipulationDelta.Expansion%2A> 속성에서 크기 조정 조작을 보고 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-120">The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="662e8-121"><xref:System.Windows.Input.ManipulationDelta.Scale%2A> 승수로 값을 보고 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-121">The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.</span></span>  <span data-ttu-id="662e8-122">경우 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> 이 0.5 이면 50%까지 크기를 줄이면으로 조작 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-122">If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.</span></span>  <span data-ttu-id="662e8-123">경우 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> 가 2 이면 조작 100% 크기를 늘리면로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-123">If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rotation As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Rotation { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Rotation : double" Usage="System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="662e8-124">조작의 회전(도)을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-124">Gets or sets the rotation of the manipulation in degrees.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="662e8-125">조작의 회전(도)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-125">The rotation of the manipulation in degrees.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e8-126"><xref:System.Windows.Input.ManipulationDelta.Rotation%2A> 속성 조작 하는 축을 중심으로 회전로 해석 되는 방법을 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-126">The <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> property reports the way a manipulation is interpreted as rotating around an axis.</span></span>  <span data-ttu-id="662e8-127">축은 조작을 시작한 연락처의 두 점 사이의 지점 일반적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-127">The axis is usually the point between the two points of contact that initiated the manipulation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="662e8-128">다음 예제에 대 한 이벤트 처리기는 <xref:System.Windows.UIElement.ManipulationDelta> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-128">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  <span data-ttu-id="662e8-129">예 적용 된 <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, 및 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> 속성 이동, 크기 조정 및 회전을 <xref:System.Windows.Shapes.Rectangle>합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-129">The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="662e8-130">이 예제는에 보다 큰 예제의 일부 [연습: 만드는 첫 번째 터치 응용 프로그램](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-130">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Scale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Scale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scale As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Scale { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="662e8-131">조작의 크기가 승수로 조정된 양을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-131">Gets or sets the amount the manipulation has resized as a multiplier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="662e8-132">조작의 크기가 조정된 양입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-132">The amount the manipulation has resized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e8-133"><xref:System.Windows.Input.ManipulationDelta.Scale%2A> 및 <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> 속성 모두 크기 조정 조작을 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-133">The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.</span></span>  <span data-ttu-id="662e8-134">두 기능 간의 차이점에는 값이 보고 되는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-134">The difference between the two is the way in which the value is reported.</span></span>  <span data-ttu-id="662e8-135"><xref:System.Windows.Input.ManipulationDelta.Scale%2A> 승수로 값을 보고 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-135">The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.</span></span>  <span data-ttu-id="662e8-136">경우 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> 이 0.5 이면 50%까지 크기를 줄이면으로 조작 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-136">If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.</span></span>  <span data-ttu-id="662e8-137">경우 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> 가 2 이면 조작 100% 크기를 늘리면로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-137">If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent.</span></span> <span data-ttu-id="662e8-138"><xref:System.Windows.Input.ManipulationDelta.Expansion%2A> 속성에서 크기 조정 조작을 보고 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-138">The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="662e8-139">다음 예제에 대 한 이벤트 처리기는 <xref:System.Windows.UIElement.ManipulationDelta> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-139">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  <span data-ttu-id="662e8-140">예 적용 된 <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, 및 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> 속성 이동, 크기 조정 및 회전을 <xref:System.Windows.Shapes.Rectangle>합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-140">The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="662e8-141">이 예제는에 보다 큰 예제의 일부 [연습: 만드는 첫 번째 터치 응용 프로그램](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-141">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Translation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Translation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Translation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Translation As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Translation { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Translation : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Translation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="662e8-142">조작의 선형 동작을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-142">Gets or sets the linear motion of the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="662e8-143">조작의 선형 동작 [! INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e8-143">The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e8-144"><xref:System.Windows.Input.ManipulationDelta.Translation%2A> 속성 조작 하는 화면 가로 및 세로로 이동할로 해석 되는 방식을 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-144">The <xref:System.Windows.Input.ManipulationDelta.Translation%2A> property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="662e8-145">다음 예제에 대 한 이벤트 처리기는 <xref:System.Windows.UIElement.ManipulationDelta> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-145">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  <span data-ttu-id="662e8-146">예 적용 된 <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, 및 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> 속성 이동, 크기 조정 및 회전을 <xref:System.Windows.Shapes.Rectangle>합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-146">The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="662e8-147">이 예제는에 보다 큰 예제의 일부 [연습: 만드는 첫 번째 터치 응용 프로그램](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="662e8-147">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>