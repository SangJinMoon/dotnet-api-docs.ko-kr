<Type Name="AccessKeyManager" FullName="System.Windows.Input.AccessKeyManager">
  <TypeSignature Language="C#" Value="public sealed class AccessKeyManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AccessKeyManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.AccessKeyManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AccessKeyManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessKeyManager sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9c591-101">Windows Forms, Win32 및 Windows Presentation Foundation (WPF) 간 interop 키보드 명령 처리와 모든 선택키의 등록을 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-101">Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c591-102"><xref:System.Windows.Input.AccessKeyManager> 당 하나를 사용 하 여 요청에서 개체가 만들어진 <xref:System.Windows.Threading.Dispatcher>합니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-102">An <xref:System.Windows.Input.AccessKeyManager> object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.</span></span>  
  
 <span data-ttu-id="9c591-103"><xref:System.Windows.Input.AccessKeyManager> 에 대 한 이벤트 처리기로 연결 되며 <xref:System.Windows.Input.InputManager.PostProcessInput> 에 메서드를 노출 하 고 <xref:System.Windows.Input.AccessKeyManager.Register%2A> 및 <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> 액세스 키입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-103">The <xref:System.Windows.Input.AccessKeyManager> is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.</span></span>  
  
 <span data-ttu-id="9c591-104">등록된 된 선택 키를 누르면는 <xref:System.Windows.Input.AccessKeyManager> 호출은 <xref:System.Windows.UIElement.OnAccessKey%2A> 대상 요소의 메서드.</span><span class="sxs-lookup"><span data-stu-id="9c591-104">When the registered access key is pressed, the <xref:System.Windows.Input.AccessKeyManager> calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.</span></span>  
  
 <span data-ttu-id="9c591-105">요소는 선택 키 개수에 관계 없이 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-105">An element can be associated with any number of access keys.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.AccessKeyEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventArgs" />
    <altmember cref="T:System.Windows.Input.AccessKeyPressedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="AccessKeyPressed">
      <MemberSignature Language="C#" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />
      <MemberSignature Language="VB.NET" Value="see AddAccessKeyPressedHandler, and RemoveAccessKeyPressedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyPressedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent AccessKeyPressedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyPressedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ AccessKeyPressedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c591-106">
          <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 라우트된 이벤트를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-106">Identifies the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9c591-107">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9c591-108">추가할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-108">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="9c591-109"><see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 연결된 이벤트에 대한 처리기를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-109">Adds a handler for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyRegistered">
      <MemberSignature Language="C#" Value="public static bool IsKeyRegistered (object scope, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyRegistered(object scope, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyRegistered (scope As Object, key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyRegistered(System::Object ^ scope, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="9c591-110"><c>key</c>를 쿼리할 프레젠테이션 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-110">The presentation source to query for <c>key</c>.</span></span></param>
        <param name="key"><span data-ttu-id="9c591-111">쿼리할 키입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-111">The key to query.</span></span></param>
        <summary><span data-ttu-id="9c591-112">지정된 키가 지정된 범위에서 선택키로 등록 되었는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-112">Indicates whether the specified key is registered as an access keys in the specified scope.</span></span></summary>
        <returns>
          <span data-ttu-id="9c591-113">키가 등록되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-113"><see langword="true" /> if the key is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKey">
      <MemberSignature Language="C#" Value="public static bool ProcessKey (object scope, string key, bool isMultiple);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ProcessKey(object scope, string key, bool isMultiple) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ProcessKey (scope As Object, key As String, isMultiple As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ProcessKey(System::Object ^ scope, System::String ^ key, bool isMultiple);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="isMultiple" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="9c591-114">선택키의 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-114">The scope for the access key.</span></span></param>
        <param name="key"><span data-ttu-id="9c591-115">액세스 키입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-115">The access key.</span></span></param>
        <param name="isMultiple"><span data-ttu-id="9c591-116"><c>key</c>에 일치하는 키가 여러 개 있는지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-116">Indicates if <c>key</c> has multiple matches.</span></span></param>
        <summary><span data-ttu-id="9c591-117">키의 <see cref="E:System.Windows.UIElement.KeyDown" /> 이벤트가 <see cref="T:System.Windows.Input.AccessKeyManager" />에 전달된 것처럼 지정된 선택키를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-117">Processes the specified access keys as if a <see cref="E:System.Windows.UIElement.KeyDown" /> event for the key was passed to the <see cref="T:System.Windows.Input.AccessKeyManager" />.</span></span></summary>
        <returns>
          <span data-ttu-id="9c591-118">일치하는 키가 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-118"><see langword="true" /> if there are more keys that match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9c591-119">액세스 키입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-119">The access key.</span></span></param>
        <param name="element"><span data-ttu-id="9c591-120"><c>key</c>를 연결할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-120">The element to associate <c>key</c> with.</span></span></param>
        <summary><span data-ttu-id="9c591-121">지정된 선택키를 지정된 요소와 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-121">Associates the specified access keys with the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c591-122">선택 키를 누르면는 <xref:System.Windows.UIElement.OnAccessKey%2A> 방식의 `element` 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-122">When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called.</span></span>  
  
 <span data-ttu-id="9c591-123">요소는 선택 키 개수에 관계 없이 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-123">An element can be associated with any number of access keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessKeyPressedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAccessKeyPressedHandler(class System.Windows.DependencyObject element, class System.Windows.Input.AccessKeyPressedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAccessKeyPressedHandler (element As DependencyObject, handler As AccessKeyPressedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAccessKeyPressedHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::AccessKeyPressedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.AccessKeyPressedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9c591-124">이 이벤트를 수신 대기하는 <see cref="T:System.Windows.UIElement" /> 또는 <see cref="T:System.Windows.ContentElement" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="9c591-125">제거할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-125">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="9c591-126">지정한 개체에서 지정한 <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 이벤트 처리기를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-126">Removes the specified <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event handler from the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string key, System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string key, class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (key As String, element As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ key, System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9c591-127">액세스 키입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-127">The access key.</span></span></param>
        <param name="element"><span data-ttu-id="9c591-128"><c>key</c>의 연결을 끊을 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-128">The element from which to disassociate <c>key</c>.</span></span></param>
        <summary><span data-ttu-id="9c591-129">지정된 요소에서 지정된 선택키를 연결을 끊습니다.</span><span class="sxs-lookup"><span data-stu-id="9c591-129">Disassociates the specified access keys from the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>