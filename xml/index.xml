<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="index.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef1864d07304351083e52285e1cc5a3896d545de4e3833.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d07304351083e52285e1cc5a3896d545de4e3833</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem)">
          <source>The designer item to set focus on.</source>
          <target state="translated">포커스를 설정할 디자이너 항목입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem)">
          <source>Sets the keyboard focus on the specified designer item.</source>
          <target state="translated">지정한 디자이너 항목에 키보드 포커스를 설정합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem,System.Int32)">
          <source>The designer item to set focus on.</source>
          <target state="translated">포커스를 설정할 디자이너 항목입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem,System.Int32)">
          <source>The maximum number of levels used to set a limit on the expansion of the model tree if the specified designer item is not visible.</source>
          <target state="translated">지정한 디자이너 항목이 표시되지 않는 경우 모델 트리 확장에 제한을 설정하는 데 사용되는 최대 수준 수입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.Focus(System.Activities.Presentation.Model.ModelItem,System.Int32)">
          <source>Sets the keyboard focus on the specified designer item.</source>
          <target state="translated">지정한 디자이너 항목에 키보드 포커스를 설정합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetEditingContext(System.Activities.Presentation.Model.ModelItem)">
          <source>The model item.</source>
          <target state="translated">모델 항목입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetEditingContext(System.Activities.Presentation.Model.ModelItem)">
          <source>Retrieves the editing context of the specified model item.</source>
          <target state="translated">지정한 모델 항목의 편집 컨텍스트를 검색합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetModelPath(System.Activities.Presentation.Model.ModelItem)">
          <source>The model item.</source>
          <target state="translated">모델 항목입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.GetModelPath(System.Activities.Presentation.Model.ModelItem)">
          <source>Retrieves the path of the specified model item.</source>
          <target state="translated">지정한 모델 항목의 경로를 검색합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.IsParentOf(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)">
          <source>The parent designer item to check.</source>
          <target state="translated">확인할 부모 디자이너 항목입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.IsParentOf(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)">
          <source>The child designer item to check.</source>
          <target state="translated">확인할 자식 디자이너 항목입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Activities.Presentation.Model.ModelItemExtensions.IsParentOf(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)">
          <source>Returns a value that indicates whether the first specified designer item is a parent of the second specified designer item.</source>
          <target state="translated">지정한 첫 번째 디자이너 항목이 지정한 두 번째 디자이너 항목의 부모인지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>The type of element stored in the array.</source>
          <target state="translated">배열에 저장된 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>The sorted array to search.</source>
          <target state="translated">검색할 정렬된 배열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>The object to search for.</source>
          <target state="translated">검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)">
          <source>Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it’s found.</source>
          <target state="translated">기본 비교자를 사용하여 변경할 수 없는 정렬된 배열에서 지정된 요소를 검색하고 해당 요소의 0부터 시작하는 인덱스(있는 경우)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The type of element stored in the array.</source>
          <target state="translated">배열에 저장된 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The sorted array to search.</source>
          <target state="translated">검색할 정렬된 배열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The object to search for.</source>
          <target state="translated">검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>The comparer implementation to use when comparing elements, or null to use the default comparer.</source>
          <target state="translated">요소를 비교할 때 사용할 비교자 구현이거나, 기본 비교자를 사용하려면 null입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})">
          <source>Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</source>
          <target state="translated">변경할 수 없는 정렬된 배열에서 지정된 요소를 검색하고 해당 요소의 0부터 시작하는 인덱스(있는 경우)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The type of element stored in the array.</source>
          <target state="translated">배열에 저장된 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The sorted array to search.</source>
          <target state="translated">검색할 정렬된 배열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The starting index of the range to search.</source>
          <target state="translated">검색할 범위의 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The length of the range to search.</source>
          <target state="translated">검색할 범위의 길이입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>The object to search for.</source>
          <target state="translated">검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)">
          <source>Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</source>
          <target state="translated">변경할 수 없는 정렬된 배열에서 지정된 요소를 검색하고 해당 요소의 0부터 시작하는 인덱스(있는 경우)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The type of element stored in the array.</source>
          <target state="translated">배열에 저장된 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The sorted array to search.</source>
          <target state="translated">검색할 정렬된 배열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The starting index of the range to search.</source>
          <target state="translated">검색할 범위의 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The length of the range to search.</source>
          <target state="translated">검색할 범위의 길이입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The object to search for.</source>
          <target state="translated">검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>The comparer to use when comparing elements for equality or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer.</source>
          <target state="translated">요소가 같은지 비교할 때 사용할 비교자이거나, 기본 비교자를 사용하려면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
          <source>Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</source>
          <target state="translated">변경할 수 없는 정렬된 배열에서 지정된 요소를 검색하고 해당 요소의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of elements contained in <bpt id="p1">&lt;c&gt;</bpt>items<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 포함 된 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The collection of objects to copy to the immutable array.</source>
          <target state="translated">변경할 수 없는 배열에 복사할 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates an immutable array from the specified collection.</source>
          <target state="translated">지정된 컬렉션에서 변경할 수 없는 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the keys in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the values in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The immutable dictionary to search.</source>
          <target state="translated">검색할 변경할 수 없는 사전입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The key to locate in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에서 찾을 키입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The value to locate on the specified key, if the key is found.</source>
          <target state="translated">키가 있는 경우 지정된 키에서 찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>Determines whether the specified immutable dictionary contains the specified key/value pair.</source>
          <target state="translated">변경할 수 없는 지정된 사전에 지정된 키/값 쌍이 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The type of the key.</source>
          <target state="translated">키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The type of the value.</source>
          <target state="translated">값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The dictionary to retrieve the value from.</source>
          <target state="translated">값을 검색할 사전입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>The key to search for.</source>
          <target state="translated">검색할 키입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)">
          <source>Gets the value for a given key if a matching key exists in the dictionary.</source>
          <target state="translated">일치하는 키가 사전에 있는 경우 지정된 키의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the key.</source>
          <target state="translated">키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The type of the value.</source>
          <target state="translated">값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The dictionary to retrieve the value from.</source>
          <target state="translated">값을 검색할 사전입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The key to search for.</source>
          <target state="translated">검색할 키입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>The default value to return if no matching key is found in the dictionary.</source>
          <target state="translated">일치하는 키가 사전에 없는 경우에 반환할 기본값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)">
          <source>Gets the value for a given key if a matching key exists in the dictionary.</source>
          <target state="translated">일치하는 키가 사전에 있는 경우 지정된 키의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of element in the source collection.</source>
          <target state="translated">원본 컬렉션에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of key in the resulting immutable dictionary.</source>
          <target state="translated">변경할 수 없는 결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The source collection used to generate the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전을 생성하는 데 사용되는 원본 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The function used to transform keys for the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에 대한 키를 변형하는 데 사용되는 함수입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</source>
          <target state="translated">원본 키에 변형 함수를 적용하여 기존 요소 컬렉션에서 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the source collection.</source>
          <target state="translated">원본 컬렉션에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of key in the resulting immutable dictionary.</source>
          <target state="translated">변경할 수 없는 결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The source collection used to generate the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전을 생성하는 데 사용되는 원본 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The function used to transform keys for the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에 대한 키를 변형하는 데 사용되는 함수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">사전에 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Constructs an immutable dictionary based on some transformation of a sequence.</source>
          <target state="translated">시퀀스의 일부 변형에 따라 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">열거할 키/값 쌍의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</source>
          <target state="translated">키/값 쌍의 시퀀스를 열거하고 해당 시퀀스의 내용에 대한 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">열거할 키/값 쌍의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전을 바인딩할 때 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">키/값 쌍의 시퀀스를 열거하고, 지정된 키 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">열거할 키/값 쌍의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전을 바인딩할 때 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The value comparer to use for the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에 사용할 값 비교자입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">키/값 쌍의 시퀀스를 열거하고, 지정된 키 및 값 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">사전을 생성하기 위해 열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 키를 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 값을 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</source>
          <target state="translated">시퀀스를 열거 및 변형하고 해당 시퀀스의 내용에 대한 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">사전을 생성하기 위해 열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 키를 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 값을 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">사전에 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">시퀀스를 열거 및 변형하고, 지정된 키 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">사전을 생성하기 위해 열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 키를 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 값을 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">사전에 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The value comparer to use for the dictionary.</source>
          <target state="translated">사전에 사용할 값 비교자입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">시퀀스를 열거 및 변형하고, 지정된 키 및 값 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enumerates a sequence and produces an immutable hash set of its contents.</source>
          <target state="translated">시퀀스를 열거하고 해당 시퀀스의 내용에 대한 변경할 수 없는 해시 집합을 생성합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to use for comparing objects in the set for equality.</source>
          <target state="translated">집합의 개체가 같은지 비교하는 데 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Enumerates a sequence, produces an immutable hash set of its contents, and uses the specified equality comparer for the set type.</source>
          <target state="translated">시퀀스를 열거하고, 해당 시퀀스의 내용에 대한 변경할 수 없는 해시 집합을 생성하며, 형식 집합에 지정된 같음 비교자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The object to locate in the list.</source>
          <target state="translated">목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the list.</source>
          <target state="translated">지정된 개체를 검색하고, 목록에서 첫 번째로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">변경할 수 없는 목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The equality comparer to use in the search.</source>
          <target state="translated">검색에서 사용할 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the list.</source>
          <target state="translated">지정된 개체를 검색하고, 목록에서 첫 번째로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">변경할 수 없는 목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">검색의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0은 빈 목록에서 유효합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">지정된 개체를 검색하고, 지정된 인덱스에서 마지막 요소로 확장하는 변경할 수 없는 목록의 요소 범위 내에서 첫 번째로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">변경할 수 없는 목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">검색의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0은 빈 목록에서 유효합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">검색할 섹션에 있는 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</source>
          <target state="translated">지정된 개체를 검색하고, 지정된 인덱스에서 마지막 요소로 확장하는 변경할 수 없는 목록의 요소 범위 내에서 첫 번째로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">변경할 수 없는 목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">지정된 개체를 검색하고 전체 변경할 수 없는 목록에서 마지막으로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">변경할 수 없는 목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The equality comparer to use in the search.</source>
          <target state="translated">검색에서 사용할 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</source>
          <target state="translated">지정된 개체를 검색하고 전체 변경할 수 없는 목록에서 마지막으로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">변경할 수 없는 목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">역방향 검색의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">지정된 개체를 검색하고, 첫 번째 요소에서 지정된 인덱스로 확장하는 변경할 수 없는 목록의 요소 범위 내에서 마지막으로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The object to locate in the Immutable list.</source>
          <target state="translated">변경할 수 없는 목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">역방향 검색의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>The number of elements in the section to search.</source>
          <target state="translated">검색할 섹션에 있는 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</source>
          <target state="translated">지정된 개체를 검색하고, 첫 번째 요소에서 지정된 인덱스로 확장하는 변경할 수 없는 목록의 요소 범위 내에서 마지막으로 나타나는 개체의 0부터 시작하는 인덱스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>The value to remove.</source>
          <target state="translated">제거할 값입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)">
          <source>Removes the specified value from this list.</source>
          <target state="translated">이 목록에서 지정된 값을 제거합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The items to remove if matches are found in this list.</source>
          <target state="translated">이 목록에 일치하는 항목이 있는 경우 제거할 항목입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Removes the specified values from this list.</source>
          <target state="translated">이 목록에서 지정된 값을 제거합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The type of items in the list.</source>
          <target state="translated">목록에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The list to search.</source>
          <target state="translated">검색할 목록입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The element to replace.</source>
          <target state="translated">바꿀 요소입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>The element to replace the old element with.</source>
          <target state="translated">이전 요소와 바꿀 요소입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)">
          <source>Replaces the first equal element in the list with the specified element.</source>
          <target state="translated">목록에서 동일한 첫 번째 요소를 지정된 요소로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enumerates a sequence and produces an immutable list of its contents.</source>
          <target state="translated">시퀀스를 열거하고 해당 시퀀스의 내용에 대한 변경할 수 없는 목록을 생성합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>The type of elements in the immutable queue.</source>
          <target state="translated">변경할 수 없는 큐에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>The queue to remove the item from.</source>
          <target state="translated">항목을 제거할 큐입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>When this method returns, contains the item from the beginning of the queue.</source>
          <target state="translated">이 메서드가 반환되는 경우 큐의 시작 부분에서 항목을 포함합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)">
          <source>Removes the item at the beginning of the immutable queue, and returns the new queue.</source>
          <target state="translated">변경할 수 없는 큐의 시작 부분에 있는 요소를 제거하고 새 큐를 반환합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">열거할 키/값 쌍의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents.</source>
          <target state="translated">키/값 쌍의 시퀀스를 열거하고 해당 시퀀스의 내용에 대한 변경할 수 없는 정렬된 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">열거할 키/값 쌍의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전을 바인딩할 때 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">키/값 쌍의 시퀀스를 열거하고, 지정된 키 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence of key/value pairs to enumerate.</source>
          <target state="translated">열거할 키/값 쌍의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The key comparer to use when building the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전을 바인딩할 때 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The value comparer to use for the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에 사용할 값 비교자입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Enumerates a sequence of key/value pairs and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">키/값 쌍의 시퀀스를 열거하고, 지정된 키 및 값 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 정렬된 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">사전을 생성하기 위해 열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 키를 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 값을 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents.</source>
          <target state="translated">시퀀스를 열거 및 변형하고 해당 시퀀스의 내용에 대한 변경할 수 없는 정렬된 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">사전을 생성하기 위해 열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 키를 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 값을 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">사전에 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})">
          <source>Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key comparer.</source>
          <target state="translated">시퀀스를 열거 및 변형하고, 지정된 키 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 정렬된 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the values in the resulting dictionary.</source>
          <target state="translated">결과 사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to enumerate to generate the dictionary.</source>
          <target state="translated">사전을 생성하기 위해 열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the key for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 키를 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The function that will produce the value for the dictionary from each sequence element.</source>
          <target state="translated">각 시퀀스 요소에서 사전에 대한 값을 생성하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The key comparer to use for the dictionary.</source>
          <target state="translated">사전에 사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The value comparer to use for the dictionary.</source>
          <target state="translated">사전에 사용할 값 비교자입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Enumerates and transforms a sequence, and produces an immutable sorted dictionary of its contents by using the specified key and value comparers.</source>
          <target state="translated">시퀀스를 열거 및 변형하고, 지정된 키 및 값 비교자를 사용하여 해당 시퀀스의 내용에 대한 변경할 수 없는 정렬된 사전을 생성합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enumerates a sequence and produces an immutable sorted set of its contents.</source>
          <target state="translated">시퀀스를 열거하고 해당 시퀀스의 내용에 대한 변경할 수 없는 정렬된 집합을 생성합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>The type of the elements in the sequence.</source>
          <target state="translated">시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>The sequence to enumerate.</source>
          <target state="translated">열거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>The comparer to use for initializing and adding members to the sorted set.</source>
          <target state="translated">정렬된 집합을 초기화하고 구성원을 추가하는 데 사용할 비교자입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
          <source>Enumerates a sequence, produces an immutable sorted set of its contents, and uses the specified comparer.</source>
          <target state="translated">시퀀스를 열거하고, 해당 시퀀스의 내용에 대한 변경할 수 없는 정렬된 집합을 생성하며, 지정된 비교자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>The type of items contained in the stack.</source>
          <target state="translated">스택에 들어 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>The stack to modify.</source>
          <target state="translated">수정할 스택입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>The item to remove from the stack.</source>
          <target state="translated">스택에서 제거할 항목입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableStack.Pop``1(System.Collections.Immutable.IImmutableStack{``0},``0@)">
          <source>Removes the specified item from an immutable stack.</source>
          <target state="translated">변경할 수 없는 스택에서 지정된 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>The type of the new part.</source>
          <target state="translated">새 파트의 형식입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>The batch to add to.</source>
          <target state="translated">추가할 일괄 처리입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>The value to add.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)">
          <source>Creates a part from the specified value and adds it to the specified batch.</source>
          <target state="translated">지정된 값에서 파트를 만들어 지정된 일괄 처리에 추가합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The type of the new part.</source>
          <target state="translated">새 파트의 형식입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The batch to add to.</source>
          <target state="translated">추가할 일괄 처리입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The contract name of the export.</source>
          <target state="translated">내보내기의 계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>The value to add.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)">
          <source>Creates a part from the specified value and adds it to the specified batch with the specified contract name.</source>
          <target state="translated">지정된 값에서 파트를 만들어 지정된 계약 이름으로 지정된 일괄 처리에 추가합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
          <source>The batch to add to.</source>
          <target state="translated">추가할 일괄 처리입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
          <source>The object to add.</source>
          <target state="translated">추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)">
          <source>Creates a composable part from the specified attributed object, and adds it to the specified composition batch.</source>
          <target state="translated">지정된 특성 사용 개체에서 작성 가능한 파트를 만들어 지정된 컴퍼지션 일괄 처리에 추가합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>The type of the new part.</source>
          <target state="translated">새 파트의 형식입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>The composition container to perform composition in.</source>
          <target state="translated">컴퍼지션을 수행할 컴퍼지션 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>The value to compose.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)">
          <source>Creates a part from the specified value and composes it in the specified composition container.</source>
          <target state="translated">지정된 값에서 파트를 만들고 지정된 컴퍼지션 컨테이너에서 해당 파트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The type of the new part.</source>
          <target state="translated">새 파트의 형식입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The composition container to perform composition in.</source>
          <target state="translated">컴퍼지션을 수행할 컴퍼지션 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The contract name to export the part under.</source>
          <target state="translated">파트를 내보낼 계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>The value to compose.</source>
          <target state="translated">작성할 값입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)">
          <source>Creates a part from the specified object under the specified contract name and composes it in the specified composition container.</source>
          <target state="translated">지정된 개체에서 지정된 계약 이름으로 파트를 만들고 지정된 컴퍼지션 컨테이너에 해당 파트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
          <source>The composition container to perform composition in.</source>
          <target state="translated">컴퍼지션을 수행할 컴퍼지션 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
          <source>An array of attributed objects to compose.</source>
          <target state="translated">작성할 특성 사용 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])">
          <source>Creates composable parts from an array of attributed objects and composes them in the specified composition container.</source>
          <target state="translated">특성 사용 개체의 배열에서 작성 가능한 파트를 만들고 지정된 컴퍼지션 컨테이너에 해당 파트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The contract type.</source>
          <target state="translated">계약 형식입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</source>
          <target state="translated">지정한 부분에서 지정된 계약 형식과 일치하는 내보내기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The contract type.</source>
          <target state="translated">계약 형식입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</source>
          <target state="translated">지정한 부분에서 지정된 계약 형식과 일치하는 내보내기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>The contract type.</source>
          <target state="translated">계약 형식입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</source>
          <target state="translated">지정한 부분에서 지정된 계약 형식과 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The contract type.</source>
          <target state="translated">계약 형식입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The import cardinality.</source>
          <target state="translated">가져오기 카디널리티입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</source>
          <target state="translated">지정한 부분에서 지정된 계약 형식과 내보내기 카디널리티와 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The contract type.</source>
          <target state="translated">계약 형식입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</source>
          <target state="translated">지정한 부분에서 지정된 계약 형식과 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The contract type.</source>
          <target state="translated">계약 형식입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The import cardinality.</source>
          <target state="translated">가져오기 카디널리티입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</source>
          <target state="translated">지정한 부분에서 지정된 계약 형식과 내보내기 카디널리티와 일치하는 가져오기가 포함되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
          <source>The composition service to use.</source>
          <target state="translated">사용할 컴퍼지션 서비스입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
          <source>The part to compose.</source>
          <target state="translated">작성할 파트입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)">
          <source>Composes the specified part by using the specified composition service, with recomposition disabled.</source>
          <target state="translated">재컴퍼지션을 사용하지 않도록 설정한 상태에서 지정된 컴퍼지션 서비스를 사용하여 지정된 파트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>The composition service to use.</source>
          <target state="translated">사용할 컴퍼지션 서비스입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>The part to compose.</source>
          <target state="translated">작성할 파트입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>The reflection context for the part.</source>
          <target state="translated">파트의 리플렉션 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)">
          <source>Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.</source>
          <target state="translated">재컴퍼지션을 비활성화하고 지정된 리플렉션 컨텍스트를 사용하여 지정된 컴퍼지션 서비스를 통해 지정된 파트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
          <source>The catalog that will provide exports.</source>
          <target state="translated">내보내기를 제공하는 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
          <source>Creates a new composition service by using the specified catalog as a source for exports.</source>
          <target state="translated">지정된 카탈로그를 내보내기 소스로 사용하여 새 복합 서비스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The type of the metadata value.</source>
          <target state="translated">메타데이터 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The metadata key.</source>
          <target state="translated">메타데이터 키입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>The metadata value.</source>
          <target state="translated">메타데이터 값입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)">
          <source>Gets a value that indicates whether the specified part contains metadata that has the specified key and value.</source>
          <target state="translated">지정된 파트가 지정된 키 및 값이 있는 메타데이터를 포함하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The metadata key.</source>
          <target state="translated">메타데이터 키입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>Gets a value that indicates whether the specified part contains metadata that has the specified key.</source>
          <target state="translated">지정된 파트가 지정된 키가 있는 메타데이터를 포함하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The name of the contract.</source>
          <target state="translated">계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>Gets a value that indicates whether the specified part exports the specified contract.</source>
          <target state="translated">지정된 파트가 지정된 계약을 내보내는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The catalog to filter.</source>
          <target state="translated">필터링하는 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>The filter function.</source>
          <target state="translated">필터 함수입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})">
          <source>Filters the specified catalog with the specified filter function.</source>
          <target state="translated">지정한 필터 함수를 사용하여 지정된 카탈로그를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>The name of the contract.</source>
          <target state="translated">계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)">
          <source>Determines whether the specified part imports the specified contract.</source>
          <target state="translated">지정된 파트가 지정한 계약을 가져오는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The part to search.</source>
          <target state="translated">검색할 파트입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The name of the contract.</source>
          <target state="translated">계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>The cardinality of the contract.</source>
          <target state="translated">계약의 카디널리티입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)">
          <source>Determines whether the specified part imports the specified contract with the specified cardinality.</source>
          <target state="translated">지정된 파트가 주어진 카디널리티가 있는 지정한 계약을 가져오는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object)">
          <source>The context to draw exports from.</source>
          <target state="translated">내보내기를 그리는 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object)">
          <source>The object to satisfy imports on.</source>
          <target state="translated">가져오기를 만족시키는 개체입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object)">
          <source>Satisfies the imports of the specified object from the specified context.</source>
          <target state="translated">지정된 컨텍스트에서 지정된 개체의 가져오기를 만족시킵니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>The context to draw exports from.</source>
          <target state="translated">내보내기를 그리는 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>The object to satisfy imports on.</source>
          <target state="translated">가져오기를 만족시키는 개체입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>Conventions to use when satisfying imports.</source>
          <target state="translated">가져오기를 충족할 때 사용할 규칙입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Composition.CompositionContextExtensions.SatisfyImports(System.Composition.CompositionContext,System.Object,System.Composition.Convention.AttributedModelProvider)">
          <source>Satisfies the imports of the specified object from the specified context, using the specified conventions.</source>
          <target state="translated">지정된 규칙을 사용하여 지정된 컨텍스트에서 지정된 개체의 가져오기를 만족시킵니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function that defines the aggregate operation.</source>
          <target state="translated">집계 작업을 정의하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The argument over which the aggregate function should be calculated.</source>
          <target state="translated">집계 함수를 계산할 인수입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function that defines the aggregate operation.</source>
          <target state="translated">집계 작업을 정의하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The argument over which the aggregate function should be calculated.</source>
          <target state="translated">집계 함수를 계산할 인수입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph> that is applied in a distinct fashion.</source>
          <target state="translated">다른 방식으로 적용되는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 평가할 조건자를 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">이 메서드는 조건자 논리를 제공하는 부울 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for all elements of the input set.</source>
          <target state="translated">지정된 조건자가 입력 집합의 모든 요소에 대해 성립하는지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 평가할 조건자를 나타내는 식입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for all elements of the input set.</source>
          <target state="translated">지정된 조건자가 입력 집합의 모든 요소에 대해 성립하는지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 부울 식입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 부울 식입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /&gt;</ph> that performs the logical And of the left and right arguments.</source>
          <target state="translated">왼쪽 및 오른쪽 인수의 논리 And 연산을 수행하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that determines whether the specified set argument is non-empty.</source>
          <target state="translated">지정된 집합 인수가 비어 있지 않은지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the predicate to evaluate for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 평가할 조건자를 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">이 메서드는 조건자 논리를 제공하는 부울 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for any element of the input set.</source>
          <target state="translated">지정된 조건자가 입력 집합의 모든 요소에 대해 성립하는지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 평가할 조건자를 나타내는 식입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for any element of the input set.</source>
          <target state="translated">지정된 조건자가 입력 집합의 모든 요소에 대해 성립하는지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>The value in the key/value pair.</source>
          <target state="translated">키/값 쌍의 값입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>The key in the key/value pair.</source>
          <target state="translated">키/값 쌍의 키입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>Returns the specified arguments as a key/value pair object.</source>
          <target state="translated">지정된 인수를 키/값 쌍 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The value in the key/value pair.</source>
          <target state="translated">키/값 쌍의 값입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The key in the key/value pair.</source>
          <target state="translated">키/값 쌍의 키입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Returns the specified arguments as a key/value pair object.</source>
          <target state="translated">지정된 인수를 키/값 쌍 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression to bind.</source>
          <target state="translated">바인딩할 식입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that uses a generated variable name to bind the given expression.</source>
          <target state="translated">생성된 변수 이름을 사용하여 지정된 식을 바인딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression to bind.</source>
          <target state="translated">바인딩할 식입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The variable name that should be used for the binding.</source>
          <target state="translated">바인딩에 사용할 변수 이름입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that uses the specified variable name to bind the given expression</source>
          <target state="translated">지정된 변수 이름을 사용하여 지정된 식을 바인딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>The argument to which the cast should be applied.</source>
          <target state="translated">캐스트를 적용할 인수입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type to cast to.</source>
          <target state="translated">캐스팅할 형식을 지정하는 형식 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /&gt;</ph> that applies a cast operation to a polymorphic argument.</source>
          <target state="translated">다형 인수에 캐스트 작업을 적용하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The type of the constant value.</source>
          <target state="translated">상수 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The constant value to represent.</source>
          <target state="translated">나타낼 상수 값입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> of the specified primitive type with the given constant value.</source>
          <target state="translated">주어진 상수 값을 사용하여 지정된 기본 형식의 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">참조된 요소가 상주하고 있는 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">키 값을 제공하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">이러한 식은 참조된 엔터티 형식의 키 속성과 개수, 형식 및 순서가 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity based on key values.</source>
          <target state="translated">키 값을 기반으로 특정 엔터티에 대한 참조를 인코딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">참조된 요소가 상주하고 있는 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">키 값을 제공하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">이러한 식은 참조된 엔터티 형식의 키 속성과 개수, 형식 및 순서가 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity based on key values.</source>
          <target state="translated">키 값을 기반으로 특정 엔터티에 대한 참조를 인코딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">참조된 요소가 상주하고 있는 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The specific type of the referenced entity.</source>
          <target state="translated">참조된 엔터티의 특정 형식입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>This must be an entity type from the same hierarchy as the entity set's element type.</source>
          <target state="translated">이 형식은 엔터티 집합의 요소 형식과 동일한 계층 구조에 있는 엔터티 형식이어야 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">키 값을 제공하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">이러한 식은 참조된 엔터티 형식의 키 속성과 개수, 형식 및 순서가 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.</source>
          <target state="translated">키 값을 기반으로 지정된 형식의 특정 엔터티에 대한 참조를 인코딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">참조된 요소가 상주하고 있는 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The specific type of the referenced entity.</source>
          <target state="translated">참조된 엔터티의 특정 형식입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>This must be an entity type from the same hierarchy as the entity set's element type.</source>
          <target state="translated">이 형식은 엔터티 집합의 요소 형식과 동일한 계층 구조에 있는 엔터티 형식이어야 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">키 값을 제공하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">이러한 식은 참조된 엔터티 형식의 키 속성과 개수, 형식 및 순서가 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.</source>
          <target state="translated">키 값을 기반으로 지정된 형식의 특정 엔터티에 대한 참조를 인코딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A method that specifies the logic to evaluate once for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 한 번씩 확인할 논리를 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">지정된 입력 집합의 각 요소에 대해 주어진 <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> 식을 한 번씩 계산하고 해당 입력 및 apply 열로 행 컬렉션을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="apply" /&gt;</ph>가 빈 집합으로 계산되는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies logic to evaluate once for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 한 번씩 확인할 논리를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">지정된 입력 집합의 각 요소에 대해 주어진 <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> 식을 한 번씩 계산하고 해당 입력 및 apply 열로 행 컬렉션을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="apply" /&gt;</ph>가 빈 집합으로 계산되는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that provides the reference.</source>
          <target state="translated">참조를 제공하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have a reference Type.</source>
          <target state="translated">이 식은 참조 형식이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /&gt;</ph> that retrieves a specific Entity given a reference expression.</source>
          <target state="translated">참조 식에 따라 특정 엔터티를 검색하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the set over which to perfom the distinct operation.</source>
          <target state="translated">고유 작업을 수행할 집합을 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /&gt;</ph> that removes duplicates from the given set argument.</source>
          <target state="translated">지정된 집합 인수에서 중복 항목을 제거하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that divides the left argument by the right argument.</source>
          <target state="translated">왼쪽 인수를 오른쪽 인수로 나누는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /&gt;</ph> that converts a set into a singleton.</source>
          <target state="translated">집합을 singleton으로 변환하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that compares the left and right arguments for equality.</source>
          <target state="translated">왼쪽 인수와 오른쪽 인수가 같은지 비교하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /&gt;</ph> that computes the subtraction of the right set argument from the left set argument.</source>
          <target state="translated">왼쪽 집합 인수에서 오른쪽 집합 인수를 빼는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that determines whether the specified set argument is non-empty.</source>
          <target state="translated">지정된 집합 인수가 비어 있지 않은지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 평가할 조건자를 나타내는 식입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> that filters the elements in the given input set using the specified predicate.</source>
          <target state="translated">지정된 조건자를 사용하여 주어진 입력 집합의 요소를 필터링하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">조인할 조건을 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">이 메서드는 조인 조건의 논리를 제공하는 Boolean 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">FullOuterJoin을 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식으로 지정된 집합을 조인하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">조인할 조건을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">FullOuterJoin을 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식 바인딩에 지정된 집합을 조인하는 새 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that provides the entity.</source>
          <target state="translated">엔터티를 제공하는 식입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have an entity result type.</source>
          <target state="translated">이 식의 결과 형식은 엔터티 형식이어야 합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /&gt;</ph> that retrieves the ref of the specifed entity in structural form.</source>
          <target state="translated">구조적 형식의 지정된 엔터티에 대한 참조를 검색하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that provides the reference.</source>
          <target state="translated">참조를 제공하는 식입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have a reference Type with an Entity element type.</source>
          <target state="translated">이 식에는 엔터티 요소 형식이 포함된 참조 형식이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /&gt;</ph> that retrieves the key values of the specifed reference in structural form.</source>
          <target state="translated">구조적 형식의 지정된 참조에 대한 키 값을 검색하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is greater than the right argument.</source>
          <target state="translated">왼쪽 인수가 오른쪽 인수보다 큰지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is greater than or equal to the right argument.</source>
          <target state="translated">왼쪽 인수가 오른쪽 인수보다 크거나 같은지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression to bind.</source>
          <target state="translated">바인딩할 식입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</source>
          <target state="translated">생성된 변수 및 그룹 변수 이름을 사용하여 지정된 식을 바인딩하는 새 그룹 식 바인딩을 만듭니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The expression to bind.</source>
          <target state="translated">바인딩할 식입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The variable name that should be used for the binding.</source>
          <target state="translated">바인딩에 사용할 변수 이름입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</source>
          <target state="translated">새 그룹 식 바인딩이 group-by 식에서 사용되는 경우 그룹을 참조하는 데 사용할 변수 이름입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> that uses the specified variable name and group variable names to bind the given expression.</source>
          <target state="translated">지정된 변수 이름 및 그룹 변수 이름을 사용하여 주어진 식을 바인딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A list of string-expression pairs that define the grouping columns.</source>
          <target state="translated">그룹 열을 정의하는 문자열-식 쌍의 목록입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A list of expressions that specify aggregates to apply.</source>
          <target state="translated">적용할 집계를 지정하는 식의 목록입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /&gt;</ph> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</source>
          <target state="translated">지정된 그룹 키에 따라 입력 집합의 요소를 그룹화하고 지정된 집계를 적용하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">조인할 조건을 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">이 메서드는 조인 조건의 논리를 제공하는 Boolean 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">InnerJoin을 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식에 지정된 집합을 조인하는 새 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">조인할 조건을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">InnerJoin을 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식 바인딩에 지정된 집합을 조인하는 새 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /&gt;</ph> that computes the intersection of the left and right set arguments.</source>
          <target state="translated">왼쪽 및 오른쪽 집합 인수의 교집합을 계산하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> instance representing the Lambda function to apply.</source>
          <target state="translated">적용할 람다 함수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A list of expressions that provide the arguments.</source>
          <target state="translated">인수를 제공하는 식 목록입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> representing the application of the specified Lambda function to the given arguments.</source>
          <target state="translated">지정된 람다 함수를 지정된 인수에 적용하는 것을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> instance representing the Lambda function to apply.</source>
          <target state="translated">적용할 람다 함수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that provide the arguments.</source>
          <target state="translated">인수를 제공하는 식입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> representing the application of the specified Lambda function to the given arguments.</source>
          <target state="translated">지정된 람다 함수를 지정된 인수에 적용하는 것을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Metadata for the function to invoke.</source>
          <target state="translated">호출할 함수의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A list of expressions that provide the arguments to the function.</source>
          <target state="translated">함수에 인수를 제공하는 식 목록입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> representing the invocation of the specified function with the given arguments.</source>
          <target state="translated">지정된 인수를 사용하여 지정된 함수의 호출을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Metadata for the function to invoke.</source>
          <target state="translated">호출할 함수의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that provide the arguments to the function.</source>
          <target state="translated">함수에 인수를 제공하는 식입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> representing the invocation of the specified function with the given arguments.</source>
          <target state="translated">지정된 인수를 사용하여 지정된 함수의 호출을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> that determines whether the specified set argument is an empty set.</source>
          <target state="translated">지정된 집합 인수가 빈 집합인지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /&gt;</ph> that determines whether the specified argument is null.</source>
          <target state="translated">지정된 인수가 null인지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">인스턴스를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type that the instance's result type should be compared to.</source>
          <target state="translated">인스턴스의 결과 형식을 비교할 형식을 지정하는 형식 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> that determines whether the given argument is of the specified type or a subtype.</source>
          <target state="translated">주어진 인수가 지정된 형식 또는 하위 형식인지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">인스턴스를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type that the instance's result type should be compared to.</source>
          <target state="translated">인스턴스의 결과 형식을 비교할 형식을 지정하는 형식 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</source>
          <target state="translated">주어진 인수가 지정된 형식일 뿐이며 하위 형식이 아닌지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> 식을 만듭니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the outer set argument.</source>
          <target state="translated">외부 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the inner set argument.</source>
          <target state="translated">내부 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how the outer key value should be derived from an element of the outer set.</source>
          <target state="translated">외부 집합의 요소에서 외부 키 값이 파생되는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how the inner key value should be derived from an element of the inner set.</source>
          <target state="translated">내부 집합의 요소에서 내부 키 값이 파생되는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">지정된 외부 및 내부 키 간에 같음 조건으로 외부 및 내부 식에 지정된 집합에 조인되고 InnerJoin을 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>로 사용하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The type of the <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">종류는 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the outer set argument.</source>
          <target state="translated">외부 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the inner set argument.</source>
          <target state="translated">내부 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how the outer key value should be derived from an element of the outer set.</source>
          <target state="translated">외부 집합의 요소에서 외부 키 값이 파생되는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how the inner key value should be derived from an element of the inner set.</source>
          <target state="translated">내부 집합의 요소에서 내부 키 값이 파생되는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</source>
          <target state="translated">내부 및 외부 집합의 요소에서 결과 집합의 요소가 파생되는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with Join and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 조인과 호환되는 형식의 인스턴스를 생성해야 하며 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>로 확인될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept>에 대한 호환성 요구 사항은 설명 단원에 나와 있습니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">외부 및 내부 식에 지정되고 지정된 외부 및 내부 키 간에 같음 조건으로 조인된 집합에 InnerJoin을 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>로 사용하여 지정된 선택기를 화면에 표시하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">조인할 조건을 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">이 메서드는 조인 조건의 논리를 제공하는 Boolean 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">LeftOuterJoin을 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식에 지정된 집합을 조인하는 새 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">조인할 조건을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">LeftOuterJoin을 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>로 사용하여 지정된 조인 조건에서 왼쪽 및 오른쪽 식 바인딩에 지정된 집합을 조인하는 새 <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is less than the right argument.</source>
          <target state="translated">왼쪽 인수가 오른쪽 인수보다 작은지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is less than or equal to the right argument.</source>
          <target state="translated">왼쪽 인수가 오른쪽 인수보다 작거나 같은지 여부를 결정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input string.</source>
          <target state="translated">입력 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the pattern string.</source>
          <target state="translated">패턴 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> that compares the specified input string to the given pattern.</source>
          <target state="translated">지정된 입력 문자열을 주어진 패턴과 비교하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input string.</source>
          <target state="translated">입력 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the pattern string.</source>
          <target state="translated">패턴 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An optional expression that specifies the escape string.</source>
          <target state="translated">이스케이프 문자열을 지정하는 선택적 식입니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> that compares the specified input string to the given pattern using the optional escape.</source>
          <target state="translated">선택적 이스케이프를 사용하여 지정된 입력 문자열을 주어진 패턴과 비교하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input collection.</source>
          <target state="translated">입력 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the limit value.</source>
          <target state="translated">한계 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.</source>
          <target state="translated">인수 컬렉션의 요소 수를 지정된 개수 제한 값으로 제한하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Tied results are not included in the output.</source>
          <target state="translated">동급 결과는 출력에 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that subtracts the right argument from the left argument.</source>
          <target state="translated">왼쪽 인수에서 오른쪽 인수를 빼는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that computes the remainder of the left argument divided by the right argument.</source>
          <target state="translated">왼쪽 인수를 오른쪽 인수로 나눈 나머지를 계산하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that multiplies the left argument by the right argument.</source>
          <target state="translated">왼쪽 인수를 오른쪽 인수와 곱하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>An expression that specifies the instance from which navigation should occur.</source>
          <target state="translated">탐색이 시작될 인스턴스를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the property that represents the end of the relationship from which navigation should occur.</source>
          <target state="translated">탐색을 시작할 관계의 끝을 나타내는 속성의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the property that represents the end of the relationship to which navigation should occur.</source>
          <target state="translated">탐색을 종료할 관계의 끝을 나타내는 속성의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> representing the navigation of a composition or association relationship.</source>
          <target state="translated">컴퍼지션의 탐색이나 연결 관계를 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>Metadata for the relation type that represents the relationship.</source>
          <target state="translated">관계를 나타내는 관계 유형의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</source>
          <target state="translated">탐색을 시작할 관계의 끝을 나타내는 관계 형식 속성에 대한 이름입니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</source>
          <target state="translated">탐색을 시작할 관계의 끝을 나타내는 관계 형식 속성에 대한 이름입니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies the instance from which naviagtion should occur.</source>
          <target state="translated">탐색이 시작될 인스턴스를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> representing the navigation of a composition or association relationship.</source>
          <target state="translated">컴퍼지션의 탐색이나 연결 관계를 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that negates the value of the argument.</source>
          <target state="translated">인수의 값을 부정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The type of the new instance.</source>
          <target state="translated">새 인스턴스의 형식입니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Expressions that specify values of the new instances, interpreted according to the instance's type.</source>
          <target state="translated">인스턴스의 형식에 따라 해석된, 새 인스턴스의 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>If the type argument is a collection type, the arguments specify the elements of the collection.</source>
          <target state="translated">형식 인수가 컬렉션 형식이면 인수는 컬렉션의 요소를 지정하고,</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Otherwise the arguments are used as property or column values in the new instance.</source>
          <target state="translated">그렇지 않으면 인수가 새 인스턴스에서 속성 또는 열 값으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The type of the new instance.</source>
          <target state="translated">새 인스턴스의 형식입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that specify values of the new instances, interpreted according to the instance's type.</source>
          <target state="translated">인스턴스의 형식에 따라 해석된, 새 인스턴스의 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>If the type argument is a collection type, the arguments specify the elements of the collection.</source>
          <target state="translated">형식 인수가 컬렉션 형식이면 인수는 컬렉션의 요소를 지정하고,</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Otherwise the arguments are used as property or column values in the new instance.</source>
          <target state="translated">그렇지 않으면 인수가 새 인스턴스에서 속성 또는 열 값으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source>The type metadata for the collection to create</source>
          <target state="translated">만들 컬렉션의 형식 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> that constructs an empty collection of the specified collection type.</source>
          <target state="translated">지정된 컬렉션 형식의 빈 컬렉션을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the argument.</source>
          <target state="translated">인수를 지정하는 부울 식입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph> that performs the logical negation of the given argument.</source>
          <target state="translated">지정된 인수의 논리 부정 연산을 수행하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that compares the left and right arguments for inequality.</source>
          <target state="translated">왼쪽 인수와 오른쪽 인수가 같지 않은지 비교하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source>The type of the null value.</source>
          <target state="translated">null 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /&gt;</ph>, which represents a typed null value.</source>
          <target state="translated">형식화된 null 값을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the type that elements of the input set must have to be included in the resulting set.</source>
          <target state="translated">결과 집합에 포함되기 위해 입력 집합의 요소가 일치해야 하는 형식의 형식 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> that produces a set consisting of the elements of the given input set that are of the specified type.</source>
          <target state="translated">주어진 입력 집합에서 지정된 형식으로 된 요소로 구성된 집합을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</source>
          <target state="translated">결과 집합에 포함되기 위해 입력 집합의 요소가 정확히 일치해야 하는 형식의 형식 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</source>
          <target state="translated">주어진 입력 집합에서 정확히 지정된 형식으로 된 요소로 구성된 집합을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 부울 식입니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 부울 식입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /&gt;</ph> that performs the logical Or of the left and right arguments.</source>
          <target state="translated">왼쪽 및 오른쪽 인수의 논리 OR 연산을 수행하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</source>
          <target state="translated">오름차순 정렬 순서와 기본 데이터 정렬을 사용하여 지정된 정렬 키를 기준으로 주어진 입력 집합을 정렬하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">정렬에 사용할 데이터 정렬입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</source>
          <target state="translated">오름차순 정렬 순서와 지정된 데이터 정렬을 사용하여 지정된 정렬 키를 기준으로 주어진 입력 집합을 정렬하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and default collation.</source>
          <target state="translated">내림차순 정렬 순서와 기본 데이터 정렬을 사용하여 지정된 정렬 키를 기준으로 주어진 입력 집합을 정렬하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">정렬에 사용할 데이터 정렬입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</source>
          <target state="translated">내림차순 정렬 순서와 지정된 데이터 정렬을 사용하여 지정된 정렬 키를 기준으로 주어진 입력 집합을 정렬하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A method that specifies the logic to evaluate once for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 한 번씩 확인할 논리를 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">지정된 입력 집합의 각 요소에 대해 주어진 <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> 식을 한 번씩 계산하고 해당 입력 및 apply 열로 행 컬렉션을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set have an apply column value of <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="apply" /&gt;</ph>가 빈 집합으로 계산되는 행의 apply 열 값은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies logic to evaluate once for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 한 번씩 확인할 논리를 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">지정된 입력 집합의 각 요소에 대해 주어진 <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> 식을 한 번씩 계산하고 해당 입력 및 apply 열로 행 컬렉션을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set have an apply column value of <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="apply" /&gt;</ph>가 빈 집합으로 계산되는 행의 apply 열 값은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The type of the referenced parameter.</source>
          <target state="translated">참조된 매개 변수의 형식입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The name of the referenced parameter.</source>
          <target state="translated">참조된 매개 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> that references a parameter with the specified name and type.</source>
          <target state="translated">지정된 이름 및 형식으로 매개 변수를 참조하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">왼쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">오른쪽 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that adds the left argument to the right argument.</source>
          <target state="translated">왼쪽 인수를 오른쪽 인수에 더하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression to project over the set.</source>
          <target state="translated">집합에 대해 투영할 식입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that projects the specified expression over the given input set.</source>
          <target state="translated">주어진 입력 집합에 대해 지정된 식을 투영하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>The instance from which to retrieve the property.</source>
          <target state="translated">속성을 검색할 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>May be null if the property is static.</source>
          <target state="translated">속성이 정적인 경우 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>Metadata for the property to retrieve.</source>
          <target state="translated">검색할 속성의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified property.</source>
          <target state="translated">지정된 속성의 검색을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>The instance from which to retrieve the navigation property.</source>
          <target state="translated">탐색 속성을 검색할 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>Metadata for the navigation property to retrieve.</source>
          <target state="translated">검색할 탐색 속성의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified navigation property.</source>
          <target state="translated">지정된 탐색 속성의 검색을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>The instance from which to retrieve the relationship end member.</source>
          <target state="translated">관계 End 멤버를 검색할 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the relationship end member to retrieve.</source>
          <target state="translated">검색할 관계 End 멤버의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified relationship end member.</source>
          <target state="translated">지정된 관계 End 멤버의 검색을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The instance from which to retrieve the property.</source>
          <target state="translated">속성을 검색할 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The name of the property to retrieve.</source>
          <target state="translated">검색할 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the instance property with the specified name from the given instance.</source>
          <target state="translated">주어진 인스턴스에서 지정된 이름을 가진 인스턴스 속성의 검색을 나타내는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>The Entity set in which the referenced element resides.</source>
          <target state="translated">참조된 요소가 상주하고 있는 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</source>
          <target state="translated">참조된 엔터티 형식의 키 속성과 개수, 형식 및 순서가 일치하는 열이 있는 레코드를 생성하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific Entity based on key values.</source>
          <target state="translated">키 값을 기반으로 특정 엔터티에 대한 참조를 인코딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>The Entity set in which the referenced element resides.</source>
          <target state="translated">참조된 요소가 상주하고 있는 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</source>
          <target state="translated">참조된 엔터티 형식의 키 속성과 개수, 형식 및 순서가 일치하는 열이 있는 레코드를 생성하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>The type of the Entity that the reference should refer to.</source>
          <target state="translated">참조가 참조해야 하는 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific Entity based on key values.</source>
          <target state="translated">키 값을 기반으로 특정 엔터티에 대한 참조를 인코딩하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source>Metadata for the entity or relationship set to reference.</source>
          <target state="translated">참조할 엔터티 또는 관계 집합의 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /&gt;</ph> that references the specified entity or relationship set.</source>
          <target state="translated">지정된 엔터티 또는 관계 집합을 참조하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The method result type of <bpt id="p1">&lt;c&gt;</bpt>projection<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">메서드 결과 형식 <bpt id="p1">&lt;c&gt;</bpt>프로젝션<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how to derive the projected expression given a member of the input set.</source>
          <target state="translated">입력 집합의 멤버에서 투영된 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with Select and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 SELECT와 호환되고 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>으로 확인될 수 있는 형식의 인스턴스를 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TProjection<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TProjection<ept id="p1">&lt;/c&gt;</ept>에 대한 호환성 요구 사항은 설명에 설명되어 있습니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that selects the specified expression over the given input set.</source>
          <target state="translated">주어진 입력 집합에 대해 지정된 식을 선택하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that represents the logic to evaluate once for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 한 번씩 확인할 논리를 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">지정된 입력 집합의 각 요소에 대해 주어진 <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> 식을 한 번씩 계산하고 해당 입력 및 apply 열로 행 컬렉션을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="apply" /&gt;</ph>가 빈 집합으로 계산되는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> is then created that selects the <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> column from each row, producing the overall collection of <ph id="ph3">&lt;paramref name="apply" /&gt;</ph> results.</source>
          <target state="translated">그러면 각 행에서 <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> 열을 선택하여 전체 <ph id="ph3">&lt;paramref name="apply" /&gt;</ph> 결과 컬렉션을 생성하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The method result type of <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">메서드 결과 형식 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that represents the logic to evaluate once for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 한 번씩 확인할 논리를 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</source>
          <target state="translated">결과 집합의 요소가 입력 및 apply 집합의 요소에서 파생되는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 SelectMany와 호환되고 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>으로 확인될 수 있는 형식의 인스턴스를 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept>에 대한 호환성 요구 사항은 설명 단원에 나와 있습니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">지정된 입력 집합의 각 요소에 대해 주어진 <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> 식을 한 번씩 계산하고 해당 입력 및 apply 열로 행 컬렉션을 생성하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="apply" /&gt;</ph>가 빈 집합으로 계산되는 행은 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> is then created that selects the specified <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> over each row, producing the overall collection of results.</source>
          <target state="translated">그러면 각 행에서 지정된 <ph id="ph2">&lt;paramref name="selector" /&gt;</ph>를 선택하여 전체 결과 컬렉션을 생성하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>A list of sort specifications that determine how the elements of the input set should be sorted.</source>
          <target state="translated">입력 집합의 요소를 정렬하는 방법을 결정하는 정렬 사양의 목록입니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies how many elements of the ordered set to skip.</source>
          <target state="translated">정렬된 집합에서 건너뛸 요소 수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</source>
          <target state="translated">지정된 수의 요소를 건너뛰기 전에 지정된 정렬 사양을 기준으로 입력 집합을 정렬하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that specifies the sorted input set.</source>
          <target state="translated">정렬된 입력 집합을 지정하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies how many elements of the ordered set to skip.</source>
          <target state="translated">정렬된 집합에서 건너뛸 요소 수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> that skips the specified number of elements from the given sorted input set.</source>
          <target state="translated">정렬된 입력 집합에서 지정된 수의 요소를 건너뛰는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식 바인딩입니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>A list of sort specifications that determine how the elements of the input set should be sorted.</source>
          <target state="translated">입력 집합의 요소를 정렬하는 방법을 결정하는 정렬 사양의 목록입니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort specifications.</source>
          <target state="translated">지정된 정렬 사양을 기준으로 주어진 입력 집합을 정렬하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input collection.</source>
          <target state="translated">입력 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the limit value.</source>
          <target state="translated">한계 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.</source>
          <target state="translated">인수 컬렉션의 요소 수를 지정된 개수 제한 값으로 제한하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Tied results are not included in the output.</source>
          <target state="translated">동급 결과는 출력에 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">순서가 지정된 입력 집합을 지정하는 DbSortExpression입니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 추가 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</source>
          <target state="translated">기본 데이터 정렬 및 오름차순의 지정된 정렬 키와 함께 지정된 정렬 입력 집합의 정렬 순서를 포함하는 정렬 순서를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">순서가 지정된 입력 집합을 지정하는 DbSortExpression입니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 추가 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">정렬에 사용할 데이터 정렬입니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</source>
          <target state="translated">지정된 데이터 정렬 및 오름차순의 지정된 정렬 키와 함께 지정된 정렬 입력 집합의 정렬 순서를 포함하는 정렬 순서를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">순서가 지정된 입력 집합을 지정하는 DbSortExpression입니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 추가 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</source>
          <target state="translated">기본 데이터 정렬 및 내림차순의 지정된 정렬 키와 함께 지정된 정렬 입력 집합의 정렬 순서를 포함하는 정렬 순서를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">순서가 지정된 입력 집합을 지정하는 DbSortExpression입니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">지정된 입력 집합의 멤버에서 추가 정렬 키 식을 파생시키는 방법을 지정하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">이 메서드는 정렬 키 정의를 제공하는 순서 비교 가능 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">정렬에 사용할 데이터 정렬입니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</source>
          <target state="translated">지정된 데이터 정렬 및 내림차순의 지정된 정렬 키와 함께 지정된 정렬 입력 집합의 정렬 순서를 포함하는 정렬 순서를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">정렬 키를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with an ascending sort order and default collation.</source>
          <target state="translated">오름차순 정렬 순서와 기본 데이터 정렬을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">정렬 키를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">정렬에 사용할 데이터 정렬입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with an ascending sort order and the specified collation.</source>
          <target state="translated">오름차순 정렬 순서와 지정된 데이터 정렬을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">정렬 키를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with a descending sort order and default collation.</source>
          <target state="translated">내림차순 정렬 순서와 기본 데이터 정렬을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">정렬 키를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">정렬에 사용할 데이터 정렬입니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with a descending sort order and the specified collation.</source>
          <target state="translated">내림차순 정렬 순서와 지정된 데이터 정렬을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">인스턴스를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the treat-as type.</source>
          <target state="translated">treat-as 형식의 형식 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that negates the value of the argument.</source>
          <target state="translated">인수의 값을 부정하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that computes the union of the left and right set arguments with duplicates removed.</source>
          <target state="translated">중복 항목을 제거하고 왼쪽 및 오른쪽 집합 인수의 합집합을 계산하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">왼쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">오른쪽 집합 인수를 정의하는 식입니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /&gt;</ph> that computes the union of the left and right set arguments and does not remove duplicates.</source>
          <target state="translated">왼쪽 및 오른쪽 집합 인수의 합집합을 계산하고 중복 항목을 제거하지 않는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The type of the referenced variable.</source>
          <target state="translated">참조된 변수의 형식입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The name of the referenced variable.</source>
          <target state="translated">참조되는 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph> that references a variable with the specified name and type.</source>
          <target state="translated">지정된 이름 및 형식으로 변수를 참조하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">입력 집합을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the predicate to evaluate for each member of the input set.</source>
          <target state="translated">입력 집합의 각 멤버에 대해 평가할 조건자를 나타내는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">이 메서드는 조건자 논리를 제공하는 부울 결과 형식이 포함된 식을 생성해야 합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> that filters the elements in the given input set using the specified predicate.</source>
          <target state="translated">지정된 조건자를 사용하여 주어진 입력 집합의 요소를 필터링하는 새 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">숫자 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</source>
          <target state="translated">결과 형식이 각각 숫자 형식이어야 하는 지정된 인수를 사용하여 정식 'Abs' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>value<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of days to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>에 추가할 일수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddDays' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of hours to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>에 추가할 시간(시)을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddHours' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of microseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>에 추가할 시간(마이크로초)을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddMicroseconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of milliseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>에 추가할 시간(밀리초)을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddMilliseconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of minutes to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>에 추가할 시간(분)을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddMinutes' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of months to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>에 추가할 월수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddMonths' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of nanoseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>에 추가할 시간(나노초)을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddNanoseconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of seconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>에 추가할 시간(초)을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddSeconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated"><bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>를 추가할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of years to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>에 추가할 연수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'AddYears' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the average value should be computed.</source>
          <target state="translated">평균값을 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Avg' function over the specified collection.</source>
          <target state="translated">지정한 컬렉션에 대해 정식 'Avg' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">식의 결과 형식은 컬렉션의 요소 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">첫 번째 피연산자를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">두 번째 피연산자를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">결과 형식이 동일한 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'BitwiseAnd' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">식의 결과 형식은 인수의 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">첫 번째 피연산자를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</source>
          <target state="translated">결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'BitwiseNot' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">식의 결과 형식은 인수의 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">첫 번째 피연산자를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">두 번째 피연산자를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">결과 형식이 동일한 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'BitwiseOr' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">식의 결과 형식은 인수의 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">첫 번째 피연산자를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">두 번째 피연산자를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">결과 형식이 동일한 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'BitwiseXor' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">식의 결과 형식은 인수의 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">숫자 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">결과 형식이 각각 single, double 또는 decimal 형식이어야 하는 지정된 인수를 사용하여 정식 'Ceiling' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>value<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear first in the concatenated result string.</source>
          <target state="translated">연결된 결과 문자열에서 첫 번째로 나타날 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear second in the concatenated result string.</source>
          <target state="translated">연결된 결과 문자열에서 두 번째로 나타날 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">결과 형식이 각각 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'Concat' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">식의 결과 형식은 string입니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for any occurence of <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept>이 있는지 검색할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for in <bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept>에서 검색할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">결과 형식이 각각 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'Contains' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">식의 결과 형식은 부울입니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">개수값을 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Count' function over the specified collection.</source>
          <target state="translated">지정한 컬렉션에 대해 정식 'Count' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day should be retrieved.</source>
          <target state="translated">일을 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'Day' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day within the year should be retrieved.</source>
          <target state="translated">연도 내의 일자를 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'DayOfYear' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">첫 번째 날짜 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">두 번째 날짜 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 각각 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'DiffDays' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">첫 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">두 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 각각 DateTime 또는 DateTimeOffset 또는 Time 결과 형식이어야 하는 지정된 인수를 사용하여 정식 'DiffHours' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">첫 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">두 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 각각 DateTime 또는 DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'DiffMicroseconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">첫 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">두 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 각각 DateTime, DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'DiffMilliseconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">첫 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">두 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 각각 DateTime 또는 DateTimeOffset 또는 Time 결과 형식이어야 하는 지정된 인수를 사용하여 정식 'DiffMinutes' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">첫 번째 날짜 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">두 번째 날짜 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 각각 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'DiffMonths' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">첫 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">두 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 각각 DateTime, DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'DiffNanoseconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">첫 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">두 번째 시간 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 각각 DateTime, DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'DiffSeconds' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">첫 번째 날짜 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">두 번째 날짜 값 인수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 각각 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'DiffYears' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the end for string <bpt id="p1">**</bpt>suffix<ept id="p1">**</ept>.</source>
          <target state="translated">끝 부분에서 <bpt id="p1">**</bpt>suffix<ept id="p1">**</ept> 문자열을 검색하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the end of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>의 끝 부분에서 검색하는 대상 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">결과 형식이 각각 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'EndsWith' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">식의 결과 형식은 부울입니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">숫자 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">결과 형식이 각각 single, double 또는 decimal 형식이어야 하는 지정된 인수를 사용하여 정식 'Floor' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>value<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</source>
          <target state="translated">GMT에서의 분 오프셋을 검색할 DateTimeOffset 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'GetTotalOffsetMinutes' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the hour should be retrieved.</source>
          <target state="translated">시간을 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'Hour' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept>에서 검색할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to locate within <bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> should be checked.</source>
          <target state="translated"><bpt id="p1">**</bpt>searchString<ept id="p1">**</ept>에서 찾을 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">결과 형식이 각각 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'IndexOf' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the leftmost substring.</source>
          <target state="translated">맨 왼쪽 부분 문자열을 추출할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the leftmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>에서 추출할 맨 왼쪽 부분 문자열의 길이를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">결과 형식이 문자열 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Left' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">식의 결과 형식은 string입니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string for which the length should be computed.</source>
          <target state="translated">길이를 계산해야 하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</source>
          <target state="translated">결과 형식이 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'Length' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">개수값을 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BigCount' function over the specified collection.</source>
          <target state="translated">지정한 컬렉션에 대해 정식 'BigCount' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int64.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int64입니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the maximum value should be retrieved</source>
          <target state="translated">최대값을 검색해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Max' function over the specified collection.</source>
          <target state="translated">지정한 컬렉션에 대해 정식 'Max' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">식의 결과 형식은 컬렉션의 요소 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the millisecond should be retrieved.</source>
          <target state="translated">밀리초를 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'Millisecond' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the minimum value should be retrieved.</source>
          <target state="translated">최소값을 검색해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Min' function over the specified collection.</source>
          <target state="translated">지정한 컬렉션에 대해 정식 'Min' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">식의 결과 형식은 컬렉션의 요소 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the minute should be retrieved.</source>
          <target state="translated">분을 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'Minute' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the month should be retrieved.</source>
          <target state="translated">월을 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'Month' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to raise to the given power.</source>
          <target state="translated">지정된 지수로 거듭제곱할 숫자 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the power to which <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> should be raised.</source>
          <target state="translated"><bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept>를 거듭제곱할 지수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</source>
          <target state="translated">결과 형식이 숫자 형식이어야 하는 지정된 인수를 사용하여 정식 'Power' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string in which to perform the replacement operation.</source>
          <target state="translated">바꾸기 작업을 수행할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is replaced.</source>
          <target state="translated">보고되는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the replacement string.</source>
          <target state="translated">대체 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">결과 형식이 각각 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'Replace' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">이 식의 결과 형식도 string입니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to reverse.</source>
          <target state="translated">반전할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</source>
          <target state="translated">결과 형식이 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'Reverse' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">이 식의 결과 형식도 string입니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the rightmost substring.</source>
          <target state="translated">맨 오른쪽 부분 문자열을 추출할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the rightmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>에서 추출할 맨 오른쪽 부분 문자열의 길이를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">결과 형식이 문자열 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Right' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">식의 결과 형식은 string입니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">반올림할 숫자 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">결과 형식이 각각 single, double 또는 decimal 형식이어야 하는 지정된 인수를 사용하여 정식 'Round' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>value<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">반올림할 숫자 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when rounding.</source>
          <target state="translated">반올림할 때 사용할 전체 자릿수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">결과 형식이 single, double 또는 decimal 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Round' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>value<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the second should be retrieved.</source>
          <target state="translated">초를 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">결과 형식이 DateTime, DateTimeOffset 또는 Time이어야 하는 지정된 인수를 사용하여 정식 'Second' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the start for string <bpt id="p1">**</bpt>prefix<ept id="p1">**</ept>.</source>
          <target state="translated">시작 부분에서 <bpt id="p1">**</bpt>접두사<ept id="p1">**</ept> 문자열을 검색하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the start of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>의 시작 부분에서 검색하는 대상 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">결과 형식이 각각 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'StartsWith' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">식의 결과 형식은 부울입니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">표준 편차를 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</source>
          <target state="translated">지정한 컬렉션의 null이 아닌 멤버에 대해 정식 'StDev' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">표준 편차를 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDevP' function over the population of the specified collection.</source>
          <target state="translated">지정한 컬렉션의 모집단에 대해 정식 'StDevP' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the substring.</source>
          <target state="translated">하위 문자열을 추출할 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the starting index from which the substring should be taken.</source>
          <target state="translated">하위 문자열을 가져올 시작 인덱스를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the substring.</source>
          <target state="translated">하위 문자열의 길이를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</source>
          <target state="translated">결과 형식이 문자열 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Substring' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">식의 결과 형식은 string입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the sum should be computed.</source>
          <target state="translated">합계를 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Sum' function over the specified collection.</source>
          <target state="translated">지정한 컬렉션에 대해 정식 'Sum' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">식의 결과 형식은 컬렉션의 요소 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to lower case.</source>
          <target state="translated">소문자로 변환해야 하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</source>
          <target state="translated">결과 형식이 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'ToLower' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">이 식의 결과 형식도 string입니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to upper case.</source>
          <target state="translated">대문자로 변환해야 하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</source>
          <target state="translated">결과 형식이 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'ToUpper' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">이 식의 결과 형식도 string입니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading and trailing space should be removed.</source>
          <target state="translated">선행 및 후행 공백을 제거해야 하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">결과 형식이 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'Trim' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">이 식의 결과 형식도 string입니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which trailing space should be removed.</source>
          <target state="translated">후행 공백을 제거해야 하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">결과 형식이 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'RTrim' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">이 식의 결과 형식도 string입니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading space should be removed.</source>
          <target state="translated">선행 공백을 제거해야 하는 문자열을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">결과 형식이 문자열 형식이어야 하는 지정된 인수를 사용하여 정식 'LTrim' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">이 식의 결과 형식도 string입니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to truncate.</source>
          <target state="translated">잘라낼 숫자 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when truncating.</source>
          <target state="translated">잘라낼 때 사용할 전체 자릿수를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">결과 형식이 single, double 또는 decimal 및 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Truncate' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>value<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value for which the time portion should be truncated.</source>
          <target state="translated">시간 부분을 잘라내야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'TruncateTime' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">식의 결과 형식은 <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">통계 분산을 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Var' function over the non-null members of the specified collection.</source>
          <target state="translated">지정한 컬렉션의 null이 아닌 멤버에 대해 정식 'Var' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">통계 분산을 계산해야 하는 컬렉션을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'VarP' function over the population of the specified collection.</source>
          <target state="translated">지정한 컬렉션의 모집단에 대해 정식 'VarP' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression Edm.Double.</source>
          <target state="translated">식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the year should be retrieved.</source>
          <target state="translated">연도를 검색해야 하는 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">결과 형식이 DateTime 또는 DateTimeOffset이어야 하는 지정된 인수를 사용하여 정식 'Year' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial surface value for which the area should be calculated.</source>
          <target state="translated">영역을 계산할 공간 표면 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Area' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'Area' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the well known binary representation should be produced.</source>
          <target state="translated">잘 알려진 이진 표현을 생성할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AsBinary' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'AsBinary' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Binary.</source>
          <target state="translated">식의 결과 형식은 Edm.Binary입니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the Geography Markup Language (GML) representation should be produced.</source>
          <target state="translated">GML(Geography Markup Language) 표현을 생성할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AsGml' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'AsGml' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.String.</source>
          <target state="translated">식의 결과 형식은 Edm.String입니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the well known text representation should be produced.</source>
          <target state="translated">잘 알려진 텍스트 표현을 생성할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AsText' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'AsText' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.String.</source>
          <target state="translated">식의 결과 형식은 Edm.String입니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry surface value from which the centroid should be retrieved.</source>
          <target state="translated">중앙을 검색할 기하학 표면 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Centroid' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Centroid' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the coordinate system id (SRID) should be retrieved.</source>
          <target state="translated">좌표계 ID(SRID)를 검색할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CoordinateSystemId' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'CoordinateSystemId' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the distance from <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be measured.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>을 측정할 거리의 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Distance' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'Distance' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial point value from which the elevation (Z co-ordinate) value should be retrieved.</source>
          <target state="translated">높이(Z 좌표) 값을 검색할 공간 점 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Elevation' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'Elevation' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the end point should be retrieved.</source>
          <target state="translated">끝점을 검색할 공간 곡선 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'EndPoint' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'EndPoint' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">기하 도형 값입니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ExteriorRing' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'ExteriorRing' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">기하 도형 값입니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the position of the interior ring to be retrieved from within the polygon.</source>
          <target state="translated">다각형 내에서 검색할 내부 링의 위치를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'InteriorRingAt' function with the specified arguments.</source>
          <target state="translated">지정된 인수를 사용하여 정식 'InteriorRingAt' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The first argument must have an Edm.Geometry result type.</source>
          <target state="translated">첫 번째 인수에는 Edm.Geometry 결과 형식을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The second argument must have an integer numeric result types.</source>
          <target state="translated">두 번째 인수에는 정수 결과 형식을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">기하 도형 값입니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'InteriorRingCount' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'InteriorRingCount' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the IsClosedSpatial value should be retrieved.</source>
          <target state="translated">IsClosedSpatial 값을 검색할 공간 곡선 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsClosedSpatial' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'IsClosedSpatial' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is Edm.Boolean.</source>
          <target state="translated">결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value from which the IsEmptySptiaal value should be retrieved.</source>
          <target state="translated">IsEmptySptiaal 값을 검색할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsEmptySpatial' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'IsEmptySpatial' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry curve value from which the IsRing value should be retrieved.</source>
          <target state="translated">IsRing 값을 검색할 기하학 곡선 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsRing' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'IsRing' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is Edm.Boolean.</source>
          <target state="translated">결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>The geometry value.</source>
          <target state="translated">기하 도형 값입니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsSimpleGeometry' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'IsSimpleGeometry' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value which should be tested for spatial validity.</source>
          <target state="translated">공간 유효성 검사를 테스트할 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IsValidGeometry' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'IsValidGeometry' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography point value from which the Latitude value should be retrieved.</source>
          <target state="translated">위도 값을 검색할 지리 점 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Latitude' function with the specified argument, which must have an Edm.Geography result type.</source>
          <target state="translated">Edm.Geography 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Latitude' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography point value from which the Longitude value should be retrieved.</source>
          <target state="translated">경도 값을 검색할 지리 점 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Longitude' function with the specified argument, which must have an Edm.Geography result type.</source>
          <target state="translated">Edm.Geography 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'Longitude' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial point value from which the Measure (M) co-ordinate value should be retrieved.</source>
          <target state="translated">측정값(M) 좌표 값을 검색할 공간 점 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Measure' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'Measure' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial line string value.</source>
          <target state="translated">공간 선 문자열 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the position of the point to be retrieved from within the line string.</source>
          <target state="translated">선 문자열 내에서 검색할 점의 위치를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'PointAt' function with the specified arguments.</source>
          <target state="translated">지정된 인수를 사용하여 정식 'PointAt' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The first argument must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">첫 번째 인수에는 Edm.Geography 또는 Edm.Geometry 결과 형식을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The second argument must have an integer numeric result type.</source>
          <target state="translated">두 번째 인수에는 정수 결과 형식을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">식의 결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial line string value from which the number of points should be retrieved.</source>
          <target state="translated">해당 개수의 점을 검색할 공간 선 문자열 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'PointCount' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'PointCount' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry surface value from which the point should be retrieved.</source>
          <target state="translated">점을 검색할 기하학 표면 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'PointOnSurface' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'PointOnSurface' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value from which the SpatialBoundary value should be retrieved.</source>
          <target state="translated">SpatialBoundary 값을 검색할 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialBoundary' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialBoundary' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value.</source>
          <target state="translated">공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the buffer distance.</source>
          <target state="translated">버퍼 거리를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialBuffer' function with the specified arguments, which must have a Edm.Geography or Edm.Geometry and Edm.Double result types.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry와 Edm.Double이어야 하는 정식 'SpatialBuffer' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">첫 번째 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>와 비교해야 하는 기하 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialContains' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialContains' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value from which the convex hull value should be retrieved.</source>
          <target state="translated">볼록 다각형 값을 검색할 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialConvexHull' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialConvexHull' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">첫 번째 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>와 비교해야 하는 기하 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialCrosses' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialCrosses' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the difference with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>과의 차이를 계산할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialDifference' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialDifference' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">식의 결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the Dimension value should be retrieved.</source>
          <target state="translated">차원 값을 검색할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialDimension' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialDimension' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> for disjointness.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>과 연결되어 있지 않은지 비교할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialDisjoint' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialDisjoint' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography or geometry collection value.</source>
          <target state="translated">지리 또는 기하 도형 컬렉션 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the position of the element to be retrieved from within the geometry or geography collection.</source>
          <target state="translated">기하 도형 또는 지리 컬렉션 내에서 검색할 요소의 위치를 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialElementAt' function with the specified arguments.</source>
          <target state="translated">지정된 인수를 사용하여 정식 'SpatialElementAt' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The first argument must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">첫 번째 인수에는 Edm.Geography 또는 Edm.Geometry 결과 형식을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The second argument must have an integer numeric result type.</source>
          <target state="translated">두 번째 인수에는 정수 결과 형식을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">식의 결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geography or geometry collection value from which the number of elements should be retrieved.</source>
          <target state="translated">해당 개수의 요소를 검색할 지리 또는 기하 도형 컬렉션 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialElementCount' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialElementCount' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Int32입니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the Envelope value should be retrieved.</source>
          <target state="translated">봉투 값을 검색할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialEnvelope' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geometry이어야 하는 지정된 인수를 사용하여 정식 'SpatialEnvelope' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Geometry.</source>
          <target state="translated">식의 결과 형식은 Edm.Geometry입니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> for equality.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>과 같은지 비교할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialEquals' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialEquals' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the intersection with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>과의 교집합 부분을 계산할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialIntersection' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialIntersection' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">식의 결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> for intersection.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>과 교차하는지 비교할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialIntersects' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialIntersects' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the length should be retrieved.</source>
          <target state="translated">길이를 검색할 공간 곡선 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialLength' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialLength' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">첫 번째 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>와 비교해야 하는 기하 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialOverlaps' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialOverlaps' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">첫 번째 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>와 비교해야 하는 기하 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the text representation of the Dimensionally Extended Nine-Intersection Model (DE-9IM) intersection pattern used to compare <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>geometryValue2<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept> 및 <bpt id="p2">&lt;c&gt;</bpt>geometryValue2<ept id="p2">&lt;/c&gt;</ept>를 비교하는 데 사용되는 DE-9IM(Dimensionally Extended Nine-Intersection Model) 교차 패턴의 텍스트 표현을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialRelate' function with the specified arguments, which must have Edm.Geometry and string result types.</source>
          <target state="translated">Edm.Geometry 및 문자열 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialRelate' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the symmetric difference with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>과의 대칭차를 계산할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialSymmetricDifference' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialSymmetricDifference' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">식의 결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">첫 번째 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>와 비교해야 하는 기하 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialTouches' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialTouches' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the Geometry Type name should be retrieved.</source>
          <target state="translated">기하 도형 형식 이름을 검색할 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialTypeName' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialTypeName' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.String.</source>
          <target state="translated">식의 결과 형식은 Edm.String입니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first spatial value.</source>
          <target state="translated">첫 번째 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial value for which the union with <bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept> should be computed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>spatialValue1<ept id="p1">&lt;/c&gt;</ept>과의 합집합 부분을 계산할 공간 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialUnion' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 각각 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'SpatialUnion' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> must match the result type of <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph>의 결과 형식은 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 일치해야 합니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>.</source>
          <target state="translated">식의 결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue1" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="spatialValue2" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first geometry value.</source>
          <target state="translated">첫 번째 기하 도형 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry value that should be compared with <bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>geometryValue1<ept id="p1">&lt;/c&gt;</ept>와 비교해야 하는 기하 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'SpatialWithin' function with the specified arguments, which must each have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'SpatialWithin' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Boolean.</source>
          <target state="translated">식의 결과 형식은 Edm.Boolean입니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the spatial curve value from which the start point should be retrieved.</source>
          <target state="translated">시작점을 검색할 공간 곡선 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StartPoint' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type.</source>
          <target state="translated">결과 형식이 Edm.Geography 또는 Edm.Geometry여야 하는 정식 'StartPoint' 함수를 지정된 인수를 사용하여 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type is the same as that of <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>.</source>
          <target state="translated">결과 형식은 <ph id="ph1">&lt;paramref name="spatialValue" /&gt;</ph>의 결과 형식과 같습니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry point value from which the X co-ordinate value should be retrieved.</source>
          <target state="translated">X 좌표 값을 검색할 기하 도형 점 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'XCoordinate' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'XCoordinate' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the geometry point value from which the Y co-ordinate value should be retrieved.</source>
          <target state="translated">Y 좌표 값을 검색할 기하 도형 점 값을 지정하는 식입니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'YCoordinate' function with the specified argument, which must have an Edm.Geometry result type.</source>
          <target state="translated">Edm.Geometry 결과 형식이 정수 형식이어야 하는 지정된 인수를 사용하여 정식 'YCoordinate' 함수를 호출하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">이 식의 결과 형식은 Edm.Double입니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to be checked for column schema support.</source>
          <target state="translated">열 스키마 지원에 대해 확인할 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> can get a column schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>에서 열 스키마를 가져올 수 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to return the column schema.</source>
          <target state="translated">열 스키마를 반환하는 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
          <source>Gets the column schema (<ph id="ph1">&lt;see cref="T:System.Data.Common.DbColumn" /&gt;</ph> collection) for a <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>에 대한 열 스키마(<ph id="ph1">&lt;see cref="T:System.Data.Common.DbColumn" /&gt;</ph> 컬렉션)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> object that specifies the column to return the value of.</source>
          <target state="translated">값을 반환할 열을 지정하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> object that specifies the column to return the value of.</source>
          <target state="translated">값을 반환할 열을 지정하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> enumeration that specifies the version of the column value to return, such as <ph id="ph2">&lt;see langword="Current" /&gt;</ph> or <ph id="ph3">&lt;see langword="Original" /&gt;</ph> version.</source>
          <target state="translated">반환할 열 값의 버전을 지정하는 <ph id="ph2">&lt;see langword="Current" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Original" /&gt;</ph> 버전 등의 <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>The column index.</source>
          <target state="translated">열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>The zero-based ordinal of the column to return the value of.</source>
          <target state="translated">값을 반환할 열의 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> enumeration that specifies the version of the column value to return, such as <ph id="ph2">&lt;see langword="Current" /&gt;</ph> or <ph id="ph3">&lt;see langword="Original" /&gt;</ph> version.</source>
          <target state="translated">반환할 열 값의 버전을 지정하는 <ph id="ph2">&lt;see langword="Current" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Original" /&gt;</ph> 버전 등의 <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>The name of the column to return the value of.</source>
          <target state="translated">값을 반환할 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>A generic parameter that specifies the return type of the column.</source>
          <target state="translated">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>The name of the column to return the value of.</source>
          <target state="translated">값을 반환할 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> enumeration that specifies the version of the column value to return, such as <ph id="ph2">&lt;see langword="Current" /&gt;</ph> or <ph id="ph3">&lt;see langword="Original" /&gt;</ph> version.</source>
          <target state="translated">반환할 열 값의 버전을 지정하는 <ph id="ph2">&lt;see langword="Current" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Original" /&gt;</ph> 버전 등의 <ph id="ph1">&lt;see cref="T:System.Data.DataRowVersion" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>Provides strongly-typed access to each of the column values in the specified row.</source>
          <target state="translated">지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>A generic parameter that specifies the value type of the column.</source>
          <target state="translated">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> specifies which row value to retrieve.</source>
          <target state="translated">입력 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>은 검색할 행 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The new row value for the specified column, of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">지정된 열의 새 행 값(<bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 형식)입니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>Sets a new value for the specified column in the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에서 지정된 열의 새 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>A generic parameter that specifies the value type of the column.</source>
          <target state="translated">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The zero-based ordinal of the column to set the value of.</source>
          <target state="translated">값을 설정할 열의 서수(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The new row value for the specified column, of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">지정된 열의 새 행 값(<bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 형식)입니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>Sets a new value for the specified column in the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> the method is called on.</source>
          <target state="translated">메서드가 호출된 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에서 지정된 열의 새 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>A generic parameter that specifies the value type of the column.</source>
          <target state="translated">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>, which acts as the <ph id="ph2">&lt;see langword="this" /&gt;</ph> instance for the extension method.</source>
          <target state="translated">확장 메서드에서 <ph id="ph2">&lt;see langword="this" /&gt;</ph> 인스턴스 역할을 하는 입력 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The name of the column to set the value of.</source>
          <target state="translated">값을 설정할 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The new row value for the specified column, of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">지정된 열의 새 행 값(<bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 형식)입니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>Sets a new value for the specified column in the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에서 지정된 열의 새 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /&gt;</ph> method also supports nullable types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /&gt;</ph> 메서드는 nullable 형식도 지원합니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from which the LINQ-enabled <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph> is created.</source>
          <target state="translated">LINQ 사용 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>를 만드는 데 사용할 소스 <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
          <source>Creates and returns a LINQ-enabled <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> object.</source>
          <target state="translated">LINQ 사용 <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> 개체를 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">소스 시퀀스의 개체 형식(일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
          <source>The source <ph id="ph1">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> query from which the LINQ-enabled <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph> is created.</source>
          <target state="translated">LINQ 사용 <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph>를 만드는 데 사용할 소스 <ph id="ph1">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
          <source>Creates and returns a LINQ-enabled <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> object representing the <ph id="ph2">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> query.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]</ph> 쿼리를 나타내는 LINQ 사용 <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> 개체를 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to make enumerable.</source>
          <target state="translated">열거 가능하게 만들 소스 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object, where the generic parameter <ph id="ph2">&lt;paramref name="T" /&gt;</ph> is <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 개체를 반환하며, 제네릭 매개 변수 <ph id="ph2">&lt;paramref name="T" /&gt;</ph>는 <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
          <source>This object can be used in a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> expression or method query.</source>
          <target state="translated">이 개체는 <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> 식 또는 메서드 쿼리에 사용될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">소스 시퀀스의 개체 형식(일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains copies of the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects, given an input <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object where the generic parameter <ph id="ph4">&lt;paramref name="T" /&gt;</ph> is <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">제네릭 매개 변수 <ph id="ph4">&lt;paramref name="T" /&gt;</ph>가 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>인 지정된 입력 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 개체를 사용하여 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 개체의 복사본이 들어 있는 <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">소스 시퀀스의 개체 형식(일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that specifies the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> load options.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 로드 옵션을 지정하는 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, given an input <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object where the generic parameter <ph id="ph4">&lt;paramref name="T" /&gt;</ph> is <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">제네릭 매개 변수 <ph id="ph4">&lt;paramref name="T" /&gt;</ph>가 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>인 지정된 입력 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체를 사용하여 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 개체를 지정된 <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에 복사합니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The type of objects in the source sequence, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">소스 시퀀스의 개체 형식(일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> sequence.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that specifies the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> load options.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 로드 옵션을 지정하는 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> delegate that represents the method that will handle an error.</source>
          <target state="translated">오류를 처리할 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, given an input <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> object where the generic parameter <ph id="ph4">&lt;paramref name="T" /&gt;</ph> is <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">제네릭 매개 변수 <ph id="ph4">&lt;paramref name="T" /&gt;</ph>가 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>인 지정된 입력 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 개체를 사용하여 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 개체를 지정된 <ph id="ph5">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에 복사합니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:System.Data.Entity.Design.MetadataExtensionMethods.GetPrimitiveTypes(System.Data.Metadata.Edm.EdmItemCollection,System.Version)">
          <source>The item collection from which to retrieve the list of primitive types</source>
          <target state="translated">기본 형식 목록을 검색할 항목 컬렉션</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Data.Entity.Design.MetadataExtensionMethods.GetPrimitiveTypes(System.Data.Metadata.Edm.EdmItemCollection,System.Version)">
          <source>The version of edm to use</source>
          <target state="translated">사용할 edm 버전</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Data.Entity.Design.MetadataExtensionMethods.GetPrimitiveTypes(System.Data.Metadata.Edm.EdmItemCollection,System.Version)">
          <source>Get the list of primitive types for the given version of Edm</source>
          <target state="translated">지정된 Edm 버전에 대한 기본 형식의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>The type to convert the elements of source to.</source>
          <target state="translated">소스의 요소를 변환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> that contains the elements to be converted.</source>
          <target state="translated">변환할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>Converts the elements of an <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> to the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 요소를 지정된 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키에 따라 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키 및 비교자에 따라 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키에 따라 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키 및 비교자에 따라 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type that <bpt id="p1">&lt;c&gt;</bpt>TRow<ept id="p1">&lt;/c&gt;</ept> will be transformed into.</source>
          <target state="translated">유형에 <bpt id="p1">&lt;c&gt;</bpt>TRow<ept id="p1">&lt;/c&gt;</ept> 으로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to invoke a transform function upon.</source>
          <target state="translated">변환 함수를 호출할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Projects each element of an <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> into a new form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph>의 각 요소를 새 폼에 투영합니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키에 따라 오름차순으로 두 번째로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in ascending order according to the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키 및 비교자에 따라 오름차순으로 두 번째로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키에 따라 내림차순으로 두 번째로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a secondary ordering of the rows of a <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> in descending order according to the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph>의 행을 지정된 키 및 비교자에 따라 내림차순으로 두 번째로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to filter.</source>
          <target state="translated">필터링할 <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of rows based on the specified predicate.</source>
          <target state="translated">지정된 조건자에 따라 행 시퀀스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 API는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>The type to convert the elements of the source to.</source>
          <target state="translated">소스의 요소를 변환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> to make enumerable.</source>
          <target state="translated">열거 가능하게 만들 소스 <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>Enumerates the data row elements of the <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> and returns an <ph id="ph2">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> object, where the generic parameter <ph id="ph3">&lt;paramref name="T" /&gt;</ph> is <ph id="ph4">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph>의 데이터 행 요소를 열거하고 <ph id="ph2">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> 개체를 반환합니다. 여기에서 제네릭 매개 변수 <ph id="ph3">&lt;paramref name="T" /&gt;</ph>는 <ph id="ph4">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>This object can be used in a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> expression or method query.</source>
          <target state="translated">이 개체는 <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> 식 또는 메서드 쿼리에 사용될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>The type of the elements or the row.</source>
          <target state="translated">요소 또는 행의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>An enumerable object to return an element from.</source>
          <target state="translated">요소를 반환할 열거 가능한 개체입니다.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">검색할 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>Returns the element at a specified row in a sequence or a default value if the row is out of range.</source>
          <target state="translated">시퀀스에서 지정된 행의 요소를 반환하거나, 행이 범위를 벗어나면 기본 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in ascending order according to the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph>의 행을 지정된 키에 따라 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in ascending order according to the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph>의 행을 지정된 키 및 비교자에 따라 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in descending order according to the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph>의 행을 지정된 키에 따라 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, 일반적으로 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">순서를 지정할 <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in descending order according to the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph>의 행을 지정된 키 및 비교자에 따라 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to invoke a transformation function upon.</source>
          <target state="translated">변환 함수를 호출할 <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A transformation function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변환 함수입니다.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Projects each element of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> into a new form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph>의 각 요소를 새 폼에 프로젝션합니다.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">행 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to filter.</source>
          <target state="translated">필터링할 <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> 요소가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of rows based on the specified predicate.</source>
          <target state="translated">지정된 조건자에 따라 행 시퀀스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">스택 프레임입니다.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)">
          <source>Returns a pointer to the base address of the native image that this stack frame is executing.</source>
          <target state="translated">이 스택 프레임이 실행되는 네이티브 이미지의 기준 주소에 대한 포인터를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">스택 프레임입니다.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)">
          <source>Gets an interface pointer to the start of the native code for the method that is being executed.</source>
          <target state="translated">실행되는 메서드에 대한 네이티브 코드의 시작 부분에 대한 인터페이스 포인터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">스택 프레임입니다.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)">
          <source>Indicates whether an offset from the start of the IL code for the method that is executing is available.</source>
          <target state="translated">실행 중인 메서드의 IL 코드 처음부터 오프셋을 사용할 수 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">스택 프레임입니다.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)">
          <source>Indicates whether information about the method in which the specified frame is executing is available.</source>
          <target state="translated">지정된 프레임이 실행되는 메서드에 대한 정보를 사용할 수 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">스택 프레임입니다.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)">
          <source>Indicates whether the native image is available for the specified stack frame.</source>
          <target state="translated">네이티브 이미지를 지정한 스택 프레임에 사용할 수 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
          <source>A stack frame.</source>
          <target state="translated">스택 프레임입니다.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)">
          <source>Indicates whether the file that contains the code that the specified stack frame is executing is available.</source>
          <target state="translated">지정한 스택 프레임이 실행되는 코드가 포함된 파일을 사용할 수 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source>An object that supports culture-sensitive string comparison.</source>
          <target state="translated">문화권 구분 문자열 비교를 지원하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source>A value that defines how strings should be compared.</source>
          <target state="translated">문자열을 비교하는 방법을 정의하는 값입니다.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> is either the enumeration value <ph id="ph2">&lt;see cref="F:System.Globalization.CompareOptions.Ordinal" /&gt;</ph>, the enumeration value <ph id="ph3">&lt;see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph4">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreCase" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" /&gt;</ph>, <ph id="ph7">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /&gt;</ph>, <ph id="ph8">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /&gt;</ph>, and <ph id="ph9">&lt;see cref="F:System.Globalization.CompareOptions.StringSort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="options" /&gt;</ph>는 열거형 값 <ph id="ph2">&lt;see cref="F:System.Globalization.CompareOptions.Ordinal" /&gt;</ph>, 열거형 값 <ph id="ph3">&lt;see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreCase" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" /&gt;</ph>, <ph id="ph7">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /&gt;</ph>, <ph id="ph8">&lt;see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /&gt;</ph> 및 <ph id="ph9">&lt;see cref="F:System.Globalization.CompareOptions.StringSort" /&gt;</ph> 값 중 하나 이상의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> object based on the culture-sensitive string comparison rules of a specified <ph id="ph2">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph> object.</source>
          <target state="translated">지정한 <ph id="ph2">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph> 개체의 문화권 구분 문자열 비교 규칙에 따라 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>The zip archive to add the file to.</source>
          <target state="translated">파일을 추가할 zip 보관 위치입니다.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>The path to the file to be archived.</source>
          <target state="translated">보관할 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">상대 경로 또는 절대 경로를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>The name of the entry to create in the zip archive.</source>
          <target state="translated">zip 보관 위치에 만들 항목의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)">
          <source>Archives a file by compressing it and adding it to the zip archive.</source>
          <target state="translated">파일을 압축하고 ZIP 보관 위치에 추가하여 보관합니다.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>The zip archive to add the file to.</source>
          <target state="translated">파일을 추가할 zip 보관 위치입니다.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>The path to the file to be archived.</source>
          <target state="translated">보관할 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">상대 경로 또는 절대 경로를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>The name of the entry to create in the zip archive.</source>
          <target state="translated">zip 보관 위치에 만들 항목의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry.</source>
          <target state="translated">항목을 만들 때 속도 또는 압축 효율을 강조할지를 나타내는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)">
          <source>Archives a file by compressing it using the specified compression level and adding it to the zip archive.</source>
          <target state="translated">지정된 압축 수준을 사용하여 압축하고 zip 보관 저장소에 추가하여 파일을 보관합니다.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>The zip archive to extract files from.</source>
          <target state="translated">파일을 추출할 zip 보관 파일입니다.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>The path to the directory to place the extracted files in.</source>
          <target state="translated">추출된 파일을 배치할 디렉터리에 대한 경로입니다.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">상대 경로 또는 절대 경로를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)">
          <source>Extracts all the files in the zip archive to a directory on the file system.</source>
          <target state="translated">Zip 보관 파일의 모든 파일을 파일 시스템의 디렉터리에 추출합니다.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>The zip archive entry to extract a file from.</source>
          <target state="translated">파일을 추출하는 zip 보관 항목입니다.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>The path of the file to create from the contents of the entry.</source>
          <target state="translated">항목의 콘텐츠에서 만들 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>You can  specify either a relative or an absolute path.</source>
          <target state="translated">상대 경로 또는 절대 경로를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)">
          <source>Extracts an entry in the zip archive to a file.</source>
          <target state="translated">ZIP 보관 파일의 항목을 파일에 추출합니다.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>The zip archive entry to extract a file from.</source>
          <target state="translated">파일을 추출하는 zip 보관 항목입니다.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>The path of the file to create from the contents of the entry.</source>
          <target state="translated">항목의 콘텐츠에서 만들 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>You can specify either a relative or an absolute path.</source>
          <target state="translated">상대 경로 또는 절대 경로를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>A relative path is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to overwrite an existing file that has the same name as the destination file; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">대상 파일과 동일한 이름의 기존 파일을 덮어쓰려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)">
          <source>Extracts an entry in the zip archive to a file, and optionally overwrites an existing file that has the same name.</source>
          <target state="translated">zip 보관 항목을 파일로 추출하고 필요에 따라 동일한 이름을 가진 기존 파일을 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to aggregate over.</source>
          <target state="translated">집계할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 누적기 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to aggregate over.</source>
          <target state="translated">집계할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 누적기 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
          <source>The specified seed value is used as the initial accumulator value.</source>
          <target state="translated">지정된 시드 값은 초기 누적기 값으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">결과 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to aggregate over.</source>
          <target state="translated">집계할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">최종 누적기 값을 결과 값으로 변형하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 누적기 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</source>
          <target state="translated">지정된 시드 값은 초기 누적기 값으로 사용되고 지정된 함수는 결과 값을 선택하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the elements to apply the predicate to.</source>
          <target state="translated">조건자를 적용할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Determines whether all elements of a sequence satisfy a condition.</source>
          <target state="translated">시퀀스의 모든 요소가 특정 조건에 맞는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to check for emptiness.</source>
          <target state="translated">비어 있는지 확인할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Determines whether a sequence contains any elements.</source>
          <target state="translated">시퀀스에 요소가 하나라도 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to apply the predicate to.</source>
          <target state="translated">요소에 조건자를 적용할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Determines whether any element of a sequence satisfies a condition.</source>
          <target state="translated">시퀀스에 특정 조건에 맞는 요소가 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>A sequence of values.</source>
          <target state="translated">값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to append to <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>에 추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Appends a value to the end of the sequence.</source>
          <target state="translated">시퀀스의 끝에 값을 추가합니다.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to type as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 형식화할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the input typed as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 형식화된 입력을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of source.</source>
          <target state="translated">소스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
          <source>The type to cast the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated">요소를 캐스팅할 형식을 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept> 하 합니다.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> that contains the elements to be cast to type <bpt id="p1">&lt;c&gt;</bpt>TResult<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TResult<ept id="p1">&lt;/c&gt;</ept> 형식으로 캐스팅할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
          <source>Casts the elements of an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> to the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>의 요소를 지정된 형식으로 캐스팅합니다.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The first sequence to concatenate.</source>
          <target state="translated">연결할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to concatenate to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 연결할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Concatenates two sequences.</source>
          <target state="translated">두 시퀀스를 연결합니다.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">값을 찾을 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to locate in the sequence.</source>
          <target state="translated">시퀀스에서 찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Determines whether a sequence contains a specified element by using the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 사용하여 시퀀스에 지정된 요소가 들어 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">값을 찾을 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value to locate in the sequence.</source>
          <target state="translated">시퀀스에서 찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An equality comparer to compare values.</source>
          <target state="translated">값을 비교할 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether a sequence contains a specified element by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 시퀀스에 지정된 요소가 들어 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the number of elements in a sequence.</source>
          <target state="translated">시퀀스의 요소 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be tested and counted.</source>
          <target state="translated">테스트하여 개수를 셀 요소가 들어 있는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns a number that represents how many elements in the specified sequence satisfy a condition.</source>
          <target state="translated">지정된 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 숫자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to return a default value for if it is empty.</source>
          <target state="translated">비어 있는 경우 기본값을 반환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</source>
          <target state="translated">지정된 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 형식 매개 변수의 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The sequence to return the specified value for if it is empty.</source>
          <target state="translated">비어 있는 경우 지정된 값을 반환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to return if the sequence is empty.</source>
          <target state="translated">시퀀스가 비어 있는 경우에 반환할 값입니다.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">지정된 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 지정된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">중복 요소를 제거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns distinct elements from a sequence by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 시퀀스에서 고유 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">중복 요소를 제거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Returns distinct elements from a sequence by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 시퀀스에서 고유 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">검색할 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence.</source>
          <target state="translated">시퀀스에서 지정된 인덱스의 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">검색할 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence or a default value if the index is out of range.</source>
          <target state="translated">시퀀스에서 지정된 인덱스의 요소를 반환하거나, 인덱스가 범위를 벗어나면 기본 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에 없는 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">첫 번째 시퀀스에 해당 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set difference of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 두 시퀀스의 차집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에 없는 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">첫 번째 시퀀스에 해당 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set difference of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 두 시퀀스의 차집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">첫 번째 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the first element of a sequence.</source>
          <target state="translated">시퀀스의 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">첫 번째 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the first element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">시퀀스에서 특정 조건에 맞는 첫 번째 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Groups the elements of a sequence according to a specified key selector function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 지정된 비교자로 키를 비교하여 시퀀스의 요소를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph> 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to map each source element to an element in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 그룹화하고 지정된 함수를 사용하여 각 그룹의 요소를 투영합니다.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph> 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a key selector function.</source>
          <target state="translated">키 선택기 함수에 따라 시퀀스의 요소를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a comparer and each group's elements are projected by using a specified function.</source>
          <target state="translated">키는 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys with.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a specified comparer.</source>
          <target state="translated">키는 지정된 비교자를 통해 비교됩니다.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The elements of each group are projected by using a specified function.</source>
          <target state="translated">각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys with.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</source>
          <target state="translated">키 값은 지정된 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>Correlates the elements of two sequences based on equality of keys and groups the results.</source>
          <target state="translated">키가 같은지 여부에 따라 두 시퀀스의 요소를 연관시키고 결과를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">기본 같음 비교자를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">키를 해시하여 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">키가 같은지 여부에 따라 두 시퀀스의 요소를 연관시키고 결과를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에도 있는 고유 요소가 반환되는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set intersection of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 두 시퀀스의 교집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에도 있는 고유 요소가 반환되는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set intersection of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 두 시퀀스의 교집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">일치하는 키를 기준으로 두 시퀀스의 요소를 연관시킵니다.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">기본 같음 비교자를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">키를 해시하여 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">일치하는 키를 기준으로 두 시퀀스의 요소를 연관시킵니다.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">마지막 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the last element of a sequence.</source>
          <target state="translated">시퀀스의 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a specified condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">마지막 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">시퀀스에서 특정 조건에 맞는 마지막 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the total number of elements in a sequence.</source>
          <target state="translated">시퀀스의 총 요소 수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents how many elements in a sequence satisfy a condition.</source>
          <target state="translated">시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Returns the maximum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Returns the maximum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the maximum value in a generic sequence.</source>
          <target state="translated">제네릭 시퀀스의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Invokes a transform function on each element of a sequence and returns the maximum <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Invokes a transform function on each element of a generic sequence and returns the maximum resulting value.</source>
          <target state="translated">제네릭 시퀀스의 각 요소에 대해 변형 함수를 호출하고 최대 결과 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Returns the minimum value in a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Returns the minimum value in a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the minimum value in a generic sequence.</source>
          <target state="translated">제네릭 시퀀스의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Invokes a transform function on each element of a sequence and returns the minimum <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Invokes a transform function on each element of a generic sequence and returns the minimum resulting value.</source>
          <target state="translated">제네릭 시퀀스의 각 요소에 대해 변형 함수를 호출하고 최소 결과 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
          <source>The type to filter the elements of the sequence on.</source>
          <target state="translated">시퀀스의 요소를 필터링할 형식입니다.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> whose elements to filter.</source>
          <target state="translated">요소를 필터링할 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
          <source>Filters the elements of an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> based on a specified type.</source>
          <target state="translated">지정된 형식에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>의 요소를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Sorts the elements of a sequence in ascending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">지정된 비교자를 사용하여 시퀀스의 요소를 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Sorts the elements of a sequence in descending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in descending order by using a specified comparer.</source>
          <target state="translated">지정된 비교자를 사용하여 시퀀스의 요소를 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The type of the elements of <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>A sequence of values.</source>
          <target state="translated">값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>The value to prepend to <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> 앞에 추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
          <source>Adds a value to the beginning of the sequence.</source>
          <target state="translated">시퀀스의 시작 부분에 값을 추가합니다.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence of values to reverse.</source>
          <target state="translated">반전할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Inverts the order of the elements in a sequence.</source>
          <target state="translated">시퀀스의 요소 순서를 반전합니다.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">변형 함수를 호출할 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Projects each element of a sequence into a new form.</source>
          <target state="translated">시퀀스의 각 요소를 새 폼에 투영합니다.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">변형 함수를 호출할 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
          <source>Projects each element of a sequence into a new form by incorporating the element's index.</source>
          <target state="translated">요소의 인덱스를 통합하여 시퀀스의 각 요소를 새 폼에 투영합니다.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 시퀀스의 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and flattens the resulting sequences into one sequence.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 시퀀스의 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, and flattens the resulting sequences into one sequence.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The index of each source element is used in the projected form of that element.</source>
          <target state="translated">각 소스 요소의 인덱스는 해당 요소의 투영된 폼에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 의해 수집 된 중간 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the intermediate sequence.</source>
          <target state="translated">중간 시퀀스의 각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 의해 수집 된 중간 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the intermediate sequence.</source>
          <target state="translated">중간 시퀀스의 각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The index of each source element is used in the intermediate projected form of that element.</source>
          <target state="translated">각 소스 요소의 인덱스는 해당 요소의 투영된 중간 폼에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>와 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스와 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Determines whether two sequences are equal by comparing the elements by using the default equality comparer for their type.</source>
          <target state="translated">해당 형식에 대한 기본 같음 비교자를 통해 요소를 비교하여 두 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>와 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to compare to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스와 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to use to compare elements.</source>
          <target state="translated">요소를 비교하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether two sequences are equal by comparing their elements by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 통해 요소를 비교하여 두 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">시퀀스의 유일한 요소를 반환하고, 시퀀스에 요소가 정확히 하나 들어 있지 않으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하고, 이러한 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">시퀀스의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하거나 이러한 요소가 없으면 기본값을 반환합니다. 조건에 맞는 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The number of elements to skip before returning the remaining elements.</source>
          <target state="translated">나머지 요소를 반환하기 전에 건너뛸 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Bypasses a specified number of elements in a sequence and then returns the remaining elements.</source>
          <target state="translated">시퀀스에서 지정된 수의 요소를 건너뛴 다음 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">지정된 조건이 true이면 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">지정된 조건이 true이면 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A sequence of values that are used to calculate a sum.</source>
          <target state="translated">합을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>The number of elements to return.</source>
          <target state="translated">반환할 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
          <source>Returns a specified number of contiguous elements from the start of a sequence.</source>
          <target state="translated">시퀀스 시작 위치에서 지정된 수의 연속 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">지정된 조건이 true인 동안 시퀀스에서 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">지정된 조건이 true인 동안 시퀀스에서 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 오름차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">시퀀스의 요소를 지정된 비교자를 사용하여 오름차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 내림차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</source>
          <target state="translated">시퀀스의 요소를 지정된 비교자를 사용하여 내림차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create an array from.</source>
          <target state="translated">배열을 만드는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates an array from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 사용하여 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 만들기 위한 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the keys returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 되는 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 만들기 위한 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">지정된 키 선택기 함수와 키 비교자에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 만들기 위한 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">지정된 키 선택기와 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 만들기 위한 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function, a comparer, and an element selector function.</source>
          <target state="translated">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>을 만들기 위한 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>을 만들기 위한 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> using the <ph id="ph3">&lt;paramref name="comparer" /&gt;</ph> to compare keys</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="comparer" /&gt;</ph>를 사용하여 키를 비교하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.HashSet`1" /&gt;</ph>를 생성합니다.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 만드는 데 사용할 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 만드는 데 사용할 <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 만드는 데 사용할 <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">지정된 키 선택기 함수와 키 비교자에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 만드는 데 사용할 <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">지정된 키 선택기와 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to create a <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 만드는 데 사용할 <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> according to a specified key selector function, a comparer and an element selector function.</source>
          <target state="translated">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the first set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the second set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 두 번째 집합을 이루는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set union of two sequences by using the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 사용하여 두 시퀀스의 합집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the first set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements form the second set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 두 번째 집합을 이루는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set union of two sequences by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 두 시퀀스의 합집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to filter.</source>
          <target state="translated">필터링할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">조건자에 따라 값의 시퀀스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to filter.</source>
          <target state="translated">필터링할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">조건자에 따라 값의 시퀀스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Each element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 각 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the first input sequence.</source>
          <target state="translated">첫 번째 입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the second input sequence.</source>
          <target state="translated">두 번째 입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the result sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The first sequence to merge.</source>
          <target state="translated">병합할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>The second sequence to merge.</source>
          <target state="translated">병합할 두 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>A function that specifies how to merge the elements from the two sequences.</source>
          <target state="translated">두 시퀀스의 요소를 병합하는 방법을 지정하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" uid="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>Applies a specified function to the corresponding elements of two sequences, producing a sequence of the results.</source>
          <target state="translated">지정된 함수를 두 시퀀스의 해당 요소에 적용하여 결과 시퀀스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>The collection to apply the function to.</source>
          <target state="translated">함수를 적용할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">누적 방식으로 각 요소에서 호출할 함수입니다.</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">누적 방식으로 요소의 시퀀스에 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The type of the accumulated value.</source>
          <target state="translated">누적된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The collection to apply the function to.</source>
          <target state="translated">함수를 적용할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">누적 방식으로 각 요소에서 호출할 함수입니다.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">누적 방식으로 요소의 시퀀스에 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of the accumulated value.</source>
          <target state="translated">누적된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of result returned by the result selector.</source>
          <target state="translated">결과 선택기에서 반환되는 결과의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The collection to apply the function to.</source>
          <target state="translated">함수를 적용할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>A function to be invoked on each element, in a cumulative way.</source>
          <target state="translated">누적 방식으로 각 요소에서 호출할 함수입니다.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})">
          <source>Applies a function to a sequence of elements in a cumulative way.</source>
          <target state="translated">누적 방식으로 요소의 시퀀스에 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to check for matches.</source>
          <target state="translated">일치하는 항목을 확인할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The predicate.</source>
          <target state="translated">조건자입니다.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Gets a value indicating whether all elements in this array match a given condition.</source>
          <target state="translated">이 배열의 모든 요소가 지정된 조건과 일치하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to check for elements.</source>
          <target state="translated">요소를 확인할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Gets a value indicating whether the array contains any elements.</source>
          <target state="translated">배열에 요소가 들어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to check for elements.</source>
          <target state="translated">요소를 확인할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the condition to match to an element.</source>
          <target state="translated">요소와 일치시킬 조건을 정의하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Gets a value indicating whether the array contains any elements that match a specified condition.</source>
          <target state="translated">배열에 지정된 조건과 일치하는 요소가 들어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of elements in the array.</source>
          <target state="translated">배열 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to check for matches.</source>
          <target state="translated">일치하는 항목을 확인할 작성기입니다.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns a value indicating whether this collection contains any elements.</source>
          <target state="translated">이 컬렉션에 요소가 들어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The array to find an element in.</source>
          <target state="translated">요소를 찾을 배열입니다.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The index for the element to retrieve.</source>
          <target state="translated">검색할 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>Returns the element at a specified index in the array.</source>
          <target state="translated">배열의 지정된 인덱스에 있는 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The array to find an element in.</source>
          <target state="translated">요소를 찾을 배열입니다.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>The index for the element to retrieve.</source>
          <target state="translated">검색할 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence or a default value if the index is out of range.</source>
          <target state="translated">시퀀스에서 지정된 인덱스의 요소를 반환하거나, 인덱스가 범위를 벗어나면 기본 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to get an item from.</source>
          <target state="translated">항목을 가져올 배열입니다.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the first element in an array.</source>
          <target state="translated">배열의 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to get an item from.</source>
          <target state="translated">항목을 가져올 배열입니다.</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">검색할 요소의 조건을 정의하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a sequence that satisfies a specified condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of items in the array.</source>
          <target state="translated">컬렉션에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an item from.</source>
          <target state="translated">항목을 검색할 작성기입니다.</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the first element in the collection.</source>
          <target state="translated">컬렉션의 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">항목을 검색할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the first element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve elments from.</source>
          <target state="translated">요소를 검색할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">검색할 요소의 조건을 정의하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">시퀀스에서 특정 조건에 맞는 첫 번째 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">작성기에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an element from.</source>
          <target state="translated">요소를 검색할 작성기입니다.</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the first element in the collection, or the default value if the collection is empty.</source>
          <target state="translated">컬렉션의 첫 번째 요소 또는 기본값(컬렉션이 비어 있는 경우)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the array.</source>
          <target state="translated">배열에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">항목을 검색할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the last element of the array.</source>
          <target state="translated">배열의 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve elements from.</source>
          <target state="translated">요소를 검색할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to retrieve.</source>
          <target state="translated">검색할 요소의 조건을 정의하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a specified condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">작성기에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve elements from.</source>
          <target state="translated">요소를 검색할 작성기입니다.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the last element in the collection.</source>
          <target state="translated">컬렉션의 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve items from.</source>
          <target state="translated">항목을 검색할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the last element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to retrieve an element from.</source>
          <target state="translated">요소를 검색할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The delegate that defines the conditions of the element to search for.</source>
          <target state="translated">검색할 요소의 조건을 정의하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">시퀀스에서 특정 조건에 맞는 마지막 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The type of item in the builder.</source>
          <target state="translated">작성기에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>The builder to retrieve an element from.</source>
          <target state="translated">요소를 검색할 작성기입니다.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})">
          <source>Returns the last element in the collection, or the default value if the collection is empty.</source>
          <target state="translated">컬렉션의 마지막 요소 또는 기본값(컬렉션이 비어 있는 경우)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The type of the result element.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>The immutable array to select items from.</source>
          <target state="translated">항목을 선택할 변경할 수 없는 배열입니다.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})">
          <source>Projects each element of a sequence into a new form.</source>
          <target state="translated">시퀀스의 각 요소를 새 폼에 투영합니다.</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>immutableArray<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>immutableArray<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 의해 수집 된 중간 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The immutable array.</source>
          <target state="translated">변경할 수 없는 배열입니다.</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each element of the intermediate sequence.</source>
          <target state="translated">중간 시퀀스의 각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the compared array.</source>
          <target state="translated">비교한 배열에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The array to use for comparison.</source>
          <target state="translated">비교에 사용할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The items to use for comparison.</source>
          <target state="translated">비교에 사용할 항목입니다.</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">같은지 확인하는 데 사용할 비교자입니다.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">같음 비교자에 따라 두 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element in the compared array.</source>
          <target state="translated">비교한 배열에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The array to use for comparison.</source>
          <target state="translated">비교에 사용할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The items to use for comparison.</source>
          <target state="translated">비교에 사용할 항목입니다.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">같은지 확인하는 데 사용할 비교자입니다.</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">같음 비교자에 따라 두 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The type of element in the compared array.</source>
          <target state="translated">비교한 배열에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The array to use for comparison.</source>
          <target state="translated">비교에 사용할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The items to use for comparison.</source>
          <target state="translated">비교에 사용할 항목입니다.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>The comparer to use to check for equality.</source>
          <target state="translated">같은지 확인하는 데 사용할 비교자입니다.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})">
          <source>Determines whether two sequences are equal according to an equality comparer.</source>
          <target state="translated">같음 비교자에 따라 두 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to retrieve the element from.</source>
          <target state="translated">요소를 검색할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">시퀀스의 유일한 요소를 반환하고, 시퀀스에 요소가 정확히 하나 들어 있지 않으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하고, 이러한 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array.</source>
          <target state="translated">배열입니다.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">배열의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to get the element from.</source>
          <target state="translated">요소를 가져올 배열입니다.</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The condition the element must satisfy.</source>
          <target state="translated">요소가 충족해야 하는 조건입니다.</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하거나 이러한 요소가 없으면 기본값을 반환합니다. 조건에 맞는 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})">
          <source>Copies the contents of this array to a mutable array.</source>
          <target state="translated">이 배열의 내용을 변경 가능한 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The type of the key.</source>
          <target state="translated">키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">사전을 만들 배열입니다.</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>The key selector.</source>
          <target state="translated">키 선택기입니다.</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">이 배열의 내용을 기반으로 사전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the key.</source>
          <target state="translated">키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">사전을 만들 배열입니다.</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key selector.</source>
          <target state="translated">키 선택기입니다.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The comparer to initialize the dictionary with.</source>
          <target state="translated">사전을 초기화할 비교자입니다.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">이 배열의 내용을 기반으로 사전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of the key.</source>
          <target state="translated">키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of the element.</source>
          <target state="translated">요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">사전을 만들 배열입니다.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The key selector.</source>
          <target state="translated">키 선택기입니다.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>The element selector.</source>
          <target state="translated">요소 선택기입니다.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">이 배열의 내용을 기반으로 사전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the key.</source>
          <target state="translated">키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the element.</source>
          <target state="translated">요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The array to create a dictionary from.</source>
          <target state="translated">사전을 만들 배열입니다.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The key selector.</source>
          <target state="translated">키 선택기입니다.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The element selector.</source>
          <target state="translated">요소 선택기입니다.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The comparer to initialize the dictionary with.</source>
          <target state="translated">사전을 초기화할 비교자입니다.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Creates a dictionary based on the contents of this array.</source>
          <target state="translated">이 배열의 내용을 기반으로 사전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The type of element contained by the collection.</source>
          <target state="translated">컬렉션에 의해 포함되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The array to filter.</source>
          <target state="translated">필터링할 배열입니다.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>The condition to use for filtering the array content.</source>
          <target state="translated">배열 내용을 필터링하는 데 사용할 조건입니다.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" uid="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">조건자에 따라 값의 시퀀스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
          <source>The specified seed value is used as the initial accumulator value.</source>
          <target state="translated">지정된 시드 값은 초기 누적기 값으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">결과 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element in a partition.</source>
          <target state="translated">파티션의 각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on the yielded accumulator result from each partition.</source>
          <target state="translated">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">최종 누적기 값을 결과 값으로 변형하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is not available in the sequential implementation.</source>
          <target state="translated">이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">결과 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">최종 누적기 값을 결과 값으로 변형하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
          <source>The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</source>
          <target state="translated">지정된 시드 값은 초기 누적기 값으로 사용되고 지정된 함수는 결과 값을 선택하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>The type of the resulting value.</source>
          <target state="translated">결과 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function that returns the initial accumulator value.</source>
          <target state="translated">초기 누적기 값을 반환하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on each element in a partition.</source>
          <target state="translated">파티션의 각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>An accumulator function to be invoked on the yielded accumulator result from each partition.</source>
          <target state="translated">각 파티션의 생성된 누적기 결과에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">최종 누적기 값을 결과 값으로 변형하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>Applies in parallel an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 대해 누적기 함수를 병렬로 적용합니다.</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
          <source>This overload is not available in the sequential implementation.</source>
          <target state="translated">이 오버로드는 순차적 구현에서는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence whose elements to apply the predicate to.</source>
          <target state="translated">요소에 조건자를 적용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Determines in parallel whether all elements of a sequence satisfy a condition.</source>
          <target state="translated">시퀀스의 모든 요소가 특정 조건에 맞는지 병렬로 확인합니다.</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to check for emptiness.</source>
          <target state="translated">비어 있는지 확인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
          <source>Determines whether a parallel sequence contains any elements.</source>
          <target state="translated">병렬 시퀀스에 요소가 하나라도 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to whose elements the predicate will be applied.</source>
          <target state="translated">해당 요소에 조건자를 적용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Determines in parallel whether any element of a sequence satisfies a condition.</source>
          <target state="translated">시퀀스의 요소가 특정 조건에 맞는지 병렬로 확인합니다.</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to cast as <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 캐스팅할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> into an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to force sequential evaluation of the query.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>The input sequence.</source>
          <target state="translated">입력 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>Enables treatment of a data source as if it were ordered, overriding the default of unordered.</source>
          <target state="translated">순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다.</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
          <source>AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</source>
          <target state="translated">AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭이 아닌 시퀀스에 대해서만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence.</source>
          <target state="translated">입력 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>Enables treatment of a data source as if it were ordered, overriding the default of unordered.</source>
          <target state="translated">순서가 없는 기본값을 무시하고 순서가 지정된 것처럼 데이터 소스를 취급하도록 합니다.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
          <source>AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.</source>
          <target state="translated">AsOrdered는 AsParallel, ParallelEnumerable.Range 및 ParallelEnumerable.Repeat에 의해 반환된 제네릭 시퀀스에 대해서만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to convert to a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 변환할 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
          <source>Enables parallelization of a query.</source>
          <target state="translated">쿼리를 병렬화할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>A partitioner over the input sequence.</source>
          <target state="translated">입력 시퀀스에 대한 파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
          <source>Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.</source>
          <target state="translated">입력 시퀀스를 파티션으로 분할해야 하는 사용자 지정 파티셔너에 의해 발생한 쿼리를 병렬화할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to convert to a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 변환할 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Enables parallelization of a query.</source>
          <target state="translated">쿼리를 병렬화할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> to convert to an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>로 변환할 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> into an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to force sequential evaluation of the query.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 변환하여 쿼리에 대한 순차적 확인을 강제합니다.</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>The input sequence.</source>
          <target state="translated">입력 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
          <source>Allows an intermediate query to be treated as if no ordering is implied among the elements.</source>
          <target state="translated">요소 사이에 순서가 암시되지 않은 것처럼 중간 쿼리를 취급하도록 합니다.</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>The source sequence.</source>
          <target state="translated">소스 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
          <source>Computes in parallel the average of a sequence of values.</source>
          <target state="translated">값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변형 함수를 호출하여 가져온 값 시퀀스의 평균을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>The type to convert the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated">요소를 변환할 대상 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept> 하 합니다.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>The sequence that contains the elements to be converted.</source>
          <target state="translated">변환될 요소가 들어 있는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
          <source>Converts the elements of a ParallelQuery to the specified type.</source>
          <target state="translated">ParallelQuery의 요소를 지정된 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Concat overload should never be called.</source>
          <target state="translated">이 Concat 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The first sequence to concatenate.</source>
          <target state="translated">연결할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The sequence to concatenate to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 연결할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Concatenates two parallel sequences.</source>
          <target state="translated">두 병렬 시퀀스를 연결합니다.</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">값을 찾을 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The value to locate in the sequence.</source>
          <target state="translated">시퀀스에서 찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
          <source>Determines in parallel whether a sequence contains a specified element by using the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 사용하여 시퀀스에 지정된 요소가 들어 있는지 병렬로 확인합니다.</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence in which to locate a value.</source>
          <target state="translated">값을 찾을 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The value to locate in the sequence.</source>
          <target state="translated">시퀀스에서 찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An equality comparer to compare values.</source>
          <target state="translated">값을 비교할 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines in parallel whether a sequence contains a specified element by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 시퀀스에 지정된 요소가 들어 있는지 여부를 병렬로 확인합니다.</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the number of elements in a parallel sequence.</source>
          <target state="translated">병렬 시퀀스의 요소 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.</source>
          <target state="translated">지정된 병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 숫자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return a default value for if it is empty.</source>
          <target state="translated">비어 있는 경우 기본값을 반환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.</source>
          <target state="translated">지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 형식 매개 변수 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The sequence to return the specified value for if it is empty.</source>
          <target state="translated">비어 있는 경우 지정된 값을 반환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>The value to return if the sequence is empty.</source>
          <target state="translated">시퀀스가 비어 있는 경우에 반환할 값입니다.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
          <source>Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">지정된 병렬 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 지정된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">중복 요소를 제거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
          <source>Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The sequence to remove duplicate elements from.</source>
          <target state="translated">중복 요소를 제거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Returns distinct elements from a parallel sequence by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 병렬 시퀀스에서 고유 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence to return an element from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">검색할 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns the element at a specified index in a parallel sequence.</source>
          <target state="translated">병렬 시퀀스에서 지정된 인덱스의 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A sequence to return an element from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">검색할 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.</source>
          <target state="translated">병렬 시퀀스에서 지정된 인덱스의 요소를 반환하거나, 인덱스가 범위를 벗어나면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Except overload should never be called.</source>
          <target state="translated">이 Except 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Except overload should never be called.</source>
          <target state="translated">이 Except 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에 없는 요소를 반환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set difference of two parallel sequences by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에 없는 요소를 반환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</source>
          <target state="translated">첫 번째 시퀀스에 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제거할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set difference of two parallel sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 두 병렬 시퀀스의 차집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the first element of.</source>
          <target state="translated">첫 번째 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the first element of a parallel sequence.</source>
          <target state="translated">병렬 시퀀스의 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element in a parallel sequence that satisfies a specified condition.</source>
          <target state="translated">병렬 시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the first element of.</source>
          <target state="translated">첫 번째 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">병렬 시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">병렬 시퀀스에서 특정 조건에 맞는 첫 번째 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> whose elements will be processed by <bpt id="p1">&lt;c&gt;</bpt>action<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소가 <bpt id="p1">&lt;c&gt;</bpt>동작<ept id="p1">&lt;/c&gt;</ept>에서 처리될 <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>An Action to invoke on each element.</source>
          <target state="translated">각 요소에 대해 호출할 동작입니다.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
          <source>Invokes in parallel the specified action for each element in the <ph id="ph1">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>의 각 요소에 대해 지정된 동작을 병렬로 수행합니다.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource}that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&amp;gt;</ph>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>로 키를 비교하여 시퀀스의 요소를 병렬로 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph> 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.OrderedParallelQuery`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 지정된 함수를 사용하여 각 그룹의 요소를 프로젝션합니다.</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in the IGrouping</source>
          <target state="translated">IGrouping에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An OrderedParallelQuery{TSource}that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an IGrouping.</source>
          <target state="translated">각 소스 요소를 IGrouping의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An IComparer{TSource} to compare keys.</source>
          <target state="translated">키를 비교할 IComparer{TSource}입니다.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a key selector function.</source>
          <target state="translated">키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a comparer and each group's elements are projected by using a specified function.</source>
          <target state="translated">키는 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">요소를 그룹화할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">요소를 그룹화할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The keys are compared by using a specified comparer.</source>
          <target state="translated">키는 지정된 비교자를 통해 비교됩니다.</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the elements in each IGrouping{TKey, TElement}.</source>
          <target state="translated">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">요소를 그룹화할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to map each source element to an element in an IGrouping<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">각 소스 요소를 IGrouping<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 병렬로 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
          <source>The elements of each group are projected by using a specified function.</source>
          <target state="translated">각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each IGrouping{TKey, TElement}.</source>
          <target state="translated">각 IGrouping{TKey, TElement}에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence whose elements to group.</source>
          <target state="translated">요소를 그룹화할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an IGrouping{Key, TElement}.</source>
          <target state="translated">각 소스 요소를 IGrouping{Key, TElement}의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.</source>
          <target state="translated">키 값은 지정된 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This GroupJoin overload should never be called.</source>
          <target state="translated">이 GroupJoin 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This GroupJoin overload should never be called.</source>
          <target state="translated">이 GroupJoin 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>Correlates in parallel the elements of two sequences based on equality of keys and groups the results.</source>
          <target state="translated">키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">기본 같음 비교자를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">키를 해시하여 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates in parallel the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">키가 같은지 여부에 따라 두 시퀀스의 요소를 병렬로 연관시키고 결과를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Intersect overload should never be called.</source>
          <target state="translated">이 Intersect 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Intersect overload should never be called.</source>
          <target state="translated">이 Intersect 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에도 있는 고유 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>에도 있는 고유 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence will be returned.</source>
          <target state="translated">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.</source>
          <target state="translated">지정된 IEqualityComparer{T}로 값을 비교하여 두 병렬 시퀀스의 교집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This Join overload should never be called.</source>
          <target state="translated">이 Join 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This Join overload should never be called.</source>
          <target state="translated">이 Join 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>Correlates in parallel the elements of two sequences based on matching keys.</source>
          <target state="translated">일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다.</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">기본 같음 비교자를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">키를 해시하여 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates in parallel the elements of two sequences based on matching keys.</source>
          <target state="translated">일치하는 키를 기준으로 두 시퀀스의 요소를 병렬로 연관시킵니다.</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the last element from.</source>
          <target state="translated">마지막 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the last element of a parallel sequence.</source>
          <target state="translated">병렬 시퀀스의 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a parallel sequence that satisfies a specified condition.</source>
          <target state="translated">병렬 시퀀스에서 지정된 조건에 맞는 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return an element from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">병렬 시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return an element from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.</source>
          <target state="translated">병렬 시퀀스에서 특정 조건에 맞는 마지막 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
          <source>Returns an Int64 that represents the total number of elements in a parallel sequence.</source>
          <target state="translated">병렬 시퀀스의 총 요소 수를 나타내는 Int64를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence that contains elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.</source>
          <target state="translated">병렬 시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 Int64를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements in the source sequence.</source>
          <target state="translated">소스 시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the maximum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the maximum value of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the maximum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the minimum value in a parallel sequence of values.</source>
          <target state="translated">값의 병렬 시퀀스에 있는 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to determine the minimum value of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Invokes in parallel a transform function on each element of a sequence and returns the minimum value.</source>
          <target state="translated">시퀀스의 각 요소에 대해 변형 함수를 병렬로 호출하고 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>The type to filter the elements of the sequence on.</source>
          <target state="translated">시퀀스의 요소를 필터링할 형식입니다.</target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>The sequence whose elements to filter.</source>
          <target state="translated">요소를 필터링할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
          <source>Filters the elements of a ParallelQuery based on a specified type.</source>
          <target state="translated">지정된 형식에 따라 ParallelQuery의 요소를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Sorts in parallel the elements of a sequence in ascending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 오름차순으로 병렬 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">키를 비교할 IComparer{TKey}입니다.</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">지정된 비교자를 사용하여 시퀀스의 요소를 오름차순으로 병렬 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Sorts in parallel the elements of a sequence in descending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 내림차순으로 병렬 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">키를 비교할 IComparer{TKey}입니다.</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in descending order by using a specified comparer.</source>
          <target state="translated">지정된 비교자를 사용하여 시퀀스의 요소를 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence of values to reverse.</source>
          <target state="translated">반전할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
          <source>Inverts the order of the elements in a parallel sequence.</source>
          <target state="translated">병렬 시퀀스의 요소 순서를 반전합니다.</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements resturned by selector.</source>
          <target state="translated">선택기가 반환하는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">변형 함수를 호출할 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Projects in parallel each element of a sequence into a new form.</source>
          <target state="translated">시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>The type of elements resturned by selector.</source>
          <target state="translated">선택기가 반환하는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>A sequence of values to invoke a transform function on.</source>
          <target state="translated">변형 함수를 호출할 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
          <source>Projects in parallel each element of a sequence into a new form by incorporating the element's index.</source>
          <target state="translated">요소의 인덱스를 통합하여 시퀀스의 각 요소를 새 폼에 병렬로 프로젝션합니다.</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by selector.</source>
          <target state="translated">선택기가 반환하는 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects in parallel each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and flattens the resulting sequences into one sequence.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The type of the elements of the sequence returned by selector.</source>
          <target state="translated">선택기가 반환하는 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>Projects in parallel each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, and flattens the resulting sequences into one sequence.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 평행으로 투영하고 결과 시퀀스를 단일 시퀀스로 평면화합니다.</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
          <source>The index of each source element is used in the projected form of that element.</source>
          <target state="translated">각 소스 요소의 인덱스는 해당 요소의 투영된 폼에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 의해 수집 된 중간 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements in the result sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of the intermediate elements collected by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 의해 수집 된 중간 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The type of elements to return.</source>
          <target state="translated">반환할 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A transform function to apply to each source element; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소에 적용할 변형 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>로 투영하고, 결과 시퀀스를 단일 시퀀스로 평면화한 다음 포함된 각 요소에 대해 결과 선택기 함수를 호출합니다.</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
          <source>The index of each source element is used in the intermediate projected form of that element.</source>
          <target state="translated">각 소스 요소의 인덱스는 해당 요소의 투영된 중간 폼에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This SequenceEqual overload should never be called.</source>
          <target state="translated">이 SequenceEqual 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This SequenceEqual overload should never be called.</source>
          <target state="translated">이 SequenceEqual 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence to compare to second.</source>
          <target state="translated">두 번째와 비교할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence to compare to the first input sequence.</source>
          <target state="translated">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.</source>
          <target state="translated">해당 형식에 대한 기본 같음 비교자를 통해 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence to compare to <bpt id="p1">&lt;c&gt;</bpt>second<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>두 번째<ept id="p1">&lt;/c&gt;</ept>와 비교할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence to compare to the first input sequence.</source>
          <target state="translated">첫 번째 입력 시퀀스와 비교할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to use to compare elements.</source>
          <target state="translated">요소를 비교하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.</source>
          <target state="translated">지정된 IEqualityComparer{T}를 통해 해당 요소를 비교하여 두 병렬 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">단일 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">병렬 시퀀스의 유일한 요소를 반환하고, 시퀀스의 요소가 정확히 하나가 아니면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">단일 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하고, 이러한 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">단일 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
          <source>Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">병렬 시퀀스의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return the single element of.</source>
          <target state="translated">단일 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">병렬 시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하거나 이러한 요소가 없으면 기본값을 반환합니다. 조건에 맞는 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The number of elements to skip before returning the remaining elements.</source>
          <target state="translated">나머지 요소를 반환하기 전에 건너뛸 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.</source>
          <target state="translated">병렬 시퀀스에서 지정된 수의 요소를 건너뛴 다음 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">지정된 조건이 true이면 병렬 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
          <source>Computes in parallel the sum of a sequence of values.</source>
          <target state="translated">값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>The type of elements in the source sequence.</source>
          <target state="translated">소스 시퀀스의 요소 형식입니다.</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A sequence of values to calculate the sum of.</source>
          <target state="translated">합을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>A transform function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
          <source>Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 변환 함수를 호출하여 가져온 값 시퀀스의 합을 병렬로 계산합니다.</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The number of elements to return.</source>
          <target state="translated">반환할 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Returns a specified number of contiguous elements from the start of a parallel sequence.</source>
          <target state="translated">병렬 시퀀스 시작 위치에서 지정된 수의 연속 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Returns elements from a parallel sequence as long as a specified condition is true.</source>
          <target state="translated">지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each source element for a condition; the second parameter of the function represents the index of the source element.</source>
          <target state="translated">각 소스 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Returns elements from a parallel sequence as long as a specified condition is true.</source>
          <target state="translated">지정된 조건이 true인 동안 병렬 시퀀스에서 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 오름차순으로 다시 병렬 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">키를 비교할 IComparer{TKey}입니다.</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">시퀀스의 요소를 지정된 비교자를 사용하여 오름차순으로 다시 병렬 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 내림차순으로 다시 병렬 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An OrderedParallelQuery{TSource} that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 포함된 OrderedParallelQuery{TSource}입니다.</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An IComparer{TKey} to compare keys.</source>
          <target state="translated">키를 비교할 IComparer{TKey}입니다.</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</source>
          <target state="translated">시퀀스의 요소를 지정된 비교자를 사용하여 내림차순으로 다시 병렬 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence to create an array from.</source>
          <target state="translated">배열을 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
          <source>Creates an array from a <ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>을 사용하여 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">지정된 키 선택기 함수와 키 비교자에 따라 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">지정된 키 선택기와 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function, a comparer, and an element selector function.</source>
          <target state="translated">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>A sequence to create a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>를 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>을 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>을 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function and key comparer.</source>
          <target state="translated">지정된 키 선택기 함수와 키 비교자에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>을 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to specified key selector and element selector functions.</source>
          <target state="translated">지정된 키 선택기와 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the value returned by <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>elementSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The sequence to create a <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>을 만드는 데 사용할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A transform function to produce a result element value from each element.</source>
          <target state="translated">각 요소를 사용하여 결과 요소 값을 생성할 변형 함수입니다.</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph> according to a specified key selector function, a comparer and an element selector function.</source>
          <target state="translated">지정된 키 선택기 함수, 비교자 및 요소 선택기 함수에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.ILookup`2" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Linq.ParallelQuery`1" /&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This Union overload should never be called.</source>
          <target state="translated">이 Union 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This Union overload should never be called.</source>
          <target state="translated">이 Union 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when called.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements form the first set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>A sequence whose distinct elements form the second set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
          <source>Produces the set union of two parallel sequences by using the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the first set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 첫 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the second set for the union.</source>
          <target state="translated">해당 고유 요소가 합집합의 두 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.</source>
          <target state="translated">지정된 IEqualityComparer{T}를 사용하여 두 병렬 시퀀스의 합집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>The type of the elements of source.</source>
          <target state="translated">소스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A sequence to filter.</source>
          <target state="translated">필터링할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
          <source>Filters in parallel a sequence of values based on a predicate.</source>
          <target state="translated">조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>The type of the elements of source.</source>
          <target state="translated">소스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A sequence to filter.</source>
          <target state="translated">필터링할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Filters in parallel a sequence of values based on a predicate.</source>
          <target state="translated">조건자에 따라 값의 시퀀스를 병렬로 필터링합니다.</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
          <source>Each element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 각 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">옵션을 설정할 ParallelQuery입니다.</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>A cancellation token.</source>
          <target state="translated">취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to associate with the query.</source>
          <target state="translated">쿼리와 연결할 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>을 설정합니다.</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>A ParallelQuery on which to set the limit on the degrees of parallelism.</source>
          <target state="translated">병렬 처리 수준에 대한 제한을 설정할 ParallelQuery입니다.</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The degree of parallelism for the query.</source>
          <target state="translated">쿼리에 사용할 병렬 처리 수준입니다.</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>The default value is Math.Min(<ph id="ph1">&lt;see cref="P:System.Environment.ProcessorCount" /&gt;</ph>, <ph id="ph2">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph>) where <ph id="ph3">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph> is 512.</source>
          <target state="translated">기본값은 Math.Min(<ph id="ph1">&lt;see cref="P:System.Environment.ProcessorCount" /&gt;</ph>, <ph id="ph2">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph>)입니다. 여기서 <ph id="ph3">&lt;see langword="MAX_SUPPORTED_DOP" /&gt;</ph>는 512입니다.</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Sets the degree of parallelism to use in a query.</source>
          <target state="translated">쿼리에서 사용할 병렬 처리 수준을 설정합니다.</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
          <source>Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.</source>
          <target state="translated">병렬 처리 수준은 쿼리를 처리하기 위해 동시에 실행되는 작업의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">옵션을 설정할 ParallelQuery입니다.</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>The mode in which to execute the query.</source>
          <target state="translated">쿼리를 실행할 모드입니다.</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
          <source>Sets the execution mode of the query.</source>
          <target state="translated">쿼리의 실행 모드를 설정합니다.</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>The type of elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>A ParallelQuery on which to set the option.</source>
          <target state="translated">옵션을 설정할 ParallelQuery입니다.</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>The merge options to set for this query.</source>
          <target state="translated">이 쿼리에 대해 설정할 병합 옵션입니다.</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
          <source>Sets the merge options for this query, which specify how the query will buffer output.</source>
          <target state="translated">쿼리가 출력을 버퍼링하는 방식을 지정하는 병합 옵션을 이 쿼리에 대해 설정합니다.</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This type parameter is not used.</source>
          <target state="translated">이 형식 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This parameter is not used.</source>
          <target state="translated">이 매개 변수는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This Zip overload should never be called.</source>
          <target state="translated">이 Zip 오버로드는 호출되면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
          <source>This method is marked as obsolete and always throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> when invoked.</source>
          <target state="translated">이 메서드는 사용되지 않는 것으로 표시되며 호출되면 항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The type of the return elements.</source>
          <target state="translated">반환 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The first sequence to zip.</source>
          <target state="translated">zip을 수행할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>The second sequence to zip.</source>
          <target state="translated">zip을 수행할 두 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" uid="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
          <source>Merges in parallel two sequences by using the specified predicate function.</source>
          <target state="translated">지정된 조건자 함수를 사용하여 두 시퀀스를 병렬로 병합합니다.</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>An accumulator function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 누적기 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>An accumulator function to invoke on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 누적기 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
          <source>The specified seed value is used as the initial accumulator value.</source>
          <target state="translated">지정된 시드 값은 초기 누적기 값으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The type of the accumulator value.</source>
          <target state="translated">누적기 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The type of the resulting value.</source>
          <target state="translated">결과 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>A sequence to aggregate over.</source>
          <target state="translated">집계할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The initial accumulator value.</source>
          <target state="translated">초기 누적기 값입니다.</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>An accumulator function to invoke on each element.</source>
          <target state="translated">각 요소에 대해 호출할 누적기 함수입니다.</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>A function to transform the final accumulator value into the result value.</source>
          <target state="translated">최종 누적기 값을 결과 값으로 변형하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>Applies an accumulator function over a sequence.</source>
          <target state="translated">시퀀스에 누적기 함수를 적용합니다.</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
          <source>The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</source>
          <target state="translated">지정된 시드 값은 초기 누적기 값으로 사용되고 지정된 함수는 결과 값을 선택하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A sequence whose elements to test for a condition.</source>
          <target state="translated">해당 요소를 조건에 대해 테스트할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Determines whether all the elements of a sequence satisfy a condition.</source>
          <target state="translated">시퀀스의 모든 요소가 특정 조건에 맞는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
          <source>A sequence to check for being empty.</source>
          <target state="translated">비어 있는지 확인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
          <source>Determines whether a sequence contains any elements.</source>
          <target state="translated">시퀀스에 요소가 하나라도 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A sequence whose elements to test for a condition.</source>
          <target state="translated">해당 요소를 조건에 대해 테스트할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Determines whether any element of a sequence satisfies a condition.</source>
          <target state="translated">시퀀스에 특정 조건에 맞는 요소가 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
          <source>A sequence to convert.</source>
          <target state="translated">변환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
          <source>Converts an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>을 <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence to convert.</source>
          <target state="translated">변환할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Converts a generic <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to a generic <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>.</source>
          <target state="translated">제네릭 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>을 제네릭 <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the average of.</source>
          <target state="translated">평균을 계산할 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A sequence of values that are used to calculate an average.</source>
          <target state="translated">평균을 계산하는 데 사용되는 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>Computes the average of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A sequence of values to calculate the average of.</source>
          <target state="translated">평균을 계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>Computes the average of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 평균을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
          <source>The type to convert the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated">요소를 변환할 대상 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept> 하 합니다.</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> that contains the elements to be converted.</source>
          <target state="translated">변환할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
          <source>Converts the elements of an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> to the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>의 요소를 지정된 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The first sequence to concatenate.</source>
          <target state="translated">연결할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The sequence to concatenate to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 연결할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Concatenates two sequences.</source>
          <target state="translated">두 시퀀스를 연결합니다.</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> in which to locate <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>을 찾을 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>The object to locate in the sequence.</source>
          <target state="translated">시퀀스에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
          <source>Determines whether a sequence contains a specified element by using the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 사용하여 시퀀스에 지정된 요소가 들어 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> in which to locate <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>을 찾을 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>The object to locate in the sequence.</source>
          <target state="translated">시퀀스에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether a sequence contains a specified element by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 시퀀스에 지정된 요소가 들어 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
          <source>Returns the number of elements in a sequence.</source>
          <target state="translated">시퀀스의 요소 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the number of elements in the specified sequence that satisfies a condition.</source>
          <target state="translated">지정된 시퀀스에서 특정 조건에 맞는 요소 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return a default value for if empty.</source>
          <target state="translated">비어 있는 경우 기본값을 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
          <source>Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</source>
          <target state="translated">지정된 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 형식 매개 변수의 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the specified value for if empty.</source>
          <target state="translated">비어 있는 경우 지정된 값을 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>The value to return if the sequence is empty.</source>
          <target state="translated">시퀀스가 비어 있는 경우에 반환할 값입니다.</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
          <source>Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</source>
          <target state="translated">지정된 시퀀스의 요소를 반환하거나, 시퀀스가 비어 있으면 singleton 컬렉션의 지정된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to remove duplicates from.</source>
          <target state="translated">중복을 제거할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
          <source>Returns distinct elements from a sequence by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 시퀀스에서 고유 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to remove duplicates from.</source>
          <target state="translated">중복을 제거할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Returns distinct elements from a sequence by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 시퀀스에서 고유 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">검색할 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence.</source>
          <target state="translated">시퀀스에서 지정된 인덱스의 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">검색할 요소의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Returns the element at a specified index in a sequence or a default value if the index is out of range.</source>
          <target state="translated">시퀀스에서 지정된 인덱스의 요소를 반환하거나, 인덱스가 범위를 벗어나면 기본 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>소스2<ept id="p1">&lt;/c&gt;</ept>에 없는 해당 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will not appear in the returned sequence.</source>
          <target state="translated">첫 번째 시퀀스에 해당 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제외할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set difference of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 두 시퀀스의 차집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements that are not also in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> will be returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>소스2<ept id="p1">&lt;/c&gt;</ept>에 없는 해당 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements that also occur in the first sequence will not appear in the returned sequence.</source>
          <target state="translated">첫 번째 시퀀스에 해당 요소가 있는 경우 반환되는 시퀀스에서 해당 요소를 제외할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set difference of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 두 시퀀스의 차집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">첫 번째 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
          <source>Returns the first element of a sequence.</source>
          <target state="translated">시퀀스의 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the first element of a sequence that satisfies a specified condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the first element of.</source>
          <target state="translated">첫 번째 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
          <source>Returns the first element of a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">시퀀스의 첫 번째 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 첫 번째 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Groups the elements of a sequence according to a specified key selector function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 지정된 비교자로 키를 비교하여 시퀀스의 요소를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
          <source>Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</source>
          <target state="translated">지정된 키 선택기 함수에 따라 시퀀스의 요소를 그룹화하고 지정된 함수를 사용하여 각 그룹의 요소를 투영합니다.</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3386" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence and projects the elements for each group by using a specified function.</source>
          <target state="translated">시퀀스의 요소를 그룹화하고 지정된 함수를 사용하여 각 그룹의 요소를 투영합니다.</target>       </trans-unit>
        <trans-unit id="3387" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Key values are compared by using a specified comparer.</source>
          <target state="translated">키 값은 지정된 비교자를 통해 비교됩니다.</target>       </trans-unit>
        <trans-unit id="3388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3391" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3392" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3393" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3394" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3398" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3399" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3400" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3401" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3402" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3403" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Keys are compared by using a specified comparer.</source>
          <target state="translated">키는 지정된 비교자를 통해 비교됩니다.</target>       </trans-unit>
        <trans-unit id="3404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3408" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3409" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3410" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3411" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3412" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3413" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
          <source>The elements of each group are projected by using a specified function.</source>
          <target state="translated">각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="3414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the key returned by the function represented in <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 표시 하는 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the elements in each <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>The type of the result value returned by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">반환 된 결과 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3418" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to group.</source>
          <target state="translated">요소를 그룹화할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3419" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to extract the key for each element.</source>
          <target state="translated">각 요소에 대해 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3420" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to map each source element to an element in an <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">각 소스 요소를 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>의 요소에 매핑하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3421" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>A function to create a result value from each group.</source>
          <target state="translated">각 그룹의 결과 값을 만드는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3422" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3423" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</source>
          <target state="translated">지정된 키 누적기 함수에 따라 시퀀스의 요소를 그룹화하고 각 그룹의 결과 값과 해당 키를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3424" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
          <source>Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.</source>
          <target state="translated">키는 지정된 비교자를 통해 비교되고 각 그룹의 요소는 지정된 함수를 통해 투영됩니다.</target>       </trans-unit>
        <trans-unit id="3425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3429" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3430" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3431" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3432" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3433" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="3434" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>Correlates the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">키가 같은지 여부에 따라 두 시퀀스의 요소를 연관시키고 결과를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="3435" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">기본 같음 비교자를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="3436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3440" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3441" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3442" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3443" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3444" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</source>
          <target state="translated">첫 번째 시퀀스의 요소와 두 번째 시퀀스의 일치하는 요소 컬렉션을 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="3445" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A comparer to hash and compare keys.</source>
          <target state="translated">키를 해시하여 비교할 비교자입니다.</target>       </trans-unit>
        <trans-unit id="3446" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on key equality and groups the results.</source>
          <target state="translated">키가 같은지 여부에 따라 두 시퀀스의 요소를 연관시키고 결과를 그룹화합니다.</target>       </trans-unit>
        <trans-unit id="3447" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="3448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3449" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> are returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>소스2<ept id="p1">&lt;/c&gt;</ept>에도 있는 고유 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3450" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements that also appear in the first sequence are returned.</source>
          <target state="translated">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3451" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set intersection of two sequences by using the default equality comparer to compare values.</source>
          <target state="translated">기본 같음 비교자로 값을 비교하여 두 시퀀스의 교집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3453" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose distinct elements that also appear in <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept> are returned.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>소스2<ept id="p1">&lt;/c&gt;</ept>에도 있는 고유 요소가 반환되는 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3454" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose distinct elements that also appear in the first sequence are returned.</source>
          <target state="translated">첫 번째 시퀀스에도 있는 고유 요소가 반환되는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3455" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3456" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set intersection of two sequences by using the specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>로 값을 비교하여 두 시퀀스의 교집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3461" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3462" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3463" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3464" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3465" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="3466" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">일치하는 키를 기준으로 두 시퀀스의 요소를 연관시킵니다.</target>       </trans-unit>
        <trans-unit id="3467" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
          <source>The default equality comparer is used to compare keys.</source>
          <target state="translated">기본 같음 비교자를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="3468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the elements of the second sequence.</source>
          <target state="translated">두 번째 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the keys returned by the key selector functions.</source>
          <target state="translated">키 선택기 함수에서 반환하는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The type of the result elements.</source>
          <target state="translated">결과 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3472" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The first sequence to join.</source>
          <target state="translated">조인할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3473" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>The sequence to join to the first sequence.</source>
          <target state="translated">첫 번째 시퀀스에 조인할 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3474" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the first sequence.</source>
          <target state="translated">첫 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3475" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to extract the join key from each element of the second sequence.</source>
          <target state="translated">두 번째 시퀀스의 각 요소에서 조인 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3476" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A function to create a result element from two matching elements.</source>
          <target state="translated">일치하는 두 요소를 통해 결과 요소를 만들 함수입니다.</target>       </trans-unit>
        <trans-unit id="3477" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to hash and compare keys.</source>
          <target state="translated">키를 해시하여 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3478" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>Correlates the elements of two sequences based on matching keys.</source>
          <target state="translated">일치하는 키를 기준으로 두 시퀀스의 요소를 연관시킵니다.</target>       </trans-unit>
        <trans-unit id="3479" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
          <source>A specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> is used to compare keys.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="3480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3481" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">마지막 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3482" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
          <source>Returns the last element in a sequence.</source>
          <target state="translated">시퀀스의 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3484" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3485" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3486" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the last element of a sequence that satisfies a specified condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 마지막 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3488" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the last element of.</source>
          <target state="translated">마지막 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3489" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
          <source>Returns the last element in a sequence, or a default value if the sequence contains no elements.</source>
          <target state="translated">시퀀스의 마지막 요소를 반환하거나, 시퀀스에 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3491" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return an element from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3492" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3493" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</source>
          <target state="translated">시퀀스에서 특정 조건에 맞는 마지막 요소를 반환하거나, 이러한 요소가 없으면 기본값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3495" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3496" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the total number of elements in a sequence.</source>
          <target state="translated">시퀀스의 총 요소 수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3498" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that contains the elements to be counted.</source>
          <target state="translated">개수를 셀 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3499" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3500" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that represents the number of elements in a sequence that satisfy a condition.</source>
          <target state="translated">시퀀스에서 특정 조건에 맞는 요소 수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3502" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
          <source>A sequence of values to determine the maximum of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3503" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
          <source>Returns the maximum value in a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>.</source>
          <target state="translated">제네릭 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>의 최대값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">함수가 반환한 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3506" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to determine the maximum of.</source>
          <target state="translated">최대값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3507" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3508" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Invokes a projection function on each element of a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> and returns the maximum resulting value.</source>
          <target state="translated">제네릭 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>의 각 요소에 대해 프로젝션 함수를 호출하고 최대 결과 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3510" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
          <source>A sequence of values to determine the minimum of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3511" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
          <source>Returns the minimum value of a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>.</source>
          <target state="translated">제네릭 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>의 최소값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">함수가 반환한 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3514" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to determine the minimum of.</source>
          <target state="translated">최소값을 확인할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3515" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3516" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Invokes a projection function on each element of a generic <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> and returns the minimum resulting value.</source>
          <target state="translated">제네릭 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>의 각 요소에 대해 프로젝션 함수를 호출하고 최소 결과 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
          <source>The type to filter the elements of the sequence on.</source>
          <target state="translated">시퀀스의 요소를 필터링할 형식입니다.</target>       </trans-unit>
        <trans-unit id="3518" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> whose elements to filter.</source>
          <target state="translated">요소를 필터링할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3519" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
          <source>Filters the elements of an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> based on a specified type.</source>
          <target state="translated">지정된 형식에 따라 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>의 요소를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="3520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">막대로 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3522" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3523" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3524" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Sorts the elements of a sequence in ascending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">막대로 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3527" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3528" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3529" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3530" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">지정된 비교자를 사용하여 시퀀스의 요소를 오름차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">막대로 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3533" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3534" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3535" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Sorts the elements of a sequence in descending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by the function that is represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">막대로 함수에서 반환 된 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3538" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A sequence of values to order.</source>
          <target state="translated">정렬할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3539" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3540" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3541" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the elements of a sequence in descending order by using a specified comparer.</source>
          <target state="translated">지정된 비교자를 사용하여 시퀀스의 요소를 내림차순으로 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3543" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
          <source>A sequence of values to reverse.</source>
          <target state="translated">반전할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3544" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
          <source>Inverts the order of the elements in a sequence.</source>
          <target state="translated">시퀀스의 요소 순서를 반전합니다.</target>       </trans-unit>
        <trans-unit id="3545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">함수가 반환한 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3547" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3548" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3549" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Projects each element of a sequence into a new form.</source>
          <target state="translated">시퀀스의 각 요소를 새 폼에 투영합니다.</target>       </trans-unit>
        <trans-unit id="3550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>The type of the value returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">함수가 반환한 값의 형식을 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3552" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3553" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3554" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
          <source>Projects each element of a sequence into a new form by incorporating the element's index.</source>
          <target state="translated">요소의 인덱스를 통합하여 시퀀스의 각 요소를 새 폼에 투영합니다.</target>       </trans-unit>
        <trans-unit id="3555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of the sequence returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">가 나타내는 함수에서 반환 된 시퀀스의 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3557" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3558" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3559" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and combines the resulting sequences into one sequence.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 투영하고 결과 시퀀스를 단일 시퀀스로 결합합니다.</target>       </trans-unit>
        <trans-unit id="3560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The type of the elements of the sequence returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">가 나타내는 함수에서 반환 된 시퀀스의 요소 형식의 <bpt id="p1">&lt;c&gt;</bpt>선택기<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3562" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3563" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>A projection function to apply to each element; the second parameter of this function represents the index of the source element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3564" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and combines the resulting sequences into one sequence.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 투영하고 결과 시퀀스를 단일 시퀀스로 결합합니다.</target>       </trans-unit>
        <trans-unit id="3565" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
          <source>The index of each source element is used in the projected form of that element.</source>
          <target state="translated">각 소스 요소의 인덱스는 해당 요소의 투영된 폼에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the intermediate elements collected by the function represented by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">중간 요소의 형식을 나타내는 함수에 의해 수집 된 <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3569" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3570" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3571" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of each intermediate sequence.</source>
          <target state="translated">각 중간 시퀀스의 각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3572" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> and invokes a result selector function on each element therein.</source>
          <target state="translated">시퀀스의 각 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 투영하고 각 해당 요소에 대해 결과 선택기 함수를 호출합니다.</target>       </trans-unit>
        <trans-unit id="3573" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.</source>
          <target state="translated">각 중간 시퀀스의 결과 값을 1차원 단일 시퀀스로 결합하여 반환합니다.</target>       </trans-unit>
        <trans-unit id="3574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the intermediate elements collected by the function represented by <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">중간 요소의 형식을 나타내는 함수에 의해 수집 된 <bpt id="p1">&lt;c&gt;</bpt>collectionSelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the resulting sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3577" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A sequence of values to project.</source>
          <target state="translated">계산할 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3578" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.</source>
          <target state="translated">입력 시퀀스의 각 요소에 적용할 프로젝션 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3579" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A projection function to apply to each element of each intermediate sequence.</source>
          <target state="translated">각 중간 시퀀스의 각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3580" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>Projects each element of a sequence to an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that incorporates the index of the source element that produced it.</source>
          <target state="translated">시퀀스의 각 요소를 해당 소스 요소의 인덱스를 통합하는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>에 투영합니다.</target>       </trans-unit>
        <trans-unit id="3581" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.</source>
          <target state="translated">각 중간 시퀀스의 각 요소에 대해 결과 선택기 함수를 호출하고 결과 값을 1차원 단일 시퀀스로 결합하여 반환합니다.</target>       </trans-unit>
        <trans-unit id="3582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3583" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to compare to those of <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">해당 요소를 <bpt id="p1">&lt;c&gt;</bpt>소스2<ept id="p1">&lt;/c&gt;</ept>의 요소와 비교할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3584" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to compare to those of the first sequence.</source>
          <target state="translated">해당 요소를 첫 번째 시퀀스의 요소와 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3585" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Determines whether two sequences are equal by using the default equality comparer to compare elements.</source>
          <target state="translated">기본 같음 비교자를 통해 요소를 비교하여 두 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="3586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3587" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> whose elements to compare to those of <bpt id="p1">&lt;c&gt;</bpt>source2<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">해당 요소를 <bpt id="p1">&lt;c&gt;</bpt>소스2<ept id="p1">&lt;/c&gt;</ept>의 요소와 비교할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3588" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> whose elements to compare to those of the first sequence.</source>
          <target state="translated">해당 요소를 첫 번째 시퀀스의 요소와 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3589" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to use to compare elements.</source>
          <target state="translated">요소를 비교하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3590" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Determines whether two sequences are equal by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare elements.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 통해 요소를 비교하여 두 시퀀스가 서로 같은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="3591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3592" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3593" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
          <source>Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</source>
          <target state="translated">시퀀스의 유일한 요소를 반환하고, 시퀀스에 요소가 정확히 하나 들어 있지 않으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="3594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3595" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3596" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3597" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하고, 이러한 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="3598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3599" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return the single element of.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3600" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
          <source>Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</source>
          <target state="translated">시퀀스의 유일한 요소를 반환하거나 시퀀스가 비어 있으면 기본값을 반환합니다. 시퀀스에 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="3601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3602" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return a single element from.</source>
          <target state="translated">단일 요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3603" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test an element for a condition.</source>
          <target state="translated">요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3604" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</source>
          <target state="translated">시퀀스에서 지정된 조건에 맞는 유일한 요소를 반환하거나 이러한 요소가 없으면 기본값을 반환합니다. 조건에 맞는 요소가 둘 이상 있으면 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="3605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3606" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3607" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The number of elements to skip before returning the remaining elements.</source>
          <target state="translated">나머지 요소를 반환하기 전에 건너뛸 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="3608" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Bypasses a specified number of elements in a sequence and then returns the remaining elements.</source>
          <target state="translated">시퀀스에서 지정된 수의 요소를 건너뛴 다음 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3610" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3611" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3612" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">지정된 조건이 true이면 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3614" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to return elements from.</source>
          <target state="translated">요소를 반환할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3615" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>A function to test each element for a condition; the second parameter of this function represents the index of the source element.</source>
          <target state="translated">각 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3616" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</source>
          <target state="translated">지정된 조건이 true이면 시퀀스에 있는 요소를 무시하고 나머지 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3617" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3618" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3619" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3620" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3621" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3622" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3623" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3624" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3625" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3626" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3627" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3628" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3629" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3630" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3631" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3632" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3633" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3634" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>A sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3635" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
          <source>Computes the sum of a sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated">nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3636" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
          <source>A sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values to calculate the sum of.</source>
          <target state="translated">합을 계산할 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3637" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
          <source>Computes the sum of a sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3639" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3640" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3641" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3643" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3644" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3645" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3647" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3648" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3649" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3651" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3652" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3653" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3655" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3656" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3657" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3659" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3660" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3661" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3663" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3664" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3665" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3667" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3668" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3669" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3671" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3672" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3673" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
          <source>Computes the sum of the sequence of nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 nullable <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3675" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A sequence of values of type <bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>TSource<ept id="p1">&lt;/c&gt;</ept> 형식 값의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3676" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>A projection function to apply to each element.</source>
          <target state="translated">각 요소에 적용할 프로젝션 함수입니다.</target>       </trans-unit>
        <trans-unit id="3677" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
          <source>Computes the sum of the sequence of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values that is obtained by invoking a projection function on each element of the input sequence.</source>
          <target state="translated">입력 시퀀스의 각 요소에 대해 프로젝션 함수를 호출하여 가져온 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 값 시퀀스의 합을 계산합니다.</target>       </trans-unit>
        <trans-unit id="3678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3679" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3680" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>The number of elements to return.</source>
          <target state="translated">반환할 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="3681" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
          <source>Returns a specified number of contiguous elements from the start of a sequence.</source>
          <target state="translated">시퀀스 시작 위치에서 지정된 수의 연속 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3683" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3684" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3685" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">지정된 조건이 true인 동안 시퀀스에서 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3687" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The sequence to return elements from.</source>
          <target state="translated">요소가 반환되는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3688" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</source>
          <target state="translated">각 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 시퀀스에 있는 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3689" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Returns elements from a sequence as long as a specified condition is true.</source>
          <target state="translated">지정된 조건이 true인 동안 시퀀스에서 요소를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3690" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">함수가 반환한 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3693" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3694" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3695" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 오름차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">함수가 반환한 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3698" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3699" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3700" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3701" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</source>
          <target state="translated">시퀀스의 요소를 지정된 비교자를 사용하여 오름차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>The type of the key returned by the function represented by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">함수가 반환한 키의 형식 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3704" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3705" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3706" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</source>
          <target state="translated">시퀀스의 요소를 키에 따라 내림차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key that is returned by the <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept> function.</source>
          <target state="translated">반환 되는 키의 형식에서 <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="3709" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph> that contains elements to sort.</source>
          <target state="translated">정렬할 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Linq.IOrderedQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3710" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from each element.</source>
          <target state="translated">각 요소에서 키를 추출하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3711" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated">키를 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3712" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
          <source>Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</source>
          <target state="translated">시퀀스의 요소를 지정된 비교자를 사용하여 내림차순으로 다시 정렬합니다.</target>       </trans-unit>
        <trans-unit id="3713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3714" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements form the first set for the union operation.</source>
          <target state="translated">해당 고유 요소가 합집합 연산의 첫 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3715" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>A sequence whose distinct elements form the second set for the union operation.</source>
          <target state="translated">해당 고유 요소가 합집합 연산의 두 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3716" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
          <source>Produces the set union of two sequences by using the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 사용하여 두 시퀀스의 합집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>The type of the elements of the input sequences.</source>
          <target state="translated">입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3718" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the first set for the union operation.</source>
          <target state="translated">해당 고유 요소가 합집합 연산의 첫 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3719" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>A sequence whose distinct elements form the second set for the union operation.</source>
          <target state="translated">해당 고유 요소가 합집합 연산의 두 번째 집합을 이루는 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3720" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> to compare values.</source>
          <target state="translated">값을 비교할 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3721" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
          <source>Produces the set union of two sequences by using a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하여 두 시퀀스의 합집합을 구합니다.</target>       </trans-unit>
        <trans-unit id="3722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3723" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to filter.</source>
          <target state="translated">필터링할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3724" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">각 요소를 조건에 대해 테스트하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3725" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">조건자에 따라 값의 시퀀스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="3726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>The type of the elements of <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 요소 형식이 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="3727" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> to filter.</source>
          <target state="translated">필터링할 <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3728" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</source>
          <target state="translated">각 요소를 조건에 대해 테스트할 함수이며, 이 함수의 두 번째 매개 변수는 소스 시퀀스에 있는 요소의 인덱스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3729" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Filters a sequence of values based on a predicate.</source>
          <target state="translated">조건자에 따라 값의 시퀀스를 필터링합니다.</target>       </trans-unit>
        <trans-unit id="3730" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
          <source>Each element's index is used in the logic of the predicate function.</source>
          <target state="translated">조건자 함수의 논리에 각 요소의 인덱스가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="3731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the first input sequence.</source>
          <target state="translated">첫 번째 입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the second input sequence.</source>
          <target state="translated">두 번째 입력 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The type of the elements of the result sequence.</source>
          <target state="translated">결과 시퀀스 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3734" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The first sequence to merge.</source>
          <target state="translated">병합할 첫 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3735" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>The second sequence to merge.</source>
          <target state="translated">병합할 두 번째 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="3736" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>A function that specifies how to merge the elements from the two sequences.</source>
          <target state="translated">두 시퀀스의 요소를 병합하는 방법을 지정하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="3737" translate="yes" xml:space="preserve" uid="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
          <source>Merges two sequences by using the specified predicate function.</source>
          <target state="translated">지정된 조건자 함수를 사용하여 두 시퀀스를 병합합니다.</target>       </trans-unit>
        <trans-unit id="3738" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
          <source>The socket that is listening for connections.</source>
          <target state="translated">연결을 수신하는 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3739" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
          <source>Performs an asynchronous operation on to accept an incoming connection attempt on the socket.</source>
          <target state="translated">소켓에서 들어오는 연결 시도를 허용하도록 비동기 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="3740" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>The socket that is listening for incoming connections.</source>
          <target state="translated">들어오는 연결을 수신하는 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3741" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>The accepted <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> object.</source>
          <target state="translated">허용되는 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="3742" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>This value may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3743" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
          <source>Performs an asynchronous operation on to accept an incoming connection attempt on the socket.</source>
          <target state="translated">소켓에서 들어오는 연결 시도를 허용하도록 비동기 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="3744" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
          <source>The socket that is used for establishing a connection.</source>
          <target state="translated">연결 설정에 사용되는 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3745" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
          <source>An EndPoint that represents the remote device.</source>
          <target state="translated">원격 장치를 나타내는 끝점입니다.</target>       </trans-unit>
        <trans-unit id="3746" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">원격 호스트에 대한 연결을 설정합니다.</target>       </trans-unit>
        <trans-unit id="3747" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The socket to perform the connect operation on.</source>
          <target state="translated">연결 작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3748" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The IP address of the remote host.</source>
          <target state="translated">원격 호스트의 IP 주소입니다.</target>       </trans-unit>
        <trans-unit id="3749" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The port number of the remote host.</source>
          <target state="translated">원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="3750" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">원격 호스트에 대한 연결을 설정합니다.</target>       </trans-unit>
        <trans-unit id="3751" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
          <source>The host is specified by an IP address and a port number.</source>
          <target state="translated">호스트는 IP 주소와 포트 번호로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="3752" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The socket that the connect operation is performed on.</source>
          <target state="translated">연결 작업이 수행되는 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3753" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The IP addresses of the remote host.</source>
          <target state="translated">원격 호스트의 IP 주소입니다.</target>       </trans-unit>
        <trans-unit id="3754" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The port number of the remote host.</source>
          <target state="translated">원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="3755" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">원격 호스트에 대한 연결을 설정합니다.</target>       </trans-unit>
        <trans-unit id="3756" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
          <source>The host is specified by an array of IP addresses and a port number.</source>
          <target state="translated">호스트는 IP 주소의 배열과 포트 번호로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="3757" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The socket to perform the connect operation on.</source>
          <target state="translated">연결 작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3758" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The name of the remote host.</source>
          <target state="translated">원격 호스트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="3759" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The port number of the remote host.</source>
          <target state="translated">원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="3760" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>Establishes a connection to a remote host.</source>
          <target state="translated">원격 호스트에 대한 연결을 설정합니다.</target>       </trans-unit>
        <trans-unit id="3761" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
          <source>The host is specified by a host name and a port number.</source>
          <target state="translated">호스트는 호스트 이름과 포트 번호로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="3762" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the receive operation on.</source>
          <target state="translated">수신 작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3763" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>An array that is the storage location for the received data.</source>
          <target state="translated">수신된 데이터의 저장소 위치에 해당하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="3764" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3765" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>Receive data from a connected socket.</source>
          <target state="translated">연결된 소켓에서 데이터를 수신합니다.</target>       </trans-unit>
        <trans-unit id="3766" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the receive operation on.</source>
          <target state="translated">수신 작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3767" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>An array that is the storage location for the received data.</source>
          <target state="translated">수신된 데이터의 저장소 위치에 해당하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="3768" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3769" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>Receives data from a connected socket.</source>
          <target state="translated">연결된 소켓에서 데이터를 수신합니다.</target>       </trans-unit>
        <trans-unit id="3770" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>The socket to perform the ReceiveFrom operation on.</source>
          <target state="translated">ReceiveFrom 작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3771" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An array of type Byte that is the storage location for the received data.</source>
          <target state="translated">수신된 데이터의 저장소 위치에 해당하는 Byte 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="3772" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3773" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An EndPoint that represents the source of the data.</source>
          <target state="translated">데이터 원본을 나타내는 끝점입니다.</target>       </trans-unit>
        <trans-unit id="3774" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>Receive data from a specified network device.</source>
          <target state="translated">지정한 네트워크 장치에서 데이터를 수신합니다.</target>       </trans-unit>
        <trans-unit id="3775" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3776" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An array that is the storage location for received data.</source>
          <target state="translated">수신된 데이터의 저장소 위치에 해당하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="3777" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3778" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>, that represents the remote server.</source>
          <target state="translated">원격 서버를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3779" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>, and stores the endpoint and packet information.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph>를 사용하여 데이터 버퍼의 지정된 위치에 지정된 바이트 수의 데이터를 수신하고 끝점 및 패킷 정보를 저장합니다.</target>       </trans-unit>
        <trans-unit id="3780" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3781" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>An array of type Byte that contains the data to send.</source>
          <target state="translated">전송할 데이터를 포함하는 Byte 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="3782" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3783" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
          <source>Sends data to a connected socket.</source>
          <target state="translated">데이터를 연결된 소켓으로 전송합니다.</target>       </trans-unit>
        <trans-unit id="3784" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3785" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>An array that contains the data to send.</source>
          <target state="translated">전송할 데이터가 들어 있는 배열입니다.</target>       </trans-unit>
        <trans-unit id="3786" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3787" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
          <source>Sends data to a connected socket.</source>
          <target state="translated">데이터를 연결된 소켓으로 전송합니다.</target>       </trans-unit>
        <trans-unit id="3788" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>The socket to perform the operation on.</source>
          <target state="translated">작업을 수행할 소켓입니다.</target>       </trans-unit>
        <trans-unit id="3789" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An array that contains the data to send.</source>
          <target state="translated">전송할 데이터가 들어 있는 배열입니다.</target>       </trans-unit>
        <trans-unit id="3790" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.SocketFlags" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="3791" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> that represents the remote device.</source>
          <target state="translated">원격 장치를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3792" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
          <source>Sends data asynchronously to a specific remote host.</source>
          <target state="translated">특정 원격 호스트에 데이터를 비동기적으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="3793" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The assembly to inspect.</source>
          <target state="translated">조사할 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="3794" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3795" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified assembly.</source>
          <target state="translated">지정된 어셈블리에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3796" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3797" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3798" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member.</source>
          <target state="translated">지정된 멤버에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3799" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3800" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3801" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3802" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 멤버에 적용되는 컬렉션을 검색하거나 선택적으로 해당 멤버의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3803" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The module to inspect.</source>
          <target state="translated">검사할 모듈입니다.</target>       </trans-unit>
        <trans-unit id="3804" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3805" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified module.</source>
          <target state="translated">지정된 모듈에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3806" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3807" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3808" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter.</source>
          <target state="translated">지정된 매개 변수에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3809" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3810" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3811" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3812" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 매개 변수에 적용되는 컬렉션을 검색하거나 선택적으로 해당 매개 변수의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3814" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
          <source>The assembly to inspect.</source>
          <target state="translated">조사할 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="3815" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified assembly.</source>
          <target state="translated">지정된 어셈블리에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3817" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3818" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member.</source>
          <target state="translated">지정된 멤버에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3820" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3821" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3822" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 멤버에 적용되는 컬렉션을 검색하거나 선택적으로 해당 멤버의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3824" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)">
          <source>The module to inspect.</source>
          <target state="translated">검사할 모듈입니다.</target>       </trans-unit>
        <trans-unit id="3825" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified module.</source>
          <target state="translated">지정된 모듈에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3827" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3828" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter.</source>
          <target state="translated">지정된 매개 변수에 적용된 지정된 형식의 사용자 지정 특성을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3830" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3831" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3832" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 매개 변수에 적용되는 컬렉션을 검색하거나 선택적으로 해당 매개 변수의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3833" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)">
          <source>The assembly to inspect.</source>
          <target state="translated">조사할 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="3834" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)">
          <source>Retrieves a collection of custom attributes that are applied to a specified assembly.</source>
          <target state="translated">지정된 어셈블리에 적용된 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3835" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The assembly to inspect.</source>
          <target state="translated">조사할 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="3836" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3837" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</source>
          <target state="translated">지정된 어셈블리에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3838" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3839" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)">
          <source>Retrieves a collection of custom attributes that are applied to a specified member.</source>
          <target state="translated">지정된 멤버에 적용된 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3840" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3841" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3842" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes that are applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">사용자 지정 특성이 지정된 멤버에 적용되는 컬렉션을 검색하거나 선택적으로 해당 멤버의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3843" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3844" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3845" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</source>
          <target state="translated">지정된 멤버에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3846" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3847" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3848" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3849" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 멤버에 적용되는 컬렉션을 검색하거나 선택적으로 해당 멤버의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3850" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)">
          <source>The module to inspect.</source>
          <target state="translated">검사할 모듈입니다.</target>       </trans-unit>
        <trans-unit id="3851" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)">
          <source>Retrieves a collection of custom attributes that are applied to a specified module.</source>
          <target state="translated">지정된 모듈에 적용된 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3852" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The module to inspect.</source>
          <target state="translated">검사할 모듈입니다.</target>       </trans-unit>
        <trans-unit id="3853" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3854" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</source>
          <target state="translated">지정된 모듈에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3855" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3856" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)">
          <source>Retrieves a collection of custom attributes that are applied to a specified parameter.</source>
          <target state="translated">지정된 매개 변수에 적용된 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3857" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3858" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3859" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">사용자 지정 특성이 지정된 매개 변수에 적용되는 컬렉션을 검색하거나 선택적으로 해당 매개 변수의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3860" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3861" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3862" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</source>
          <target state="translated">지정된 매개 변수에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3863" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3864" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3865" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3866" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 매개 변수에 적용되는 컬렉션을 검색하거나 선택적으로 해당 매개 변수의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3868" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)">
          <source>The assembly to inspect.</source>
          <target state="translated">조사할 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="3869" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</source>
          <target state="translated">지정된 어셈블리에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3871" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3872" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</source>
          <target state="translated">지정된 멤버에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3874" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3875" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3876" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 멤버에 적용되는 컬렉션을 검색하거나 선택적으로 해당 멤버의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3878" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)">
          <source>The module to inspect.</source>
          <target state="translated">검사할 모듈입니다.</target>       </trans-unit>
        <trans-unit id="3879" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</source>
          <target state="translated">지정된 모듈에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3881" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3882" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</source>
          <target state="translated">지정된 매개 변수에 적용된 지정된 형식의 사용자 지정 특성 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3884" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3885" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3886" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
          <source>Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 매개 변수에 적용되는 컬렉션을 검색하거나 선택적으로 해당 매개 변수의 상위 항목을 검사합니다.</target>       </trans-unit>
        <trans-unit id="3887" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The assembly to inspect.</source>
          <target state="translated">조사할 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="3888" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>The type of the attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3889" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified assembly.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 어셈블리에 적용되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3890" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3891" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3892" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified member.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 멤버에 적용되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3893" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The member to inspect.</source>
          <target state="translated">검사할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="3894" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>The type of the attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3895" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3896" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified member, and, optionally, applied to its ancestors.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 멤버에 적용되었는지, 또는 선택적으로 상위 항목에 적용되었는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="3897" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)">
          <source>The module to inspect.</source>
          <target state="translated">검사할 모듈입니다.</target>       </trans-unit>
        <trans-unit id="3898" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3899" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified module.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 모듈에 적용되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3900" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3901" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3902" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified parameter.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 매개 변수에 적용되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3903" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The parameter to inspect.</source>
          <target state="translated">검사할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3904" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">검색할 특성의 형식입니다.</target>       </trans-unit>
        <trans-unit id="3905" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to inspect the ancestors of <bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>element<ept id="p1">&lt;/c&gt;</ept>의 상위 요소를 검사하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3906" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
          <source>Indicates whether custom attributes of a specified type are applied to a specified parameter, and, optionally, applied to its ancestors.</source>
          <target state="translated">지정된 형식의 사용자 지정 특성이 지정된 매개 변수에 적용되는지, 또는 선택적으로 상위 항목에 적용되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3907" translate="yes" xml:space="preserve" uid="M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)">
          <source>The type to convert.</source>
          <target state="translated">변환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="3908" translate="yes" xml:space="preserve" uid="M:System.Reflection.IntrospectionExtensions.GetTypeInfo(System.Type)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Reflection.TypeInfo" /&gt;</ph> representation of the specified type.</source>
          <target state="translated">지정된 형식의 <ph id="ph1">&lt;see cref="T:System.Reflection.TypeInfo" /&gt;</ph> 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3909" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)">
          <source>The delegate to examine.</source>
          <target state="translated">검사할 대리자입니다.</target>       </trans-unit>
        <trans-unit id="3910" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)">
          <source>Gets an object that represents the method represented by the specified delegate.</source>
          <target state="translated">지정된 대리자가 나타내는 메서드를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3911" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)">
          <source>The method to retrieve information about.</source>
          <target state="translated">정보를 검색할 메서드입니다.</target>       </trans-unit>
        <trans-unit id="3912" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)">
          <source>Retrieves an object that represents the specified method on the direct or indirect base class where the method was first declared.</source>
          <target state="translated">메서드가 처음으로 선언된 직접 또는 간접 기본 클래스에서 지정된 메서드를 표현하는 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="3913" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)">
          <source>The type that contains the event.</source>
          <target state="translated">이벤트가 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3914" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)">
          <source>The name of the event.</source>
          <target state="translated">이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="3915" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)">
          <source>Retrieves an object that represents the specified event.</source>
          <target state="translated">지정된 이벤트를 나타내는 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="3916" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)">
          <source>The type that contains the events.</source>
          <target state="translated">이벤트가 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3917" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)">
          <source>Retrieves a collection that represents all the events defined on a specified type.</source>
          <target state="translated">지정된 형식에서 정의된 모든 메소드를 나타내는 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3918" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)">
          <source>The type that contains the field.</source>
          <target state="translated">필드가 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3919" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)">
          <source>The name of the field.</source>
          <target state="translated">@FSHO2@필드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="3920" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)">
          <source>Retrieves an object that represents a specified field.</source>
          <target state="translated">지정된 필드를 나타내는 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="3921" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)">
          <source>The type that contains the fields.</source>
          <target state="translated">필드가 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3922" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)">
          <source>Retrieves a collection that represents all the fields defined on a specified type.</source>
          <target state="translated">지정된 형식에서 정의된 모든 메소드를 나타내는 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3923" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)">
          <source>The type to retrieve a mapping for.</source>
          <target state="translated">매핑 대상을 검색하는 형식입니다.</target>       </trans-unit>
        <trans-unit id="3924" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)">
          <source>The interface to retrieve a mapping for.</source>
          <target state="translated">매핑을 검색할 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="3925" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)">
          <source>Returns an interface mapping for the specified type and the specified interface.</source>
          <target state="translated">지정된 형식과 지정된 인터페이스에 대한 인터페이스 매핑을 반환합니다.</target>       </trans-unit>
        <trans-unit id="3926" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>The type that contains the method.</source>
          <target state="translated">메서드가 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3927" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>The name of the method.</source>
          <target state="translated">메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="3928" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>An array that contains the method's parameters.</source>
          <target state="translated">매서드의 매개 변수를 포함하는 배열</target>       </trans-unit>
        <trans-unit id="3929" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])">
          <source>Retrieves an object that represents a specified method.</source>
          <target state="translated">지정된 메서드를 나타내는 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="3930" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)">
          <source>The type that contains the methods.</source>
          <target state="translated">메서드가 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3931" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)">
          <source>Retrieves a collection that represents all methods defined on a specified type.</source>
          <target state="translated">지정된 형식에 정의된 모든 메소드를 나타내는 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3932" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)">
          <source>The type that contains the properties.</source>
          <target state="translated">속성이 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3933" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)">
          <source>Retrieves a collection that represents all the properties defined on a specified type.</source>
          <target state="translated">지정된 형식에서 정의된 모든 속성을 나타내는 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="3934" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)">
          <source>The type that contains the property.</source>
          <target state="translated">속성이 포함된 형식입니다.</target>       </trans-unit>
        <trans-unit id="3935" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)">
          <source>The name of the property.</source>
          <target state="translated">속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="3936" translate="yes" xml:space="preserve" uid="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)">
          <source>Retrieves an object that represents a specified property.</source>
          <target state="translated">지정된 속성을 나타내는 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="3937" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
          <source>The serializer which is being surrogated.</source>
          <target state="translated">대신 사용되는 직렬 변환기입니다.</target>       </trans-unit>
        <trans-unit id="3938" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
          <source>Returns the surrogate serialization provider for this serializer.</source>
          <target state="translated">이 직렬 변환기의 서로게이트 serialization 공급자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="3939" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
          <source>The serializer which is being surrogated.</source>
          <target state="translated">대신 사용되는 직렬 변환기입니다.</target>       </trans-unit>
        <trans-unit id="3940" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
          <source>The surrogate serialization provider.</source>
          <target state="translated">서로게이트 serialization 공급자입니다.</target>       </trans-unit>
        <trans-unit id="3941" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
          <source>Specifies a surrogate serialization provider for this <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>의 서로게이트 serialization 공급자를 지정합니다.</target>       </trans-unit>
        <trans-unit id="3942" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)">
          <source>The DSA certificate.</source>
          <target state="translated">DSA 인증서입니다.</target>       </trans-unit>
        <trans-unit id="3943" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)">
          <source>The private DSA key.</source>
          <target state="translated">개인 DSA 키입니다.</target>       </trans-unit>
        <trans-unit id="3944" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.DSA)">
          <source>Combines a private key with the public key of a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> certificate to generate a new DSA certificate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 인증서의 공개 키와 개인 키를 결합하여 새 DSA 인증서를 생성합니다.</target>       </trans-unit>
        <trans-unit id="3945" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">인증서입니다.</target>       </trans-unit>
        <trans-unit id="3946" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> private key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 개인 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3947" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">인증서입니다.</target>       </trans-unit>
        <trans-unit id="3948" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.DSACertificateExtensions.GetDSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> public key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 공개 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3949" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)">
          <source>The ECDSA certificate.</source>
          <target state="translated">ECDSA 인증서입니다.</target>       </trans-unit>
        <trans-unit id="3950" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)">
          <source>The private ECDSA key.</source>
          <target state="translated">개인 ECDSA 키입니다.</target>       </trans-unit>
        <trans-unit id="3951" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.ECDsa)">
          <source>Combines a private key with the public key of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> certificate to generate a new ECDSA certificate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> 인증서의 공개 키와 개인 키를 결합하여 새 ECDSA 인증서를 생성합니다.</target>       </trans-unit>
        <trans-unit id="3952" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">인증서입니다.</target>       </trans-unit>
        <trans-unit id="3953" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> private key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> certificate.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> 인증서에서 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> 개인 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3954" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">인증서입니다.</target>       </trans-unit>
        <trans-unit id="3955" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions.GetECDsaPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> public key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> certificate.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> 인증서에서 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsa" /&gt;</ph> 공개 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3956" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSA)">
          <source>The RSA certificate.</source>
          <target state="translated">RSA 인증서입니다.</target>       </trans-unit>
        <trans-unit id="3957" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSA)">
          <source>The private RSA key.</source>
          <target state="translated">개인 RSA 키입니다.</target>       </trans-unit>
        <trans-unit id="3958" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.CopyWithPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSA)">
          <source>Combines a private key with the public key of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> certificate to generate a new RSA certificate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 인증서의 공개 키와 개인 키를 결합하여 새 RSA 인증서를 생성합니다.</target>       </trans-unit>
        <trans-unit id="3959" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">인증서입니다.</target>       </trans-unit>
        <trans-unit id="3960" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPrivateKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> private key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 개인 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3961" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The certificate.</source>
          <target state="translated">인증서입니다.</target>       </trans-unit>
        <trans-unit id="3962" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPublicKey(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> public key from the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>에서 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 공개 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3963" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.GetUserPrincipal(System.Net.Http.HttpRequestMessage)">
          <source>The HTTP request message from which to get the user principal.</source>
          <target state="translated">사용자 보안 주체의 가져오는 HTTP 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="3964" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.GetUserPrincipal(System.Net.Http.HttpRequestMessage)">
          <source>Gets the user principal associated with the specified HTTP request message.</source>
          <target state="translated">지정 HTTP 요청 메시지와 관련된 사용자 보안 주체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3965" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.SetUserPrincipal(System.Net.Http.HttpRequestMessage,System.Security.Principal.IPrincipal)">
          <source>The HTTP request message from which to set the user principal.</source>
          <target state="translated">사용자 보안 주체를 설정하는 HTTP 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="3966" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.SetUserPrincipal(System.Net.Http.HttpRequestMessage,System.Security.Principal.IPrincipal)">
          <source>The user principal to set.</source>
          <target state="translated">설정할 사용자 보안 주체입니다.</target>       </trans-unit>
        <trans-unit id="3967" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.SetUserPrincipal(System.Net.Http.HttpRequestMessage,System.Security.Principal.IPrincipal)">
          <source>Replaces the user principal associated with the specified HTTP request message.</source>
          <target state="translated">명시된 HTTP 요청 메시지와 관련된 사용자 본인을 교체한다</target>       </trans-unit>
        <trans-unit id="3968" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.ToMessage(System.Net.Http.HttpRequestMessage)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> from which to create the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> 인스턴스를 만들 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3969" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.ToMessage(System.Net.Http.HttpRequestMessage)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스에서 <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3970" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpResponseMessageExtensionMethods.ToMessage(System.Net.Http.HttpResponseMessage)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> from which to create the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> 인스턴스를 만들 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3971" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.HttpResponseMessageExtensionMethods.ToMessage(System.Net.Http.HttpResponseMessage)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스에서 <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3972" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpRequestMessage(System.ServiceModel.Channels.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from which to get the <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스를 가져올 원본 <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="3973" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpRequestMessage(System.ServiceModel.Channels.Message)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpRequestMessage" /&gt;</ph> 인스턴스에서 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3974" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpResponseMessage(System.ServiceModel.Channels.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance from which to get the <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스를 가져올 원본 <ph id="ph2">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="3975" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpResponseMessage(System.ServiceModel.Channels.Message)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> instance from an <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpResponseMessage" /&gt;</ph> 인스턴스에서 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3976" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
          <source>A string.</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="3977" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
          <source>Indicates whether the specified string is in Unicode normalization form C.</source>
          <target state="translated">지정한 문자열이 유니코드 정규화 형식 C인지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3978" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
          <source>A string.</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="3979" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
          <source>A Unicode normalization form.</source>
          <target state="translated">유니코드 정규화 형식입니다.</target>       </trans-unit>
        <trans-unit id="3980" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
          <source>Indicates whether a string is in a specified Unicode normalization form.</source>
          <target state="translated">문자열의 형식이 지정한 유니코드 정규화 형식인지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="3981" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String)">
          <source>The string to normalize.</source>
          <target state="translated">정규화할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="3982" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String)">
          <source>Normalizes a string to a Unicode normalization form C.</source>
          <target state="translated">유니코드 정규화 형식 C에 대한 문자열을 정규화합니다.</target>       </trans-unit>
        <trans-unit id="3983" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
          <source>The string to normalize.</source>
          <target state="translated">정규화할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="3984" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
          <source>The Unicode normalization form.</source>
          <target state="translated">유니코드 정규화 형식입니다.</target>       </trans-unit>
        <trans-unit id="3985" translate="yes" xml:space="preserve" uid="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
          <source>Normalizes a string to the specified Unicode normalization form.</source>
          <target state="translated">지정한 유니코드 정규화 형식에 대한 문자열을 정규화합니다.</target>       </trans-unit>
        <trans-unit id="3986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="3987" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source to wrap.</source>
          <target state="translated">래핑할 소스입니다.</target>       </trans-unit>
        <trans-unit id="3988" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph> abstraction over the <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph> 위에 새 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> 추상화를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Specifies the type of input accepted by the target block.</source>
          <target state="translated">대상 블록에서 허용하는 입력 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="3990" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The target to wrap.</source>
          <target state="translated">래핑할 대상입니다.</target>       </trans-unit>
        <trans-unit id="3991" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.IObserver`1" /&gt;</ph> abstraction over the  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> 위에 새 <ph id="ph1">&lt;see cref="T:System.IObserver`1" /&gt;</ph> 추상화를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="3993" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The source from which to link.</source>
          <target state="translated">링크할 소스입니다.</target>       </trans-unit>
        <trans-unit id="3994" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated">소스를 연결할 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3995" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Links the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>을 지정된 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 연결합니다.</target>       </trans-unit>
        <trans-unit id="3996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="3997" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The source from which to link.</source>
          <target state="translated">링크할 소스입니다.</target>       </trans-unit>
        <trans-unit id="3998" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated">소스를 연결할 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3999" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The filter a message must pass in order for it to propagate from the source to the target.</source>
          <target state="translated">메시지를 소스에서 대상까지 전파하도록 전달해야 하는 필터입니다.</target>       </trans-unit>
        <trans-unit id="4000" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>Links the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> using the specified filter.</source>
          <target state="translated">지정된 필터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>을 지정된 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 연결합니다.</target>       </trans-unit>
        <trans-unit id="4001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4002" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The source from which to link.</source>
          <target state="translated">링크할 소스입니다.</target>       </trans-unit>
        <trans-unit id="4003" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated">소스를 연결할 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4004" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>One of the enumeration values that specifies how to configure a link between dataflow blocks.</source>
          <target state="translated">데이터 흐름 블록 사이의 링크를 구성하는 방법을 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="4005" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The filter a message must pass in order for it to propagate from the source to the target.</source>
          <target state="translated">메시지를 소스에서 대상까지 전파하도록 전달해야 하는 필터입니다.</target>       </trans-unit>
        <trans-unit id="4006" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> using the specified filter.</source>
          <target state="translated">지정된 필터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>을 지정된 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 연결합니다.</target>       </trans-unit>
        <trans-unit id="4007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4008" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source to monitor.</source>
          <target state="translated">모니터링할 소스입니다.</target>       </trans-unit>
        <trans-unit id="4009" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that asynchronously monitors the source for available output.</source>
          <target state="translated">사용 가능한 출력에 대한 소스를 비동기적으로 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>을 제공합니다.</target>       </trans-unit>
        <trans-unit id="4010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4011" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source to monitor.</source>
          <target state="translated">모니터링할 소스입니다.</target>       </trans-unit>
        <trans-unit id="4012" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The cancellation token with which to cancel the asynchronous operation.</source>
          <target state="translated">비동기 작업을 취소하는 데 사용할 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="4013" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Provides a  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that asynchronously monitors the source for available output.</source>
          <target state="translated">사용 가능한 출력에 대한 소스를 비동기적으로 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>을 제공합니다.</target>       </trans-unit>
        <trans-unit id="4014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Specifies the type of data accepted by the target block.</source>
          <target state="translated">대상 블록에서 허용하는 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4015" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The target block.</source>
          <target state="translated">대상 블록입니다.</target>       </trans-unit>
        <trans-unit id="4016" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The item being offered to the target.</source>
          <target state="translated">대상에 제공되는 항목입니다.</target>       </trans-unit>
        <trans-unit id="4017" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Posts an item to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>에 항목을 게시합니다.</target>       </trans-unit>
        <trans-unit id="4018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="4019" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4020" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Synchronously receives a value from a specified source.</source>
          <target state="translated">지정된 소스에서 값을 동기적으로 받습니다.</target>       </trans-unit>
        <trans-unit id="4021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="4022" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4023" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">받기 작업을 취소하는 데 사용할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="4024" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Synchronously receives a value from a specified source and provides a token to cancel the operation.</source>
          <target state="translated">지정된 소스에서 값을 동기적으로 받고 작업을 취소하는 토큰을 제공합니다.</target>       </trans-unit>
        <trans-unit id="4025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="4026" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4027" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">동기 작업이 완료될 때까지 기다리는 최대 시간 간격(밀리초)이거나 무한히 대기하는 -1 밀리초를 나타내는 시간 간격입니다.</target>       </trans-unit>
        <trans-unit id="4028" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>Synchronously receives a value from a specified source, observing an optional time-out period.</source>
          <target state="translated">지정된 소스에서 값을 동기적으로 받으며 최적의 시간 초과 기간을 관찰합니다.</target>       </trans-unit>
        <trans-unit id="4029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="4030" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4031" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">동기 작업이 완료될 때까지 기다리는 최대 시간 간격(밀리초)이거나 무한히 대기하는 -1 밀리초를 나타내는 시간 간격입니다.</target>       </trans-unit>
        <trans-unit id="4032" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">받기 작업을 취소하는 데 사용할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="4033" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</source>
          <target state="translated">지정된 원본에서 값을 동기적으로 받으면서 작업을 취소하는 토큰을 제공하고 최적의 시간 초과 간격을 관찰합니다.</target>       </trans-unit>
        <trans-unit id="4034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="4035" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4036" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Asynchronously receives a value from a specified source.</source>
          <target state="translated">지정된 소스에서 값을 비동기적으로 받습니다.</target>       </trans-unit>
        <trans-unit id="4037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4038" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4039" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">받기 작업을 취소하는 데 사용할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="4040" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Asynchronously receives a value from a specified source and provides a token to cancel the operation.</source>
          <target state="translated">지정된 소스에서 값을 비동기적으로 받고 작업을 취소하는 토큰을 제공합니다.</target>       </trans-unit>
        <trans-unit id="4041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="4042" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4043" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">동기 작업이 완료될 때까지 기다리는 최대 시간 간격(밀리초)이거나 무한히 대기하는 -1 밀리초를 나타내는 시간 간격입니다.</target>       </trans-unit>
        <trans-unit id="4044" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>Asynchronously receives a value from a specified source, observing an optional time-out period.</source>
          <target state="translated">지정된 소스에서 값을 비동기적으로 받으며 최적의 시간 초과 기간을 관찰합니다.</target>       </trans-unit>
        <trans-unit id="4045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="4046" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">값을 받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4047" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">동기 작업이 완료될 때까지 기다리는 최대 시간 간격(밀리초)이거나 무한히 대기하는 -1 밀리초를 나타내는 시간 간격입니다.</target>       </trans-unit>
        <trans-unit id="4048" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The token which may be used to cancel the receive operation.</source>
          <target state="translated">받기 작업을 취소하는 데 사용할 수 있는 토큰입니다.</target>       </trans-unit>
        <trans-unit id="4049" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</source>
          <target state="translated">지정된 원본에서 값을 비동기적으로 받으면서 작업을 취소하는 토큰을 제공하고 최적의 시간 초과 간격을 관찰합니다.</target>       </trans-unit>
        <trans-unit id="4050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Specifies the type of the data to post to the target.</source>
          <target state="translated">대상에 게시할 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4051" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The target to which to post the data.</source>
          <target state="translated">데이터를 게시할 대상입니다.</target>       </trans-unit>
        <trans-unit id="4052" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The item being offered to the target.</source>
          <target state="translated">대상에 제공되는 항목입니다.</target>       </trans-unit>
        <trans-unit id="4053" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Asynchronously offers a message to the target message block, allowing for postponement.</source>
          <target state="translated">대상 메시지 블록에 메시지를 비동기적으로 제공하며, 연기를 허용합니다.</target>       </trans-unit>
        <trans-unit id="4054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>Specifies the type of the data to post to the target.</source>
          <target state="translated">대상에 게시할 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4055" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The target to which to post the data.</source>
          <target state="translated">데이터를 게시할 대상입니다.</target>       </trans-unit>
        <trans-unit id="4056" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The item being offered to the target.</source>
          <target state="translated">대상에 제공되는 항목입니다.</target>       </trans-unit>
        <trans-unit id="4057" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The cancellation token with which to request cancellation of the send operation.</source>
          <target state="translated">보내기 작업의 취소를 요청하는 데 사용할 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="4058" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>Asynchronously offers a message to the target message block, allowing for postponement.</source>
          <target state="translated">대상 메시지 블록에 메시지를 비동기적으로 제공하며, 연기를 허용합니다.</target>       </trans-unit>
        <trans-unit id="4059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">소스에 포함된 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="4060" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>The source from which to receive.</source>
          <target state="translated">받는 소스입니다.</target>       </trans-unit>
        <trans-unit id="4061" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>The item received from the source.</source>
          <target state="translated">소스에서 받은 항목입니다.</target>       </trans-unit>
        <trans-unit id="4062" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>Attempts to synchronously receive an item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>에서 항목을 비동기적으로 받으려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="4063" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
          <source>The <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;gt;" /&gt;</ph> (C#) or <ph id="ph2">&lt;see langword="Task (Of Task)" /&gt;</ph> (Visual Basic) to unwrap.</source>
          <target state="translated">래핑을 해제할 <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;gt;" /&gt;</ph>(C#) 또는 <ph id="ph2">&lt;see langword="Task (Of Task)" /&gt;</ph>(Visual Basic)입니다.</target>       </trans-unit>
        <trans-unit id="4064" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
          <source>Creates a proxy <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation of a <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>의 비동기 작업을 나타내는 프록시 <ph id="ph2">&lt;see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="4065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
          <source>The type of the task's result.</source>
          <target state="translated">작업 결과의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4066" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
          <source>The <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph> (C#) or <ph id="ph2">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph> (Visual Basic) to unwrap.</source>
          <target state="translated">래핑을 해제할 <ph id="ph1">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph>(C#) 또는 <ph id="ph2">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph>(Visual Basic)입니다.</target>       </trans-unit>
        <trans-unit id="4067" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
          <source>Creates a proxy <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation of a <ph id="ph2">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph> (C#) or <ph id="ph3">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph> (Visual Basic).</source>
          <target state="translated"><ph id="ph2">&lt;see langword="Task&amp;lt;Task&amp;lt;T&amp;gt;&amp;gt;" /&gt;</ph>(C#) 또는 <ph id="ph3">&lt;see langword="Task (Of Task(Of T))" /&gt;</ph>(Visual Basic)의 비동기 작업을 나타내는 프록시 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="4068" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source>A native operating system handle.</source>
          <target state="translated">네이티브 운영 체제 핸들입니다.</target>       </trans-unit>
        <trans-unit id="4069" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
          <source>Gets the safe handle for a native operating system wait handle.</source>
          <target state="translated">네이티브 운영 체제 대기 핸들에 대한 안전한 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="4070" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>A wait handle that encapsulates an operating system-specific object that waits for exclusive access to a shared resource.</source>
          <target state="translated">공유 리소스에 대한 단독 액세스를 기다리는 운영 체제별 개체를 캡슐화하는 대기 핸들입니다.</target>       </trans-unit>
        <trans-unit id="4071" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>The safe handle to wrap the operating system handle.</source>
          <target state="translated">운영 체제 핸들을 래핑할 안전한 핸들입니다.</target>       </trans-unit>
        <trans-unit id="4072" translate="yes" xml:space="preserve" uid="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
          <source>Sets a safe handle for a native operating system wait handle.</source>
          <target state="translated">네이티브 운영 체제 대기 핸들에 대한 안전한 핸들을 설정합니다.</target>       </trans-unit>
        <trans-unit id="4073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>The type of the single element.</source>
          <target state="translated">단일 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4074" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>The 1-element tuple to deconstruct into a separate variable.</source>
          <target state="translated">개별 변수 1개로 분해할 1개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4075" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>The value of the single element.</source>
          <target state="translated">단일 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4076" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)">
          <source>Deconstructs a tuple with 1 element into a separate variable.</source>
          <target state="translated">1개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4087" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The 10-element tuple to deconstruct into 10 separate variables.</source>
          <target state="translated">개별 변수 10개로 분해할 10개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4088" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4089" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4090" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4091" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4092" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4093" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4094" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4095" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4096" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4097" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4098" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
          <source>Deconstructs a tuple with 10 elements into separate variables.</source>
          <target state="translated">10개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4110" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The 11-element tuple to deconstruct into 11 separate variables.</source>
          <target state="translated">개별 변수 11개로 분해할 11개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4111" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4112" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4113" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4114" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4115" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4116" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4117" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4118" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4119" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4120" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4121" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4122" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
          <source>Deconstructs a tuple with 11 elements into separate variables.</source>
          <target state="translated">11개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4135" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The 12-element tuple to deconstruct into 12 separate variables.</source>
          <target state="translated">개별 변수 12개로 분해할 12개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4136" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4137" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4138" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4139" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4140" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4141" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4142" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4143" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4144" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4145" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4146" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4147" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4148" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
          <source>Deconstructs a tuple with 12 elements into separate variables.</source>
          <target state="translated">12개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4162" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The 13-element tuple to deconstruct into 13 separate variables.</source>
          <target state="translated">개별 변수 13개로 분해할 13개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4163" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4164" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4165" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4166" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4167" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4168" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4169" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4170" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4171" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4172" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4173" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4174" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4175" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4176" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
          <source>Deconstructs a tuple with 13 elements into separate variables.</source>
          <target state="translated">13개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4191" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The 14-element tuple to deconstruct into 14 separate variables.</source>
          <target state="translated">개별 변수 14개로 분해할 14개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4192" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4193" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4194" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4195" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4196" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4197" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4198" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4199" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4200" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4201" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4202" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4203" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4204" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4205" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4206" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
          <source>Deconstructs a tuple with 14 elements into separate variables.</source>
          <target state="translated">14개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">15번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4222" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The 15-element tuple to deconstruct into 15 separate variables.</source>
          <target state="translated">개별 변수 15개로 분해할 15개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4223" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4224" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4225" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4226" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4227" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4228" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4229" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4230" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4231" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4232" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4233" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4234" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4235" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4236" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4237" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">15번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4238" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
          <source>Deconstructs a tuple with 15 elements into separate variables.</source>
          <target state="translated">15개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">15번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">16번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4255" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The 16-element tuple to deconstruct into 16 separate variables.</source>
          <target state="translated">개별 변수 16개로 분해할 16개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4256" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4257" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4258" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4259" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4260" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4261" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4262" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4263" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4264" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4265" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4266" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4267" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4268" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4269" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4270" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">15번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4271" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">16번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4272" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
          <source>Deconstructs a tuple with 16 elements into separate variables.</source>
          <target state="translated">16개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">15번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">16번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">17번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4290" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The 17-element tuple to deconstruct into 17 separate variables.</source>
          <target state="translated">개별 변수 17개로 분해할 17개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4291" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4292" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4293" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4294" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4295" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4296" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4297" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4298" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4299" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4300" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4301" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4302" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4303" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4304" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4305" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">15번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4306" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">16번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4307" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4308" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
          <source>Deconstructs a tuple with 17 elements into separate variables.</source>
          <target state="translated">17개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">15번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">16번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">17번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">18번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4327" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The 18-element tuple to deconstruct into 18 separate variables.</source>
          <target state="translated">개별 변수 18개로 분해할 18개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4328" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4329" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4330" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4331" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4332" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4333" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4334" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4335" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4336" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4337" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4338" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4339" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4340" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4341" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4342" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">15번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4343" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">16번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4344" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4345" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4346" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
          <source>Deconstructs a tuple with 18 elements into separate variables.</source>
          <target state="translated">18개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">15번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">16번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">17번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">18번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The type of the nineteenth element.</source>
          <target state="translated">19번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4366" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The 19-element tuple to deconstruct into 19 separate variables.</source>
          <target state="translated">개별 변수 19개로 분해할 19개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4367" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4368" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4369" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4370" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4371" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4372" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4373" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4374" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4375" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4376" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4377" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4378" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4379" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4380" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4381" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">15번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4382" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">16번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4383" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4384" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4385" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>The value of the nineteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4386" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
          <source>Deconstructs a tuple with 19 elements into separate variables.</source>
          <target state="translated">19개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4389" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The 2-element tuple to deconstruct into 2 separate variables.</source>
          <target state="translated">개별 변수 2개로 분해할 2개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4390" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4391" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4392" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)">
          <source>Deconstructs a tuple with 2 elements into separate variables.</source>
          <target state="translated">2개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">15번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">16번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">17번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">18번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the nineteenth element.</source>
          <target state="translated">19번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The type of the twentieth element.</source>
          <target state="translated">20번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4413" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The 20-element tuple to deconstruct into 20 separate variables.</source>
          <target state="translated">개별 변수 20개로 분해할 20개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4414" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4415" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4416" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4417" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4418" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4419" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4420" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4421" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4422" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4423" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4424" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4425" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4426" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4427" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4428" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">15번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4429" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">16번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4430" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4431" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4432" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the nineteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4433" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>The value of the twentieth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">20번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4434" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
          <source>Deconstructs a tuple with 20 elements into separate variables.</source>
          <target state="translated">20개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the tenth element.</source>
          <target state="translated">열 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the eleventh element.</source>
          <target state="translated">11번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the twelfth element.</source>
          <target state="translated">12번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the thirteenth element.</source>
          <target state="translated">13번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fourteenth element.</source>
          <target state="translated">14번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the fifteenth element.</source>
          <target state="translated">15번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the sixteenth element.</source>
          <target state="translated">16번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the seventeenth element.</source>
          <target state="translated">17번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the eighteenth element.</source>
          <target state="translated">18번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the nineteenth element.</source>
          <target state="translated">19번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the twentieth element.</source>
          <target state="translated">20번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The type of the twenty-first element.</source>
          <target state="translated">21번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4456" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The 21-element tuple to deconstruct into 21 separate variables.</source>
          <target state="translated">개별 변수 21개로 분해할 21개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4457" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4458" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4459" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4460" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4461" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4462" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4463" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4464" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4465" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4466" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">열 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4467" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">11번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4468" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4469" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">13번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4470" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">14번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4471" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the fifteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">15번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4472" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the sixteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">16번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4473" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the seventeenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4474" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the eighteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4475" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the nineteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4476" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the twentieth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">20번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4477" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>The value of the twenty-first element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">21번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4478" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
          <source>Deconstructs a tuple with 21 elements into separate variables.</source>
          <target state="translated">21개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4482" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The 3-element tuple to deconstruct into 3 separate variables.</source>
          <target state="translated">개별 변수 3개로 분해할 3개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4483" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4484" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4485" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4486" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
          <source>Deconstructs a tuple with 3 elements into separate variables.</source>
          <target state="translated">3개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4491" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The 4-element tuple to deconstruct into 4 separate variables.</source>
          <target state="translated">개별 변수 4개로 분해할 4개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4492" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4493" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4494" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4495" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4496" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
          <source>Deconstructs a tuple with 4 elements into separate variables.</source>
          <target state="translated">4개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4502" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The 5-element tuple to deconstruct into 5 separate variables.</source>
          <target state="translated">개별 변수 5개로 분해할 5개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4503" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4504" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4505" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4506" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4507" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4508" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
          <source>Deconstructs a tuple with 5 elements into separate variables.</source>
          <target state="translated">5개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4515" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The 6-element tuple to deconstruct into 6 separate variables.</source>
          <target state="translated">개별 변수 6개로 분해할 6개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4516" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4517" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4518" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4519" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4520" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4521" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4522" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
          <source>Deconstructs a tuple with 6 elements into separate variables.</source>
          <target state="translated">6개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4530" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The 7-element tuple to deconstruct into 7 separate variables.</source>
          <target state="translated">개별 변수 7개로 분해할 7개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4531" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4532" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4533" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4534" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4535" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4536" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4537" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4538" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
          <source>Deconstructs a tuple with 7 elements into separate variables.</source>
          <target state="translated">7개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4547" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The 8-element tuple to deconstruct into 8 separate variables.</source>
          <target state="translated">개별 변수 8개로 분해할 8개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4548" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4549" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4550" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4551" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4552" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4553" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4554" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4555" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4556" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
          <source>Deconstructs a tuple with 8 elements into separate variables.</source>
          <target state="translated">8개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the eighth element.</source>
          <target state="translated">여덟 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The type of the ninth element.</source>
          <target state="translated">아홉 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4566" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The 9-element tuple to deconstruct into 9 separate variables.</source>
          <target state="translated">개별 변수 9개로 분해할 9개 요소가 포함된 튜플입니다.</target>       </trans-unit>
        <trans-unit id="4567" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the first element.</source>
          <target state="translated">첫 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4568" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the second element.</source>
          <target state="translated">두 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4569" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the third element.</source>
          <target state="translated">세 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4570" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the fourth element.</source>
          <target state="translated">네 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4571" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4572" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4573" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="4574" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4575" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>The value of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 값 또는 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="4576" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
          <source>Deconstructs a tuple with 9 elements into separate variables.</source>
          <target state="translated">9개 요소가 포함된 튜플을 개별 변수로 분해합니다.</target>       </trans-unit>
        <trans-unit id="4577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4578" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4579" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4590" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4591" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4603" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4604" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4617" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4618" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4632" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4633" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4648" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4649" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4665" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4666" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4683" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4684" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4702" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4703" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4722" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4723" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4743" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4744" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4747" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4748" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">20 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4769" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4770" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">20 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twenty-first element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">21 세기 요소의 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4792" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4793" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4797" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4798" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4803" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4804" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4810" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4811" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4818" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4819" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4827" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4828" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4837" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4838" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4848" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>The value tuple instance to convert to a tuple.</source>
          <target state="translated">튜플로 변환할 값 튜플 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="4849" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> structure to an instance of the  <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스를 <ph id="ph2">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4851" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4852" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4863" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4864" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4876" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4877" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4890" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4891" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4905" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4906" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4921" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4922" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4938" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4939" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4956" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4957" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4975" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4976" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="4995" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="4996" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="4997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="4999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5016" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5017" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5020" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5021" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">20 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5042" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5043" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the tenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">10 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eleventh element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">유형의 열 한 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twelfth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">12 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the thirteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">유형의 경우 13 번째 요소 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fourteenth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">열 네 번째 요소 유형 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the fifteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">유형의 열다섯 번째 요소입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the sixteenth element, ., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">열여섯 번째 요소의 형식입니다., 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the seventeenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>.</source>
          <target state="translated">17 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item3" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the eighteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>.</source>
          <target state="translated">18 번째 요소, 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item4" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the nineteenth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>.</source>
          <target state="translated">19 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item5" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twentieth element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>.</source>
          <target state="translated">20 번째 요소입니다., 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item6" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The type of the twenty-first element., or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>.</source>
          <target state="translated">21 세기 요소의 형식 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Rest.Item7" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5065" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5066" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5070" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5071" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5076" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5077" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5083" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5084" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5091" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5092" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5100" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5101" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5110" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5111" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the first element.</source>
          <target state="translated">첫 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the second element.</source>
          <target state="translated">두 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the third element.</source>
          <target state="translated">세 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the fourth element.</source>
          <target state="translated">네 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the fifth element.</source>
          <target state="translated">다섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the sixth element.</source>
          <target state="translated">여섯 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the seventh element.</source>
          <target state="translated">일곱 번째 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the eighth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>.</source>
          <target state="translated">여덟 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item1" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The type of the ninth element, or <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>.</source>
          <target state="translated">아홉 번째 요소의 형식을 또는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept><ph id="ph1">&lt;see langword=".Rest.Item2" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5121" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>The tuple object to convert to a value tuple</source>
          <target state="translated">값 튜플로 변환할 튜플 개체입니다.</target>       </trans-unit>
        <trans-unit id="5122" translate="yes" xml:space="preserve" uid="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})">
          <source>Converts an instance of the <ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> class to an instance of the  <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Tuple" /&gt;</ph> 클래스 인스턴스를 <ph id="ph2">&lt;see langword="ValueTuple" /&gt;</ph> 구조체 인스턴스로 변환합니다.</target>       </trans-unit>
        <trans-unit id="5123" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
          <source>The formatting options object, as defined by the <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> 개체로 정의되는 서식 옵션 개체입니다.</target>       </trans-unit>
        <trans-unit id="5124" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
          <source>The input value to be converted.</source>
          <target state="translated">변환할 입력 값입니다.</target>       </trans-unit>
        <trans-unit id="5125" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
          <source>Returns the value provided by a user for a control that is being validated.</source>
          <target state="translated">유효성을 검사할 컨트롤에 대해 사용자가 제공한 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5126" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
          <source>The data bound control.</source>
          <target state="translated">데이터 바인딩 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5127" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
          <source>Enables selection to be persisted in data controls that support selection and paging.</source>
          <target state="translated">선택 및 페이징을 지원하는 데이터 컨트롤에서 선택 영역이 유지되도록 합니다.</target>       </trans-unit>
        <trans-unit id="5128" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
          <source>The data source object.</source>
          <target state="translated">데이터 소스 개체입니다.</target>       </trans-unit>
        <trans-unit id="5129" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
          <source>Expands dynamic filters into <ph id="ph1">&lt;see langword="Where" /&gt;</ph> parameters that are usable by the data source.</source>
          <target state="translated">동적 필터를 데이터 소스에 사용 가능한 <ph id="ph1">&lt;see langword="Where" /&gt;</ph> 매개 변수로 확장합니다.</target>       </trans-unit>
        <trans-unit id="5130" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
          <source>A control inside the hierarchy of a data-bound control whose containing control you want to find.</source>
          <target state="translated">찾으려는 상위 컨트롤에 포함된 데이터 바인딩된 컨트롤의 계층 구조 내에 있는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5131" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
          <source>Returns the data source that is associated with the data control for the specified control.</source>
          <target state="translated">지정된 컨트롤에 대한 데이터 컨트롤에 연결된 데이터 소스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="5132" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
          <source>The containing control.</source>
          <target state="translated">상위 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5133" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
          <source>The name of the column.</source>
          <target state="translated">열 이름입니다.</target>       </trans-unit>
        <trans-unit id="5134" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
          <source>Returns the field template for the specified column in the specified control's naming container.</source>
          <target state="translated">지정된 컨트롤의 명명 컨테이너에서 지정된 열에 대한 필드 템플릿을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5135" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
          <source>The current control.</source>
          <target state="translated">현재 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5136" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
          <source>Returns the metatable object for the containing data control.</source>
          <target state="translated">상위 데이터 컨트롤에 대한 메타테이블 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="5137" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> instance to use.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="5138" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The field value to format.</source>
          <target state="translated">형식을 지정할 필드 값입니다.</target>       </trans-unit>
        <trans-unit id="5139" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>Formats the specified field value by using the specified formatting options.</source>
          <target state="translated">지정된 서식 옵션을 사용하여 지정된 필드 값의 서식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="5140" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> instance to use.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="5141" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>The field value to format.</source>
          <target state="translated">형식을 지정할 필드 값입니다.</target>       </trans-unit>
        <trans-unit id="5142" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
          <source>Formats the specified field value by using the specified formatting options.</source>
          <target state="translated">지정된 서식 옵션을 사용하여 지정된 필드 값의 서식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="5143" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)">
          <source>The data source for which to get the default values.</source>
          <target state="translated">기본값을 가져올 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="5144" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)">
          <source>Gets the collection of the default values for the specified data source.</source>
          <target state="translated">지정된 데이터 소스의 기본값에 대한 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="5145" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)">
          <source>The data control for which to get the default values.</source>
          <target state="translated">기본값을 가져올 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5146" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)">
          <source>Gets the collection of the default values for the specified data control.</source>
          <target state="translated">지정된 데이터 컨트롤의 기본값에 대한 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="5147" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
          <source>The column to get the enumeration type for.</source>
          <target state="translated">열거형 형식을 가져올 열입니다.</target>       </trans-unit>
        <trans-unit id="5148" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
          <source>Gets the type of the enumeration that represents the column.</source>
          <target state="translated">열을 나타내는 열거형의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="5149" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)">
          <source>The data source object for which to get the table metadata.</source>
          <target state="translated">테이블 메타데이터를 가져올 데이터 소스 개체입니다.</target>       </trans-unit>
        <trans-unit id="5150" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)">
          <source>Gets the metadata for a table in the specified data source object.</source>
          <target state="translated">지정된 데이터 소스 개체의 테이블에 대한 메타데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="5151" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)">
          <source>The data control for which to get the table metadata.</source>
          <target state="translated">테이블 메타데이터를 가져올 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5152" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)">
          <source>Gets the table metadata for the specified data control.</source>
          <target state="translated">지정한 데이터 컨트롤에 대한 테이블 메타데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="5153" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
          <source>The data source control.</source>
          <target state="translated">데이터 소스 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5154" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.MetaTable" /&gt;</ph> object that is associated with the specified data source control.</source>
          <target state="translated">지정된 데이터 소스 컨트롤에 연결된 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.MetaTable" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="5155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
          <source>The type of the entities that are returned by the data source.</source>
          <target state="translated">데이터 소스에서 반환되는 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5156" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
          <source>The LINQ data source to load the foreign keys from.</source>
          <target state="translated">외래 키를 로드할 LINQ 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="5157" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> value of a LINQ-to-SQL data source to force all the foreign-key entities to be loaded.</source>
          <target state="translated">모든 외래 키 엔터티가 로드되도록 LINQ to SQL 데이터 소스의 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="5158" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
          <source>The LINQ data source to load the foreign keys from.</source>
          <target state="translated">외래 키를 로드할 LINQ 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="5159" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
          <source>The type of the entities that are returned by the data source.</source>
          <target state="translated">데이터 소스에서 반환되는 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="5160" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> value of a LINQ-to-SQL data source to force all the foreign-key entities to be loaded.</source>
          <target state="translated">모든 외래 키 엔터티가 로드되도록 LINQ to SQL 데이터 소스의 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="5161" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">테이블이 포함된 <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="5162" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
          <source>The table metadata.</source>
          <target state="translated">테이블 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="5163" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
          <source>Sets the table metadata for the specified data control.</source>
          <target state="translated">지정한 데이터 컨트롤에 대한 테이블 메타데이터를 설정합니다.</target>       </trans-unit>
        <trans-unit id="5164" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">테이블이 포함된 <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="5165" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The table metadata.</source>
          <target state="translated">테이블 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="5166" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The default value mapping.</source>
          <target state="translated">기본값 매핑입니다.</target>       </trans-unit>
        <trans-unit id="5167" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Sets the table metadata and default value mapping for the specified data control.</source>
          <target state="translated">지정된 데이터 컨트롤에 대한 테이블 메타데이터 및 기본값 매핑을 설정합니다.</target>       </trans-unit>
        <trans-unit id="5168" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">테이블이 포함된 <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="5169" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>The table metadata.</source>
          <target state="translated">테이블 메타데이터입니다.</target>       </trans-unit>
        <trans-unit id="5170" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>The default value mapping.</source>
          <target state="translated">기본값 매핑입니다.</target>       </trans-unit>
        <trans-unit id="5171" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
          <source>Sets the table metadata and default value mapping for the specified data control.</source>
          <target state="translated">지정된 데이터 컨트롤에 대한 테이블 메타데이터 및 기본값 매핑을 설정합니다.</target>       </trans-unit>
        <trans-unit id="5172" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>The data source that contains the table.</source>
          <target state="translated">테이블을 포함하는 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="5173" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>When this method returns, contains the table metadata.</source>
          <target state="translated">이 메서드가 반환될 때 테이블 메타데이터가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5174" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="5175" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
          <source>Determines whether table metadata is available.</source>
          <target state="translated">테이블 메타데이터를 사용할 수 있는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="5176" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object that contains the table.</source>
          <target state="translated">테이블이 포함된 <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="5177" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>When this method returns, contains the table metadata.</source>
          <target state="translated">이 메서드가 반환될 때 테이블 메타데이터가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5178" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="5179" translate="yes" xml:space="preserve" uid="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
          <source>Determines whether table metadata is available.</source>
          <target state="translated">테이블 메타데이터를 사용할 수 있는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="5180" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
          <source>The data control to enable Dynamic Data behavior for.</source>
          <target state="translated">Dynamic Data 동작을 사용하도록 설정할 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5181" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
          <source>The type to use for metadata.</source>
          <target state="translated">메타데이터에 사용할 형식입니다.</target>       </trans-unit>
        <trans-unit id="5182" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
          <source>Enables Dynamic Data behavior for the specified data control.</source>
          <target state="translated">지정된 데이터 컨트롤에 Dynamic Data 동작을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="5183" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The data control to enable Dynamic Data behavior for.</source>
          <target state="translated">Dynamic Data 동작을 사용하도록 설정할 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5184" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The type to use for metadata.</source>
          <target state="translated">메타데이터에 사용할 형식입니다.</target>       </trans-unit>
        <trans-unit id="5185" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The default values to use with the <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> 개체와 함께 사용할 기본값입니다.</target>       </trans-unit>
        <trans-unit id="5186" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Enables Dynamic Data behavior for the specified data control.</source>
          <target state="translated">지정된 데이터 컨트롤에 Dynamic Data 동작을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="5187" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>The data control to enable Dynamic Data behavior for.</source>
          <target state="translated">Dynamic Data 동작을 사용하도록 설정할 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="5188" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>The type that represents the table to display.</source>
          <target state="translated">표시할 테이블을 나타내는 형식입니다.</target>       </trans-unit>
        <trans-unit id="5189" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>The default values to use with the <ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.INamingContainer" /&gt;</ph> 개체와 함께 사용할 기본값입니다.</target>       </trans-unit>
        <trans-unit id="5190" translate="yes" xml:space="preserve" uid="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
          <source>Enables Dynamic Data behavior for the specified data control.</source>
          <target state="translated">지정된 데이터 컨트롤에 Dynamic Data 동작을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="5191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>The generic type of the object.</source>
          <target state="translated">개체의 제네릭 형식입니다.</target>       </trans-unit>
        <trans-unit id="5192" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>The object to sort.</source>
          <target state="translated">정렬할 개체입니다.</target>       </trans-unit>
        <trans-unit id="5193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>The sort expression.</source>
          <target state="translated">정렬 식입니다.</target>       </trans-unit>
        <trans-unit id="5194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)">
          <source>Specifies a sort order.</source>
          <target state="translated">정렬 순서를 지정합니다.</target>       </trans-unit>
        <trans-unit id="5195" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">대리자를 실행하는 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="5196" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">실행할 대리자로, 인수를 사용하지 않으며 값을 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="5197" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>Executes the specified delegate asynchronously with normal priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>가 만들어진 스레드에서 보통 우선 순위에 있는 지정된 대리자를 비동기적으로 실행합니다.</target>       </trans-unit>
        <trans-unit id="5198" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">대리자를 실행하는 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="5199" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">실행할 대리자로, 인수를 사용하지 않으며 값을 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="5200" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The execution priority of the delegate relative to other pending operations in the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> event queue.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 이벤트 큐의 다른 보류 중인 작업에 상대적인 대리자의 실행 우선 순위입니다.</target>       </trans-unit>
        <trans-unit id="5201" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.BeginInvoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>Executes the specified delegate asynchronously with the specified priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>가 만들어진 스레드에서 지정된 우선 순위에 있는 지정된 대리자를 비동기적으로 실행합니다.</target>       </trans-unit>
        <trans-unit id="5202" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">대리자를 실행하는 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="5203" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">실행할 대리자로, 인수를 사용하지 않으며 값을 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="5204" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action)">
          <source>Executes the specified delegate synchronously with normal priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>가 만들어진 스레드에서 보통 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</target>       </trans-unit>
        <trans-unit id="5205" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">대리자를 실행하는 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="5206" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">실행할 대리자로, 인수를 사용하지 않으며 값을 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="5207" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>The maximum time to wait for the operation to finish.</source>
          <target state="translated">작업이 완료될 때까지 대기하는 최대 시간입니다.</target>       </trans-unit>
        <trans-unit id="5208" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan)">
          <source>Executes the specified delegate synchronously on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on, and stops execution after the specified time-out period.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>가 만들어진 스레드에서 지정된 대리자를 동기적으로 실행하고 지정된 제한 시간 후에 실행을 중지합니다.</target>       </trans-unit>
        <trans-unit id="5209" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">대리자를 실행하는 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="5210" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">실행할 대리자로, 인수를 사용하지 않으며 값을 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="5211" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The maximum time to wait for the operation to finish.</source>
          <target state="translated">작업이 완료될 때까지 대기하는 최대 시간입니다.</target>       </trans-unit>
        <trans-unit id="5212" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>The execution priority of the delegate relative to other pending operations in the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> event queue.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 이벤트 큐의 다른 보류 중인 작업에 상대적인 대리자의 실행 우선 순위입니다.</target>       </trans-unit>
        <trans-unit id="5213" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.TimeSpan,System.Windows.Threading.DispatcherPriority)">
          <source>Executes the specified delegate synchronously with the specified priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on, and stops execution after the specified time-out period.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>가 만들어진 스레드에서 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행하고 지정된 제한 시간 후에 실행을 중지합니다.</target>       </trans-unit>
        <trans-unit id="5214" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The dispatcher that executes the delegate.</source>
          <target state="translated">대리자를 실행하는 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="5215" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The delegate to execute, which takes no arguments and does not return a value.</source>
          <target state="translated">실행할 대리자로, 인수를 사용하지 않으며 값을 반환하지 않습니다.</target>       </trans-unit>
        <trans-unit id="5216" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>The execution priority of the delegate relative to other pending operations in the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> event queue.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 이벤트 큐의 다른 보류 중인 작업에 상대적인 대리자의 실행 우선 순위입니다.</target>       </trans-unit>
        <trans-unit id="5217" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherExtensions.Invoke(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
          <source>Executes the specified delegate synchronously with the specified priority on the thread that the specified <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> was created on.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>가 만들어진 스레드에서 지정된 우선 순위에 있는 지정된 대리자를 동기적으로 실행합니다.</target>       </trans-unit>
        <trans-unit id="5218" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>과 연결된 <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5219" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)">
          <source>Waits indefinitely for the underlying <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph> to complete.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>이 완료되기를 무기한 기다립니다.</target>       </trans-unit>
        <trans-unit id="5220" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>과 연결된 <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5221" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)">
          <source>The amount of time to wait.</source>
          <target state="translated">대기할 시간입니다.</target>       </trans-unit>
        <trans-unit id="5222" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)">
          <source>Waits for the specified amount of time for the underlying <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph> to complete.</source>
          <target state="translated">그런 다음 지정된 시간 동안 기본 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>이 완료되기를 기다립니다.</target>       </trans-unit>
        <trans-unit id="5223" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> to check.</source>
          <target state="translated">확인할 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5224" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)">
          <source>Returns a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> is associated with a <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherOperation" /&gt;</ph>과 연결되어 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5226" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5227" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of elements that contains the ancestors of every node in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 노드의 상위 항목이 들어 있는 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5229" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5230" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">일치시킬 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5231" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains the ancestors of every node in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 노드의 상위 항목이 들어 있는 필터링된 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5232" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>이 있는 요소만 컬렉션에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5233" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5234" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 상위 항목이 들어 있는 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5235" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5236" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">일치시킬 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5237" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.</source>
          <target state="translated">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 상위 항목이 들어 있는 필터링된 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5238" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>이 있는 요소만 컬렉션에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5239" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5240" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of the attributes of every element in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 요소의 특성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5241" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5242" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">일치시킬 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5243" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the attributes of every element in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 요소의 필터링된 특성 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5244" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>이 있는 요소만 컬렉션에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5246" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5247" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the descendant nodes of every document and element in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 문서 및 요소의 하위 노드 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5248" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5249" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.</source>
          <target state="translated">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 노드가 들어 있는 노드 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5251" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5252" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of elements that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 요소 및 문서의 하위 요소가 들어 있는 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5254" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5255" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">일치시킬 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5256" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 요소 및 문서의 하위 요소가 들어 있는 필터링된 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>이 있는 요소만 컬렉션에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
          <source>Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.</source>
          <target state="translated">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 요소가 들어 있는 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5260" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5261" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">일치시킬 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5262" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection.</source>
          <target state="translated">소스 컬렉션의 모든 요소와 소스 컬렉션에 있는 모든 요소의 하위 항목이 들어 있는 필터링된 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5263" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>이 있는 요소만 컬렉션에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5265" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5266" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the child elements of every element and document in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 요소 및 문서의 자식 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5268" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5269" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> to match.</source>
          <target state="translated">일치시킬 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5270" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Returns a filtered collection of the child elements of every element and document in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 요소 및 문서의 필터링된 자식 요소 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5271" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
          <source>Only elements that have a matching <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph> are included in the collection.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XName" /&gt;</ph>이 있는 요소만 컬렉션에 포함됩니다.</target>       </trans-unit>
        <trans-unit id="5272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5273" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5274" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.</source>
          <target state="translated">소스 컬렉션의 모든 노드가 문서 순으로 정렬되어 들어 있는 노드 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XContainer" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5276" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5277" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Returns a collection of the child nodes of every document and element in the source collection.</source>
          <target state="translated">소스 컬렉션에 있는 모든 문서 및 요소의 자식 노드 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="5278" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5279" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
          <source>Removes every attribute in the source collection from its parent element.</source>
          <target state="translated">부모 요소에서 소스 컬렉션의 모든 특성을 제거합니다.</target>       </trans-unit>
        <trans-unit id="5280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the objects in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, constrained to <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">에 있는 개체의 형식 <bpt id="p1">&lt;c&gt;</bpt>소스<ept id="p1">&lt;/c&gt;</ept>로 제한 된 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="5281" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that contains the source collection.</source>
          <target state="translated">소스 컬렉션이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5282" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Removes every node in the source collection from its parent node.</source>
          <target state="translated">부모 노드에서 소스 컬렉션의 모든 노드를 제거합니다.</target>       </trans-unit>
        <trans-unit id="5283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that has been previously validated.</source>
          <target state="translated">이전에 유효성을 검사한 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5284" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated attribute.</source>
          <target state="translated">유효성이 검사된 특성의 PSVI(스키마 유효성 검사 이후 정보 집합)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="5285" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that has been previously validated.</source>
          <target state="translated">이전에 유효성을 검사한 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5286" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated element.</source>
          <target state="translated">유효성이 검사된 요소의 PSVI(스키마 유효성 검사 이후 정보 집합)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="5287" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to validate.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5288" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">유효성을 검사할 하위 트리를 지정하는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5289" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5290" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5291" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="5292" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>가 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>을 준수하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="5293" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to validate.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5294" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">유효성을 검사할 하위 트리를 지정하는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5295" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5296" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5297" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="5298" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">PSVI(스키마 유효성 검사 이후 정보 집합)를 채울지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>가 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>을 준수하는지 확인하고, 선택적으로 XML 트리를 PSVI(스키마 유효성 검사 이후 정보 집합)로 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="5300" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to validate.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5301" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5302" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5303" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="5304" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> conforms to an XSD in an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에서 XSD를 준수하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="5305" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to validate.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5306" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5307" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5308" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="5309" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">PSVI(스키마 유효성 검사 이후 정보 집합)를 채울지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5310" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> conforms to an XSD in an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>에서 XSD를 준수하는지 확인하고, 선택적으로 XML 트리를 PSVI(스키마 유효성 검사 이후 정보 집합)로 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="5311" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to validate.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5312" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">유효성을 검사할 하위 트리를 지정하는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5313" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5314" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5315" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="5316" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> sub-tree conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> 하위 트리가 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>을 준수하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="5317" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to validate.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated">유효성을 검사할 하위 트리를 지정하는 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5320" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">판독기에서 유효성 검사 오류를 발견했을 때 수행되는 이벤트의 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5321" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우 유효성 검사 오류가 있을 때 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="5322" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">PSVI(스키마 유효성 검사 이후 정보 집합)를 채울지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5323" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> sub-tree conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> 하위 트리가 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>을 준수하는지 확인하고, 선택적으로 XML 트리를 PSVI(스키마 유효성 검사 이후 정보 집합)로 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="5324" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that can process XPath queries.</source>
          <target state="translated">XPath 쿼리를 처리할 수 있는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5325" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>에 대해 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="5326" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> that can process an XPath query.</source>
          <target state="translated">XPath 쿼리를 처리할 수 있는 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5327" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to be used by <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>에 사용할 <ph id="ph2">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5328" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph>에 대해 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="5329" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> enables more efficient XPath expression processing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>을 사용하면 보다 효율적으로 XPath 식을 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="5330" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식을 평가할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5331" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5332" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
          <source>Evaluates an XPath expression.</source>
          <target state="translated">XPath 식을 평가합니다.</target>       </trans-unit>
        <trans-unit id="5333" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식을 평가할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5334" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5335" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">XPath 식의 네임스페이스 접두사에 대한 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5336" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Evaluates an XPath expression, resolving namespace prefixes using the specified <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">XPath 식을 평가하고 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>를 사용하여 네임스페이스 접두사를 확인합니다.</target>       </trans-unit>
        <trans-unit id="5337" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식을 평가할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5338" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5339" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
          <source>Selects an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> using a XPath expression.</source>
          <target state="translated">XPath 식을 사용하여 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>를 선택합니다.</target>       </trans-unit>
        <trans-unit id="5340" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식을 평가할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5341" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5342" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">XPath 식의 네임스페이스 접두사에 대한 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5343" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Selects an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> using a XPath expression, resolving namespace prefixes using the specified <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">XPath 식을 사용하여 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>를 선택하고 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>를 사용하여 네임스페이스 접두사를 확인합니다.</target>       </trans-unit>
        <trans-unit id="5344" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식을 평가할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5345" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5346" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
          <source>Selects a collection of elements using an XPath expression.</source>
          <target state="translated">XPath 식을 사용하여 요소 컬렉션을 선택합니다.</target>       </trans-unit>
        <trans-unit id="5347" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> on which to evaluate the XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식을 평가할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5348" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains an XPath expression.</source>
          <target state="translated">@FSHO3@XPath 식이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5349" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> for the namespace prefixes in the XPath expression.</source>
          <target state="translated">XPath 식의 네임스페이스 접두사에 대한 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="5350" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
          <source>Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>.</source>
          <target state="translated">XPath 식을 사용하여 요소 컬렉션을 선택하고 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>를 사용하여 네임스페이스 접두사를 확인합니다.</target>       </trans-unit>
        <trans-unit id="5351" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)">
          <source>The XML node to navigate.</source>
          <target state="translated">탐색할 XML 노드입니다.</target>       </trans-unit>
        <trans-unit id="5352" translate="yes" xml:space="preserve" uid="M:System.Xml.XPath.XDocumentExtensions.ToXPathNavigable(System.Xml.Linq.XNode)">
          <source>Returns an accessor that allows you to navigate and edit the specified <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>를 탐색하고 편집할 수 있는 접근자를 반환합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>