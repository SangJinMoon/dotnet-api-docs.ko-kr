<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6fdfc-101">현재 설치에 대한 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-101">Contains information about the current installation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdfc-102">일반적으로 <xref:System.Configuration.Install.InstallContext> 실행 InstallUtil.exe 어셈블리를 설치 하는 등 설치 프로그램에 의해 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-102">Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.</span></span> <span data-ttu-id="6fdfc-103">설치 프로그램을 호출 하는 <xref:System.Configuration.Install.InstallContext> 생성자, 기본 로그 파일 경로 및 명령줄 매개 변수를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-103">The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.</span></span>  
  
 <span data-ttu-id="6fdfc-104">호출 하기 전에 해당 <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, 또는 <xref:System.Configuration.Install.Installer.Uninstall%2A> 메서드, 설치 프로그램에서는 설정 설정는 <xref:System.Configuration.Install.Installer.Context%2A> 속성의는 <xref:System.Configuration.Install.Installer> 인스턴스에 <xref:System.Configuration.Install.InstallContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-104">Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>.</span></span> <span data-ttu-id="6fdfc-105">이러한 메서드를 호출 하기 전에 <xref:System.Configuration.Install.Installer> 에서 설치 관리자 컬렉션을 포함 하는 <xref:System.Configuration.Install.Installer.Installers%2A> 속성 집합은 <xref:System.Configuration.Install.Installer.Context%2A> 각 포함 된 설치 관리자의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-105">Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.</span></span>  
  
 <span data-ttu-id="6fdfc-106"><xref:System.Configuration.Install.InstallContext.Parameters%2A> 속성 설치 실행 파일을 실행 하기 위해 입력 되는 명령줄의 구문 분석 된 버전을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-106">The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable.</span></span> <span data-ttu-id="6fdfc-107">속성의 경로를 로그 파일, 콘솔에서 로그 정보를 표시할 것인지 및 설치 하는 동안 사용자 인터페이스를 표시할지 여부를 같은 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-107">The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.</span></span> <span data-ttu-id="6fdfc-108">호출 된 <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> 명령줄 매개 변수 인지 확인 하려면 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-108">Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.</span></span>  
  
 <span data-ttu-id="6fdfc-109">사용 하 여는 <xref:System.Configuration.Install.InstallContext.LogMessage%2A> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-109">Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdfc-110">다음 예제는 <xref:System.Configuration.Install.InstallContext.%23ctor%2A> 생성자는 <xref:System.Configuration.Install.InstallContext.Parameters%2A> 속성 및 <xref:System.Configuration.Install.InstallContext.LogMessage%2A> 및 <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> 의 메서드는 <xref:System.Configuration.Install.InstallContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-110">The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="6fdfc-111">경우는 <xref:System.Configuration.Install.Installer.Install%2A> 명령줄에서 매개 변수에 대 한 검사에서 설치 관리자의 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-111">When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line.</span></span> <span data-ttu-id="6fdfc-112">에 따라 콘솔에 진행률 메시지를 표시 하 고 지정된 된 로그 파일에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-112">Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.</span></span>  
  
 <span data-ttu-id="6fdfc-113">인수는 빈 없이 프로그램을 호출 하는 경우 <xref:System.Configuration.Install.InstallContext> 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-113">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span> <span data-ttu-id="6fdfc-114">때 "/ 로그 파일" 및 "/ LogtoConsole" 지정 된는 <xref:System.Configuration.Install.InstallContext> 해당 인수를 전달 하 여 만든 <xref:System.Configuration.Install.InstallContext.%23ctor%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-114">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6fdfc-115"><see cref="T:System.Configuration.Install.InstallContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-115">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6fdfc-116"><see cref="T:System.Configuration.Install.InstallContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-116">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdfc-117">이 오버 로드는 설치에 대 한 로그 파일을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-117">This overload does not create a log file for the installation.</span></span>  
  
   
  
## Examples  
  
> [!NOTE]
>  <span data-ttu-id="6fdfc-118">오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 주는이 예제는 <xref:System.Configuration.Install.InstallContext> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-118">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor.</span></span> <span data-ttu-id="6fdfc-119">사용할 수 있는 다른 예제를 오버 로드 개별 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-119">For other examples that might be available, see the individual overload topics.</span></span>  
  
 <span data-ttu-id="6fdfc-120">인수는 빈 없이 프로그램을 호출 하는 경우 <xref:System.Configuration.Install.InstallContext> 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-120">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath"><span data-ttu-id="6fdfc-121">이 설치의 로그 파일 경로이거나, 로그 파일을 만들지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-121">The path to the log file for this installation, or <see langword="null" /> if no log file should be created.</span></span></param>
        <param name="commandLine"><span data-ttu-id="6fdfc-122">설치 프로그램 실행 시 입력했던 명령줄 매개 변수이거나, 매개 변수를 입력하지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-122">The command-line parameters entered when running the installation program, or <see langword="null" /> if none were entered.</span></span></param>
        <summary><span data-ttu-id="6fdfc-123"><see cref="T:System.Configuration.Install.InstallContext" /> 클래스의 새 인스턴스를 초기화하고, 설치 로그 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-123">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdfc-124">설치를 사용 하는 경우 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md),이 생성자 지정된 된 경로에 로그 파일을 만들고 배열을에 명령줄 매개 변수를 구문 분석 하는 <xref:System.Configuration.Install.InstallContext.Parameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-124">If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="6fdfc-125">명령줄 매개 변수에서 로그 파일 경로 지정 하는 경우 파일을 만들 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-125">If a log-file path is specified in the command-line parameters, it is used to create the file.</span></span> <span data-ttu-id="6fdfc-126">명령줄의 값에 로그 파일 인수를 지정 하지 않은 경우는 `logFilePath` 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-126">If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used.</span></span> <span data-ttu-id="6fdfc-127">로그 파일 생성을 억제 하려면 전달 된 "/ 로그 파일 =" 명령줄 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-127">To suppress the creation of a log file, pass the "/logfile= " command-line parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdfc-128">이 예제는 예제 클래스의 개요에 설명의 일부 <xref:System.Configuration.Install.InstallContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-128">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="6fdfc-129">때 "/ 로그 파일" 및 "/ LogtoConsole" 지정 된는 <xref:System.Configuration.Install.InstallContext> 해당 인수를 전달 하 여 만든 <xref:System.Configuration.Install.InstallContext.%23ctor%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-129">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="6fdfc-130">전달의 기본 로그 파일 경로 <paramref name="logFilePath" /> 이 생성자를 호출할 때 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-130">Pass your default log-file path in the <paramref name="logFilePath" /> parameter when you call this constructor.</span></span> <span data-ttu-id="6fdfc-131">이것은 where 설치 실행 파일 실행 시 /logfile 명령줄 매개 변수를 사용 하지 않으면 로그 파일은 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-131">This is the where the log file is created, unless the /logfile command-line parameter is used when the installation executable is run.</span></span></para>
        </block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="6fdfc-132">확인할 명령줄 매개 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-132">The name of the command-line parameter to check.</span></span></param>
        <summary><span data-ttu-id="6fdfc-133">지정한 명령줄 매개 변수가 <see langword="true" />인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-133">Determines whether the specified command-line parameter is <see langword="true" />.</span></span></summary>
        <returns>
          <span data-ttu-id="6fdfc-134">지정한 매개 변수가 "yes", "true", "1" 또는 빈 문자열("")로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-134"><see langword="true" /> if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdfc-135">이 메서드가 액세스는 <xref:System.Configuration.Install.InstallContext.Parameters%2A> 구문 분석 된 버전을 지정된 된 매개 변수 인지 확인 하는 명령줄 매개 변수를 포함 된 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-135">This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdfc-136">이 예제는 클래스의 개요에에서 샘플의 일부는 <xref:System.Configuration.Install.InstallContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-136">This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="6fdfc-137">사용 하 여는 <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> 했는지 확인 하는 메서드는 `LogtoConsole` 매개 변수가 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-137">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="6fdfc-138">경우 `yes`, 다음을 사용 합니다는 <xref:System.Configuration.Install.InstallContext.LogMessage%2A> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-138">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="6fdfc-139">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-139">The message to write.</span></span></param>
        <summary><span data-ttu-id="6fdfc-140">콘솔과 설치 로그 파일에 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-140">Writes a message to the console and to the log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdfc-141">설치 관리자 로그 파일에 쓰기 진행률 또는 기타 상태 정보를이 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-141">An installer can call this method to write progress or other status information to the log file.</span></span> <span data-ttu-id="6fdfc-142">설치 관리자 메시지 상자를 표시 해야 하거나 호출 외에도 쿼리를 수행할 사용자 인터페이스를 표시 해야 함을 지정 하는 명령줄 매개 변수를는 <xref:System.Configuration.Install.InstallContext.LogMessage%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-142">If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method.</span></span> <span data-ttu-id="6fdfc-143">로그 파일에 기록 된 텍스트는 설치를 실행 하려면 InstallUtil.exe를 사용 하지 않으면 사용자가 표시 되지 것입니다 및 "/ LogToConsole = true" 명령줄에 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-143">Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and "/LogToConsole= true" is specified in the command line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdfc-144">이 예제는 예제 클래스의 개요에 설명의 일부 <xref:System.Configuration.Install.InstallContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-144">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="6fdfc-145">사용 하 여는 <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> 했는지 확인 하는 메서드는 `LogtoConsole` 매개 변수가 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-145">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="6fdfc-146">경우 `yes`, 다음을 사용 합니다는 <xref:System.Configuration.Install.InstallContext.LogMessage%2A> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-146">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6fdfc-147">InstallUtil.exe를 실행 시 입력했던 명령줄 매개 변수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-147">Gets the command-line parameters that were entered when InstallUtil.exe was run.</span></span></summary>
        <value><span data-ttu-id="6fdfc-148">설치 실행 파일 실행 시 입력했던 명령줄 매개 변수를 나타내는 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-148">A <see cref="T:System.Collections.Specialized.StringDictionary" /> that represents the command-line parameters that were entered when the installation executable was run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fdfc-149">새 <xref:System.Configuration.Install.InstallContext> 만들어지면 명령줄 매개 변수를 구문 분석은 <xref:System.Configuration.Install.InstallContext.Parameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-149">When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="6fdfc-150">키 및 매개 변수 값이 모두는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-150">Both the keys and the values of the parameters are strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fdfc-151">이 예제는 예제 클래스의 개요에 설명의 일부 <xref:System.Configuration.Install.InstallContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-151">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="6fdfc-152">샘플 검색는 <xref:System.Configuration.Install.InstallContext.Parameters%2A> 속성을 사용자가 모든 명령줄 인수를 입력 하는 경우를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-152">The sample retrieves the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property to see if any command line argument has been entered by the user.</span></span> <span data-ttu-id="6fdfc-153">또한 사용 하 여는 <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> 했는지 확인 하는 메서드는 `LogtoConsole` 매개 변수가 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-153">It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="6fdfc-154">경우 `yes`, 다음을 사용 합니다는 <xref:System.Configuration.Install.InstallContext.LogMessage%2A> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-154">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="6fdfc-155">명령줄 매개 변수를 포함하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-155">An array containing the command-line parameters.</span></span></param>
        <summary><span data-ttu-id="6fdfc-156">명령줄 매개 변수의 구문을 분석하여 문자열 사전에 포함시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-156">Parses the command-line parameters into a string dictionary.</span></span></summary>
        <returns><span data-ttu-id="6fdfc-157">구문 분석된 명령줄 매개 변수를 포함하는 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="6fdfc-157">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>