<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InstallContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50866b9a8d8027df2cd3f53a8dc6b20d77983798f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0866b9a8d8027df2cd3f53a8dc6b20d77983798f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.Install.InstallContext">
          <source>Contains information about the current installation.</source>
          <target state="translated">현재 설치에 대한 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>Typically, an <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 실행 InstallUtil.exe 어셈블리를 설치 하는 등 설치 프로그램에 의해 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>The installation program invokes the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> constructor, passing it the default log-file path and command-line parameters.</source>
          <target state="translated">설치 프로그램을 호출 하는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 생성자, 기본 로그 파일 경로 및 명령줄 매개 변수를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>Prior to calling its <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Commit%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Rollback%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph> methods, the installation program sets the <ph id="ph5">&lt;xref:System.Configuration.Install.Installer.Context%2A&gt;</ph> property of an <ph id="ph6">&lt;xref:System.Configuration.Install.Installer&gt;</ph> to the instance of <ph id="ph7">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph>.</source>
          <target state="translated">호출 하기 전에 해당 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Commit%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Rollback%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph> 메서드, 설치 프로그램에서는 설정 설정는 <ph id="ph5">&lt;xref:System.Configuration.Install.Installer.Context%2A&gt;</ph> 속성의는 <ph id="ph6">&lt;xref:System.Configuration.Install.Installer&gt;</ph> 인스턴스에 <ph id="ph7">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>Before calling these methods, an <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> that contains an installer collection in the <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> property sets the <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Context%2A&gt;</ph> property of each contained installer.</source>
          <target state="translated">이러한 메서드를 호출 하기 전에 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer&gt;</ph> 에서 설치 관리자 컬렉션을 포함 하는 <ph id="ph2">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> 속성 집합은 <ph id="ph3">&lt;xref:System.Configuration.Install.Installer.Context%2A&gt;</ph> 각 포함 된 설치 관리자의 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property contains a parsed version of the command line that is entered to run the installation executable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> 속성 설치 실행 파일을 실행 하기 위해 입력 되는 명령줄의 구문 분석 된 버전을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.</source>
          <target state="translated">속성의 경로를 로그 파일, 콘솔에서 로그 정보를 표시할 것인지 및 설치 하는 동안 사용자 인터페이스를 표시할지 여부를 같은 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>Call the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> method to find out whether a command-line parameter is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> 명령줄 매개 변수 인지 확인 하려면 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>Use the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> method to write status messages to the installation log file and the console.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.%23ctor%2A&gt;</ph> constructors, the <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> methods of the <ph id="ph5">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> class.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.%23ctor%2A&gt;</ph> 생성자는 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> 의 메서드는 <ph id="ph5">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>When the <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph> method of the installer is called, it checks for parameters from the command line.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph> 명령줄에서 매개 변수에 대 한 검사에서 설치 관리자의 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.</source>
          <target state="translated">에 따라 콘솔에 진행률 메시지를 표시 하 고 지정된 된 로그 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>When the program is invoked without any arguments, an empty <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created.</source>
          <target state="translated">인수는 빈 없이 프로그램을 호출 하는 경우 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 만들어집니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.Install.InstallContext">
          <source>When "/LogFile" and "/LogtoConsole" are specified, the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created by passing the respective arguments to <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">때 "/ 로그 파일" 및 "/ LogtoConsole" 지정 된는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 해당 인수를 전달 하 여 만든 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.%23ctor%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Configuration.Install.InstallContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.Install.InstallContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.Install.InstallContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.Install.InstallContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.Install.InstallContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor">
          <source>This overload does not create a log file for the installation.</source>
          <target state="translated">이 오버 로드는 설치에 대 한 로그 파일을 만들지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor">
          <source>This example shows how to use one of the overloaded versions of the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> constructor.</source>
          <target state="translated">오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">사용할 수 있는 다른 예제를 오버 로드 개별 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor">
          <source>When the program is invoked without any arguments, an empty <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created.</source>
          <target state="translated">인수는 빈 없이 프로그램을 호출 하는 경우 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 만들어집니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>The path to the log file for this installation, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no log file should be created.</source>
          <target state="translated">이 설치의 로그 파일 경로이거나, 로그 파일을 만들지 않은 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>The command-line parameters entered when running the installation program, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if none were entered.</source>
          <target state="translated">설치 프로그램 실행 시 입력했던 명령줄 매개 변수이거나, 매개 변수를 입력하지 않은 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.Install.InstallContext" /&gt;</ph> class, and creates a log file for the installation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.Install.InstallContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고, 설치 로그 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>If the installation uses <bpt id="p1">[</bpt>Installutil.exe (Installer Tool)<ept id="p1">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept>, this constructor creates a log file at the specified path and parses the array of command-line parameters into the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property.</source>
          <target state="translated">설치를 사용 하는 경우 <bpt id="p1">[</bpt>Installutil.exe (설치 관리자 도구)<ept id="p1">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept>,이 생성자 지정된 된 경로에 로그 파일을 만들고 배열을에 명령줄 매개 변수를 구문 분석 하는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>If a log-file path is specified in the command-line parameters, it is used to create the file.</source>
          <target state="translated">명령줄 매개 변수에서 로그 파일 경로 지정 하는 경우 파일을 만들 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>If the log file argument is not specified in the command line, the value of the <ph id="ph1">`logFilePath`</ph> parameter is used.</source>
          <target state="translated">명령줄의 값에 로그 파일 인수를 지정 하지 않은 경우는 <ph id="ph1">`logFilePath`</ph> 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>To suppress the creation of a log file, pass the "/logfile= " command-line parameter.</source>
          <target state="translated">로그 파일 생성을 억제 하려면 전달 된 "/ 로그 파일 =" 명령줄 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>This example is an excerpt of the example in the class overview of <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> class.</source>
          <target state="translated">이 예제는 예제 클래스의 개요에 설명의 일부 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>When "/LogFile" and "/LogtoConsole" are specified, the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created by passing the respective arguments to <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">때 "/ 로그 파일" 및 "/ LogtoConsole" 지정 된는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 해당 인수를 전달 하 여 만든 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.%23ctor%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>Pass your default log-file path in the <ph id="ph1">&lt;paramref name="logFilePath" /&gt;</ph> parameter when you call this constructor.</source>
          <target state="translated">전달의 기본 로그 파일 경로 <ph id="ph1">&lt;paramref name="logFilePath" /&gt;</ph> 이 생성자를 호출할 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
          <source>This is the where the log file is created, unless the /logfile command-line parameter is used when the installation executable is run.</source>
          <target state="translated">이것은 where 설치 실행 파일 실행 시 /logfile 명령줄 매개 변수를 사용 하지 않으면 로그 파일은 만들어집니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
          <source>The name of the command-line parameter to check.</source>
          <target state="translated">확인할 명령줄 매개 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
          <source>Determines whether the specified command-line parameter is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">지정한 명령줄 매개 변수가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정한 매개 변수가 "yes", "true", "1" 또는 빈 문자열("")로 설정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
          <source>This method accesses the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 메서드가 액세스는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> 구문 분석 된 버전을 지정된 된 매개 변수 인지 확인 하는 명령줄 매개 변수를 포함 된 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
          <source>This example is an excerpt of the sample in the class overview of the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> class.</source>
          <target state="translated">이 예제는 클래스의 개요에에서 샘플의 일부는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> method to find out if the <ph id="ph2">`LogtoConsole`</ph> parameter has been set.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> 했는지 확인 하는 메서드는 <ph id="ph2">`LogtoConsole`</ph> 매개 변수가 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
          <source>If <ph id="ph1">`yes`</ph>, it will then use the <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> method to write status messages to the installation log file and the console.</source>
          <target state="translated">경우 <ph id="ph1">`yes`</ph>, 다음을 사용 합니다는 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>The message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>Writes a message to the console and to the log file for the installation.</source>
          <target state="translated">콘솔과 설치 로그 파일에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>An installer can call this method to write progress or other status information to the log file.</source>
          <target state="translated">설치 관리자 로그 파일에 쓰기 진행률 또는 기타 상태 정보를이 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> method.</source>
          <target state="translated">설치 관리자 메시지 상자를 표시 해야 하거나 호출 외에도 쿼리를 수행할 사용자 인터페이스를 표시 해야 함을 지정 하는 명령줄 매개 변수를는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and "/LogToConsole= true" is specified in the command line.</source>
          <target state="translated">로그 파일에 기록 된 텍스트는 설치를 실행 하려면 InstallUtil.exe를 사용 하지 않으면 사용자가 표시 되지 것입니다 및 "/ LogToConsole = true" 명령줄에 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>This example is an excerpt of the example in the class overview of <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> class.</source>
          <target state="translated">이 예제는 예제 클래스의 개요에 설명의 일부 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>It uses the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> method to find out if the <ph id="ph2">`LogtoConsole`</ph> parameter has been set.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> 했는지 확인 하는 메서드는 <ph id="ph2">`LogtoConsole`</ph> 매개 변수가 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
          <source>If <ph id="ph1">`yes`</ph>, it will then use the <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> method to write status messages to the installation log file and the console.</source>
          <target state="translated">경우 <ph id="ph1">`yes`</ph>, 다음을 사용 합니다는 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>Gets the command-line parameters that were entered when InstallUtil.exe was run.</source>
          <target state="translated">InstallUtil.exe를 실행 시 입력했던 명령줄 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph> that represents the command-line parameters that were entered when the installation executable was run.</source>
          <target state="translated">설치 실행 파일 실행 시 입력했던 명령줄 매개 변수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>When a new <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> is created, the command-line parameters are parsed into the <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 만들어지면 명령줄 매개 변수를 구문 분석은 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>Both the keys and the values of the parameters are strings.</source>
          <target state="translated">키 및 매개 변수 값이 모두는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>This example is an excerpt of the example in the class overview of <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> class.</source>
          <target state="translated">이 예제는 예제 클래스의 개요에 설명의 일부 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>The sample retrieves the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> property to see if any command line argument has been entered by the user.</source>
          <target state="translated">샘플 검색는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.Parameters%2A&gt;</ph> 속성을 사용자가 모든 명령줄 인수를 입력 하는 경우를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> method to find out if the <ph id="ph2">`LogtoConsole`</ph> parameter has been set.</source>
          <target state="translated">또한 사용 하 여는 <ph id="ph1">&lt;xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A&gt;</ph> 했는지 확인 하는 메서드는 <ph id="ph2">`LogtoConsole`</ph> 매개 변수가 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.Install.InstallContext.Parameters">
          <source>If <ph id="ph1">`yes`</ph>, it will then use the <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> method to write status messages to the installation log file and the console.</source>
          <target state="translated">경우 <ph id="ph1">`yes`</ph>, 다음을 사용 합니다는 <ph id="ph2">&lt;xref:System.Configuration.Install.InstallContext.LogMessage%2A&gt;</ph> 메서드가 설치 로그 파일 및 콘솔에 상태 메시지를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])">
          <source>An array containing the command-line parameters.</source>
          <target state="translated">명령줄 매개 변수를 포함하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])">
          <source>Parses the command-line parameters into a string dictionary.</source>
          <target state="translated">명령줄 매개 변수의 구문을 분석하여 문자열 사전에 포함시킵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph> containing the parsed command-line parameters.</source>
          <target state="translated">구문 분석된 명령줄 매개 변수를 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>