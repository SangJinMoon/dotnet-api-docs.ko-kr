<Type Name="InstallException" FullName="System.Configuration.Install.InstallException">
  <TypeSignature Language="C#" Value="public class InstallException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InstallException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallException" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9b6d6-101">설치의 커밋, 롤백 또는 제거 단계에서 오류가 발생한 경우 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-101">The exception that is thrown when an error occurs during the commit, rollback, or uninstall phase of an installation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9b6d6-102">다음 예제에서는 및의 예제는 <xref:System.Configuration.Install.InstallException.%23ctor%2A> 생성자, 고유한 설치 관리자를 가진 어셈블리를 보여 주는 예제를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-102">The following example, plus the examples in the <xref:System.Configuration.Install.InstallException.%23ctor%2A> constructors, together make up an example showing an assembly having its own installer.</span></span> <span data-ttu-id="9b6d6-103">설치 관리자 라는 `MyInstaller`, 특성이 `RunInstallerAttribute`,이 설치 관리자에 의해 호출 됩니다 있음을 나타내는 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-103">The installer is named `MyInstaller`, which has an attribute `RunInstallerAttribute`, indicating that this installer will be invoked by [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="9b6d6-104">[Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md) 메서드를 호출 <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, <xref:System.Configuration.Install.Installer.Install%2A> 및 <xref:System.Configuration.Install.Installer.Uninstall%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-104">[Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) calls the methods <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, <xref:System.Configuration.Install.Installer.Install%2A> and <xref:System.Configuration.Install.Installer.Uninstall%2A>.</span></span> <span data-ttu-id="9b6d6-105">코드 <xref:System.Configuration.Install.Installer.Commit%2A> 파일이 있다고 가정 `FileDoesNotExist.txt` 어셈블리의 설치 커밋되기 전에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-105">The code in <xref:System.Configuration.Install.Installer.Commit%2A> presumes that a file named `FileDoesNotExist.txt` exists before the installation of the assembly can be committed.</span></span> <span data-ttu-id="9b6d6-106">하는 경우 파일 `FileDoesNotExist.txt` 존재 하지 않는 <xref:System.Configuration.Install.Installer.Commit%2A> 발생 한 <xref:System.Configuration.Install.InstallException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-106">If the file `FileDoesNotExist.txt` does not exist, <xref:System.Configuration.Install.Installer.Commit%2A> raises an <xref:System.Configuration.Install.InstallException>.</span></span> <span data-ttu-id="9b6d6-107">동일한의 경우와 <xref:System.Configuration.Install.Installer.Uninstall%2A> 있는 제거는 경우에 발생 라는 파일에 `FileDoesNotExist.txt` 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-107">The same is the case with <xref:System.Configuration.Install.Installer.Uninstall%2A> in which an uninstallation will only happen if a file named `FileDoesNotExist.txt` exists.</span></span> <span data-ttu-id="9b6d6-108">그렇지 않으면 발생 한 <xref:System.Configuration.Install.InstallException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-108">Otherwise it raises an <xref:System.Configuration.Install.InstallException>.</span></span> <span data-ttu-id="9b6d6-109"><xref:System.Configuration.Install.Installer.Rollback%2A>, 코드 조각 실행 되는 예외를 발생 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-109">In <xref:System.Configuration.Install.Installer.Rollback%2A>, a code fragment is executed, which might raise an exception.</span></span> <span data-ttu-id="9b6d6-110">발생 경우 예외가 발생 하는 경우 및 <xref:System.Configuration.Install.InstallException> 에 전달 되 고 해당 예외와 함께 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-110">If the exception is raised, it is caught and an <xref:System.Configuration.Install.InstallException> is raised with that exception being passed to it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b6d6-111">Installutil.exe 사용 하 여이 예제를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-111">Run this example with the help of Installutil.exe.</span></span> <span data-ttu-id="9b6d6-112">명령 프롬프트에서 다음을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-112">Type this in the command prompt:</span></span>  
  
 `Installutil InstallException.exe`  
  
 <span data-ttu-id="9b6d6-113">또는</span><span class="sxs-lookup"><span data-stu-id="9b6d6-113">-or-</span></span>  
  
 `Installutil /u InstallException.exe`  
  
 [!code-cpp[InstallException#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#1)]
 [!code-csharp[InstallException#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#1)]
 [!code-vb[InstallException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
    <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b6d6-114"><see cref="T:System.Configuration.Install.InstallException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-114">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b6d6-115"><see cref="T:System.Configuration.Install.InstallException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-115">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9b6d6-116">다음 예제는 <xref:System.Configuration.Install.InstallException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-116">The following example demonstrates the <xref:System.Configuration.Install.InstallException.%23ctor%2A> constructor.</span></span> <span data-ttu-id="9b6d6-117">예의 일부인는 <xref:System.Configuration.Install.InstallException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-117">It is a part of the example of the <xref:System.Configuration.Install.InstallException> class.</span></span>  
  
 <span data-ttu-id="9b6d6-118">이 예제에서는 Installutil.exe 호출는 <xref:System.Configuration.Install.Installer.Commit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-118">In this example, Installutil.exe calls the <xref:System.Configuration.Install.Installer.Commit%2A> method.</span></span> <span data-ttu-id="9b6d6-119">코드 <xref:System.Configuration.Install.Installer.Commit%2A> 파일이 있다고 가정 `FileDoesNotExist.txt` 어셈블리의 설치 커밋되기 전에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-119">The code in <xref:System.Configuration.Install.Installer.Commit%2A> presumes that a file named `FileDoesNotExist.txt` exists before the installation of the assembly can be committed.</span></span> <span data-ttu-id="9b6d6-120">하는 경우 파일 `FileDoesNotExist.txt` 존재 하지 않는 <xref:System.Configuration.Install.Installer.Commit%2A> 발생 한 <xref:System.Configuration.Install.InstallException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-120">If the file `FileDoesNotExist.txt` does not exist, <xref:System.Configuration.Install.Installer.Commit%2A> raises an <xref:System.Configuration.Install.InstallException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b6d6-121">오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 주는이 예제는 <xref:System.Configuration.Install.InstallException> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-121">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallException> constructor.</span></span> <span data-ttu-id="9b6d6-122">사용할 수 있는 다른 예제를 오버 로드 개별 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-122">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-cpp[InstallException#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#2)]
 [!code-csharp[InstallException#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#2)]
 [!code-vb[InstallException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9b6d6-123">사용자에게 표시할 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-123">The message to display to the user.</span></span></param>
        <summary><span data-ttu-id="9b6d6-124"><see cref="T:System.Configuration.Install.InstallException" /> 클래스의 새 인스턴스를 초기화하고, 사용자에게 표시할 메시지를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-124">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class, and specifies the message to display to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9b6d6-125">다음 예제는 <xref:System.Configuration.Install.InstallException.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-125">The following example demonstrates the <xref:System.Configuration.Install.InstallException.%23ctor%2A> constructor.</span></span> <span data-ttu-id="9b6d6-126">예의 일부인는 <xref:System.Configuration.Install.InstallException> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-126">It is a part of the example of the <xref:System.Configuration.Install.InstallException> class.</span></span>  
  
 <span data-ttu-id="9b6d6-127">이 예제에서는 Installutil.exe 호출는 <xref:System.Configuration.Install.Installer.Uninstall%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-127">In this example, Installutil.exe calls the <xref:System.Configuration.Install.Installer.Uninstall%2A> method.</span></span> <span data-ttu-id="9b6d6-128">제거 하는 경우 라는 파일에만 발생 합니다 `FileDoesNotExist.txt` 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-128">Uninstallation will only happen if a file named `FileDoesNotExist.txt` exists.</span></span> <span data-ttu-id="9b6d6-129">그렇지 않으면 발생 한 <xref:System.Configuration.Install.InstallException>합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-129">Otherwise it raises an <xref:System.Configuration.Install.InstallException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9b6d6-130">오버 로드 된 버전 중 하나를 사용 하는 방법을 보여 주는이 예제는 <xref:System.Configuration.Install.InstallException> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-130">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallException> constructor.</span></span> <span data-ttu-id="9b6d6-131">사용할 수 있는 다른 예제를 오버 로드 개별 항목을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-131">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-cpp[InstallException#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallException/CPP/installexception.cpp#4)]
 [!code-csharp[InstallException#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallException/CS/installexception.cs#4)]
 [!code-vb[InstallException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallException/VB/installexception.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstallException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstallException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="9b6d6-132">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-132">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="9b6d6-133">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-133">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="9b6d6-134">serialize된 데이터를 사용하여 <see cref="T:System.Configuration.Install.InstallException" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-134">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class with serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9b6d6-135">사용자에게 표시할 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-135">The message to display to the user.</span></span></param>
        <param name="innerException"><span data-ttu-id="9b6d6-136">현재 예외의 원인인 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-136">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="9b6d6-137"><c>innerException</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-137">If the <c>innerException</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="9b6d6-138"><see cref="T:System.Configuration.Install.InstallException" /> 클래스의 새 인스턴스를 초기화하고 사용자에게 표시할 메시지, 이 예외의 원인인 내부 예외에 대한 참조를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9b6d6-138">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class, and specifies the message to display to the user, and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>