<Type Name="SendMessageContent" FullName="System.ServiceModel.Activities.SendMessageContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12d22d01bbf8dce4b7863fca0f64dc037f76621c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37461810" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SendMessageContent : System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendMessageContent extends System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.SendMessageContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendMessageContent&#xA;Inherits SendContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMessageContent sealed : System::ServiceModel::Activities::SendContent" />
  <TypeSignature Language="F#" Value="type SendMessageContent = class&#xA;    inherit SendContent" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activities.SendContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Message")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a87c5-101">워크플로 서비스와 단일 항목(메시지)을 보내고 받는 데 사용되는 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a87c5-101">A class used to send a single item (message) to or from a workflow service.</span>
      </span>
      <span data-ttu-id="a87c5-102">항목은 기본 형식, <see cref="T:System.ServiceModel.Channels.Message" /> 또는 <see cref="T:System.Xml.Linq.XElement" />와 같은 기본 제공 형식이거나 응용 프로그램 정의 데이터 계약, 메시지 계약 또는 XML serialize 가능 형식일 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a87c5-102">The item can be a built-in type such as primitive types, <see cref="T:System.ServiceModel.Channels.Message" />, or <see cref="T:System.Xml.Linq.XElement" />; or an application-defined data contract, message contract, or XML serializable type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a87c5-103">이 클래스를 사용하면 데이터가 메시지 계약 형식 또는 <xref:System.ServiceModel.Channels.Message> 형식이 아닌 경우 연결 중에 serialize된 메시지가 래핑 해제됩니다.</span><span class="sxs-lookup"><span data-stu-id="a87c5-103">When using this class, messages serialized on the wire are unwrapped, unless the data is a message contract type or of type <xref:System.ServiceModel.Channels.Message>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a87c5-104">다음 예제에서는 <xref:System.ServiceModel.Activities.SendMessageContent> 활동에 <xref:System.ServiceModel.Activities.Send> 인스턴스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a87c5-104">The following example shows how to use a <xref:System.ServiceModel.Activities.SendMessageContent> instance with a <xref:System.ServiceModel.Activities.Send> activity.</span></span>  
  
 [!code-csharp[ContentBasedCorrelation#0](~/samples/snippets/csharp/VS_Snippets_CFX/contentbasedcorrelation/cs/client.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a87c5-105">
            <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a87c5-106">
            <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent (System.Activities.InArgument message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As InArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent(System::Activities::InArgument ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Activities.SendMessageContent : System.Activities.InArgument -&gt; System.ServiceModel.Activities.SendMessageContent" Usage="new System.ServiceModel.Activities.SendMessageContent message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.Activities.InArgument" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a87c5-107">보낼 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-107">The data to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a87c5-108">지정된 보낼 데이터를 사용하여 <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified data to send.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a87c5-109">다음 예제에서는 이 생성자를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a87c5-109">The following example shows how to use this constructor.</span></span>  
  
 [!code-csharp[ContentBasedCorrelation#0](~/samples/snippets/csharp/VS_Snippets_CFX/contentbasedcorrelation/cs/client.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent (System.Activities.InArgument message, Type declaredMessageType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument message, class System.Type declaredMessageType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As InArgument, declaredMessageType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent(System::Activities::InArgument ^ message, Type ^ declaredMessageType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Activities.SendMessageContent : System.Activities.InArgument * Type -&gt; System.ServiceModel.Activities.SendMessageContent" Usage="new System.ServiceModel.Activities.SendMessageContent (message, declaredMessageType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.Activities.InArgument" />
        <Parameter Name="declaredMessageType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a87c5-110">보낼 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-110">The data to send.</span>
          </span>
        </param>
        <param name="declaredMessageType">
          <span data-ttu-id="a87c5-111">서비스 설명에 표시되는 데이터 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-111">The data type that appears on the service description.</span>
          </span>
          <span data-ttu-id="a87c5-112">
            <c>message</c>와 같은 형식이거나 <c>message</c>의 기본 형식이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-112">It must be the same type as <c>message</c> or any base type of <c>message</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a87c5-113">지정된 메시지 및 메시지 형식을 사용하여 <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified message and message type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaredMessageType">
      <MemberSignature Language="C#" Value="public Type DeclaredMessageType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaredMessageType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeclaredMessageType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaredMessageType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeclaredMessageType : Type with get, set" Usage="System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a87c5-114">선언된 메시지 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-114">Gets or sets the declared message type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a87c5-115">선언된 메시지 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-115">The declared message type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a87c5-116"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> WSDL 서비스 설명에 표시 되는 데이터 형식이입니다.</span><span class="sxs-lookup"><span data-stu-id="a87c5-116"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> is the data type that will appear on the service description and WSDL.</span></span> <span data-ttu-id="a87c5-117">런타임에 서비스에서 다양한 파생 클래스를 보내고 받을 수 있도록 서비스 설명에 기본 클래스 형식을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a87c5-117">You may want the service description to contain the base class type so that various derived classes can be sent and received by the service at runtime.</span></span> <span data-ttu-id="a87c5-118"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A>은 Message 속성의 인수 형식 또는 해당 기본 형식과 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a87c5-118"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> must be either the same as the argument type of the Message property or its base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument Message { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument Message" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      <MemberSignature Language="VB.NET" Value="Public Property Message As InArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument ^ Message { System::Activities::InArgument ^ get(); void set(System::Activities::InArgument ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Activities.InArgument with get, set" Usage="System.ServiceModel.Activities.SendMessageContent.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a87c5-119">보낼 데이터를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-119">Gets or sets the data to send.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a87c5-120">보낼 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-120">The data to send.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeDeclaredMessageType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeDeclaredMessageType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeDeclaredMessageType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeDeclaredMessageType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeDeclaredMessageType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeDeclaredMessageType : unit -&gt; bool" Usage="sendMessageContent.ShouldSerializeDeclaredMessageType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a87c5-121">
            <see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /> 속성이 XAML serialize되어야 하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-121">Gets a value that indicates whether the <see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /> property should be XAML-serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a87c5-122">속성을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a87c5-122">
              <see langword="true" /> if the property should be serialized; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>