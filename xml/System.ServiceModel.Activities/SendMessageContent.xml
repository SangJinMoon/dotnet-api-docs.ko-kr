<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SendMessageContent.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d069d19e38aca31d175c437750348f946ec8e0e0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d069d19e38aca31d175c437750348f946ec8e0e0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Activities.SendMessageContent">
          <source>A class used to send a single item (message) to or from a workflow service.</source>
          <target state="translated">워크플로 서비스와 단일 항목(메시지)을 보내고 받는 데 사용되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Activities.SendMessageContent">
          <source>The item can be a built-in type such as primitive types, <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>, or <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>; or an application-defined data contract, message contract, or XML serializable type.</source>
          <target state="translated">항목은 기본 형식, <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>와 같은 기본 제공 형식이거나 응용 프로그램 정의 데이터 계약, 메시지 계약 또는 XML serialize 가능 형식일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activities.SendMessageContent">
          <source>When using this class, messages serialized on the wire are unwrapped, unless the data is a message contract type or of type <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</source>
          <target state="translated">이 클래스를 사용하면 데이터가 메시지 계약 형식 또는 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 형식이 아닌 경우 연결 중에 serialize된 메시지가 래핑 해제됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Activities.SendMessageContent">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.ServiceModel.Activities.SendMessageContent&gt;</ph> instance with a <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph> activity.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Activities.SendMessageContent&gt;</ph> 활동에 <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Send&gt;</ph> 인스턴스를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Activities.SendMessageContent">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)">
          <source>The data to send.</source>
          <target state="translated">보낼 데이터입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> class with the specified data to send.</source>
          <target state="translated">지정된 보낼 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)">
          <source>The following example shows how to use this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)">
          <source>The data to send.</source>
          <target state="translated">보낼 데이터입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)">
          <source>The data type that appears on the service description.</source>
          <target state="translated">서비스 설명에 표시되는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)">
          <source>It must be the same type as <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> or any base type of <bpt id="p2">&lt;c&gt;</bpt>message<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept>와 같은 형식이거나 <bpt id="p2">&lt;c&gt;</bpt>message<ept id="p2">&lt;/c&gt;</ept>의 기본 형식이어야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> class with the specified message and message type.</source>
          <target state="translated">지정된 메시지 및 메시지 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Activities.SendMessageContent" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType">
          <source>Gets or sets the declared message type.</source>
          <target state="translated">선언된 메시지 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType">
          <source>The declared message type.</source>
          <target state="translated">선언된 메시지 형식입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A&gt;</ph> is the data type that will appear on the service description and WSDL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A&gt;</ph> 서비스 설명 및 WSDL에 표시 되는 데이터 형식이입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType">
          <source>You may want the service description to contain the base class type so that various derived classes can be sent and received by the service at runtime.</source>
          <target state="translated">런타임에 서비스에서 다양한 파생 클래스를 보내고 받을 수 있도록 서비스 설명에 기본 클래스 형식을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A&gt;</ph> must be either the same as the argument type of the Message property or its base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A&gt;</ph>은 Message 속성의 인수 형식 또는 해당 기본 형식과 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Activities.SendMessageContent.Message">
          <source>Gets or sets the data to send.</source>
          <target state="translated">보낼 데이터를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Activities.SendMessageContent.Message">
          <source>The data to send.</source>
          <target state="translated">보낼 데이터입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /&gt;</ph> property should be XAML-serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /&gt;</ph> 속성이 XAML serialize되어야 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be serialized; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>