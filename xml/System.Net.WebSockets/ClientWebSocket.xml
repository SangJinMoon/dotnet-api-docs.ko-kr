<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientWebSocket.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53fc95a132d4979a36e9969027ba45b2b304b7e93.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fc95a132d4979a36e9969027ba45b2b304b7e93</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.WebSockets.ClientWebSocket">
          <source>Provides a client for connecting to WebSocket services.</source>
          <target state="translated">WebSocket 서비스에 연결하기 위해 클라이언트를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.ClientWebSocket">
          <source>Some of the classes and class elements in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</source>
          <target state="translated">클래스 및 클래스에는 요소 중 일부는 <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> 네임 스페이스는 Windows 7, Windows Vista SP2 및 Windows Server 2008에서 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.ClientWebSocket">
          <source>However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</source>
          <target state="translated">그러나 클라이언트와 서버 Websocket의 유일한 공용 구현은 Windows 8 및 Windows Server 2012에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.ClientWebSocket">
          <source>The class elements in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract class elements.</source>
          <target state="translated">클래스 요소는 <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> Windows 7, Windows Vista SP2 및 Windows Server 2008에서 지원 되는 네임 스페이스는 추상적 요소 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.WebSockets.ClientWebSocket">
          <source>This allows an application developer to inherit and extend these abstract class classes and class elements with an actual implementation of client WebSockets.</source>
          <target state="translated">이렇게 하면 응용 프로그램 개발자 상속 하 고 이러한 추상 클래스 클래스와 클라이언트 Websocket의 실제 구현으로 클래스 요소를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.#ctor">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 클래스의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.Abort">
          <source>Aborts the connection and cancels any pending IO operations.</source>
          <target state="translated">연결을 중단하고 보류 중인 IO 작업을 모두 취소합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.Abort">
          <source>The <ph id="ph1">`ClientWebSocket`</ph> cannot be reused once once it is aborted.</source>
          <target state="translated"><ph id="ph1">`ClientWebSocket`</ph> 한 번 중단 되 면 다시 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The WebSocket close status.</source>
          <target state="translated">WebSocket 닫기 상태입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>A description of the close status.</source>
          <target state="translated">닫기 상태에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
          <target state="translated">이 작업을 취소해야 한다는 알림을 전파하는 데 사용되는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Close the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance as an asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스를 비동기 작업으로 닫습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance is closed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체 후 완료 되는 <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> 인스턴스가 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The WebSocket close status.</source>
          <target state="translated">WebSocket 닫기 상태입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>A description of the close status.</source>
          <target state="translated">닫기 상태에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
          <target state="translated">이 작업을 취소해야 한다는 알림을 전파하는 데 사용되는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Close the output for the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance as an asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스의 출력을 비동기 작업으로 닫습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the output on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance is closed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체에는 출력 후 완료 되는 <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> 인스턴스가 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
          <source>Gets the reason why the close handshake was initiated on <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance.</source>
          <target state="translated">close 핸드셰이크가 <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스에서 시작된 이유를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
          <source>The reason why the close handshake was initiated.</source>
          <target state="translated">close 핸드셰이크가 시작된 이유입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
          <source>Gets a description of the reason why the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance was closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스가 종료된 이유에 대한 설명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
          <source>The description of the reason why the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance was closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스가 종료된 이유에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The URI of the WebSocket server to connect to.</source>
          <target state="translated">연결할 WebSocket 서버의 URI입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>A cancellation token used to propagate notification that the  operation should be canceled.</source>
          <target state="translated">작업을 취소해야 한다는 알림을 전파하는 데 사용할 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Connect to a WebSocket server as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 WebSocket 서버에 연결합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A&gt;</ph> method initiates the WebSocket handshake with a remote network destination, and then negotiates the sub-protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A&gt;</ph> 메서드 원격 네트워크 대상와 WebSocket 핸드셰이크를 시작 하 고 다음 하위 프로토콜을 협상 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>For plain WebSocket connections, use the <ph id="ph1">`ws://`</ph> scheme in the uri.</source>
          <target state="translated">일반 WebSocket 연결에 사용 된 <ph id="ph1">`ws://`</ph> uri의 체계입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>For secure WebSocket connections over TLS/SSL, use the <ph id="ph1">`wss://`</ph> scheme.</source>
          <target state="translated">TLS/SSL을 통한 보안 WebSocket 연결을 사용 하 여는 <ph id="ph1">`wss://`</ph> 구성표입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the connect request on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance has completed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체에 연결 요청 후 완료 되 고 <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> 인스턴스가 완료 되었습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.Dispose">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스에서 사용하는 관리되지 않는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.ClientWebSocket.Options">
          <source>Gets the WebSocket options for the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스의 WebSocket 옵션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.Options">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocketOptions" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocketOptions" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.Options">
          <source>The WebSocket options for the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스의 WebSocket 옵션입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The buffer to receive the response.</source>
          <target state="translated">응답을 받을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
          <target state="translated">이 작업을 취소해야 한다는 알림을 전파하는 데 사용되는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Receive data on <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> as an asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph>의 데이터를 비동기 작업으로 받습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the receive request on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance has completed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체에서 수신 요청 후 완료 되 고 <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> 인스턴스가 완료 되었습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> object in parallel.</source>
          <target state="translated">정확히 하나의 송신 포트 및 수신 각 지원 <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> 병렬로 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The buffer containing the message to be sent.</source>
          <target state="translated">보낼 메시지를 포함하는 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Specifies whether the buffer is clear text or in a binary format.</source>
          <target state="translated">버퍼가 일반 텍스트인지 아니면 이진 형식인지 지정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Specifies whether this is the final asynchronous send.</source>
          <target state="translated">마지막 비동기 보내기인지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> if this is the final send; <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">마지막 보내기이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
          <target state="translated">이 작업을 취소해야 한다는 알림을 전파하는 데 사용되는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Send data on <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> as an asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph>의 데이터를 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the send request on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance has completed.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체에서 보낸 요청의 후 완료 되는 <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> 인스턴스가 완료 되었습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> object in parallel.</source>
          <target state="translated">정확히 하나의 송신 포트 및 수신 각 지원 <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> 병렬로 개체입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.ClientWebSocket.State">
          <source>Get the WebSocket state of the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스의 WebSocket 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.State">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.WebSocketState" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.State">
          <source>The WebSocket state of the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스의 WebSocket 상태입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
          <source>Gets the supported WebSocket sub-protocol for the <ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebSockets.ClientWebSocket" /&gt;</ph> 인스턴스에 대해 지원되는 WebSocket 하위 프로토콜을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
          <source>The supported WebSocket sub-protocol.</source>
          <target state="translated">지원되는 WebSocket 하위 프로토콜입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>