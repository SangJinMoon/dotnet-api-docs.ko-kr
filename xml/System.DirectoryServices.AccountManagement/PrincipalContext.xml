<Type Name="PrincipalContext" FullName="System.DirectoryServices.AccountManagement.PrincipalContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc9daab4077cf11de30cbbac41a8b57547901e9a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34254598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrincipalContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrincipalContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.PrincipalContext" />
  <TypeSignature Language="VB.NET" Value="Public Class PrincipalContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>모든 작업이 수행되는 서버나 도메인, 이러한 작업의 기준으로 사용되는 컨테이너 및 작업을 수행하는 데 사용되는 자격 증명을 캡슐화합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색 작업을 위해 보안 주체 컨텍스트 검색 기준을 정의 하 고 삽입 작업에 대 한 컨텍스트 개체가 삽입 되는 컨테이너입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext> 생성자의 매개 변수 및 서버 유효성 검사를 수행 하지만 자격 증명 유효성 검사를 시도 하지 않습니다.  
  
 컨테이너를 지정 하지 않고 주 컨텍스트 개체를 만들면 여러 개별 컨테이너를 나타내는 데 사용할 수 있습니다. 하나의 컨테이너 추가 컨테이너 새로 만든 주 개체를 보유할 수 하는 동안 쿼리 작업의 기준으로 사용할 수 있습니다. 예를 들어, 사용자 또는 그룹 도메인 컨텍스트 형식에 삽입 되 면 계정 관리 API 사용 하 여 기본 잘 알려진 사용자 컨테이너 "CN = Users, DC = Fabrikam, DC = com"입니다. 기본 API 사용 하 여 컴퓨터 저장소에 넣으면 "CN = Computers, DC = Fabrikam, DC = com" 컨테이너입니다. 참고가 기본 컨테이너 이름을 도메인 관리자가 변경할 수 있습니다. Principal 개체 생성자에는 하나의 주 컨텍스트만 지정할 수, 이후 응용 프로그램의 컨테이너를 지정 하지 않고 도메인 컨텍스트를 만들 때 추가 컨텍스트는 기본적으로 노출 됩니다. 응용 프로그램 생성자에서 컨테이너를 지정 해야 응용 프로그램 디렉터리에는 잘 알려진 컨테이너가 없으므로 또는 <xref:System.ArgumentException> throw 됩니다. SAM은 컨테이너, 없으므로 <xref:System.ArgumentException> 응용 프로그램의 생성자에서 컨테이너를 지정 하려고 할 경우에 throw 됩니다.  
  
 매개 변수로 사용자 이름을 사용 하는 생성자의 각 버전에는 `userName` 문자열 다양 한 형식이 될 수 있습니다.  세 개의 지원된에 대 한은 Nt4Name, UserPrincipalName 및 SamAccountName입니다.  이름에 대 한 자세한 내용은 되 설명서를 참조 하십시오. [여기](http://go.microsoft.com/fwlink/?LinkID=99942)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
      </Parameters>
      <Docs>
        <param name="contextType">보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</param>
        <summary>지정된 컨텍스트 형식을 사용하여 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">응용 프로그램 디렉터리 컨텍스트를 사용할 때 이름이나 컨테이너를 지정해야 하는 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 매개 변수에 유효한 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값이 없는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대한 도메인이나 서버의 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대한 시스템 이름 또는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 인스턴스를 호스팅하는 서버 및 포트의 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대해 이름이 null인 경우 이 컨텍스트는 스레드 실행에 사용되는 사용자 보안 주체의 도메인에 대한 도메인 컨트롤러입니다. <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대해 이름이 null인 경우 이것은 로컬 시스템 이름입니다. 이 매개 변수는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식에 대해 null일 수 없습니다.</param>
        <summary>지정된 컨텍스트 형식 및 이름을 사용하여 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />를 지정할 때 이름을 지정해야 하는 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 매개 변수에 유효한 <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값이 없는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대한 도메인이나 서버의 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대한 시스템 이름 또는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 인스턴스를 호스팅하는 서버 및 포트의 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대해 이름이 null인 경우 이 컨텍스트는 스레드 실행에 사용되는 사용자 보안 주체의 도메인에 대한 도메인 컨트롤러입니다. <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대해 이름이 null인 경우 이것은 로컬 시스템 이름입니다. 이 매개 변수는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식에 대해 null일 수 없습니다.</param>
        <param name="container">컨텍스트의 루트로 사용할 저장소의 컨테이너입니다. 모든 쿼리는 이 루트에서 수행되며 모든 삽입은 이 컨테이너를 대상으로 수행됩니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 및 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식의 경우 이 매개 변수는 컨테이너 개체의 고유 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식의 경우 이 매개 변수를 null로 설정해야 합니다.</param>
        <summary>지정된 컨텍스트 형식, 이름 및 컨테이너를 사용하여 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException> 컨테이너에 대해 지정 된 경우 서버에 연결 하는 후속 디렉터리 작업 호출에서 throw 될 수 있습니다는 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 주 컨텍스트가 유효한 컨테이너 않습니다. 컨테이너 인 스키마 클래스에는 주 클래스는 개체로 정의 사용자, 그룹 또는 컴퓨터의 possibleInferiors 특성의 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식을 지정할 때 컨테이너를 지정할 수 없는 경우  <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />를 지정할 때 이름이나 컨테이너를 지정해야 하는 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 매개 변수에 유효한 <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값이 없는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="contextType">보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대한 도메인이나 서버의 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대한 시스템 이름 또는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 인스턴스를 호스팅하는 서버 및 포트의 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대해 이름이 null인 경우 이 컨텍스트는 스레드 실행에 사용되는 사용자 보안 주체의 도메인에 대한 도메인 컨트롤러입니다. <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대해 이름이 null인 경우 이것은 로컬 시스템 이름입니다. 이 매개 변수는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식에 대해 null일 수 없습니다.</param>
        <param name="container">컨텍스트의 루트로 사용할 저장소의 컨테이너입니다. 모든 쿼리는 이 루트에서 수행되며 모든 삽입은 이 컨테이너를 대상으로 수행됩니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 및 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식의 경우 이 매개 변수는 컨테이너 개체의 고유 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식의 경우 이 매개 변수를 null로 설정해야 합니다.</param>
        <param name="options">서버에 바인딩하는 데 사용되는 옵션을 지정하는 하나 이상의 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 열거형 값의 조합입니다. 이 매개 변수가 null인 경우 기본 옵션은 ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing입니다.</param>
        <summary>지정된 컨텍스트 형식, 이름, 컨테이너 및 컨텍스트 옵션을 사용하여 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException> 컨테이너에 대해 지정 된 경우 서버에 연결 하는 후속 디렉터리 작업 호출에서 throw 될 수 있습니다는 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 주 컨텍스트가 유효한 컨테이너 않습니다. 컨테이너 인 스키마 클래스에는 주 클래스는 개체로 정의 사용자, 그룹 또는 컴퓨터의 possibleInferiors 특성의 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식을 지정할 때 컨테이너를 지정할 수 없는 경우  <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />를 지정할 때 이름이나 컨테이너를 지정해야 하는 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 매개 변수에 유효한 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값이 없는 경우  <paramref name="options" /> 매개 변수에 유효한 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 열거형 값의 조합이 없는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ userName, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대한 도메인이나 서버의 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대한 시스템 이름 또는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 인스턴스를 호스팅하는 서버 및 포트의 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대해 이름이 null인 경우 이 컨텍스트는 스레드 실행에 사용되는 사용자 보안 주체의 도메인에 대한 도메인 컨트롤러입니다. <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대해 이름이 null인 경우 이것은 로컬 시스템 이름입니다. 이 매개 변수는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식에 대해 null일 수 없습니다.</param>
        <param name="userName">저장소에 연결하는 데 사용되는 사용자 이름입니다. <c>username</c> 및 <c>password</c> 매개 변수가 모두 Null인 경우에는 현재 프로세스의 자격 증명이 사용됩니다. 그렇지 않은 경우에는 <c>username</c> 및 <c>password</c> 모두 null이 아니어야 하며 이들을 통해 지정되는 자격 증명이 저장소 연결에 사용됩니다.</param>
        <param name="password">저장소에 연결하는 데 사용되는 암호입니다. <c>username</c> 및 <c>password</c> 매개 변수가 모두 Null인 경우에는 현재 프로세스의 자격 증명이 사용됩니다. 그렇지 않은 경우에는 <c>username</c> 및 <c>password</c> 모두 null이 아니어야 하며 이들을 통해 지정되는 자격 증명이 저장소 연결에 사용됩니다.</param>
        <summary>지정한 컨텍스트 형식, 이름, 사용자 이름 및 암호를 사용하여 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 및 <paramref name="password" /> 매개 변수가 null이거나 값을 포함해야 하는 경우  <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />를 지정할 때 이름을 지정해야 하는 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 매개 변수에 유효한 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값이 없는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::String ^ userName, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대한 도메인이나 서버의 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대한 시스템 이름 또는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 인스턴스를 호스팅하는 서버 및 포트의 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대해 이름이 null인 경우 이 컨텍스트는 스레드 실행에 사용되는 사용자 보안 주체의 도메인에 대한 도메인 컨트롤러입니다. <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대해 이름이 null인 경우 이것은 로컬 시스템 이름입니다. 이 매개 변수는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식에 대해 null일 수 없습니다.</param>
        <param name="container">컨텍스트의 루트로 사용할 저장소의 컨테이너입니다. 모든 쿼리는 이 루트에서 수행되며 모든 삽입은 이 컨테이너를 대상으로 수행됩니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 및 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식의 경우 이 매개 변수는 컨테이너 개체의 고유 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식의 경우 이 매개 변수를 null로 설정해야 합니다.</param>
        <param name="userName">저장소에 연결하는 데 사용되는 사용자 이름입니다. <c>username</c> 및 <c>password</c> 매개 변수가 모두 null인 경우에는 현재 보안 주체의 기본 자격 증명이 사용됩니다.  그렇지 않은 경우에는 <c>username</c> 및 <c>password</c> 모두 null이 아니어야 하며 이들을 통해 지정되는 자격 증명이 저장소 연결에 사용됩니다.</param>
        <param name="password">저장소에 연결하는 데 사용되는 암호입니다. <c>username</c> 및 <c>password</c> 매개 변수가 모두 null인 경우에는 현재 보안 주체의 기본 자격 증명이 사용됩니다.  그렇지 않은 경우에는 <c>username</c> 및 <c>password</c> 모두 null이 아니어야 하며 이들을 통해 지정되는 자격 증명이 저장소 연결에 사용됩니다.</param>
        <summary>지정한 컨텍스트 형식, 이름, 컨테이너, 사용자 이름 및 암호를 사용하여 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException> 컨테이너에 대해 지정 된 경우 서버에 연결 하는 후속 디렉터리 작업 호출에서 throw 될 수 있습니다는 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 주 컨텍스트가 유효한 컨테이너 않습니다. 컨테이너 인 스키마 클래스에는 주 클래스는 개체로 정의 사용자, 그룹 또는 컴퓨터의 possibleInferiors 특성의 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 및 <paramref name="password" /> 매개 변수가 null이거나 값을 포함해야 하는 경우  <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식을 지정할 때 컨테이너를 지정할 수 없는 경우  <paramref name="name" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />를 지정할 때 <paramref name="container" /> 또는 <paramref name="contextType" />를 지정해야 하는 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 매개 변수에 유효한 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값이 없는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options, System::String ^ userName, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대한 도메인이나 서버의 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대한 시스템 이름 또는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 인스턴스를 호스팅하는 서버 및 포트의 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대해 이름이 null인 경우 이 컨텍스트는 스레드 실행에 사용되는 사용자 보안 주체의 도메인에 대한 도메인 컨트롤러입니다. <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대해 이름이 null인 경우 이것은 로컬 시스템 이름입니다. 이 매개 변수는 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식에 대해 null일 수 없습니다.</param>
        <param name="container">컨텍스트의 루트로 사용할 저장소의 컨테이너입니다. 모든 쿼리는 이 루트에서 수행되며 모든 삽입은 이 컨테이너를 대상으로 수행됩니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 및 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 컨텍스트 형식의 경우 이 매개 변수는 컨테이너 개체의 고유 이름입니다.  <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식의 경우 이 매개 변수를 null로 설정해야 합니다.</param>
        <param name="options">서버에 바인딩하는 데 사용되는 옵션을 지정하는 하나 이상의 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 열거형 값의 조합입니다. 이 매개 변수가 null인 경우 기본 옵션은 ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing입니다.</param>
        <param name="userName">저장소에 연결하는 데 사용되는 사용자 이름입니다. <c>username</c> 및 <c>password</c> 매개 변수가 모두 null인 경우에는 현재 보안 주체의 기본 자격 증명이 사용됩니다. 그렇지 않은 경우에는 <c>username</c> 및 <c>password</c> 모두 null이 아니어야 하며 이들을 통해 지정되는 자격 증명이 저장소 연결에 사용됩니다.</param>
        <param name="password">저장소에 연결하는 데 사용되는 암호입니다. <c>username</c> 및 <c>password</c> 매개 변수가 모두 null인 경우에는 현재 보안 주체의 기본 자격 증명이 사용됩니다.  그렇지 않은 경우에는 <c>username</c> 및 <c>password</c> 모두 null이 아니어야 하며 이들을 통해 지정되는 자격 증명이 저장소 연결에 사용됩니다.</param>
        <summary>지정한 컨텍스트 형식, 이름, 컨테이너, 컨텍스트 옵션, 사용자 이름 및 암호를 사용하여 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException> 컨테이너에 대해 지정 된 경우 서버에 연결 하는 후속 디렉터리 작업 호출에서 throw 될 수 있습니다는 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 주 컨텍스트가 유효한 컨테이너 않습니다. 컨테이너 인 스키마 클래스에는 주 클래스는 개체로 정의 사용자, 그룹 또는 컴퓨터의 possibleInferiors 특성의 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 및 <paramref name="password" /> 매개 변수가 null이거나 값을 포함해야 하는 경우  <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식을 지정할 때 컨테이너를 지정할 수 없는 경우  <paramref name="contextType" /> 매개 변수에 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />를 지정할 때 이름이나 컨테이너를 지정해야 하는 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 매개 변수에 유효한 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값이 없는 경우  <paramref name="options" /> 매개 변수에 유효한 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 열거형 값의 조합이 없는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="ConnectedServer">
      <MemberSignature Language="C#" Value="public string ConnectedServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectedServer" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectedServer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectedServer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>보안 주체 컨텍스트가 연결되는 서버의 이름을 가져옵니다.</summary>
        <value>보안 주체 컨텍스트가 연결되는 서버의 이름입니다. 또는 보안 주체 컨텍스트가 서버에 연결되지 않은 경우 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨텍스트 형식이 언제가 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain>,이 속성은 도메인 컨트롤러 또는 응용 프로그램 디렉터리 인스턴스의 이름을 반환 합니다. 컨텍스트 형식이 언제가 <xref:System.DirectoryServices.AccountManagement.ContextType.Machine>,이 속성은 컴퓨터 이름을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public string Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Container" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Container { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성자의 컨테이너 매개 변수에 지정된 값을 가져옵니다.</summary>
        <value>컨텍스트의 루트로 사용할 저장소의 컨테이너입니다. 또는 컨테이너가 지정되지 않은 경우 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 쿼리는 이 루트에서 수행되며 모든 삽입은 이 컨테이너를 대상으로 수행됩니다. 에 대 한 <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> 및 <xref:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory> 컨텍스트 형식의 경우이 속성은 컨테이너 개체의 고유 이름입니다. 에 대 한 <xref:System.DirectoryServices.AccountManagement.ContextType.Machine> 컨텍스트 형식의 경우이 속성이 null 이어야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextType ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextType ContextType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextType As ContextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextType ContextType { System::DirectoryServices::AccountManagement::ContextType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>보안 주체 컨텍스트에 대한 저장소 형식을 지정하는 컨텍스트 형식을 가져옵니다.</summary>
        <value>연결할 대상의 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 응용 프로그램 않습니다 직접적 보안 주체 컨텍스트를 만들고 컨텍스트 형식을 지정할 때 사용 합니다. 예를 들어 때 그룹 구성원을 열거 하는 응용 프로그램,이 속성 사용할 수 있습니다는 보안 주체가 속한 저장소의 유형을 결정 하도록 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 인스턴스의 <see cref="T:System.DirectorySerices.AccountManagement.PrincipalContext" /> 개체를 삭제합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성자의 <paramref name="name" /> 매개 변수로 지정된 값을 가져옵니다.</summary>
        <value>
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 컨텍스트 형식에 대한 도메인이나 서버의 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 컨텍스트 형식에 대한 호스트 이름, <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 인스턴스를 호스팅하는 서버의 이름 또는 null(이름이 설정되지 않은 경우)입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ContextOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextOptions Options { System::DirectoryServices::AccountManagement::ContextOptions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성자의 <paramref name="contextOptions" /> 매개 변수에 지정된 옵션을 가져옵니다.</summary>
        <value>연결할 대상의 형식을 지정하는 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 열거형 값입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성자의 사용자 이름 매개 변수에 지정된 값을 가져옵니다.</summary>
        <value>저장소에 연결하는 데 사용되는 사용자 이름입니다. 또는 사용자 이름이 없을 경우 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다양 한 가지 형식 중 하나에 사용자 이름을 전달 하 여이 속성을 설정할 수 있습니다.  허용 되는 유형의 형식 목록이 완료 되 설명서를 참조 하십시오. [여기](http://go.microsoft.com/fwlink/?LinkID=99942)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateCredentials">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>서버에 대한 연결을 설정하고 연결에 성공한 경우 지정된 자격 증명의 유효성을 검사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
`userName` 이 메서드의 두 오버 로드에 대 한 인수는 양식을 사용 해야 합니다 *username* (예를 들어 *mcampbell*) 보다는 *domain\username* 또는 *username@domain*.   
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">서버에서 유효성이 검사된 사용자 이름입니다. <paramref name="userName" /> 형식에 대한 자세한 내용은 설명 부분을 참조하십시오.</param>
        <param name="password">서버에서 유효성이 검사된 암호입니다.</param>
        <summary>서버에 대한 연결을 만들고 지정된 사용자 이름과 암호가 유효한지 지정하는 부울 값을 반환합니다.</summary>
        <returns>사용자 자격 증명이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A> 메서드는 생성자에 지정 된 서버에 바인딩합니다. 경우는 `username` 및 `password` 인수가 `null`를 생성자에 지정 된 자격 증명을 확인 합니다. 자격 증명이 없으면 생성자에 지정 된 경우와 `username` 및 `password` 매개 변수는 `null`,이 메서드는 현재 보안 주체에 대 한 기본 자격 증명의 유효성을 검사 합니다.  

`userName` 인수는 양식을 사용 해야 합니다 *userName* (예를 들어 *mcampbell*) 보다는 *domain\username* 또는 * username@domain *.

 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String, options As ContextOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="userName">서버에서 유효성이 검사된 사용자 이름입니다. <paramref name="userName" /> 형식에 대한 자세한 내용은 설명 부분을 참조하십시오.</param>
        <param name="password">서버에서 유효성이 검사된 암호입니다.</param>
        <param name="options">서버에 바인딩하는 데 사용되는 옵션을 지정하는 하나 이상의 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 열거형 값의 조합입니다. 이 매개 변수는 SSL을 사용하거나 사용하지 않는 단순 바인딩 또는 협상 바인딩만 지정할 수 있습니다.</param>
        <summary>서버에 대한 연결을 만들고 지정된 사용자 이름과 암호가 유효한지 지정하는 부울 값을 반환합니다. 이 메서드는 사용자 이름 및 암호의 빠른 자격 증명 유효성 검사를 수행합니다.</summary>
        <returns>사용자 자격 증명이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A> 메서드는 생성자에 지정 된 서버에 바인딩합니다. 경우는 `username` 및 `password` 매개 변수가 null 인 생성자에 지정 된 자격 증명을 확인 합니다. 자격 증명이 없으면 생성자에 지정 된 경우와 `username` 및 `password` 매개 변수가 null 인 경우이 메서드는 현재 보안 주체에 대 한 기본 자격 증명의 유효성을 검사 합니다.  

`userName` 인수는 양식을 사용 해야 합니다 *username* (예를 들어 *mcampbell*) 보다는 *domain\username* 또는 * username@domain *. 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">컨텍스트 형식이 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine." />일 때 <paramref name="options" /> 매개 변수를 <see cref="F:System.DirectoryServices.AccountManagement.ContextOptions.Negotiate" />로 지정해야 하는 경우</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>