<Type Name="WebService" FullName="System.Web.Services.WebService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4544db5d35d59148a39a15185fab1a57d9cdada6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394918" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type WebService = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>응용 프로그램 및 세션 상태와 같은 공용 ASP.NET 개체에 직접 액세스할 수 있도록 해주는 XML Web services에 대한 선택적 기본 클래스를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적인 ASP.NET 개체에 액세스할 필요가 없는 경우 만들 수 있습니다는 XML 웹 서비스에서 파생 없이 <xref:System.Web.Services.WebService>합니다. 추가 ASP.NET 개체를 통해 액세스할 수 <xref:System.Web.Services.WebService.Context%2A>합니다.  
  
 권한이 있는 XML 웹 서비스 메서드는 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> 속성에 대 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 또는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 로 설정 `true`에 액세스할 수 없는 자신의 <xref:System.Web.HttpContext>합니다. 따라서의 속성에 액세스는 <xref:System.Web.Services.WebService> 클래스에서 내 해당 XML 웹 서비스 메서드에 반환 `null`합니다.  
  
 포함 하는.NET Framework 버전 1.0 XML 웹 서비스 메서드를 사용 하는 경우는 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 또는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 를 사용 하 여에 적용 된 특성의 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> 집합 속성을 `true`에 액세스할 수 없는 자신의 <xref:System.Web.HttpContext> 를 사용 하 여는 정적 <xref:System.Web.HttpContext.Current%2A> 속성입니다. 액세스는 <xref:System.Web.HttpContext>에서 XML 웹 서비스 메서드를 구현 하는 클래스를 파생 <xref:System.Web.Services.WebService> 액세스할는 <xref:System.Web.Services.WebService.Context%2A> 속성입니다.  
  
   
  
## Examples  
 아래 예제에서 파생 되는 XML 웹 서비스를 만듭니다. <xref:System.Web.Services.WebService>, 사용 하기 위해는 <xref:System.Web.Services.WebService.Context%2A> 서버에서 요청 시간을 가져오는 속성입니다.  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.WebService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.Services.WebService.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 HTTP 요청에 대한 응용 프로그램 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.HttpApplicationState" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 웹 서비스는 응용 프로그램 상태와 세션 상태를 모두 사용할 수 있습니다. 메서드에 대 한 세션 상태가 해제 되어 있는지 여부에 관계 없이 XML 웹 서비스에 액세스 하는 모든 세션에서 응용 프로그램 상태가 유지 됩니다 (사용 하 여는 <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> 의 속성은 <xref:System.Web.Services.WebMethodAttribute>).  
  
   
  
## Examples  
 다음 예제에서는 브라우저 XML 웹 서비스 메서드를 호출할 때마다 횟수가 증가 하는 적중 횟수 카운터를 보여 줍니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.Services.WebService.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 요청에 대한 ASP.NET <see cref="T:System.Web.HttpContext" />를 가져오며 이것은 웹 요청을 처리하기 위해 HTTP 서버가 사용하는 모든 HTTP 관련 컨텍스트를 캡슐화합니다.</summary>
        <value>현재 요청에 대한 ASP.NET <see cref="T:System.Web.HttpContext" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 포함 하는 XML 웹 서비스 메서드는 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> 또는 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 를 사용 하 여에 적용 된 특성의 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> 집합 속성을 `true`에 대 한 액세스 권한이 없습니다 해당 <xref:System.Web.HttpContext> 정적을 사용 하 여 <xref:System.Web.HttpContext.Current%2A> 속성입니다. 액세스는 <xref:System.Web.HttpContext>에서 XML 웹 서비스 메서드를 구현 하는 클래스를 파생 <xref:System.Web.Services.WebService> 액세스할는 <xref:System.Web.Services.WebService.Context%2A> 속성입니다.  
  
   
  
## Examples  
 사용 하 여 다음 예제에서는 <xref:System.Web.Services.WebService.Context%2A> 서버에서 요청 시간을 가져오는 속성입니다.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <paramref name="Context" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.Services.WebService.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 요청에 대한 <see cref="T:System.Web.HttpServerUtility" />를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.HttpServerUtility" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpServerUtility> 을 포함 한 웹 요청 처리에 사용할 수 있는 여러 메서드를 제공 하는 클래스 <xref:System.Web.HttpServerUtility.CreateObject%2A> (에 대 한 COM 개체를 인스턴스화).  
  
   
  
## Examples  
 다음 예제에서는 반환 컴퓨터 이름을 사용 하 여 웹 서버는 <xref:System.Web.Services.WebService.Server%2A> 속성입니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.Services.WebService.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 요청에 대한 <see cref="T:System.Web.SessionState.HttpSessionState" /> 인스턴스를 가져옵니다.</summary>
        <value>현재 세션에 대한 ASP.NET 세션 상태 개체를 나타내는 <see cref="T:System.Web.SessionState.HttpSessionState" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 XML 웹 서비스 메서드를 액세스 하는 지정 된 횟수 만큼 특정 세션을 사용 하 여 세션 상태 아래 예제 `SessionHitCounter`합니다. 이 예제에서는 <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> 속성은 <xref:System.Web.Services.WebMethodAttribute> 로 설정 된 `true` 세션 상태에 액세스할 수 있도록 합니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.WebService.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services에 대한 SOAP 요청을 수행하는 데 사용된 SOAP 프로토콜의 버전을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 프로토콜의 값을 HTTP GET 또는 HTTP POST 등의 XML 웹 서비스와 통신 하는 사용 되지 않은 경우는 <xref:System.Web.Services.WebService.SoapVersion%2A> 속성은 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>합니다.  
  
 파생 되지 않은 XML 웹 서비스에 대 한는 <xref:System.Web.Services.WebService> 클래스, XML 웹 서비스 수도 액세스할 수 있습니다 "WebServiceSoapVersion" 항목을 사용 하 여 SOAP 요청에 사용 되는 SOAP 프로토콜의 버전은 <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> 속성입니다. 항목 형식이 한지 <xref:System.Web.Services.Protocols.SoapProtocolVersion>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.Services.WebService.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET 서버 <see cref="P:System.Web.HttpContext.User" /> 개체를 가져옵니다. 이 속성은 사용자가 요청을 실행할 권한이 있는지 여부를 인증하는 데 사용할 수 있습니다.</summary>
        <value>ASP.NET 서버 <see cref="T:System.Security.Principal.IPrincipal" /> 개체를 나타내는 <see cref="P:System.Web.HttpContext.User" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인터넷 정보 서비스 (IIS)와.NET Framework에 대 한 순서 대로 인증을 위해 구성 해야 할는 <xref:System.Web.Services.WebService.User%2A> 의미 있는 속성입니다. 인증은 사용자의 자격 증명을 수락 하 고 일부 권한에 대해 해당 자격 증명 유효성을 검사 하는 과정입니다. 자격 증명이 유효 있으면 인증된 된 id입니다. .NET Framework의 인증 web.config 파일에 항목을 배치 하 여 구성 됩니다.  
  
 다음 예제에서는 항목은 Windows 인증을 사용 하도록 설정 하려면 web.config 파일에 저장 합니다.  
  
```  
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 XML 웹 서비스에 대 한 보안 설정에 대 한 자세한 내용은 참조 [ &#91; \<topic://cpconSecuringASPNETWebServices >&#93;](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c)합니다.  
  
   
  
## Examples  
 다음 예제에서는 인증 된 사용자 이름을 조회 하 고 해당 이름을 반환 합니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
  </Members>
</Type>