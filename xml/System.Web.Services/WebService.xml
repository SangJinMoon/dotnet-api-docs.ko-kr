<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebService.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58f22e935ada6e9dcedccb9ec4a3248eafd0c5bd7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f22e935ada6e9dcedccb9ec4a3248eafd0c5bd7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.WebService">
          <source>Defines the optional base class for XML Web services, which provides direct access to common ASP.NET objects, such as application and session state.</source>
          <target state="translated">응용 프로그램 및 세션 상태와 같은 공용 ASP.NET 개체에 직접 액세스할 수 있도록 해주는 XML Web services에 대한 선택적 기본 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.WebService">
          <source>If you don't need access to the common ASP.NET objects, you can still create an XML Web service without deriving from <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph>.</source>
          <target state="translated">일반적인 ASP.NET 개체에 액세스할 필요가 없는 경우 만들 수 있습니다는 XML 웹 서비스에서 파생 없이 <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.WebService">
          <source>Additional ASP.NET objects can be accessed through <ph id="ph1">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph>.</source>
          <target state="translated">추가 ASP.NET 개체를 통해 액세스할 수 <ph id="ph1">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.WebService">
          <source>XML Web service methods that have the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A&gt;</ph> property of either <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> set to <ph id="ph4">`true`</ph>, do not have access to their <ph id="ph5">&lt;xref:System.Web.HttpContext&gt;</ph>.</source>
          <target state="translated">권한이 있는 XML 웹 서비스 메서드는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A&gt;</ph> 속성에 대 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> 로 설정 <ph id="ph4">`true`</ph>에 액세스할 수 없는 자신의 <ph id="ph5">&lt;xref:System.Web.HttpContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.WebService">
          <source>As such, accessing any of the properties of the <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph> class, from within that XML Web service method, return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">따라서의 속성에 액세스는 <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph> 클래스에서 내 해당 XML 웹 서비스 메서드에 반환 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.WebService">
          <source>If you are using the .NET Framework version 1.0 XML Web service methods that have either the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> attribute applied to them with the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A&gt;</ph> property of set to <ph id="ph4">`true`</ph>, do not have access to their <ph id="ph5">&lt;xref:System.Web.HttpContext&gt;</ph> using the static <ph id="ph6">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> property.</source>
          <target state="translated">포함 하는.NET Framework 버전 1.0 XML 웹 서비스 메서드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> 를 사용 하 여에 적용 된 특성의 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A&gt;</ph> 집합 속성을 <ph id="ph4">`true`</ph>에 액세스할 수 없는 자신의 <ph id="ph5">&lt;xref:System.Web.HttpContext&gt;</ph> 를 사용 하 여는 정적 <ph id="ph6">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.WebService">
          <source>To access the <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph>, derive the class implementing the XML Web service method from <ph id="ph2">&lt;xref:System.Web.Services.WebService&gt;</ph> and access the <ph id="ph3">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> property.</source>
          <target state="translated">액세스는 <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph>에서 XML 웹 서비스 메서드를 구현 하는 클래스를 파생 <ph id="ph2">&lt;xref:System.Web.Services.WebService&gt;</ph> 액세스할는 <ph id="ph3">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.WebService">
          <source>The example below creates an XML Web service, deriving from <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph>, in order to use the <ph id="ph2">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> property to obtain the time of the request on the server.</source>
          <target state="translated">아래 예제에서 파생 되는 XML 웹 서비스를 만듭니다. <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph>, 사용 하기 위해는 <ph id="ph2">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> 서버에서 요청 시간을 가져오는 속성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.Services.WebService.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.WebService" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.WebService" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.Application">
          <source>Gets the application object for the current HTTP request.</source>
          <target state="translated">현재 HTTP 요청에 대한 응용 프로그램 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Application">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Application">
          <source>XML Web services can use both application state and session state.</source>
          <target state="translated">XML 웹 서비스는 응용 프로그램 상태와 세션 상태를 모두 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Application">
          <source>Application state is maintained across all sessions accessing an XML Web service regardless of whether session state is turned off for a method(by using the <ph id="ph1">&lt;xref:System.Web.Services.WebMethodAttribute.EnableSession%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.Services.WebMethodAttribute&gt;</ph>).</source>
          <target state="translated">메서드에 대 한 세션 상태가 해제 되어 있는지 여부에 관계 없이 XML 웹 서비스에 액세스 하는 모든 세션에서 응용 프로그램 상태가 유지 됩니다 (사용 하 여는 <ph id="ph1">&lt;xref:System.Web.Services.WebMethodAttribute.EnableSession%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.Services.WebMethodAttribute&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Application">
          <source>The example below demonstrates a hit counter, incrementing the count every time a browser calls the XML Web service method.</source>
          <target state="translated">다음 예제에서는 브라우저 XML 웹 서비스 메서드를 호출할 때마다 횟수가 증가 하는 적중 횟수 카운터를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.Context">
          <source>Gets the ASP.NET <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> for the current request, which encapsulates all HTTP-specific context used by the HTTP server to process Web requests.</source>
          <target state="translated">현재 요청에 대한 ASP.NET <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>를 가져오며 이것은 웹 요청을 처리하기 위해 HTTP 서버가 사용하는 모든 HTTP 관련 컨텍스트를 캡슐화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Context">
          <source>The ASP.NET <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> for the current request.</source>
          <target state="translated">현재 요청에 대한 ASP.NET <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Context">
          <source>XML Web service methods that have either the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> attribute applied to them with the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A&gt;</ph> property of set to <ph id="ph4">`true`</ph>, do not have access to their <ph id="ph5">&lt;xref:System.Web.HttpContext&gt;</ph> using the static <ph id="ph6">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> property.</source>
          <target state="translated">포함 하는 XML 웹 서비스 메서드는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> 를 사용 하 여에 적용 된 특성의 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A&gt;</ph> 집합 속성을 <ph id="ph4">`true`</ph>에 대 한 액세스 권한이 없습니다 해당 <ph id="ph5">&lt;xref:System.Web.HttpContext&gt;</ph> 정적을 사용 하 여 <ph id="ph6">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Context">
          <source>To access the <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph>, derive the class implementing the XML Web service method from <ph id="ph2">&lt;xref:System.Web.Services.WebService&gt;</ph> and access the <ph id="ph3">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> property.</source>
          <target state="translated">액세스는 <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph>에서 XML 웹 서비스 메서드를 구현 하는 클래스를 파생 <ph id="ph2">&lt;xref:System.Web.Services.WebService&gt;</ph> 액세스할는 <ph id="ph3">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Context">
          <source>The Example below uses the <ph id="ph1">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> property to obtain the time of the request on the server.</source>
          <target state="translated">사용 하 여 다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.Services.WebService.Context%2A&gt;</ph> 서버에서 요청 시간을 가져오는 속성입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.Context">
          <source><ph id="ph1">&lt;paramref name="Context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Context" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.Server">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> for the current request.</source>
          <target state="translated">현재 요청에 대한 <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Server">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Server">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class provides several methods that can be used in the processing of Web requests, including <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.CreateObject%2A&gt;</ph> (for instantiating COM objects).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 을 포함 한 웹 요청 처리에 사용할 수 있는 여러 메서드를 제공 하는 클래스 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.CreateObject%2A&gt;</ph> (에 대 한 COM 개체를 인스턴스화).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Server">
          <source>The example below returns the computer name of the Web server using the <ph id="ph1">&lt;xref:System.Web.Services.WebService.Server%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 반환 컴퓨터 이름을 사용 하 여 웹 서버는 <ph id="ph1">&lt;xref:System.Web.Services.WebService.Server%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.Session">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> instance for the current request.</source>
          <target state="translated">현재 요청에 대한 <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Session">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> representing the ASP.NET session state object for the current session.</source>
          <target state="translated">현재 세션에 대한 ASP.NET 세션 상태 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Session">
          <source>The example below uses session state to determine how many times a particular session accesses the XML Web service method <ph id="ph1">`SessionHitCounter`</ph>.</source>
          <target state="translated">XML 웹 서비스 메서드를 액세스 하는 지정 된 횟수 만큼 특정 세션을 사용 하 여 세션 상태 아래 예제 <ph id="ph1">`SessionHitCounter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.Session">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.Services.WebMethodAttribute.EnableSession%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.Services.WebMethodAttribute&gt;</ph> is set to <ph id="ph3">`true`</ph> in order to gain access to session state.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Web.Services.WebMethodAttribute.EnableSession%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.Services.WebMethodAttribute&gt;</ph> 로 설정 된 <ph id="ph3">`true`</ph> 세션 상태에 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.SoapVersion">
          <source>Gets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
          <target state="translated">XML Web services에 대한 SOAP 요청을 수행하는 데 사용된 SOAP 프로토콜의 버전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.SoapVersion">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.SoapVersion">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.SoapVersion">
          <source>If the SOAP protocol was not used to communicate with the XML Web service, such as HTTP-GET or HTTP-POST, the value of the <ph id="ph1">&lt;xref:System.Web.Services.WebService.SoapVersion%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Default&gt;</ph>.</source>
          <target state="translated">SOAP 프로토콜의 값을 HTTP GET 또는 HTTP POST 등의 XML 웹 서비스와 통신 하는 사용 되지 않은 경우는 <ph id="ph1">&lt;xref:System.Web.Services.WebService.SoapVersion%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Default&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.SoapVersion">
          <source>For XML Web services that do not derive from the <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph> class, the version of the SOAP protocol used to make the SOAP request to the XML Web service can be also be accessed using the "WebServiceSoapVersion" entry of the <ph id="ph2">&lt;xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">파생 되지 않은 XML 웹 서비스에 대 한는 <ph id="ph1">&lt;xref:System.Web.Services.WebService&gt;</ph> 클래스, XML 웹 서비스 수도 액세스할 수 있습니다 "WebServiceSoapVersion" 항목을 사용 하 여 SOAP 요청에 사용 되는 SOAP 프로토콜의 버전은 <ph id="ph2">&lt;xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.SoapVersion">
          <source>That entry is of type <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</ph>.</source>
          <target state="translated">항목 형식이 한지 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.User">
          <source>Gets the ASP.NET server <ph id="ph1">&lt;see cref="P:System.Web.HttpContext.User" /&gt;</ph> object.</source>
          <target state="translated">ASP.NET 서버 <ph id="ph1">&lt;see cref="P:System.Web.HttpContext.User" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Web.Services.WebService.User">
          <source>Can be used to authenticate whether a user is authorized to execute the request.</source>
          <target state="translated">이 속성은 사용자가 요청을 실행할 권한이 있는지 여부를 인증하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> representing the ASP.NET server <ph id="ph2">&lt;see cref="P:System.Web.HttpContext.User" /&gt;</ph> object.</source>
          <target state="translated">ASP.NET 서버 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> 개체를 나타내는 <ph id="ph2">&lt;see cref="P:System.Web.HttpContext.User" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>Both Internet Information Services (IIS) and the .NET Framework need to be configured for authentication in order for the <ph id="ph1">&lt;xref:System.Web.Services.WebService.User%2A&gt;</ph> property to be meaningful.</source>
          <target state="translated">인터넷 정보 서비스 (IIS)와.NET Framework에 대 한 순서 대로 인증을 위해 구성 해야 할는 <ph id="ph1">&lt;xref:System.Web.Services.WebService.User%2A&gt;</ph> 의미 있는 속성입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>Authentication is the process of accepting credentials from a user and validating those credentials against some authority.</source>
          <target state="translated">인증은 사용자의 자격 증명을 수락 하 고 일부 권한에 대해 해당 자격 증명 유효성을 검사 하는 과정입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>If the credentials are valid, you have an authenticated identity.</source>
          <target state="translated">자격 증명이 유효 있으면 인증된 된 id입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>Authentication in the .NET Framework is configured by placing entries in the web.config file.</source>
          <target state="translated">.NET Framework의 인증 web.config 파일에 항목을 배치 하 여 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>The following example demonstrates the entries you place in the web.config file to enable Windows authentication.</source>
          <target state="translated">다음 예제에서는 항목은 Windows 인증을 사용 하도록 설정 하려면 web.config 파일에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>For more information on setting up security for an XML Web service see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconSecuringASPNETWebServices&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c)</ept>.</source>
          <target state="translated">XML 웹 서비스에 대 한 보안 설정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://cpconSecuringASPNETWebServices &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/354b2ab1-2782-4542-b32a-dc560178b90c)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.WebService.User">
          <source>The example below looks up the authenticated user name and returns that name.</source>
          <target state="translated">다음 예제에서는 인증 된 사용자 이름을 조회 하 고 해당 이름을 반환 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>