<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb32fe86838ce711647b8159774d6ab966929a3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36594406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET을 사용하여 만든 XML Web services 내의 메서드에 이 특성을 추가하면 원격 웹 클라이언트에서 해당 메서드를 호출할 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 특성이 설정 되어 있는 클래스 내의 메서드는 XML 웹 서비스 메서드를 호출 됩니다. 메서드 및 클래스는 ASP.NET 웹 응용 프로그램 내의 실행 되 고 공용 이어야 합니다.  
  
   
  
## Examples  
 메서드가 아래 예제에서는 `GetMachineName` 있기 때문에 웹을 통해 원격으로 호출할 수 있습니다는 <xref:System.Web.Services.WebMethodAttribute>합니다. `GetUserName` 에 없기 때문에 원격으로 호출할 수 없습니다는 <xref:System.Web.Services.WebMethodAttribute>가 아니더라도 그렇다고, `public`합니다.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute enableSession" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web services 메서드의 세션 상태 사용 여부를 초기화합니다.</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web services 메서드의 세션 상태 사용 여부를 초기화합니다.</param>
        <param name="transactionOption">XML Web services 메서드의 트랜잭션 지원을 초기화합니다.</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 서비스 호출의 HTTP 프로토콜 상태 비저장 특성으로 인해 트랜잭션 루트 수만 있습니다. 즉, 다음의 두 설정은, 새 트랜잭션을 만들 각 호출에:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 또한 다음과 같은 모든 설정을 서로 동등; 않은지 의미 트랜잭션을 지원 하지를 의미 합니다.  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web services 메서드의 세션 상태 사용 여부를 초기화합니다.</param>
        <param name="transactionOption">XML Web services 메서드의 트랜잭션 지원을 초기화합니다.</param>
        <param name="cacheDuration">응답을 캐시하는 시간(초)을 초기화합니다.</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 서비스 호출의 HTTP 프로토콜 상태 비저장 특성으로 인해 트랜잭션 루트 수만 있습니다.  즉, 다음의 두 설정은, 새 트랜잭션을 만들 각 호출에:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 또한 다음과 같은 모든 설정을 서로 동등; 않은지 의미 트랜잭션을 지원 하지를 의미 합니다.  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">XML Web services 메서드의 세션 상태 사용 여부를 초기화합니다.</param>
        <param name="transactionOption">XML Web services 메서드의 트랜잭션 지원을 초기화합니다.</param>
        <param name="cacheDuration">응답을 캐시하는 시간(초)을 초기화합니다.</param>
        <param name="bufferResponse">이 요청에 대한 응답을 버퍼링할지 여부를 초기화합니다.</param>
        <summary>
          <see cref="T:System.Web.Services.WebMethodAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 서비스 호출의 HTTP 프로토콜 상태 비저장 특성으로 인해 트랜잭션 루트 수만 있습니다.  즉, 다음의 두 설정은, 새 트랜잭션을 만들 각 호출에:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 또한 다음과 같은 모든 설정을 서로 동등; 않은지 의미 트랜잭션을 지원 하지를 의미 합니다.  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferResponse : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 요청에 대한 응답을 버퍼링할지 여부를 가져오거나 설정합니다.</summary>
        <value>이 요청에 대한 응답을 버퍼링하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> 를 `true`는 응답을 완전히 직렬화 하거나 버퍼가 가득 찬 될 때까지 메모리 버퍼에 XML 웹 서비스 메서드의 응답을 직렬화 합니다. 응답 버퍼링 되 면 XML 웹 서비스 클라이언트에 네트워크를 통해 반환 됩니다. 때 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> 은 `false`, serialize 된와 같이 XML 웹 서비스 메서드에 대 한 응답을 클라이언트로 다시 전송 됩니다. 일반적으로 설정 하려는 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> 를 `false`클라이언트에 많은 양의 데이터를 반환 하는 XML 웹 서비스 메서드를 알 경우, 합니다. 적은 양의 데이터를 XML 웹 서비스 성능은 강력해졌습니다 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> 를 `true`합니다.  
  
 때 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> 은 `false`, XML 웹 서비스 메서드에 대 한 SOAP 확장을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> 속성을 `false` 하 고 클라이언트에 텍스트 파일의 스트리밍 처리 합니다. 코드 예제에서는 데이터를 다시 구현 하는 클래스를 사용 하 여 클라이언트의 큰 부분을 스트림 하는 방법을 <xref:System.Collections.IEnumerable> 인터페이스입니다.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응답이 캐시에 보유되어야 하는 시간(초)을 가져오거나 설정합니다.</summary>
        <value>응답이 캐시에 보유되어야 하는 시간(초)입니다. 기본값은 0으로, 응답을 캐시하지 않음을 의미합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 캐싱을 사용 하는 경우 요청 및 응답이 메모리에 유지 됩니다에 대 한 서버에서 이상 캐시 기간 하므로 매우 커질 요청 또는 응답을 예상 하거나 광범위 하 게 변경 하는 요청을 받는 경우 주의 해야 합니다.  
  
 ASP.NET 2.0 웹 서비스 응용 프로그램에서 출력 캐싱에 영향을 미칠 수 있는 두 가지 문제가 있습니다.  
  
 ASP.NET 2.0에서 테스트 페이지의 HTTP 메서드가 GET에서 POST로 변경되었습니다. 그러나 대부분의 경우 POST는 캐시되지 않습니다. ASP.NET 2.0 웹 서비스 응용 프로그램에서 테스트 페이지를 변경하여 GET을 사용하면 캐싱이 제대로 작동합니다.  
  
 또한 HTTP는 사용자 에이전트(브라우저 또는 호출 응용 프로그램)가 "Cache-Control"을 "no-cache"로 설정하여 서버 캐싱을 재정의할 수 있어야 함을 나타냅니다. 따라서 ASP.NET 응용 프로그램에서는 "no-cache" 헤더를 발견하는 경우 캐시된 결과를 무시합니다.  
  
   
  
## Examples  
 다음 예제에서는 배치에 대 한 호출의 결과 `ServiceUsage` 60 초 동안 캐시에서 XML 웹 서비스 메서드. 언제 든 지 서비스 클라이언트를 실행 하는 XML Web는 `ServiceUsage` 그 동안 XML 웹 서비스 메서드에 동일한 결과가 반환 됩니다.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebMethodAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services 메서드를 설명하는 메시지입니다.</summary>
        <value>XML Web services 메서드를 설명하는 메시지입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설명 하는 메시지 표시 됩니다는 XML 웹 서비스의 잠재 소비자에 게 XML 웹 서비스에 대 한 설명 문서를 생성할 때 서비스 설명 및 서비스 도움말 페이지 등.  
  
   
  
## Examples  
 문자열이 다음 예제에서 `Obtains the Server Computer Name` XML 웹 서비스에 대 한 서비스 설명 및 서비스 도움말 페이지에서 XML 웹 서비스 메서드를 설명 하는 데 사용 됩니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSession : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services 메서드의 세션 상태 사용 여부를 나타냅니다.</summary>
        <value>XML Web services 메서드의 세션 상태를 사용하면 <see langword="true" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asp.net에서 세션 상태를 저장 하기 위해 <xref:System.Web.SessionState.HttpSessionState> 개체, XML 웹 서비스에서 상속 해야 <xref:System.Web.Services.WebService> 및 <xref:System.Web.Services.WebMethodAttribute> 설정 XML 웹 서비스 메서드에 적용 되는 <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> 속성을 `true`합니다. 세션 상태는 XML 웹 서비스 검색 방법에 대 한 필요 하지 않은 경우 사용 중지 한 다음 성능을 향상 시킬 수 있습니다.  
  
 XML 웹 서비스 클라이언트는 XML 웹 서비스에서 반환 된 HTTP 쿠키로 고유 하 게 식별 됩니다. 클라이언트에 대 한 세션 상태를 유지 관리 하는 XML 웹 서비스에서 클라이언트가 쿠키를 유지 해야 합니다. 클라이언트의 새 인스턴스를 만들어 HTTP 쿠키를 받을 수 있습니다 <xref:System.Net.CookieContainer> 에 할당 하는 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> XML 웹 서비스 메서드를 호출 하기 전에 프록시 클래스의 속성입니다. 프록시 클래스 인스턴스 범위를 벗어나면 다음 세션 상태를 유지 해야 하는 경우 클라이언트는 XML 웹 서비스에 대 한 호출 사이 HTTP 쿠키를 유지 해야 합니다. Web Forms 클라이언트 저장 하 여 HTTP 쿠키를 유지할 수 예를 들어,는 <xref:System.Net.CookieContainer> 자체 세션 상태에 있습니다. 세션 상태를 사용 하는 일부 XML 웹 서비스 및 따라서 클라이언트는 항상 사용 하지 않아도 때문에 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> 클라이언트 프록시의 속성을 XML 웹 서비스에 대 한 설명서 명시 세션 상태가 사용 여부.  
  
   
  
## Examples  
 XML 웹 서비스 메서드를 액세스 하는 지정 된 횟수 만큼 특정 세션을 사용 하 여 세션 상태 아래 예제 `SessionHitCounter`합니다.  
  
  
  
 다음 코드 예제에서는 세션 상태를 사용 하는 XML 웹 서비스의 Web Forms 클라이언트입니다. 클라이언트는 클라이언트의 세션 상태에 저장 하 여 세션을 고유 하 게 식별 하는 HTTP 쿠키를 유지 합니다.  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageName : string with get, set" Usage="System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services 메서드에 전달되고 반환되는 데이터 내의 XML Web services 메서드에 사용되는 이름입니다.</summary>
        <value>XML Web services 메서드에 전달되고 반환되는 데이터 내의 XML Web services 메서드에 사용되는 이름입니다. 기본값은 XML Web services 메서드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> 속성 별칭 메서드 또는 속성 이름에 사용할 수 있습니다. 가장 일반적인 용도 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> 속성 다형 메서드를 고유 하 게 식별 됩니다. 기본적으로 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> XML 웹 서비스 메서드의 이름으로 설정 됩니다. 따라서 동일한 이름의 두 개 이상의 XML 웹 서비스 메서드를 포함 하는 XML 웹 서비스를 식별할 수 있습니다 고유 하 게 개별 XML 웹 서비스 메서드를 설정 하 여는 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> XML 웹 서비스의 이름을 변경 하지 않고 내에서 고유 이름에는 코드에서 실제 메서드 이름입니다.  
  
 데이터가 XML 웹 서비스에 전달 되는 요청에서 및 응답에서 반환 될 때 전송 됩니다. 요청 및 응답 내에서 사용 된 XML 웹 서비스 메서드에 대 한 이름은 해당 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> 속성입니다.  
  
 XML 웹 서비스 메서드와 관련 된 메시지 이름을 XML 웹 서비스 내에서 고유 해야 합니다.  
  
 새 메서드는 서로 다른 메시지 이름을 지정 해야 하지만 원본 메시지 이름은 호환성을 위해 있는 그대로 유지 해야 경우 원래 메서드를 호출 하는 클라이언트는 한 후 새 XML 웹 서비스 메서드 이름은 같지만 서로 다른 매개 변수를 추가 기존 고객과 합니다.  
  
   
  
## Examples  
 다음 예제에서 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> 두 명확 하 게 하는 데 사용 되 `Add` 메서드.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionOption : System.EnterpriseServices.TransactionOption with get, set" Usage="System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services 메서드의 트랜잭션 지원을 나타냅니다.</summary>
        <value>XML Web services 메서드의 트랜잭션 지원입니다. 기본값은 <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 웹 서비스 메서드는 HTTP 프로토콜의 상태 비저장 특성으로 인해 트랜잭션에서 루트 개체로 참여할 수 있습니다. XML 웹 서비스 메서드는 COM 개체는 구성 요소 서비스 관리 도구의 트랜잭션 내에서 실행 되도록 표시 된 경우 XML 웹 서비스 메서드로 동일한 트랜잭션에 참여 하는 COM 개체를 호출할 수 있습니다. 경우 사용 하 여 XML 웹 서비스 메서드에 <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> 속성의 `Required` 또는 `RequiresNew` 다른 XML 웹 서비스 메서드를 호출는 <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> 속성 `Required` 또는 `RequiresNew`, 자체에 참여 하는 각 XML 웹 서비스 메서드 트랜잭션, XML 웹 서비스 메서드는 트랜잭션에 대 한 루트 개체로 작동할 수 있으므로 합니다.  
  
|항목|설명|  
|----------|-----------------|  
|사용 안 함|XML 웹 서비스 메서드는 트랜잭션의 범위 내에서 실행 되지 않습니다 나타냅니다. 요청이 처리 될 때 XML 웹 서비스 메서드가 트랜잭션 없이 실행 됩니다.<br /><br /> [WebMethod(TransactionOption= `TransactionOption.Disabled`)]|  
|NotSupported|XML 웹 서비스 메서드는 트랜잭션의 범위 내에서 실행 되지 않습니다 나타냅니다. 요청이 처리 될 때 XML 웹 서비스 메서드가 트랜잭션 없이 실행 됩니다.<br /><br /> [WebMethod(TransactionOption= `TransactionOption.NotSupported`)]|  
|지원함|XML 웹 서비스 메서드가 트랜잭션의 범위 내에서 실행 되지 않습니다 나타냅니다. 요청이 처리 될 때 XML 웹 서비스 트랜잭션 없이 생성 됩니다.<br /><br /> [WebMethod(TransactionOption= `TransactionOption.Supported`)]|  
|필수|XML 웹 서비스 메서드는 트랜잭션이 필요 함을 나타냅니다. XML 웹 서비스 메서드는 트랜잭션에 대 한 루트 개체로 참여할 수 있습니다, 때문 XML 웹 서비스 메서드에 대 한 새 트랜잭션이 만들어집니다.<br /><br /> [WebMethod(TransactionOption= `TransactionOption.Required`)]|  
|RequiresNew|XML 웹 서비스 메서드에서 새 트랜잭션이 필요 함을 나타냅니다. 요청이 처리 될 때 새 트랜잭션 내에서 XML 웹 서비스가 만들어집니다.<br /><br /> [WebMethod(TransactionOption= `TransactionOption.RequiresNew`)]|  
  
 throw 된 예외는 XML 웹 서비스 검색 방법으로는 포착 되지 하거나를 트랜잭션이 자동으로 중단 됩니다. 예외가 발생 하지 않으면 메서드가 명시적으로 호출 하지 않으면 트랜잭션이 자동으로 커밋될 때 `SetAbort`합니다.  
  
   
  
## Examples  
 다음 예제에서는 새 트랜잭션을 시작 때는 `Transfer` 메서드를 호출 합니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>