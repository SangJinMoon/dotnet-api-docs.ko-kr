<Type Name="XmlDataSource" FullName="System.Web.UI.WebControls.XmlDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80a8abd56617d8c6d6e4f6c130871ad90ce06595" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55343082" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataSource extends System.Web.UI.HierarchicalDataSourceControl implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.XmlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataSource&#xA;Inherits HierarchicalDataSourceControl&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataSource : System::Web::UI::HierarchicalDataSourceControl, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type XmlDataSource = class&#xA;    inherit HierarchicalDataSourceControl&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HierarchicalDataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Transforming")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataFile")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c941d-101">데이터 바인딩된 컨트롤에 대한 XML 데이터 원본을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-101">Represents an XML data source to data-bound controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="c941d-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="c941d-103">소개</span><span class="sxs-lookup"><span data-stu-id="c941d-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="c941d-104">XML 데이터 원본</span><span class="sxs-lookup"><span data-stu-id="c941d-104">Sources of XML Data</span></span>](#source_of_xml_data)  
  
-   [<span data-ttu-id="c941d-105">XML 데이터를 업데이트 하는 중</span><span class="sxs-lookup"><span data-stu-id="c941d-105">Updating XML Data</span></span>](#updating_xml_data)  
  
-   [<span data-ttu-id="c941d-106">XSL 변환 지정</span><span class="sxs-lookup"><span data-stu-id="c941d-106">Specifying an XSL Transformation</span></span>](#specifying_an_xsl_transformation)  
  
-   [<span data-ttu-id="c941d-107">XPath 식을 사용 하 여 필터링</span><span class="sxs-lookup"><span data-stu-id="c941d-107">Filtering using an XPath Expression</span></span>](#filtering_using_an_xpath_expression)  
  
-   [<span data-ttu-id="c941d-108">캐싱</span><span class="sxs-lookup"><span data-stu-id="c941d-108">Caching</span></span>](#caching)  
  
-   [<span data-ttu-id="c941d-109">추가 기능</span><span class="sxs-lookup"><span data-stu-id="c941d-109">Additional Features</span></span>](#additional_features)  
  
-   [<span data-ttu-id="c941d-110">데이터 뷰 개체</span><span class="sxs-lookup"><span data-stu-id="c941d-110">Data View Object</span></span>](#data_view_object)  
  
-   [<span data-ttu-id="c941d-111">선언 구문</span><span class="sxs-lookup"><span data-stu-id="c941d-111">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="c941d-112">소개</span><span class="sxs-lookup"><span data-stu-id="c941d-112">Introduction</span></span>  
 <span data-ttu-id="c941d-113"><xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤이 XML 데이터를 데이터 바인딩된 컨트롤을 제공 하는 데이터 소스 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-113">The <xref:System.Web.UI.WebControls.XmlDataSource> control is a data source control that presents XML data to data-bound controls.</span></span> <span data-ttu-id="c941d-114"><xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤 수 데이터 바인딩된 컨트롤에서 계층 구조 및 테이블 형식 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-114">The <xref:System.Web.UI.WebControls.XmlDataSource> control can be used by data-bound controls to display both hierarchical and tabular data.</span></span> <span data-ttu-id="c941d-115"><xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤은 일반적으로 읽기 전용 시나리오에서 계층적 XML 데이터를 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-115">The <xref:System.Web.UI.WebControls.XmlDataSource> control is typically used to display hierarchical XML data in read-only scenarios.</span></span> <span data-ttu-id="c941d-116">때문에 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.HierarchicalDataSourceControl> 계층적 데이터를 사용 하 여 작동 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-116">Because the <xref:System.Web.UI.WebControls.XmlDataSource> control extends the <xref:System.Web.UI.HierarchicalDataSourceControl> class, it works with hierarchical data.</span></span> <span data-ttu-id="c941d-117"><xref:System.Web.UI.WebControls.XmlDataSource> 구현도 제어는 <xref:System.Web.UI.IDataSource> 인터페이스와 함께 테이블 형식 목록 스타일, 데이터 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-117">The <xref:System.Web.UI.WebControls.XmlDataSource> control also implements the <xref:System.Web.UI.IDataSource> interface and works with tabular, or list-style, data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c941d-118">하나도 보안상의 이유로 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤 속성 보기 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-118">For security purposes, none of the <xref:System.Web.UI.WebControls.XmlDataSource> control properties are stored in view state.</span></span> <span data-ttu-id="c941d-119">기술적으로 가능 클라이언트에서 보기 상태의 내용을 디코딩 이므로 저장 데이터 구조 또는 해당 내용에 대 한 중요 한 정보가 노출 될 수 있습니다 정보 공개 위협이 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-119">Since it is technically possible to decode the contents of view state on the client, storing sensitive information about the data structure or its contents could expose you to an information disclosure threat.</span></span> <span data-ttu-id="c941d-120">와 같은 정보를 저장 해야 하는 경우 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성에서 뷰 상태를 설정 하 여 콘텐츠를 보호 하기 위해 암호화를 설정할 수 있습니다. <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 에 `@ Page` 지시문입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-120">Note that if you need to store information such as <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property in view state, you can enable encryption to protect the contents by setting <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> on the `@ Page` directive.</span></span>  
  
 <span data-ttu-id="c941d-121">개발자가 사용 하 여 페이지를 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 데이터 바인딩된 컨트롤을 사용 하 여 XML 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-121">Page developers use the <xref:System.Web.UI.WebControls.XmlDataSource> control to display XML data using data-bound controls.</span></span>  
  
<a name="source_of_xml_data"></a>   
## <a name="sources-of-xml-data"></a><span data-ttu-id="c941d-122">XML 데이터 원본</span><span class="sxs-lookup"><span data-stu-id="c941d-122">Sources of XML Data</span></span>  
 <span data-ttu-id="c941d-123">합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 일반적으로 의해 지정 되는 XML 파일에서 XML 데이터를 로드 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-123">The <xref:System.Web.UI.WebControls.XmlDataSource> typically loads XML data from an XML file, which is specified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property.</span></span> <span data-ttu-id="c941d-124">XML 데이터를 사용 하 여 문자열 양식에서 데이터 소스 컨트롤에서 직접 저장할 수도 있습니다는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-124">XML data can also be stored directly by the data source control in string form using the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property.</span></span> <span data-ttu-id="c941d-125">데이터 바인딩된 컨트롤에서 표시 하기 전에 XML 데이터를 변환 하려는 경우 변환에 대 한 스타일 시트 XSL (Extensible Language) 스타일 시트를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-125">If you want to transform the XML data before it is displayed by a data-bound control, you can provide an Extensible Stylesheet Language (XSL) style sheet for the transformation.</span></span> <span data-ttu-id="c941d-126">XML 데이터를 사용 하 여 일반적으로 파일에서 스타일 시트를 로드, 대로 나타난를 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 있지만 속성을 저장할 수도 직접 사용 하 여 문자열 형태로 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c941d-126">As with the XML data, you typically load the style sheet from a file, indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property, but you can also store it in string form directly using the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> property.</span></span>  
  
<a name="updating_xml_data"></a>   
## <a name="updating-xml-data"></a><span data-ttu-id="c941d-127">XML 데이터를 업데이트 하는 중</span><span class="sxs-lookup"><span data-stu-id="c941d-127">Updating XML Data</span></span>  
 <span data-ttu-id="c941d-128"><xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤은 일반적으로 읽기 전용 데이터 시나리오에서 사용 데이터 바인딩된 컨트롤을 XML 데이터를 표시 하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-128">The <xref:System.Web.UI.WebControls.XmlDataSource> control is commonly used in read-only data scenarios where a data-bound control displays XML data.</span></span> <span data-ttu-id="c941d-129">그러나 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤이 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-129">However, you can also use the <xref:System.Web.UI.WebControls.XmlDataSource> control to edit XML data.</span></span> <span data-ttu-id="c941d-130">XML 데이터를 편집 하려면 호출을 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> 검색 하는 메서드는 <xref:System.Xml.XmlDataDocument> 개체는 XML 데이터의 메모리 내 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-130">To edit the XML data, call the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method to retrieve an <xref:System.Xml.XmlDataDocument> object that is an in-memory representation of the XML data.</span></span> <span data-ttu-id="c941d-131">노출 하는 개체 모델을 사용할 수 있습니다 합니다 <xref:System.Xml.XmlDataDocument> 및 <xref:System.Xml.XmlNode> 개체를 포함 하거나 문서에서 데이터를 조작 하는 XPath 식을 필터링을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-131">You can use the object model exposed by the <xref:System.Xml.XmlDataDocument> and <xref:System.Xml.XmlNode> objects it contains or use an XPath filtering expression to manipulate data in the document.</span></span> <span data-ttu-id="c941d-132">XML 데이터의 메모리 내 표현을 변경한 호출 하 여 디스크에 저장할 수 있습니다는 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-132">When you have made changes to the in-memory representation of the XML data, you can save it to disk by calling the <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method.</span></span>  
  
 <span data-ttu-id="c941d-133">몇 가지 제한 사항이의 편집 기능에는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-133">There are some restrictions to the editing capabilities of the <xref:System.Web.UI.WebControls.XmlDataSource> control:</span></span>  
  
-   <span data-ttu-id="c941d-134">의해 표시 되는 XML 파일에서 XML 데이터를 로드 해야 합니다는 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성에 지정 된 XML 인라인에서가 아니라는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-134">The XML data must be loaded from an XML file that is indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property, not from inline XML specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property.</span></span>  
  
-   <span data-ttu-id="c941d-135">XSLT 변환이 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 또는 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-135">No XSLT transformation can be specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> or <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> properties.</span></span>  
  
-   <span data-ttu-id="c941d-136"><xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드 처리 하지 않는 저장 작업 동시 다른 요청에서.</span><span class="sxs-lookup"><span data-stu-id="c941d-136">The <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method does not handle concurrent save operations by different requests.</span></span> <span data-ttu-id="c941d-137">둘 이상의 사용자가를 통해 XML 파일을 편집 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource>은 동일한 데이터를 사용 하 여 실행 중인 모든 사용자가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-137">If more than one user is editing an XML file through the <xref:System.Web.UI.WebControls.XmlDataSource>, there is no guarantee that all users are operating with the same data.</span></span> <span data-ttu-id="c941d-138">수 이기도 한 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 작업이 이러한 같은 동시성 문제로 인해 실패 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-138">It is also possible for a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> operation to fail due to these same concurrency issues.</span></span>  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a><span data-ttu-id="c941d-139">XSL 변환 지정</span><span class="sxs-lookup"><span data-stu-id="c941d-139">Specifying an XSL Transformation</span></span>  
 <span data-ttu-id="c941d-140">XML 데이터를 사용 하 여 수행 하는 일반적인 작업은 변환 하나의 XML 데이터 집합에서 다른 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-140">A common operation performed with XML data is transforming it from one XML data set into another.</span></span> <span data-ttu-id="c941d-141"><xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤이 사용 하 여 XML 변환을 지원 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 및 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 데이터 바인딩된 컨트롤에 전달 되기 전에 XML 데이터에 적용할 XSL 스타일 시트를 지정 하는 속성 및 <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> 수 있는 속성 XSL 스타일 시트에서 변환 하는 동안 사용할 동적 XSLT 스타일 시트 인수를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-141">The <xref:System.Web.UI.WebControls.XmlDataSource> control supports XML transformations with the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> and <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> properties, which specify an XSL style sheet to apply to XML data before it is passed to a data-bound control, and the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property, which enables you to supply dynamic XSLT style sheet arguments to be used by an XSL style sheet during the transformation.</span></span> <span data-ttu-id="c941d-142">XPath 식을 사용 하 여 필터링을 지정 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성인 변환 수행 후 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-142">If you specify an XPath filtering expression using the <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property, it is applied after the transformation takes place.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c941d-143">합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 클래스를 사용 하 여 사용 되지 않는 <xref:System.Xml.Xsl.XslTransform> XSL 변환을 수행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-143">The <xref:System.Web.UI.WebControls.XmlDataSource> class uses the deprecated <xref:System.Xml.Xsl.XslTransform> class to perform XSL transformations.</span></span> <span data-ttu-id="c941d-144">이후 도입 된 스타일 시트 기능을 사용 하려는 경우는 <xref:System.Xml.Xsl.XslTransform> 클래스의 사용이 중단 되었으며, 사용 하 여 수동으로 변환을 적용 합니다 <xref:System.Xml.Xsl.XslCompiledTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-144">If you want to use style sheet features that were introduced after the <xref:System.Xml.Xsl.XslTransform> class was deprecated, apply the transforms manually by using the <xref:System.Xml.Xsl.XslCompiledTransform> class.</span></span>  
  
<a name="filtering_using_an_xpath_expression"></a>   
## <a name="filtering-using-an-xpath-expression"></a><span data-ttu-id="c941d-145">XPath 식을 사용 하 여 필터링</span><span class="sxs-lookup"><span data-stu-id="c941d-145">Filtering using an XPath Expression</span></span>  
 <span data-ttu-id="c941d-146">기본적으로 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤에 의해 식별 된 XML 파일에서 XML 데이터를 모두 로드 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성 또는 인라인으로 찾을 수는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성인 있지만 XPath 식을 사용 하 여 데이터를 필터링 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-146">By default, the <xref:System.Web.UI.WebControls.XmlDataSource> control loads all the XML data in the XML file identified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property or found inline in the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property, but you can filter the data using an XPath expression.</span></span> <span data-ttu-id="c941d-147"><xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성이 XML 데이터 로드 되 고 변환 후에 적용 되는 XPath 구문을 필터를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-147">The <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property supports an XPath-syntax filter that is applied after XML data is loaded and transformed.</span></span>  
  
<a name="caching"></a>   
## <a name="caching"></a><span data-ttu-id="c941d-148">캐싱</span><span class="sxs-lookup"><span data-stu-id="c941d-148">Caching</span></span>  
 <span data-ttu-id="c941d-149">성능 향상을 위해 캐싱을 사용할 수는 <xref:System.Web.UI.WebControls.XmlDataSource> 기본적으로 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-149">For performance purposes, caching is enabled for the <xref:System.Web.UI.WebControls.XmlDataSource> control by default.</span></span> <span data-ttu-id="c941d-150">열고 페이지가 요청 될 때마다 서버에서 XML 파일을 읽는 애플리케이션의 성능을 줄일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-150">Opening and reading an XML file on the server every time a page requested can reduce the performance of your application.</span></span> <span data-ttu-id="c941d-151">처리 부하를 웹 서버에서 메모리 서버의 줄이는 있습니다 캐싱 대부분의 경우 적절 한 절충입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-151">Caching lets you reduce the processing load on your server at the expense of memory on the Web server; in most cases this is a good trade-off.</span></span> <span data-ttu-id="c941d-152"><xref:System.Web.UI.WebControls.XmlDataSource> 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성이로 설정 되어 `true`, 및 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 속성 캐시는 캐시를 무효화 하기 전에 데이터를 저장 하는 시간 (초) 수로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-152">The <xref:System.Web.UI.WebControls.XmlDataSource> automatically caches data when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true`, and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> property is set to the number of seconds that the cache stores data before the cache is invalidated.</span></span> <span data-ttu-id="c941d-153">사용할 수는 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 추가 데이터 소스 컨트롤의 캐싱 동작을 세밀 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-153">You can use the <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> to further fine-tune the caching behavior of the data source control.</span></span>  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a><span data-ttu-id="c941d-154">추가 기능</span><span class="sxs-lookup"><span data-stu-id="c941d-154">Additional Features</span></span>  
 <span data-ttu-id="c941d-155">다음 테이블에서 지원 되는 추가 기능을 나열 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-155">The following table lists additional features that are supported by the <xref:System.Web.UI.WebControls.XmlDataSource> control.</span></span>  
  
|<span data-ttu-id="c941d-156">기능</span><span class="sxs-lookup"><span data-stu-id="c941d-156">Capability</span></span>|<span data-ttu-id="c941d-157">설명</span><span class="sxs-lookup"><span data-stu-id="c941d-157">Description</span></span>|  
|----------------|-----------------|  
|<span data-ttu-id="c941d-158">정렬</span><span class="sxs-lookup"><span data-stu-id="c941d-158">Sorting</span></span>|<span data-ttu-id="c941d-159">지원 되지 않습니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-159">Not supported by the <xref:System.Web.UI.WebControls.XmlDataSource> control.</span></span>|  
|<span data-ttu-id="c941d-160">필터링</span><span class="sxs-lookup"><span data-stu-id="c941d-160">Filtering</span></span>|<span data-ttu-id="c941d-161"><xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 적절 한 XPath 식을 사용 하 여 XML 데이터를 필터링 할 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-161">The <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property can be used to filter the XML data using an appropriate XPath expression.</span></span>|  
|<span data-ttu-id="c941d-162">페이징</span><span class="sxs-lookup"><span data-stu-id="c941d-162">Paging</span></span>|<span data-ttu-id="c941d-163">지원 되지 않습니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-163">Not supported by the <xref:System.Web.UI.WebControls.XmlDataSource> control.</span></span>|  
|<span data-ttu-id="c941d-164">업데이트하는 중</span><span class="sxs-lookup"><span data-stu-id="c941d-164">Updating</span></span>|<span data-ttu-id="c941d-165">조작 하 여 지원 합니다 <xref:System.Xml.XmlDataDocument> 직접 호출한는 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-165">Supported by manipulating the <xref:System.Xml.XmlDataDocument> directly and then calling the <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method.</span></span>|  
|<span data-ttu-id="c941d-166">삭제</span><span class="sxs-lookup"><span data-stu-id="c941d-166">Deleting</span></span>|<span data-ttu-id="c941d-167">조작 하 여 지원 합니다 <xref:System.Xml.XmlDataDocument> 직접 호출한는 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-167">Supported by manipulating the <xref:System.Xml.XmlDataDocument> directly and then calling the <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method.</span></span>|  
|<span data-ttu-id="c941d-168">삽입</span><span class="sxs-lookup"><span data-stu-id="c941d-168">Inserting</span></span>|<span data-ttu-id="c941d-169">조작 하 여 지원 합니다 <xref:System.Xml.XmlDataDocument> 직접 호출한는 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-169">Supported by manipulating the <xref:System.Xml.XmlDataDocument> directly and then calling the <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method.</span></span>|  
|<span data-ttu-id="c941d-170">캐싱</span><span class="sxs-lookup"><span data-stu-id="c941d-170">Caching</span></span>|<span data-ttu-id="c941d-171">기본적으로 사용 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 0 (무한)으로 설정 하는 속성 및 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 속성으로 설정 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-171">Enabled by default, with the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> property set to 0 (infinite) and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> property set to <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>.</span></span>|  
  
<a name="data_view_object"></a>   
## <a name="data-view-object"></a><span data-ttu-id="c941d-172">데이터 뷰 개체</span><span class="sxs-lookup"><span data-stu-id="c941d-172">Data View Object</span></span>  
 <span data-ttu-id="c941d-173">때문에 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤이 지원 계층적 데이터를 표시 하는 데이터 바인딩된 컨트롤 뿐만 아니라 테이블 형식 데이터를 표시 하는 컨트롤, 데이터 소스 컨트롤이 해당 내부 XML 데이터에 대해 여러 유형의 데이터 원본 뷰 개체를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-173">Because the <xref:System.Web.UI.WebControls.XmlDataSource> control supports data-bound controls that display hierarchical data as well as controls that display tabular data, the data source control supports multiple types of data source view objects on its underlying XML data.</span></span> <span data-ttu-id="c941d-174">합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 라는 단일 검색 <xref:System.Web.UI.WebControls.XmlDataSourceView> 표 형식 데이터를 표시 하는 데이터 바인딩된 컨트롤을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-174">The <xref:System.Web.UI.WebControls.XmlDataSource> control retrieves a single named <xref:System.Web.UI.WebControls.XmlDataSourceView> object when used with a data-bound control that displays tabular data.</span></span> <span data-ttu-id="c941d-175"><xref:System.Web.UI.IDataSource.GetViewNames%2A> 메서드는이 단일 명명 된 보기를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-175">The <xref:System.Web.UI.IDataSource.GetViewNames%2A> method identifies this single named view.</span></span> <span data-ttu-id="c941d-176">계층적 데이터를 표시 하는 데이터 바인딩된 컨트롤을 사용 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤에서 검색을 <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> 에 전달 된 모든 고유한 계층 경로 대 한는 <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-176">When used with a data-bound control that displays hierarchical data, the <xref:System.Web.UI.WebControls.XmlDataSource> control retrieves an <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> for any unique hierarchical path passed to the <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> method.</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="c941d-177">선언 구문</span><span class="sxs-lookup"><span data-stu-id="c941d-177">Declarative Syntax</span></span>  
  
```  
<asp:XmlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    DataFile="string"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTransforming="Transforming event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformArgumentList="string"  
    TransformFile="string"  
    Visible="True|False"  
    XPath="string"  
>  
    <Data>string</Data>  
    <Transform>string</Transform>  
</asp:XmlDataSource>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c941d-178">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-178">This section contains two code examples.</span></span> <span data-ttu-id="c941d-179">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 샘플 XML 파일에서 XML 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-179">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data from the sample XML file.</span></span> <span data-ttu-id="c941d-180">두 번째 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> XML 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-180">The second example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data.</span></span>  
  
 <span data-ttu-id="c941d-181">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> XML 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-181">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data.</span></span> <span data-ttu-id="c941d-182">합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 으로 식별 된 XML 파일에서 XML 데이터를 로드 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-182">The <xref:System.Web.UI.WebControls.XmlDataSource> loads XML data from the XML file identified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 <span data-ttu-id="c941d-183">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-183">The XML file in the code example has the following data:</span></span>  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 <span data-ttu-id="c941d-184">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> XML 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-184">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data.</span></span> <span data-ttu-id="c941d-185">합니다 <xref:System.Web.UI.WebControls.Repeater> 컨트롤에 데이터를 바인딩할 XPath 데이터 바인딩 식을 XML 내의 항목을 사용 하 여 문서에 <xref:System.Web.UI.WebControls.XmlDataSource> 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-185">The <xref:System.Web.UI.WebControls.Repeater> control uses an XPath data-binding expression to bind to data items within the XML document that the <xref:System.Web.UI.WebControls.XmlDataSource> represents.</span></span> <span data-ttu-id="c941d-186">에 대 한 자세한 내용은 `XPath` 하 고 `XPathSelect` 데이터 바인딩 구문을 참조는 <xref:System.Web.UI.XPathBinder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-186">For more information about `XPath` and `XPathSelect` data-binding syntax, see the <xref:System.Web.UI.XPathBinder> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 <span data-ttu-id="c941d-187">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-187">The XML file in the code example has the following data:</span></span>  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>John</firstn>  
         <lastn>Smith</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c941d-188"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-188">Creates a new instance of the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-189">데이터 소스 컨트롤에서 검색한 데이터를 캐시하는 시간(초)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-189">Gets or sets the length of time, in seconds, that the data source control caches data it has retrieved.</span></span></summary>
        <value><span data-ttu-id="c941d-190"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤에서 데이터 검색 작업의 결과를 캐시하는 시간(초)입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-190">The number of seconds that the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control caches the results of a data retrieval operation.</span></span> <span data-ttu-id="c941d-191">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-191">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-192"><xref:System.Web.UI.WebControls.XmlDataSource> 은 다음과 같은 경우 자동으로 데이터를 캐시 제어:</span><span class="sxs-lookup"><span data-stu-id="c941d-192">The <xref:System.Web.UI.WebControls.XmlDataSource> control automatically caches data when the following applies:</span></span>  
  
-   <span data-ttu-id="c941d-193"><xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성은 `true`로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-193">The <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true`.</span></span>  
  
-   <span data-ttu-id="c941d-194"><xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 속성 캐시는 캐시를 무효화 하기 전에 데이터를 저장 하는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-194">The <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache is invalidated.</span></span>  
  
 <span data-ttu-id="c941d-195">변경 된 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성 또는 XML 데이터를 포함 하는 파일의 내용을 하면 캐시가 무효화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-195">Any change to the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property or the contents of the file that contains the XML data causes the cache to be invalidated.</span></span>  
  
 <span data-ttu-id="c941d-196">기본적으로 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 속성 무한 캐시를 나타내는 0으로 설정 되 고 종속 되는 XML 파일이 변경 될 때까지 데이터 원본의 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-196">By default, the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> property is set to 0, which indicates an indefinite cache, and the data source will cache data until the XML file that it depends on is changed.</span></span>  
  
 <span data-ttu-id="c941d-197">캐시의 동작 기간의 조합에 따라 적용 됩니다 및 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-197">The behavior of the cache is governed by a combination of the duration and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> setting.</span></span> <span data-ttu-id="c941d-198">경우 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 로 설정 된 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>의 <xref:System.Web.UI.WebControls.XmlDataSource> 제어는 첫 번째 데이터 검색 작업에 데이터를 캐시, 지정 된 시간 동안 메모리에 보관 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, 경과 되 면 무효화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-198">If <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> is set to <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, the <xref:System.Web.UI.WebControls.XmlDataSource> control caches data on the first data retrieval operation, holds it in memory for the amount of time specified by <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, and invalidates it after the time has lapsed.</span></span> <span data-ttu-id="c941d-199">다음 작업 시에 캐시 한 다음 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-199">The cache is then refreshed upon the next operation.</span></span> <span data-ttu-id="c941d-200">하는 경우 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 로 설정 된 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, 데이터 소스 컨트롤은 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 보유 하는 기간을 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-200">If <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> is set to <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for upon each subsequent operation.</span></span> <span data-ttu-id="c941d-201">활동이 없는 시간 동안 같은 경우에 캐시 만료 됩니다를 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 이후 마지막 데이터 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-201">The cache will only expire if there is no activity for a time equal to the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> since the last data retrieval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-202">다음 코드 예제에서는 사용 하는 경우 캐싱을 사용 하도록 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> XML 파일에 포함 된 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-202">The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file.</span></span> <span data-ttu-id="c941d-203">캐싱을 사용 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성이로 설정 되어 `true` 및 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 데이터 소스 컨트롤에서 데이터 캐시 되는 시간 (초) 수로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-203">Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 <span data-ttu-id="c941d-204">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-204">The XML file in the code example has the following data:</span></span>  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-205">캐시 기간과 함께 사용되어 데이터 소스 컨트롤에서 사용하는 캐시의 캐싱 동작을 설명하는 캐시 만료 정책을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-205">Gets or sets the cache expiration policy that is combined with the cache duration to describe the caching behavior of the cache that the data source control uses.</span></span></summary>
        <value><span data-ttu-id="c941d-206"><see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-206">One of the <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> values.</span></span> <span data-ttu-id="c941d-207">기본 캐시 만료 정책 설정은 <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-207">The default cache expiration policy setting is <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-208">캐시의 동작을 조합 하 여 적용 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-208">The behavior of the cache is governed by a combination of the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> settings.</span></span> <span data-ttu-id="c941d-209">경우는 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 로 설정 된 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>의 <xref:System.Web.UI.WebControls.XmlDataSource> 첫 번째 데이터 검색 작업에 데이터를 캐시, 지정 된 시간 동안 메모리에 보관 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, 경과 되 면 무효화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-209">If the <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> is set to <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, the <xref:System.Web.UI.WebControls.XmlDataSource> caches data on the first data retrieval operation, holds it in memory for the amount of time specified by <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, and invalidates it after the time has lapsed.</span></span> <span data-ttu-id="c941d-210">다음 작업 시에 캐시 한 다음 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-210">The cache is then refreshed upon the next operation.</span></span> <span data-ttu-id="c941d-211">경우는 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> 로 설정 된 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, 데이터 소스 컨트롤은 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 보유 하는 기간을 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-211">If the <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> is set to <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for upon each subsequent operation.</span></span> <span data-ttu-id="c941d-212">활동이 없는 시간 동안 같은 경우에 캐시 만료를 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 이후 마지막 데이터 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-212">The cache will expire only if there is no activity for a time equal to the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> since the last data retrieval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-213">다음 코드 예제에서는 사용 하는 경우 캐싱을 사용 하도록 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> XML 파일에 포함 된 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-213">The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file.</span></span> <span data-ttu-id="c941d-214">캐싱을 사용 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성이로 설정 되어 `true` 및 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 데이터 소스 컨트롤에서 데이터 캐시 되는 시간 (초) 수로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-214">Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 <span data-ttu-id="c941d-215">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-215">The XML file in the code example has the following data:</span></span>  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyContext">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyContext : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-216">뷰 상태에서 데이터 소스 컨트롤에 대한 캐시 키 값을 가져오거나 설정합니다. 또는 뷰 상태에 캐시 키를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-216">Gets or sets the value of the cache key for the data source control from view state, or adds the cache key to view state.</span></span></summary>
        <value><span data-ttu-id="c941d-217">캐시 키 값입니다. 또는 캐시 키가 뷰 상태에 있지 않으면 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-217">The value of the cache key, or an empty string if the cache key is not in view state.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-218">합니다 <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A> 속성에 대 한 캐시 키를 수동으로 만들 수 있습니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-218">The <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A> property enables you to manually create a cache key for the <xref:System.Web.UI.WebControls.XmlDataSource> control.</span></span> <span data-ttu-id="c941d-219">컨트롤 데이터를 포함 하는 파일을 지정 하는 대신에 XML 또는 XSLT 데이터를 포함 하는 개체를 할당 하는 경우 이것이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-219">This is required only if you are assigning an object that contains XML or XSLT data to the control instead of specifying a file that contains the data.</span></span> <span data-ttu-id="c941d-220">컨트롤에 데이터를 할당 하면 데이터 캐시 키 생성에 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-220">When you assign data to the control, the data is not used to generate the cache key.</span></span> <span data-ttu-id="c941d-221">대신, 데이터 개체를 업데이트 하려는 경우 고유한 cache-key에 생성 해야 수동으로.</span><span class="sxs-lookup"><span data-stu-id="c941d-221">Instead, you must manually generate a unique cache key if you plan to update the data object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-222">데이터 소스 컨트롤에서 만든 모든 데이터 캐시 개체에 연결된 사용자 정의 키 종속성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-222">Gets or sets a user-defined key dependency that is linked to all data cache objects created by the data source control.</span></span> <span data-ttu-id="c941d-223">모든 캐시 개체는 키가 만료될 때 명시적으로 만료됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-223">All cache objects explicitly expire when the key expires.</span></span></summary>
        <value><span data-ttu-id="c941d-224"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤에서 만든 모든 캐시 개체를 식별하는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-224">A key that identifies all cache objects created by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-225"><xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-225">The <xref:System.Web.UI.WebControls.XmlDataSource> control supports data caching.</span></span> <span data-ttu-id="c941d-226">데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.XmlDataSource> 캐시에서 대신 기본 데이터 파일에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-226">While data is cached, the <xref:System.Web.UI.WebControls.XmlDataSource> retrieves data from the cache rather than from the underlying data file.</span></span> <span data-ttu-id="c941d-227">캐시 만료 되 면 기본 파일에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-227">When the cache expires, it retrieves data from the underlying file and re-caches the data.</span></span>  
  
 <span data-ttu-id="c941d-228">설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> 속성에서 만든 모든 캐시 항목 간의 종속성을 만들려면는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤과 키입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-228">You can set the <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> property to create a dependency between all cache entries created by the <xref:System.Web.UI.WebControls.XmlDataSource> control and the key.</span></span> <span data-ttu-id="c941d-229">프로그래밍 방식으로 언제 든 지 키를 만료 하 여 모든 캐시 항목을 무효화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-229">You can programmatically invalidate all the cache entries at any time by expiring the key.</span></span>  
  
 <span data-ttu-id="c941d-230">만드는 데 사용 되는 속성으로 인해 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>, 있기 여러 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤은 동일한 XML 파일에서 동일한 데이터를 로드 및 파일을 변환 하 고 시나리오에서 동일 동일한 캐시를 사용할 수 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 및 <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-230">Because of the properties used to create the <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>, it is possible that multiple <xref:System.Web.UI.WebControls.XmlDataSource> controls can use the same cache in scenarios where they load the same data from the same XML file and transform file and have the same <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-231">데이터 소스 컨트롤이 바인딩된 XML 데이터의 블록을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-231">Gets or sets a block of XML data that the data source control binds to.</span></span></summary>
        <value><span data-ttu-id="c941d-232"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤이 바인딩된 인라인 XML 데이터의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-232">A string of inline XML data that the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control binds to.</span></span> <span data-ttu-id="c941d-233">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-233">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-234">선언적 시나리오에는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성의 여러 줄로 된 내부 속성으로 지정 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-234">In declarative scenarios, the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property is specified as a multiline inner property of the <xref:System.Web.UI.WebControls.XmlDataSource> object.</span></span> <span data-ttu-id="c941d-235">내부 속성이 어떤 방식으로든에서 XML 데이터 형식 패딩 인용 문자 등의 문자 패딩 문제가 무시를 수 있기 때문에 XML 데이터와 호환입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-235">An inner property is compatible with XML data, because it enables you to format the XML data in any way and ignore character padding issues, such as padding quote characters.</span></span>  
  
 <span data-ttu-id="c941d-236">모두를 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 및 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성이 우선 하 고 XML 파일의 데이터에 지정 된 XML 데이터 대신 사용 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-236">If both the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> and <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> properties are set, the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property takes precedence and the data in the XML file is used instead of the XML data specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property.</span></span>  
  
 <span data-ttu-id="c941d-237">값을 변경 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-237">If you change the value of the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised.</span></span> <span data-ttu-id="c941d-238">캐싱을 사용 하는 및의 값을 변경 하는 경우 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>, 캐시를 무효화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-238">If caching is enabled and you change the value of <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>, the cache is invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-239">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤이 포함 된 인라인 XML 데이터를 표시 하는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성을 <xref:System.Web.UI.WebControls.TreeView> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-239">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display inline XML data contained by the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property with a <xref:System.Web.UI.WebControls.TreeView> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/CS/xmlds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/VB/xmlds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c941d-240">문서를 로드하고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-240">The document is loading.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="DataFile">
      <MemberSignature Language="C#" Value="public virtual string DataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-241">데이터 소스가 바인딩된 XML 파일의 파일 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-241">Specifies the file name of an XML file that the data source binds to.</span></span></summary>
        <value><span data-ttu-id="c941d-242"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤이 나타내는 데이터를 포함하는 XML 파일의 절대 실제 경로 또는 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-242">The absolute physical path or relative path of the XML file that contains data that the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control represents.</span></span> <span data-ttu-id="c941d-243">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-243">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-244">모두를 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 및 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성이 우선 하 고 XML 파일의 데이터에 지정 된 XML 데이터 대신 사용 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-244">If both the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> and <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> properties are set, the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property takes precedence and the data in the XML file is used instead of the XML data specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property.</span></span>  
  
 <span data-ttu-id="c941d-245">값을 변경 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-245">If you change the value of the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised.</span></span> <span data-ttu-id="c941d-246">캐싱을 사용 하는 및의 값을 변경 하는 경우 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>, 캐시를 무효화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-246">If caching is enabled and you change the value of <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>, the cache is invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-247">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 인 파일에 포함 된 XML 데이터를 표시 하도록 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-247">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display XML data contained in a file with a <xref:System.Web.UI.WebControls.TreeView> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 <span data-ttu-id="c941d-248">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-248">The XML file in the code example has the following data:</span></span>  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c941d-249">문서를 로드하고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-249">The document is loading.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Data" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-250"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤에서 데이터 캐싱이 활성화되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-250">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control has data caching enabled.</span></span></summary>
        <value><span data-ttu-id="c941d-251">데이터 소스 컨트롤에서 데이터 캐싱을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-251"><see langword="true" /> if data caching is enabled for the data source control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c941d-252">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-252">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-253"><xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-253">The <xref:System.Web.UI.WebControls.XmlDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true`.</span></span> <span data-ttu-id="c941d-254">기본적으로 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 속성 무한 캐시를 나타내는 0으로 설정 되 고 종속 되는 XML 파일이 변경 될 때까지 데이터 원본의 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-254">By default, the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> property is set to 0, which indicates an indefinite cache, and the data source will cache data until the XML file that it depends on is changed.</span></span> <span data-ttu-id="c941d-255">설정 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 0 보다 큰 값으로 속성 캐시는 새로운 집합을 검색 하는 많은 초에 대 한 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-255">If you set the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> property to a value greater than 0, the cache stores data for that many seconds before retrieving a fresh set.</span></span>  
  
 <span data-ttu-id="c941d-256">경우는 <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성이 `true` 하며 <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> 속성을 설정 하면 변환 인수 목록에 있는 매개 변수를 변경 하는 경우 캐시 항목을 자동으로 무효화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-256">If the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property is set, the cache entries are not automatically invalidated when the parameters change in the transforms argument list.</span></span> <span data-ttu-id="c941d-257">설정 하 여 캐시를 무효화 하는 코드를 작성 해야 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-257">In that case, you must write code to invalidate the cache by setting the <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-258">다음 코드 예제에서는 사용 하는 경우 캐싱을 사용 하도록 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> XML 파일에 포함 된 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-258">The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file.</span></span> <span data-ttu-id="c941d-259">캐싱을 사용 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성이로 설정 되어 `true` 및 <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> 데이터 소스 컨트롤에서 데이터 캐시 되는 시간 (초) 수로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-259">Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 <span data-ttu-id="c941d-260">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-260">The XML file in the code example has the following data:</span></span>  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetHierarchicalView (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::HierarchicalDataSourceView ^ GetHierarchicalView(System::String ^ viewPath);" />
      <MemberSignature Language="F#" Value="override this.GetHierarchicalView : string -&gt; System.Web.UI.HierarchicalDataSourceView" Usage="xmlDataSource.GetHierarchicalView viewPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath"><span data-ttu-id="c941d-261">현재 계층적 뷰가 만들어진 노드를 식별하는 XPath 식입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-261">An XPath expression that identifies a node from which the current hierarchical view is built.</span></span></param>
        <summary><span data-ttu-id="c941d-262"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤의 데이터 소스 뷰 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-262">Gets the data source view object for the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span> <span data-ttu-id="c941d-263"><paramref name="viewPath" /> 매개 변수는 XPath 식일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-263">The <paramref name="viewPath" /> parameter can be an XPath expression.</span></span></summary>
        <returns><span data-ttu-id="c941d-264"><paramref name="viewPath" />로 식별된 데이터 노드로 시작되는 단일 데이터 뷰를 나타내는 <see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-264">Returns an <see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" /> object that represents a single view of the data starting with the data node identified by <paramref name="viewPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-265">호출할 수 있습니다는 <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> 검색 하는 메서드를 <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-265">You can call the <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> method to retrieve a <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> object associated with the <xref:System.Web.UI.WebControls.XmlDataSource> control.</span></span> <span data-ttu-id="c941d-266">지정 하는 경우 `viewPath` 값을 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤에 의해 식별 된 노드 보기를 나타내는 데이터 원본 뷰 개체를 반환 합니다. `viewPath`, 모든 자식 노드 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-266">If you specify `viewPath` value, the <xref:System.Web.UI.WebControls.XmlDataSource> control returns a data source view object that represents the view on the node identified by `viewPath`, along with all its child nodes.</span></span> <span data-ttu-id="c941d-267">설정 하는 경우 `viewPath` 를 <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.XmlDataSource> 검사를 제어는 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성을 데이터 원본 뷰를 작성 하는 루트 노드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-267">If you set `viewPath` to <xref:System.String.Empty?displayProperty=nameWithType>, the <xref:System.Web.UI.WebControls.XmlDataSource> control checks the <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property to determine the root node from which to build the data source view.</span></span> <span data-ttu-id="c941d-268">경우는 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤 같은 데이터 원본 뷰를 반환 하는 데 사용 방식으로 `viewPath` 식이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-268">If the <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property is set, the <xref:System.Web.UI.WebControls.XmlDataSource> control uses it to return a data source view in the same way the `viewPath` expression is used.</span></span> <span data-ttu-id="c941d-269">경우는 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성을 설정 하지 않으면는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤이 XML 데이터의 데이터 노드에 대 한 뷰를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-269">If the <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property is not set, the <xref:System.Web.UI.WebControls.XmlDataSource> control returns a view of all the data nodes in the XML data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument GetXmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDocument GetXmlDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXmlDocument () As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDocument ^ GetXmlDocument();" />
      <MemberSignature Language="F#" Value="member this.GetXmlDocument : unit -&gt; System.Xml.XmlDocument" Usage="xmlDataSource.GetXmlDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c941d-270">XML 데이터를 내부 데이터 스토리지에서 직접 메모리로 로드하거나 캐시에서 메모리로 로드한 다음, <see cref="T:System.Xml.XmlDataDocument" /> 개체의 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-270">Loads the XML data into memory, either directly from the underlying data storage or from the cache, and returns it in the form of an <see cref="T:System.Xml.XmlDataDocument" /> object.</span></span></summary>
        <returns><span data-ttu-id="c941d-271"><see cref="T:System.Xml.XmlDataDocument" /> 속성에 지정된 XML이나 <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> 속성으로 식별된 파일의 XML을 나타내는 <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 개체입니다. 여기에는 변환과 <see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" /> 쿼리가 적용되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-271">An <see cref="T:System.Xml.XmlDataDocument" /> object that represents the XML specified in the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property or in the file identified by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property, with any transformations and <see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" /> queries applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-272">사용 하 여는 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> 메서드는 기본 XML 데이터의 메모리 내 표현에 직접 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-272">Use the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method for direct access to an in-memory representation of the underlying XML data.</span></span>  
  
 <span data-ttu-id="c941d-273">반환 된 조작할 수 있습니다 <xref:System.Xml.XmlDataDocument> 개체와 호출 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 로 지정 된 XML 파일에 변경 내용을 유지 하려면를 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-273">You can manipulate the returned <xref:System.Xml.XmlDataDocument> object and then call <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> to persist your changes to the XML file specified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property.</span></span> <span data-ttu-id="c941d-274">몇 가지 요구 사항을 충족 해야 합니다 <xref:System.Xml.XmlDataDocument> 개체를 성공적으로 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-274">Several requirements must be met before the <xref:System.Xml.XmlDataDocument> object can be saved successfully.</span></span> <span data-ttu-id="c941d-275">자세한 내용은 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c941d-275">For more information, see the <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-276">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-276">This section contains two code examples.</span></span> <span data-ttu-id="c941d-277">첫 번째 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-277">The first example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file.</span></span> <span data-ttu-id="c941d-278">두 번째 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-278">The second example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.</span></span>  
  
 <span data-ttu-id="c941d-279">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-279">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file.</span></span> <span data-ttu-id="c941d-280">사용 하 여 메모리에서 데이터 조작 되는 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> 메서드를 선택할 때마다를 <xref:System.Web.UI.WebControls.TreeView> 노드를 다음 XML 파일에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-280">The data is manipulated in memory using the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file.</span></span> <span data-ttu-id="c941d-281">마지막으로, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 라고 하는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하는 데이터를 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-281">Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 <span data-ttu-id="c941d-282">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-282">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.</span></span> <span data-ttu-id="c941d-283">앞의 예제와 데이터를 사용 하 여 메모리에서 조작 되는 대로 합니다 <xref:System.Xml.XmlDataDocument> 하 여 검색할를 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-283">As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> retrieved by the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method.</span></span> <span data-ttu-id="c941d-284">마지막으로, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 라고 하는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하는 데이터를 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-284">Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 <span data-ttu-id="c941d-285">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-285">The XML file in the code examples has the following data:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c941d-286"><see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성에 대한 URL이 지정되어 있지만 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤에 웹 리소스에 대한 올바른 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-286">A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control does not have the correct permissions for the Web resource.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c941d-287"><see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성에 대한 URL이 지정되어 있지만 HTTP 기반 URL이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-287">A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, it is not an HTTP-based URL.</span></span>  
  
<span data-ttu-id="c941d-288">또는</span><span class="sxs-lookup"><span data-stu-id="c941d-288">-or-</span></span> 
<span data-ttu-id="c941d-289"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤을 사용하기 전에 디자이너에서 디자인 타임 상대 경로를 올바르게 매핑하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-289">A design-time relative path was not mapped correctly by the designer before using the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span>  
  
<span data-ttu-id="c941d-290">또는</span><span class="sxs-lookup"><span data-stu-id="c941d-290">-or-</span></span> 
<span data-ttu-id="c941d-291">캐싱과 클라이언트 가장이 모두 사용되는 경우.</span><span class="sxs-lookup"><span data-stu-id="c941d-291">Both caching and client impersonation are enabled.</span></span> <span data-ttu-id="c941d-292"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤은 클라이언트 가장이 사용되는 경우 캐싱을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-292">The <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control does not support caching when client impersonation is enabled.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="c941d-293"><see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성의 지정된 경로에 대한 액세스가 거부된 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-293">Access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.Save" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      </Docs>
    </Member>
    <Member MemberName="OnTransforming">
      <MemberSignature Language="C#" Value="protected virtual void OnTransforming (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTransforming(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTransforming (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTransforming(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTransforming : EventArgs -&gt; unit&#xA;override this.OnTransforming : EventArgs -&gt; unit" Usage="xmlDataSource.OnTransforming e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c941d-294">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-294">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c941d-295"><see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /> 컨트롤에서 XML 데이터에 대한 XSLT 변환을 수행하기 전에 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-295">Raises the <see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /> event before the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control performs an XSLT transformation on its XML data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-296">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-296">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c941d-297">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-297">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c941d-298">또한 <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-298">The <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c941d-299">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-299">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-300">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 컨트롤이 표시 하는 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-300">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data.</span></span> <span data-ttu-id="c941d-301">XML 변환 하 여 지정 된 스타일 시트를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-301">The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property.</span></span> <span data-ttu-id="c941d-302">스타일 시트의 데이터 소스 컨트롤에 전달 되는 변환 인수를 사용 하는 또한는 <xref:System.Xml.Xsl.XsltArgumentList> 런타임에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-302">Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at runtime.</span></span> <span data-ttu-id="c941d-303">코드 예제에서는 전달 하는 방법에 설명 합니다 <xref:System.Xml.Xsl.XsltArgumentList> 처리 하 여 데이터 소스 컨트롤에 개체를 <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> 메서드의 이름으로 식별 되는 사용자 지정 이벤트 처리기를 사용 하 여 이벤트에 대 한 설정는 <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-303">The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler, which is identified by name of the method set for the <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 <span data-ttu-id="c941d-304">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-304">The XML file in the code example has the following data:</span></span>  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 <span data-ttu-id="c941d-305">XML 변환 다음 스타일 시트를 사용 하 여 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-305">The XML transformation is performed using the following style sheet.</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c941d-306">재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> 파생된 클래스에서 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-306">When overriding <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> method of the base class so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="xmlDataSource.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c941d-307"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 속성이 설정된 경우 <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 컨트롤이 메모리에 현재 보유한 XML 데이터를 디스크에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-307">Saves the XML data currently held in memory by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control to disk if the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property is set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-308">하는 동안 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 제어는 읽기 전용 데이터 바인딩 시나리오에서 일반적으로 사용, 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 기본 XML 데이터 파일의 XML 데이터를 편집 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-308">While the <xref:System.Web.UI.WebControls.XmlDataSource> control is typically used in read-only data-binding scenarios, you can use the <xref:System.Web.UI.WebControls.XmlDataSource> control to edit XML data in the underlying XML data file.</span></span> <span data-ttu-id="c941d-309">이러한 시나리오에서 XML 데이터에서 XML 파일에서 로드 되는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-309">In these scenarios, XML data is loaded from an XML file by the <xref:System.Web.UI.WebControls.XmlDataSource> control.</span></span> <span data-ttu-id="c941d-310">수정 합니다 <xref:System.Xml.XmlDataDocument> 사용 하 여 메모리에는 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> 메서드를 호출 하 여 XML 데이터 파일에 대 한 다음 저장을 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-310">You modify the <xref:System.Xml.XmlDataDocument> in memory using the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method, and then save to the XML data file by calling the <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method.</span></span> <span data-ttu-id="c941d-311">이 편집 가능한 XML 시나리오는 다음 조건이 충족 되 면 수 있습니다:</span><span class="sxs-lookup"><span data-stu-id="c941d-311">This editable XML scenario is possible when the following conditions are met:</span></span>  
  
-   <span data-ttu-id="c941d-312">XML 데이터를 나타내는 XML 파일에서 로드 되는 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> 속성에 지정 된 인라인 XML 데이터에서 하지는 <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c941d-312">The XML data is loaded from an XML file indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property, not from inline XML data specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> property.</span></span>  
  
-   <span data-ttu-id="c941d-313">에 지정 된 XSLT 변환이 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 또는 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-313">No XSLT transformation is specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> or <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> properties.</span></span>  
  
 <span data-ttu-id="c941d-314"><xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 메서드 처리 하지 않는 저장 작업 동시 다른 요청에서.</span><span class="sxs-lookup"><span data-stu-id="c941d-314">The <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> method does not handle concurrent save operations by different requests.</span></span> <span data-ttu-id="c941d-315">둘 이상의 사용자가를 통해 XML 파일을 편집 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어는 모든 사용자는 동일한 데이터를 사용 하 여 작동 하는 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-315">If more than one user is editing an XML file through the <xref:System.Web.UI.WebControls.XmlDataSource> control, there is no guarantee that all users are operating with the same data.</span></span> <span data-ttu-id="c941d-316">수 이기도 한 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> 작업이 이러한 같은 동시성 문제로 인해 실패 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-316">It is also possible for a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> operation to fail due to these same concurrency issues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-317">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-317">This section contains two code examples.</span></span> <span data-ttu-id="c941d-318">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-318">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file.</span></span> <span data-ttu-id="c941d-319">두 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-319">The second code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.</span></span>  
  
 <span data-ttu-id="c941d-320">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-320">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file.</span></span> <span data-ttu-id="c941d-321">사용 하 여 메모리에서 데이터 조작 되는 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> 메서드를 선택할 때마다를 <xref:System.Web.UI.WebControls.TreeView> 노드를 다음 XML 파일에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-321">The data is manipulated in memory using the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file.</span></span> <span data-ttu-id="c941d-322">마지막으로, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 라고 하는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하는 데이터를 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-322">Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 <span data-ttu-id="c941d-323">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-323">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.</span></span> <span data-ttu-id="c941d-324">앞의 예제와 데이터를 사용 하 여 메모리에서 조작 되는 대로 합니다 <xref:System.Xml.XmlDataDocument> 에서 검색 한 개체는 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c941d-324">As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> object retrieved by the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method.</span></span> <span data-ttu-id="c941d-325">마지막으로, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 라고 하는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 표시 하는 데이터를 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-325">Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 <span data-ttu-id="c941d-326">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-326">The XML file in the code examples has the following data:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c941d-327">XML 데이터가 <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> 속성 대신 <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성을 사용하여 로드된 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-327">XML data was loaded using the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property instead of the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</span></span>  
  
<span data-ttu-id="c941d-328">또는</span><span class="sxs-lookup"><span data-stu-id="c941d-328">-or-</span></span> 
<span data-ttu-id="c941d-329"><see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성에 대한 URL이 지정되어 있지만 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤에 웹 리소스에 대한 올바른 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-329">A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control does not have the correct permissions for the Web resource.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c941d-330"><see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성에 대한 URL이 지정되어 있지만 HTTP 기반 URL이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-330">A URL is specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property; however, it is not an HTTP-based URL.</span></span>  
  
<span data-ttu-id="c941d-331">또는</span><span class="sxs-lookup"><span data-stu-id="c941d-331">-or-</span></span> 
<span data-ttu-id="c941d-332"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤을 사용하기 전에 디자이너에서 디자인 타임 상대 경로를 올바르게 매핑하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-332">A design-time relative path was not mapped correctly by the designer before using the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="c941d-333"><see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성의 지정된 경로에 대한 액세스가 거부된 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-333">Access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-334">이 멤버에 대한 설명은 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c941d-334">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span></span></summary>
        <value><span data-ttu-id="c941d-335">해당 컬렉션이 <see cref="T:System.Collections.IList" /> 개체의 컬렉션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-335"><see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-336">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c941d-336">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c941d-337">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 캐스팅 된는 <xref:System.ComponentModel.IListSource> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-337">It can be used only when the <xref:System.Web.UI.WebControls.XmlDataSource> instance is cast to the <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c941d-338">이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.IListSource.GetList" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c941d-338">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span></span></summary>
        <returns><span data-ttu-id="c941d-339">데이터 소스에 바인딩할 수 있으며 <see cref="T:System.Collections.IList" />를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-339">An object implementing <see cref="T:System.Collections.IList" /> that can be bound to a data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-340">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c941d-340">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c941d-341">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 캐스팅 된는 <xref:System.ComponentModel.IListSource> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-341">It can be used only when the <xref:System.Web.UI.WebControls.XmlDataSource> instance is cast to the <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-342">이 멤버에 대한 설명은 <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c941d-342">For a description of this member, see <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-343">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c941d-343">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c941d-344">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 캐스팅 된는 <xref:System.Web.UI.IDataSource> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-344">It can be used only when the <xref:System.Web.UI.WebControls.XmlDataSource> instance is cast to the <xref:System.Web.UI.IDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName"><span data-ttu-id="c941d-345">검색할 뷰의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-345">The name of the view to retrieve.</span></span> <span data-ttu-id="c941d-346"><see cref="F:System.String.Empty" />가 지정된 경우에는 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤의 기본 뷰가 검색됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-346">If <see cref="F:System.String.Empty" /> is specified, the default view for the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control is retrieved.</span></span></param>
        <summary><span data-ttu-id="c941d-347">데이터 소스 컨트롤이 연결된 명명된 데이터 소스 뷰를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-347">Gets the named data source view associated with the data source control.</span></span></summary>
        <returns><span data-ttu-id="c941d-348"><see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /> 컨트롤과 연결된 명명된 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-348">Returns the named <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /> object associated with the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c941d-349">이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IDataSource.GetViewNames" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c941d-349">For a description of this member, see <see cref="M:System.Web.UI.IDataSource.GetViewNames" />.</span></span></summary>
        <returns><span data-ttu-id="c941d-350"><see cref="T:System.Collections.ICollection" /> 개체와 연결된 뷰 개체의 목록을 나타내는 이름이 포함되어 있으며 <see cref="T:System.Web.UI.IDataSource" />을 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-350">An object implementing <see cref="T:System.Collections.ICollection" /> containing names representing the list of view objects associated with the <see cref="T:System.Web.UI.IDataSource" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-351">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="c941d-351">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c941d-352">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 캐스팅 된는 <xref:System.Web.UI.IDataSource> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-352">It can be used only when the <xref:System.Web.UI.WebControls.XmlDataSource> instance is cast to the <xref:System.Web.UI.IDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual string Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Transform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Transform { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-353"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤에서 관리하는 XML 데이터에 대해 수행될 XSLT 변환을 정의하는 XSL(Extensible Stylesheet Language) 데이터의 블록을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-353">Gets or sets a block of Extensible Stylesheet Language (XSL) data that defines an XSLT transformation to be performed on the XML data managed by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="c941d-354"><see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> 또는 <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성에 포함된 데이터에 수행할 XML 변환을 정의하는 인라인 XSL의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-354">A string of inline XSL that defines an XML transformation to be performed on the data contained in the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> or <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> properties.</span></span> <span data-ttu-id="c941d-355">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-355">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-356">선언적 시나리오에는 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성의 여러 줄로 된 내부 속성으로 지정 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-356">In declarative scenarios, the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> property is specified as a multiline inner property of the <xref:System.Web.UI.WebControls.XmlDataSource> object.</span></span> <span data-ttu-id="c941d-357">내부 속성이 어떤 방식으로 스타일 시트를 서식을 지정 하 고 패딩 인용 문자 등의 문자 패딩 문제를 무시할 수 있기 때문에 XSL 스타일 시트 데이터와 호환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-357">An inner property is compatible with XSL style sheet data, because it enables you to format the style sheet in any way and ignore character padding issues such as padding quote characters.</span></span>  
  
 <span data-ttu-id="c941d-358">모두를 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 및 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성이 우선 및 XSL 스타일 시트 파일 (.xsl)의 데이터에 지정 된 스타일 시트 요소 대신 사용 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-358">If both the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> and <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> properties are set, the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property takes precedence and the data in the XSL style sheet file (.xsl) is used instead of the style sheet elements specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> property.</span></span> <span data-ttu-id="c941d-359">XPath 식을 사용 하 여 설정 된 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성을 XML 데이터를 변환한 후 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-359">If an XPath expression is set using the <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property, it is applied after the XML data is transformed.</span></span>  
  
 <span data-ttu-id="c941d-360">값을 변경 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-360">If you change the value of the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised.</span></span> <span data-ttu-id="c941d-361">캐싱을 사용 하는 및의 값을 변경 하는 경우 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, 캐시를 무효화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-361">If caching is enabled and you change the value of <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, the cache is invalidated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c941d-362">합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 클래스를 사용 하 여 사용 되지 않는 <xref:System.Xml.Xsl.XslTransform> XSL 변환을 수행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-362">The <xref:System.Web.UI.WebControls.XmlDataSource> class uses the deprecated <xref:System.Xml.Xsl.XslTransform> class to perform XSL transformations.</span></span> <span data-ttu-id="c941d-363">이후 도입 된 스타일 시트 기능을 사용 하려는 경우는 <xref:System.Xml.Xsl.XslTransform> 클래스의 사용이 중단 되었으며, 사용 하 여 수동으로 변환을 적용 합니다 <xref:System.Xml.Xsl.XslCompiledTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-363">If you want to use style sheet features that were introduced after the <xref:System.Xml.Xsl.XslTransform> class was deprecated, apply the transforms manually by using the <xref:System.Xml.Xsl.XslCompiledTransform> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-364">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> 컨트롤이 표시 하는 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-364">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display transformed XML data.</span></span> <span data-ttu-id="c941d-365">변환을 수행 하는 스타일 시트에서 인라인으로 정의 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 데이터 소스 컨트롤의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-365">The style sheet that performs the transformation is defined inline by the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> property of the data source control.</span></span>  
  
  
  
 <span data-ttu-id="c941d-366">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-366">The XML file in the code example has the following data:</span></span>  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>Todd</firstn>  
         <lastn>Rowe</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c941d-367">문서를 로드하고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-367">The document is loading.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformArgumentList : System.Xml.Xsl.XsltArgumentList with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-368"><see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> 또는 <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> 속성으로 정의된 스타일시트와 함께 사용되어 XML 데이터에 대한 변환을 수행하는 XSLT 인수의 목록을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-368">Provides a list of XSLT arguments that are used with the style sheet defined by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> or <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> properties to perform a transformation on the XML data.</span></span></summary>
        <value><span data-ttu-id="c941d-369"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 컨트롤이 XML 데이터를 로드할 때 XML 데이터에 적용될 XSLT 매개 변수와 개체를 포함하는 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-369">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> object that contains XSLT parameters and objects to be applied to XML data when it is loaded by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span> <span data-ttu-id="c941d-370">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-370">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-371">설정 된 <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> 속성 때는 <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> 이벤트가 발생 하 여 XSLT 변환을 XML 데이터에 적용 되는 시간에 XSLT 매개 변수를 사용할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-371">Set the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property when the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event is raised to ensure the XSLT parameters are available at the time that the XSLT transformation is applied to the XML data.</span></span>  
  
 <span data-ttu-id="c941d-372">경우는 <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> 속성이 `true` 하며 <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> 속성을 설정 하면 변환 인수 목록에 있는 매개 변수를 변경 하는 경우 캐시 항목을 자동으로 무효화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-372">If the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property is set, the cache entries are not automatically invalidated when the parameters change in the transforms argument list.</span></span> <span data-ttu-id="c941d-373">설정 하 여 캐시를 무효화 하는 코드를 작성 해야 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-373">In that case, you must write code to invalidate the cache by setting the <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-374">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 사용 하 여는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤이 표시 하는 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-374">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data.</span></span> <span data-ttu-id="c941d-375">XML 변환 하 여 지정 된 스타일 시트를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-375">The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property.</span></span> <span data-ttu-id="c941d-376">스타일 시트의 데이터 소스 컨트롤에 전달 되는 변환 인수를 사용 하는 또한는 <xref:System.Xml.Xsl.XsltArgumentList> 런타임에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-376">Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at run time.</span></span> <span data-ttu-id="c941d-377">코드 예제에서는 전달 하는 방법에 설명 합니다 <xref:System.Xml.Xsl.XsltArgumentList> 처리 하 여 데이터 소스 컨트롤에는 <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> 사용자 지정 이벤트 처리기를 사용 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-377">The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 <span data-ttu-id="c941d-378">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-378">The XML file in the code example has the following data:</span></span>  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 <span data-ttu-id="c941d-379">다음 스타일 시트를 사용 하 여 XML 데이터의 변환이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-379">The transformation of the XML data is performed with the following style sheet.</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="TransformFile">
      <MemberSignature Language="C#" Value="public virtual string TransformFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TransformFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-380"><see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 컨트롤에서 관리하는 XML 데이터에 대해 수행될 XSLT 변환을 정의하는 XSL(Extensible Stylesheet Language) 파일(.xsl)의 파일 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-380">Specifies the file name of an Extensible Stylesheet Language (XSL) file (.xsl) that defines an XSLT transformation to be performed on the XML data managed by the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="c941d-381"><see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> 또는 <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성에 포함된 데이터에 수행할 XML 변환을 정의하는 XSL 스타일시트 파일의 절대 실제 경로나 상대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-381">The absolute physical path or relative path of the XSL style sheet file that defines an XML transformation to be performed on the data contained in the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> or <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> properties.</span></span> <span data-ttu-id="c941d-382">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-382">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-383">모두를 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 및 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성이 우선 및 XSL 스타일 시트 파일 (.xsl)의 데이터에 지정 된 스타일 시트 요소 대신 사용 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-383">If both the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> and <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> properties are set, the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property takes precedence and the data in the XSL style sheet file (.xsl) is used instead of the style sheet elements specified in the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> property.</span></span> <span data-ttu-id="c941d-384">XPath 식을 사용 하 여 설정 된 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 속성을 XML 데이터를 변환한 후 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-384">If an XPath expression is set using the <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property, it is applied after the XML data is transformed.</span></span>  
  
 <span data-ttu-id="c941d-385">값을 변경 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-385">If you change the value of the <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised.</span></span> <span data-ttu-id="c941d-386">캐싱을 사용 하는 및의 값을 변경 하는 경우 <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, 캐시를 무효화 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-386">If caching is enabled and you change the value of <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, the cache is invalidated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c941d-387">합니다 <xref:System.Web.UI.WebControls.XmlDataSource> 클래스를 사용 하 여 사용 되지 않는 <xref:System.Xml.Xsl.XslTransform> XSL 변환을 수행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-387">The <xref:System.Web.UI.WebControls.XmlDataSource> class uses the deprecated <xref:System.Xml.Xsl.XslTransform> class to perform XSL transformations.</span></span> <span data-ttu-id="c941d-388">이후 도입 된 스타일 시트 기능을 사용 하려는 경우는 <xref:System.Xml.Xsl.XslTransform> 클래스의 사용이 중단 되었으며, 사용 하 여 수동으로 변환을 적용 합니다 <xref:System.Xml.Xsl.XslCompiledTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-388">If you want to use style sheet features that were introduced after the <xref:System.Xml.Xsl.XslTransform> class was deprecated, apply the transforms manually by using the <xref:System.Xml.Xsl.XslCompiledTransform> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-389">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.TreeView> 표시할 컨트롤 Web form에 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-389">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control and a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data on a Web form.</span></span> <span data-ttu-id="c941d-390">변환 하 여 지정 된 스타일 시트를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-390">The transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property.</span></span> <span data-ttu-id="c941d-391">필요에 따라 사용 하 여 스타일 시트에 대 한 변환 인수를 제공할 수 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList>합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-391">You can optionally supply transformation arguments for the style sheet using an <xref:System.Xml.Xsl.XsltArgumentList>.</span></span> <span data-ttu-id="c941d-392">자세한 내용은 <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c941d-392">For more information, see the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/CS/xmlds5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/VB/xmlds5vb.aspx#1)]  
  
 <span data-ttu-id="c941d-393">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-393">The XML file in the code example has the following data:</span></span>  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 <span data-ttu-id="c941d-394">XML 변환을 수행 하는 XSL 스타일 시트에는 다음과 같은 구조에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-394">The XSL style sheet that performs the XML transformation has the following structure:</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
     </xsl:attribute>  
     <xsl:attribute name="price">  
       <xsl:value-of select="price"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c941d-395">문서를 로드하고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-395">The document is loading.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="Transforming">
      <MemberSignature Language="C#" Value="public event EventHandler Transforming;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Transforming" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Transforming As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Transforming;" />
      <MemberSignature Language="F#" Value="member this.Transforming : EventHandler " Usage="member this.Transforming : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-396"><see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> 속성에서 정의하거나 <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> 속성에서 식별하는 스타일시트가 XML 데이터에 적용되기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-396">Occurs before the style sheet that is defined by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> property or identified by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> property is applied to XML data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-397">처리를 <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> 이벤트가 설정 합니다 <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> 속성을는 <xref:System.Xml.Xsl.XsltArgumentList> 하기 전에 개체를 <xref:System.Web.UI.WebControls.XmlDataSource> XML 변환을 수행 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-397">Handle the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event to set the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property with an <xref:System.Xml.Xsl.XsltArgumentList> object before the <xref:System.Web.UI.WebControls.XmlDataSource> control performs an XML transformation.</span></span>  
  
 <span data-ttu-id="c941d-398">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-398">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-399">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.TreeView> 컨트롤이 표시 하는 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-399">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data.</span></span> <span data-ttu-id="c941d-400">XML 변환 하 여 지정 된 스타일 시트를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-400">The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property.</span></span> <span data-ttu-id="c941d-401">스타일 시트의 데이터 소스 컨트롤에 전달 되는 변환 인수를 사용 하는 또한는 <xref:System.Xml.Xsl.XsltArgumentList> 런타임 시.</span><span class="sxs-lookup"><span data-stu-id="c941d-401">Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> at run time.</span></span> <span data-ttu-id="c941d-402">코드 예제에서는 전달 하는 방법에 설명 합니다 <xref:System.Xml.Xsl.XsltArgumentList> 처리 하 여 데이터 소스 컨트롤에 개체를 <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> 사용자 지정 이벤트 처리기를 사용 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-402">The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 <span data-ttu-id="c941d-403">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-403">The XML file in the code example has the following data:</span></span>  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 <span data-ttu-id="c941d-404">다음 스타일 시트를 사용 하 여 XML 데이터의 변환이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-404">The transformation of the XML data is performed with the following style sheet:</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public virtual string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c941d-405"><see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> 속성에 포함되어 있거나 <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성으로 지정된 XML 파일에 포함되어 있는 XML 데이터에 적용할 XPath 식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-405">Specifies an XPath expression to be applied to the XML data contained by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property or by the XML file indicated by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</span></span></summary>
        <value><span data-ttu-id="c941d-406"><see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> 속성에 포함되어 있거나 <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> 속성으로 지정된 XML 파일에 포함되어 있는 데이터를 필터링하는 데 사용할 수 있는 XPath 식을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-406">A string that represents an XPath expression that can be used to filter the data contained by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> property or by the XML file indicated by the <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> property.</span></span> <span data-ttu-id="c941d-407">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-407">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c941d-408">XPath 데이터 바인딩 식에 대 한 자세한 내용은 참조 하세요. [XmlDataSource 컨트롤에 테이블 형식 컨트롤을 바인딩할](https://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8)합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-408">For more information on XPath data-binding expressions, see [Binding a Tabular Control to the XmlDataSource Control](https://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c941d-409">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.XmlDataSource> 템플릿 기반 컨트롤과 <xref:System.Web.UI.WebControls.Repeater> XPath 식을 사용 하 여 필터링 된 XML 데이터를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-409">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data that has been filtered using an XPath expression.</span></span> <span data-ttu-id="c941d-410">이 예제에서는 XPath 구문을 XML 데이터를 필터링 하는 경우는 <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> 데이터 소스 컨트롤의 속성을 설정 하 고 요소의 바인딩됩니다를 <xref:System.Web.UI.WebControls.Repeater> XML 데이터에 컨트롤 템플릿을 합니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-410">In this example, XPath syntax is used to filter the XML data when the <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> property of the data source control is set, and also binds elements of the <xref:System.Web.UI.WebControls.Repeater> control template to the XML data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/CS/xmlds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/VB/xmlds8vb.aspx#1)]  
  
 <span data-ttu-id="c941d-411">코드 예제에서 XML 파일에 다음 데이터가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c941d-411">The XML file in the code example has the following data:</span></span>  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c941d-412">문서를 로드하고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c941d-412">The document is loading.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>