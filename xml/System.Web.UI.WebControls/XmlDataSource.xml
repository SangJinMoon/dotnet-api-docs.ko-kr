<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDataSource.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c393e577e4867ed73969b857155f8f0c054aa059.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c393e577e4867ed73969b857155f8f0c054aa059</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Represents an XML data source to data-bound controls.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 대한 XML 데이터 원본을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>In this topic:</source>
          <target state="translated">항목 내용:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>소개<ept id="p1">](#introduction)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Sources of XML Data<ept id="p1">](#source_of_xml_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 데이터 소스<ept id="p1">](#source_of_xml_data)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Updating XML Data<ept id="p1">](#updating_xml_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 데이터 업데이트<ept id="p1">](#updating_xml_data)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Specifying an XSL Transformation<ept id="p1">](#specifying_an_xsl_transformation)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XSL 변환을 지정합니다.<ept id="p1">](#specifying_an_xsl_transformation)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Filtering using an XPath Expression<ept id="p1">](#filtering_using_an_xpath_expression)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XPath 식을 사용 하 여 필터링<ept id="p1">](#filtering_using_an_xpath_expression)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Caching<ept id="p1">](#caching)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>캐싱<ept id="p1">](#caching)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Additional Features<ept id="p1">](#additional_features)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>추가 기능<ept id="p1">](#additional_features)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Data View Object<ept id="p1">](#data_view_object)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 뷰 개체<ept id="p1">](#data_view_object)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>선언 구문<ept id="p1">](#declarative_syntax)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Introduction</source>
          <target state="translated">소개</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control is a data source control that presents XML data to data-bound controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤은 데이터 바인딩된 컨트롤에 대 한 XML 데이터를 제공 하는 데이터 소스 제어 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control can be used by data-bound controls to display both hierarchical and tabular data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤 계층 구조 형식과 표 형식 데이터를 표시 하려면 데이터 바인딩된 컨트롤에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control is typically used to display hierarchical XML data in read-only scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤은 일반적으로 읽기 전용 시나리오에서 계층적 XML 데이터를 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control extends the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class, it works with hierarchical data.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 확장은 <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> 계층적 데이터와 함께 작동 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control also implements the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface and works with tabular, or list-style, data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어도 구현 하는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 인터페이스 부서와 테이블 형식, 목록 스타일, 데이터 또는 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>For security purposes, none of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control properties are stored in view state.</source>
          <target state="translated">보안을 위해 어떤는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤 속성 보기 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Since it is technically possible to decode the contents of view state on the client, storing sensitive information about the data structure or its contents could expose you to an information disclosure threat.</source>
          <target state="translated">기술적으로 가능 클라이언트에서 상태 보기의 내용을 디코딩하는 것 이므로, 저장 데이터 구조 나 내용에 대 한 중요 한 정보가 노출 될 수 있습니다 정보 공개 위협이 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Note that if you need to store information such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property in view state, you can enable encryption to protect the contents by setting <ph id="ph2">&lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt;</ph> on the <ph id="ph3">`@ Page`</ph> directive.</source>
          <target state="translated">와 같은 정보를 저장 해야 할 경우 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성 보기에 상태를 설정 하 여 콘텐츠를 보호 하도록 암호화를 사용 하도록 설정할 수 <ph id="ph2">&lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt;</ph> 에 <ph id="ph3">`@ Page`</ph> 지시문입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Page developers use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to display XML data using data-bound controls.</source>
          <target state="translated">개발자가 사용 하 여 페이지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤을 데이터 바인딩된 컨트롤을 사용 하 여 XML 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Sources of XML Data</source>
          <target state="translated">XML 데이터 소스</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> typically loads XML data from an XML file, which is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 일반적으로 지정 된 XML 파일에서 XML 데이터를 로드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>XML data can also be stored directly by the data source control in string form using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property.</source>
          <target state="translated">데이터 소스 제어에서 사용 하 여 문자열 양식에서 직접 XML 데이터를 저장할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>If you want to transform the XML data before it is displayed by a data-bound control, you can provide an Extensible Stylesheet Language (XSL) style sheet for the transformation.</source>
          <target state="translated">데이터 바인딩된 컨트롤에서 표시 하기 전에 XML 데이터를 변환 하려는 경우 변환에 대 한 스타일 시트 XSL (Extensible Language) 스타일 시트를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>As with the XML data, you typically load the style sheet from a file, indicated by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> property, but you can also store it in string form directly using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> property.</source>
          <target state="translated">로 표시 된 대로 XML 데이터로 일반적으로 파일에서 스타일 시트를 로드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 있지만 속성을 저장할 수도 직접 사용 하 여 문자열 형태로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Updating XML Data</source>
          <target state="translated">XML 데이터 업데이트</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control is commonly used in read-only data scenarios where a data-bound control displays XML data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤은 일반적으로 사용 데이터를 읽기 전용 시나리오에서 데이터 바인딩된 컨트롤에서 XML 데이터를 표시 하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>However, you can also use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to edit XML data.</source>
          <target state="translated">그러나 사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> XML 데이터를 편집 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>To edit the XML data, call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> method to retrieve an <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> object that is an in-memory representation of the XML data.</source>
          <target state="translated">XML 데이터를 편집 하려면 호출는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> 를 검색할 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 개체는 XML 데이터의 메모리 내 표현입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>You can use the object model exposed by the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> objects it contains or use an XPath filtering expression to manipulate data in the document.</source>
          <target state="translated">에 의해 노출 되는 개체 모델을 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> 개체를 포함 하거나 XPath 식을 필터링을 사용 하 여 문서에서 데이터를 조작 하기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>When you have made changes to the in-memory representation of the XML data, you can save it to disk by calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method.</source>
          <target state="translated">XML 데이터의 메모리 내 표현의 변경한 경우 호출 하 여 디스크에 저장할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>There are some restrictions to the editing capabilities of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control:</source>
          <target state="translated">편집 기능에 대 한 제한은 몇 가지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The XML data must be loaded from an XML file that is indicated by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property, not from inline XML specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property.</source>
          <target state="translated">표시 된 XML 파일에서 XML 데이터를 로드 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 에서 아니라 인라인 XML에 지정 된 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>No XSLT transformation can be specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> properties.</source>
          <target state="translated">XSLT 변환 없음에 지정할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method does not handle concurrent save operations by different requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드를 처리 하지 않을 동시 저장 작업 다른 요청에서.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>If more than one user is editing an XML file through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph>, there is no guarantee that all users are operating with the same data.</source>
          <target state="translated">둘 이상의 사용자가을 통해 XML 파일을 편집 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph>은 동일한 데이터와 실행 중인 모든 사용자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>It is also possible for a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> operation to fail due to these same concurrency issues.</source>
          <target state="translated">에 대 한 수 이기도 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 작업이 이러한 같은 동시성 문제로 인해 실패 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Specifying an XSL Transformation</source>
          <target state="translated">XSL 변환을 지정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>A common operation performed with XML data is transforming it from one XML data set into another.</source>
          <target state="translated">XML 데이터와 함께 수행 하는 일반적인 작업은에서 변환 하나의 XML 데이터 집합을 다른 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control supports XML transformations with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> properties, which specify an XSL style sheet to apply to XML data before it is passed to a data-bound control, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> property, which enables you to supply dynamic XSLT style sheet arguments to be used by an XSL style sheet during the transformation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어와 XML 변환을 지원는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 데이터 바인딩된 컨트롤에 전달 되기 전에 XML 데이터에 적용할 XSL 스타일 시트를 지정 하는 속성 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> 를 사용할 수 있는 속성 변환 중 XSL 스타일 시트에서 사용할 동적 XSLT 스타일 시트 인수를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>If you specify an XPath filtering expression using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property, it is applied after the transformation takes place.</source>
          <target state="translated">XPath 식을 사용 하 여 필터링을 지정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성을 변환 발생 한 후 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> class uses the deprecated <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class to perform XSL transformations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 클래스를 사용 하 여 사용 되지 않는 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> XSL 변환을 수행 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>If you want to use style sheet features that were introduced after the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class was deprecated, apply the transforms manually by using the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class.</source>
          <target state="translated">이후 도입 된 스타일 시트의 기능을 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> 클래스의 사용이 중단 되었으며, 사용 하 여 수동으로 변환을 적용 된 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Filtering using an XPath Expression</source>
          <target state="translated">XPath 식을 사용 하 여 필터링</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control loads all the XML data in the XML file identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property or found inline in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property, but you can filter the data using an XPath expression.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 로 식별 되는 XML 파일에 모든 XML 데이터를 로드 하는 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성 또는에서 인라인으로 찾은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성이 아니라 있습니다 XPath 식을 사용 하 여 데이터를 필터링 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property supports an XPath-syntax filter that is applied after XML data is loaded and transformed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성은 XML 데이터 로드 되 고 변환 된 후에 적용 되는 XPath 구문을 필터를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Caching</source>
          <target state="translated">캐싱</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>For performance purposes, caching is enabled for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control by default.</source>
          <target state="translated">성능 향상을 위해 캐싱을 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 기본적으로 제어 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Opening and reading an XML file on the server every time a page requested can reduce the performance of your application.</source>
          <target state="translated">열고 페이지 요청 될 때마다 서버에서 XML 파일을 읽는 응용 프로그램의 성능을 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Caching lets you reduce the processing load on your server at the expense of memory on the Web server; in most cases this is a good trade-off.</source>
          <target state="translated">처리 부하가 웹 서버의 메모리 소모 서버의 줄일 캐싱을 사용 하면 대부분의 경우에서 좋은 절충안입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> property is set to the number of seconds that the cache stores data before the cache is invalidated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 데이터를 캐시 하는 자동으로 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 속성은 캐시를 무효화 되기 전에 캐시 데이터를 저장 하는 시간 (초)의 수입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> to further fine-tune the caching behavior of the data source control.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 추가 된 데이터 소스 제어의 캐싱 동작을 세밀 하 게 조정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Additional Features</source>
          <target state="translated">추가 기능</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The following table lists additional features that are supported by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control.</source>
          <target state="translated">다음 표에서 추가 기능에서 지원 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Capability</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Sorting</source>
          <target state="translated">정렬</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Not supported by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control.</source>
          <target state="translated">지원 되지 않습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Filtering</source>
          <target state="translated">필터링</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property can be used to filter the XML data using an appropriate XPath expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 적절 한 XPath 식을 사용 하 여 XML 데이터를 필터링 할 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Paging</source>
          <target state="translated">페이징</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Not supported by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control.</source>
          <target state="translated">지원 되지 않습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Updating</source>
          <target state="translated">업데이트하는 중</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Supported by manipulating the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> directly and then calling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method.</source>
          <target state="translated">조작 하 여 지원 되는 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 직접 한 다음 호출에서 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Deleting</source>
          <target state="translated">삭제</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Supported by manipulating the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> directly and then calling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method.</source>
          <target state="translated">조작 하 여 지원 되는 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 직접 한 다음 호출에서 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Inserting</source>
          <target state="translated">삽입</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Supported by manipulating the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> directly and then calling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method.</source>
          <target state="translated">조작 하 여 지원 되는 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 직접 한 다음 호출에서 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Caching</source>
          <target state="translated">캐싱</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Enabled by default, with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> property set to 0 (infinite) and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph>.</source>
          <target state="translated">기본적으로 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 0 (무제한)으로 설정 된 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 <ph id="ph3">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Data View Object</source>
          <target state="translated">데이터 뷰 개체</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control supports data-bound controls that display hierarchical data as well as controls that display tabular data, the data source control supports multiple types of data source view objects on its underlying XML data.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어는 계층적 데이터를 표시 하는 데이터 바인딩된 컨트롤을 표 형식 데이터를 표시 하는 컨트롤, 데이터 소스 컨트롤이 해당 기본 XML 데이터에 대해 여러 유형의 데이터 원본 뷰 개체를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control retrieves a single named <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSourceView&gt;</ph> object when used with a data-bound control that displays tabular data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤 검색 단일 명명 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSourceView&gt;</ph> 표 형식 데이터를 표시 하는 데이터 바인딩된 컨트롤 함께 사용 하는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> method identifies this single named view.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IDataSource.GetViewNames%2A&gt;</ph> 메서드는이 단일 명명 된 보기를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>When used with a data-bound control that displays hierarchical data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control retrieves an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView&gt;</ph> for any unique hierarchical path passed to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A&gt;</ph> method.</source>
          <target state="translated">계층적 데이터를 표시 하는 데이터 바인딩된 컨트롤 함께 사용 하면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤이 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView&gt;</ph> 에 전달 된 모든 고유한 계층 경로 대 한는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>Declarative Syntax</source>
          <target state="translated">선언 구문</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display XML data from the sample XML file.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤 샘플 XML 파일의 XML 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The second example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display XML data.</source>
          <target state="translated">두 번째 예에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 컨트롤에 XML 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display XML data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤에 XML 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> loads XML data from the XML file identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 로 식별 되는 XML 파일에서 XML 데이터 로드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display XML data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 컨트롤에 XML 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control uses an XPath data-binding expression to bind to data items within the XML document that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> represents.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 제어 XML 내의 항목을 데이터 바인딩할 XPath 데이터 바인딩 식을 사용 하 여 문서에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 나타냅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>For more information about <ph id="ph1">`XPath`</ph> and <ph id="ph2">`XPathSelect`</ph> data-binding syntax, see the <ph id="ph3">&lt;xref:System.Web.UI.XPathBinder&gt;</ph> class.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`XPath`</ph> 및 <ph id="ph2">`XPathSelect`</ph> 데이터 바인딩 구문 참조는 <ph id="ph3">&lt;xref:System.Web.UI.XPathBinder&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.XmlDataSource">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>Gets or sets the length of time, in seconds, that the data source control caches data it has retrieved.</source>
          <target state="translated">데이터 소스 컨트롤에서 검색한 데이터를 캐시하는 시간(초)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The number of seconds that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control caches the results of a data retrieval operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤에서 데이터 검색 작업의 결과를 캐시하는 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The default value is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control automatically caches data when the following applies:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 은 다음과 같은 경우 자동으로 데이터를 캐시 제어:</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache is invalidated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 속성 캐시는 캐시를 무효화 하기 전에 데이터를 저장 하는 시간 (초)의 수를 나타내는 0 보다 큰 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>Any change to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property or the contents of the file that contains the XML data causes the cache to be invalidated.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성 또는 XML 데이터를 포함 하는 파일의 내용을 인해 캐시가 무효화 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> property is set to 0, which indicates an indefinite cache, and the data source will cache data until the XML file that it depends on is changed.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 속성이 무제한 캐시를 나타내는 0으로 설정 되 고 종속 된 XML 파일이 변경 될 때까지 데이터 원본의 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The behavior of the cache is governed by a combination of the duration and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> setting.</source>
          <target state="translated">캐시의 동작은 기간의 조합에 의해 제한 및 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control caches data on the first data retrieval operation, holds it in memory for the amount of time specified by <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph>, and invalidates it after the time has lapsed.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 첫 번째 데이터 검색 작업에 데이터를 캐시, 메모리에서 지정 된 시간에 보유 한 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph>, 경과 되 후 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The cache is then refreshed upon the next operation.</source>
          <target state="translated">다음 동작에에 캐시 한 다음 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph>, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for upon each subsequent operation.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph>, 데이터 소스 제어의 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 이후 작업이 발생할 때마다 캐시를 보유 하는 시간 창을 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The cache will only expire if there is no activity for a time equal to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> since the last data retrieval.</source>
          <target state="translated">작업이 없을 한 번에 대 한 같은 경우에 캐시가 만료 되기까지의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 마지막 데이터 검색 이후입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The following code example demonstrates how to enable caching when using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to display data contained in an XML file.</source>
          <target state="translated">캐싱을 사용 하는 경우 사용 하도록 설정 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤을 XML 파일에 포함 된 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>Caching is enabled when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> is set to the number of seconds that the data is cached by the data source control.</source>
          <target state="translated">캐싱을 사용 하 고 때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`true`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 데이터가 캐시 된 데이터 소스 제어 하는 시간 (초)의 수로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>Gets or sets the cache expiration policy that is combined with the cache duration to describe the caching behavior of the cache that the data source control uses.</source>
          <target state="translated">캐시 기간과 함께 사용되어 데이터 소스 컨트롤에서 사용하는 캐시의 캐싱 동작을 설명하는 캐시 만료 정책을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCacheExpiry" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCacheExpiry" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>The default cache expiration policy setting is <ph id="ph1">&lt;see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /&gt;</ph>.</source>
          <target state="translated">기본 캐시 만료 정책 설정은 <ph id="ph1">&lt;see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>The behavior of the cache is governed by a combination of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> settings.</source>
          <target state="translated">캐시의 동작의 조합에 의해 제한 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> caches data on the first data retrieval operation, holds it in memory for the amount of time specified by <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph>, and invalidates it after the time has lapsed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 첫 번째 데이터 검색 작업에 데이터를 캐시, 메모리에서 지정 된 시간에 보유 한 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph>, 경과 되 후 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>The cache is then refreshed upon the next operation.</source>
          <target state="translated">다음 동작에에 캐시 한 다음 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph>, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for upon each subsequent operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph>, 데이터 소스 제어의 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 이후 작업이 발생할 때마다 캐시를 보유 하는 시간 창을 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>The cache will expire only if there is no activity for a time equal to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> since the last data retrieval.</source>
          <target state="translated">경우에 활동이 한 번에 대 한 같음 캐시가 만료 되기까지의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 마지막 데이터 검색 이후입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>The following code example demonstrates how to enable caching when using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to display data contained in an XML file.</source>
          <target state="translated">캐싱을 사용 하는 경우 사용 하도록 설정 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤을 XML 파일에 포함 된 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>Caching is enabled when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> is set to the number of seconds that the data is cached by the data source control.</source>
          <target state="translated">캐싱을 사용 하 고 때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`true`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 데이터가 캐시 된 데이터 소스 제어 하는 시간 (초)의 수로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext">
          <source>Gets or sets the value of the cache key for the data source control from view state, or adds the cache key to view state.</source>
          <target state="translated">뷰 상태에서 데이터 소스 컨트롤에 대한 캐시 키 값을 가져오거나 설정합니다. 또는 뷰 상태에 캐시 키를 추가합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext">
          <source>The value of the cache key, or an empty string if the cache key is not in view state.</source>
          <target state="translated">캐시 키 값입니다. 또는 캐시 키가 뷰 상태에 있지 않으면 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A&gt;</ph> property enables you to manually create a cache key for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A&gt;</ph> 속성에 대 한 캐시 키를 수동으로 만들 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext">
          <source>This is required only if you are assigning an object that contains XML or XSLT data to the control instead of specifying a file that contains the data.</source>
          <target state="translated">컨트롤 데이터를 포함 하는 파일을 지정 하는 대신에 XML 또는 XSLT 데이터를 포함 하는 개체를 할당 하는 경우에 이것이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext">
          <source>When you assign data to the control, the data is not used to generate the cache key.</source>
          <target state="translated">컨트롤에 데이터를 할당 하는 경우 캐시 키를 생성 하는 데이터 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext">
          <source>Instead, you must manually generate a unique cache key if you plan to update the data object.</source>
          <target state="translated">대신 수동으로 생성 해야 고유한 캐시 키 데이터 개체를 업데이트 하려는 경우.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>Gets or sets a user-defined key dependency that is linked to all data cache objects created by the data source control.</source>
          <target state="translated">데이터 소스 컨트롤에서 만든 모든 데이터 캐시 개체에 연결된 사용자 정의 키 종속성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>All cache objects explicitly expire when the key expires.</source>
          <target state="translated">모든 캐시 개체는 키가 만료될 때 명시적으로 만료됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>A key that identifies all cache objects created by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤에서 만든 모든 캐시 개체를 식별하는 키입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>While data is cached, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> retrieves data from the cache rather than from the underlying data file.</source>
          <target state="translated">데이터 캐시 되어 있는 동안는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 대신 기본 데이터 파일에서 캐시에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>When the cache expires, it retrieves data from the underlying file and re-caches the data.</source>
          <target state="translated">캐시가 만료 되는 기본 파일에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph> property to create a dependency between all cache entries created by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control and the key.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph> 속성에서 만든 모든 캐시 항목 간의 종속성을 만들려면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤과 키입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>You can programmatically invalidate all the cache entries at any time by expiring the key.</source>
          <target state="translated">프로그래밍 방식으로 키를 만료 시켜 언제 든 지 모든 캐시 항목을 무효화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency">
          <source>Because of the properties used to create the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph>, it is possible that multiple <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> controls can use the same cache in scenarios where they load the same data from the same XML file and transform file and have the same <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph> set.</source>
          <target state="translated">만드는 데 사용 하는 속성이 있기 때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph>, 수 여러 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤은 동일한 XML 파일에서 동일한 데이터를 로드 하 고 파일을 변환 하 고 시나리오에서 동일한 같은 캐시를 사용할 수 있습니다 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A&gt;</ph>설정 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>Gets or sets a block of XML data that the data source control binds to.</source>
          <target state="translated">데이터 소스 컨트롤이 바인딩된 XML 데이터의 블록을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>A string of inline XML data that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control binds to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤이 바인딩된 인라인 XML 데이터의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>In declarative scenarios, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property is specified as a multiline inner property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> object.</source>
          <target state="translated">선언적 시나리오에서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성의 여러 줄로 된 내부 속성으로 지정 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>An inner property is compatible with XML data, because it enables you to format the XML data in any way and ignore character padding issues, such as padding quote characters.</source>
          <target state="translated">내부 속성은 하면 어떤 방식으로든에서 XML 데이터 형식을 지정 하 고 패딩 인용 문자 등의 문자 패딩 문제를 무시 하기 때문에 XML 데이터와 호환 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>If both the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> properties are set, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property takes precedence and the data in the XML file is used instead of the XML data specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property.</source>
          <target state="translated">모두는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성을 설정는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성이 우선 및 XML 파일의 데이터에 지정 된 XML 데이터 대신 사용 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>If you change the value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised.</source>
          <target state="translated">값을 변경 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>If caching is enabled and you change the value of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph>, the cache is invalidated.</source>
          <target state="translated">캐싱을 사용 하 고 값을 변경 하면 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph>, 캐시를 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to display inline XML data contained by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property with a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤에 포함 된 인라인 XML 데이터를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.Data">
          <source>The document is loading.</source>
          <target state="translated">문서를 로드하고 있는 경우</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>Specifies the file name of an XML file that the data source binds to.</source>
          <target state="translated">데이터 소스가 바인딩된 XML 파일의 파일 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>The absolute physical path or relative path of the XML file that contains data that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤이 나타내는 데이터를 포함하는 XML 파일의 절대 실제 경로 또는 상대 경로입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>If both the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> properties are set, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property takes precedence and the data in the XML file is used instead of the XML data specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property.</source>
          <target state="translated">모두는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성을 설정는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성이 우선 및 XML 파일의 데이터에 지정 된 XML 데이터 대신 사용 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>If you change the value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised.</source>
          <target state="translated">값을 변경 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>If caching is enabled and you change the value of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph>, the cache is invalidated.</source>
          <target state="translated">캐싱을 사용 하 고 값을 변경 하면 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph>, 캐시를 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to display XML data contained in a file with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 인 파일에 포함 된 XML 데이터를 표시 하도록 컨트롤을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.DataFile">
          <source>The document is loading.</source>
          <target state="translated">문서를 로드하고 있는 경우</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control has data caching enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤에서 데이터 캐싱이 활성화되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data caching is enabled for the data source control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터 소스 컨트롤에서 데이터 캐싱을 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 데이터를 자동으로 캐시 하는 컨트롤 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> property is set to 0, which indicates an indefinite cache, and the data source will cache data until the XML file that it depends on is changed.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 속성이 무제한 캐시를 나타내는 0으로 설정 되 고 종속 된 XML 파일이 변경 될 때까지 데이터 원본의 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> property to a value greater than 0, the cache stores data for that many seconds before retrieving a fresh set.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 속성을 0 보다 큰 값으로 캐시 데이터를 새로운 집합을 검색 하기 전에 많은 초 동안 저장 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> property is set, the cache entries are not automatically invalidated when the parameters change in the transforms argument list.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> 속성이 설정 되어 있으면 캐시 항목 변환 인수 목록에서 매개 변수 변경 될 때 자동으로 무효화 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>In that case, you must write code to invalidate the cache by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph> property.</source>
          <target state="translated">설정 하 여 캐시를 무효화 하는 코드를 작성 해야 하는 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>The following code example demonstrates how to enable caching when using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to display data contained in an XML file.</source>
          <target state="translated">캐싱을 사용 하는 경우 사용 하도록 설정 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤을 XML 파일에 포함 된 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>Caching is enabled when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> is set to the number of seconds that the data is cached by the data source control.</source>
          <target state="translated">캐싱을 사용 하 고 때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`true`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A&gt;</ph> 데이터가 캐시 된 데이터 소스 제어 하는 시간 (초)의 수로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>An XPath expression that identifies a node from which the current hierarchical view is built.</source>
          <target state="translated">현재 계층적 뷰가 만들어진 노드를 식별하는 XPath 식입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>Gets the data source view object for the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤의 데이터 소스 뷰 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="viewPath" /&gt;</ph> parameter can be an XPath expression.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="viewPath" /&gt;</ph> 매개 변수는 XPath 식일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" /&gt;</ph> object that represents a single view of the data starting with the data node identified by <ph id="ph2">&lt;paramref name="viewPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="viewPath" /&gt;</ph>로 식별된 데이터 노드로 시작되는 단일 데이터 뷰를 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A&gt;</ph> method to retrieve a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView&gt;</ph> object associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A&gt;</ph> 를 검색할 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView&gt;</ph> 연관 된 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>If you specify <ph id="ph1">`viewPath`</ph> value, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control returns a data source view object that represents the view on the node identified by <ph id="ph3">`viewPath`</ph>, along with all its child nodes.</source>
          <target state="translated">지정 하는 경우 <ph id="ph1">`viewPath`</ph> 값은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 으로 식별 된 노드에서 보기를 나타내는 데이터 원본 뷰 개체를 반환 하는 컨트롤 <ph id="ph3">`viewPath`</ph>, 모든 자식 노드 함께 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>If you set <ph id="ph1">`viewPath`</ph> to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control checks the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property to determine the root node from which to build the data source view.</source>
          <target state="translated">설정한 경우 <ph id="ph1">`viewPath`</ph> 를 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 검사 제어는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성을 데이터 원본 뷰를 구성 하는 루트 노드를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property is set, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control uses it to return a data source view in the same way the <ph id="ph3">`viewPath`</ph> expression is used.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성이 설정 되어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤 같은 데이터 원본 뷰를 반환 하 여 방식으로 <ph id="ph3">`viewPath`</ph> 식이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property is not set, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control returns a view of all the data nodes in the XML data.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성이 설정 되어 있지는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤 XML 데이터에 있는 모든 데이터 노드 뷰를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>Loads the XML data into memory, either directly from the underlying data storage or from the cache, and returns it in the form of an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> object.</source>
          <target state="translated">XML 데이터를 내부 데이터 저장소에서 직접 메모리로 로드하거나 캐시에서 메모리로 로드한 다음 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> 개체의 형식으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> object that represents the XML specified in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> property or in the file identified by the <ph id="ph3">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property, with any transformations and <ph id="ph4">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" /&gt;</ph> queries applied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> 속성에 지정된 XML이나 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> 속성으로 식별된 파일의 XML을 나타내는 <ph id="ph3">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 개체입니다. 여기에는 변환과 <ph id="ph4">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" /&gt;</ph> 쿼리가 적용되어 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> method for direct access to an in-memory representation of the underlying XML data.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> 직접 액세스 하는 기본 XML 데이터의 메모리 내 표현 메서드.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>You can manipulate the returned <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> object and then call <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> to persist your changes to the XML file specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property.</source>
          <target state="translated">반환 된 조작할 수 있습니다 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 개체와 호출 후 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 로 지정 된 XML 파일에 변경 내용을 유지 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>Several requirements must be met before the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> object can be saved successfully.</source>
          <target state="translated">몇 가지 요구 사항을 충족 해야는 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 개체를 성공적으로 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>The first example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">첫 번째 예에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>The second example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">두 번째 예에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>The data is manipulated in memory using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> method every time you select a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> node, and is then saved to the XML file.</source>
          <target state="translated">사용 하 여 메모리에서 데이터 조작 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> 메서드를 선택할 때마다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 노드를 다음 XML 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>Finally, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> is called on the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to refresh the data that it displays.</source>
          <target state="translated">마지막으로, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 라고 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 표시 하는 데이터 새로 고침을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>As with the previous example, the data is manipulated in memory using the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> retrieved by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> method.</source>
          <target state="translated">앞의 예제 데이터 사용 하 여 메모리에서 조작 됩니다 처럼는 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 검색는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>Finally, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> is called on the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to refresh the data that it displays.</source>
          <target state="translated">마지막으로, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 라고 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 표시 하는 데이터 새로 고침을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>The XML file in the code examples has the following data:</source>
          <target state="translated">다음 코드 예제에서는 XML 파일에는 다음과 같은 데이터에 있습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>A URL is specified for the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property; however, the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control does not have the correct permissions for the Web resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성에 대한 URL이 지정되어 있지만 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤에 웹 리소스에 대한 올바른 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>A URL is specified for the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property; however, it is not an HTTP-based URL.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성에 대한 URL이 지정되어 있지만 HTTP 기반 URL이 아닌 경우</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>A design-time relative path was not mapped correctly by the designer before using the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤을 사용하기 전에 디자이너에서 디자인 타임 상대 경로를 올바르게 매핑하지 않은 경우</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>Both caching and client impersonation are enabled.</source>
          <target state="translated">캐싱과 클라이언트 가장이 모두 사용되는 경우.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control does not support caching when client impersonation is enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤은 클라이언트 가장이 사용되는 경우 캐싱을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument">
          <source>Access is denied to the path specified for the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성의 지정된 경로에 대한 액세스가 거부된 경우</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /&gt;</ph> event before the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control performs an XSLT transformation on its XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /&gt;</ph> 컨트롤에서 XML 데이터에 대한 XSLT 변환을 수행하기 전에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display transformed XML data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 변환 된 XML 데이터 컨트롤을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>The XML transformation is performed using the style sheet indicated by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> property.</source>
          <target state="translated">XML 변환으로 표시 하는 스타일 시트를 사용 하 여 수행 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>Additionally, the style sheet uses transform arguments that are passed to the data source control in an <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> object at runtime.</source>
          <target state="translated">스타일 시트의 데이터 소스 제어에 전달 되는 변환 인수를 사용 하는 또한는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 런타임에 개체입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>The code example demonstrates how to pass the <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> object to the data source control by handling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> event with a custom event handler, which is identified by name of the method set for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A&gt;</ph> method.</source>
          <target state="translated">코드 예제에서는 전달 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 개체를 처리 하 여 데이터 소스 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> 메서드의 이름으로 식별 되는 사용자 지정 이벤트 처리기를 사용 하 여 이벤트에 대 한 설정에서 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>The XML transformation is performed using the following style sheet.</source>
          <target state="translated">다음 스타일 시트를 사용 하 여 XML 변환을 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /&gt;</ph> method of the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /&gt;</ph> 등록 된 대리자에는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>Saves the XML data currently held in memory by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control to disk if the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 속성이 설정된 경우 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 컨트롤이 메모리에 현재 보유한 XML 데이터를 디스크에 저장합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>While the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control is typically used in read-only data-binding scenarios, you can use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control to edit XML data in the underlying XML data file.</source>
          <target state="translated">동안는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어는 읽기 전용 데이터 바인딩 시나리오에서 일반적으로 사용, 사용할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤이 기본 XML 데이터 파일에 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>In these scenarios, XML data is loaded from an XML file by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control.</source>
          <target state="translated">이러한 시나리오에서는 XML 데이터에서 XML 파일에서 로드 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>You modify the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> in memory using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> method, and then save to the XML data file by calling the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method.</source>
          <target state="translated">수정 된 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 사용 하 여 메모리에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> 메서드를 호출 하 여 XML 데이터 파일을 저장 하십시오는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>This editable XML scenario is possible when the following conditions are met:</source>
          <target state="translated">다음 조건이 충족 되 면이 편집 가능한 XML 시나리오를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The XML data is loaded from an XML file indicated by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> property, not from inline XML data specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> property.</source>
          <target state="translated">XML 데이터를 가리키는 XML 파일에서 로드 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A&gt;</ph> 속성에 지정 된 인라인 XML 데이터에서가 아니라는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Data%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>No XSLT transformation is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> properties.</source>
          <target state="translated">에 지정 된 XSLT 변환이 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> method does not handle concurrent save operations by different requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 메서드를 처리 하지 않을 동시 저장 작업 다른 요청에서.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>If more than one user is editing an XML file through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control, there is no guarantee that all users are operating with the same data.</source>
          <target state="translated">둘 이상의 사용자가을 통해 XML 파일을 편집 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 하 고은 동일한 데이터와 실행 중인 모든 사용자가 아닙니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>It is also possible for a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> operation to fail due to these same concurrency issues.</source>
          <target state="translated">에 대 한 수 이기도 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Save%2A&gt;</ph> 작업이 이러한 같은 동시성 문제로 인해 실패 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The second code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">두 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The data is manipulated in memory using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> method every time you select a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> node, and is then saved to the XML file.</source>
          <target state="translated">사용 하 여 메모리에서 데이터 조작 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> 메서드를 선택할 때마다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 노드를 다음 XML 파일에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>Finally, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> is called on the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to refresh the data that it displays.</source>
          <target state="translated">마지막으로, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 라고 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 표시 하는 데이터 새로 고침을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display and edit XML data contained in an XML file.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 컨트롤을 표시 하 고 XML 파일에 포함 된 XML 데이터를 편집 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>As with the previous example, the data is manipulated in memory using the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> object retrieved by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> method.</source>
          <target state="translated">앞의 예제 데이터 사용 하 여 메모리에서 조작 됩니다 처럼는 <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> 에서 검색 한 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>Finally, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> is called on the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to refresh the data that it displays.</source>
          <target state="translated">마지막으로, <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 라고 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 표시 하는 데이터 새로 고침을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>The XML file in the code examples has the following data:</source>
          <target state="translated">다음 코드 예제에서는 XML 파일에는 다음과 같은 데이터에 있습니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>XML data was loaded using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> property instead of the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property.</source>
          <target state="translated">XML 데이터가 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> 속성 대신 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성을 사용하여 로드된 경우</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>A URL is specified for the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property; however, the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control does not have the correct permissions for the Web resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성에 대한 URL이 지정되어 있지만 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤에 웹 리소스에 대한 올바른 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>A URL is specified for the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property; however, it is not an HTTP-based URL.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성에 대한 URL이 지정되어 있지만 HTTP 기반 URL이 아닌 경우</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>A design-time relative path was not mapped correctly by the designer before using the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤을 사용하기 전에 디자이너에서 디자인 타임 상대 경로를 올바르게 매핑하지 않은 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.Save">
          <source>Access is denied to the path specified for the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성의 지정된 경로에 대한 액세스가 거부된 경우</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 컬렉션이 <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 개체의 컬렉션이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> instance is cast to the <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList">
          <source>An object implementing <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source.</source>
          <target state="translated">데이터 소스에 바인딩할 수 있으며 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>를 구현하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> instance is cast to the <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)">
          <source>The name of the view to retrieve.</source>
          <target state="translated">검색할 뷰의 이름입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)">
          <source>If <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph> is specified, the default view for the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control is retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>가 지정된 경우에는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤의 기본 뷰가 검색됩니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)">
          <source>Gets the named data source view associated with the data source control.</source>
          <target state="translated">데이터 소스 컨트롤이 연결된 명명된 데이터 소스 뷰를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)">
          <source>Returns the named <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /&gt;</ph> object associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /&gt;</ph> 컨트롤과 연결된 명명된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Web.UI.IDataSource.GetViewNames" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Web.UI.IDataSource.GetViewNames" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames">
          <source>An object implementing <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing names representing the list of view objects associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 개체와 연결된 뷰 개체의 목록을 나타내는 이름이 포함되어 있으며 <ph id="ph2">&lt;see cref="T:System.Web.UI.IDataSource" /&gt;</ph>을 구현하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> instance is cast to the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource&gt;</ph> interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>Gets or sets a block of Extensible Stylesheet Language (XSL) data that defines an XSLT transformation to be performed on the XML data managed by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤에서 관리하는 XML 데이터에 대해 수행될 XSLT 변환을 정의하는 XSL(Extensible Stylesheet Language) 데이터의 블록을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>A string of inline XSL that defines an XML transformation to be performed on the data contained in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성에 포함된 데이터에 수행할 XML 변환을 정의하는 인라인 XSL의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>In declarative scenarios, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> property is specified as a multiline inner property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> object.</source>
          <target state="translated">선언적 시나리오에서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성의 여러 줄로 된 내부 속성으로 지정 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>An inner property is compatible with XSL style sheet data, because it enables you to format the style sheet in any way and ignore character padding issues such as padding quote characters.</source>
          <target state="translated">내부 속성 XSL 스타일 시트 데이터와 호환 되므로 스타일 시트의에서 서식을 지정 하 고 인용 문자 채우기와 같은 문자 패딩 문제를 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>If both the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> properties are set, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> property takes precedence and the data in the XSL style sheet file (.xsl) is used instead of the style sheet elements specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> property.</source>
          <target state="translated">모두는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성을 설정는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성이 우선 및 XSL 스타일 시트 파일 (.xsl)의 데이터에 지정 된 스타일 시트 요소 대신 사용 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>If an XPath expression is set using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property, it is applied after the XML data is transformed.</source>
          <target state="translated">XPath 식을 사용 하 여 설정 된 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성을 XML 데이터 변환 된 후 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>If you change the value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised.</source>
          <target state="translated">값을 변경 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>If caching is enabled and you change the value of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph>, the cache is invalidated.</source>
          <target state="translated">캐싱을 사용 하 고 값을 변경 하면 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph>, 캐시를 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> class uses the deprecated <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class to perform XSL transformations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 클래스를 사용 하 여 사용 되지 않는 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> XSL 변환을 수행 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>If you want to use style sheet features that were introduced after the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class was deprecated, apply the transforms manually by using the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class.</source>
          <target state="translated">이후 도입 된 스타일 시트의 기능을 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> 클래스의 사용이 중단 되었으며, 사용 하 여 수동으로 변환을 적용 된 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display transformed XML data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> 변환 된 XML 데이터 컨트롤을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>The style sheet that performs the transformation is defined inline by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> property of the data source control.</source>
          <target state="translated">변환을 수행 하는 스타일 시트에서 인라인으로 정의 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 데이터 소스 컨트롤의 속성입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.Transform">
          <source>The document is loading.</source>
          <target state="translated">문서를 로드하고 있는 경우</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>Provides a list of XSLT arguments that are used with the style sheet defined by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /&gt;</ph> properties to perform a transformation on the XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /&gt;</ph> 속성으로 정의된 스타일시트와 함께 사용되어 XML 데이터에 대한 변환을 수행하는 XSLT 인수의 목록을 제공합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Xsl.XsltArgumentList" /&gt;</ph> object that contains XSLT parameters and objects to be applied to XML data when it is loaded by the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Xsl.XsltArgumentList" /&gt;</ph> 컨트롤이 XML 데이터를 로드할 때 XML 데이터에 적용될 XSLT 매개 변수와 개체를 포함하는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> event is raised to ensure the XSLT parameters are available at the time that the XSLT transformation is applied to the XML data.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> 속성 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> XSLT 변환을 XML 데이터에 적용 되는 시간에 XSLT 매개 변수를 사용할 수 있도록 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> property is set, the cache entries are not automatically invalidated when the parameters change in the transforms argument list.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> 속성이 설정 되어 있으면 캐시 항목 변환 인수 목록에서 매개 변수 변경 될 때 자동으로 무효화 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>In that case, you must write code to invalidate the cache by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph> property.</source>
          <target state="translated">설정 하 여 캐시를 무효화 하는 코드를 작성 해야 하는 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display transformed XML data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 변환 된 XML 데이터 컨트롤을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>The XML transformation is performed using the style sheet indicated by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> property.</source>
          <target state="translated">XML 변환으로 표시 하는 스타일 시트를 사용 하 여 수행 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>Additionally, the style sheet uses transform arguments that are passed to the data source control in an <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> object at run time.</source>
          <target state="translated">스타일 시트의 데이터 소스 제어에 전달 되는 변환 인수를 사용 하는 또한는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 런타임에 개체입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>The code example demonstrates how to pass the <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> to the data source control by handling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> event with a custom event handler.</source>
          <target state="translated">코드 예제에서는 전달 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 처리 하 여 데이터 소스 제어에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> 사용자 지정 이벤트 처리기를 사용 하 여 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList">
          <source>The transformation of the XML data is performed with the following style sheet.</source>
          <target state="translated">XML 데이터의 변환과 다음 스타일 시트와 함께 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>Specifies the file name of an Extensible Stylesheet Language (XSL) file (.xsl) that defines an XSLT transformation to be performed on the XML data managed by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.XmlDataSource" /&gt;</ph> 컨트롤에서 관리하는 XML 데이터에 대해 수행될 XSLT 변환을 정의하는 XSL(Extensible Stylesheet Language) 파일(.xsl)의 파일 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The absolute physical path or relative path of the XSL style sheet file that defines an XML transformation to be performed on the data contained in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> or <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성에 포함된 데이터에 수행할 XML 변환을 정의하는 XSL 스타일시트 파일의 절대 실제 경로나 상대 경로입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>If both the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> properties are set, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> property takes precedence and the data in the XSL style sheet file (.xsl) is used instead of the style sheet elements specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> property.</source>
          <target state="translated">모두는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성을 설정는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성이 우선 및 XSL 스타일 시트 파일 (.xsl)의 데이터에 지정 된 스타일 시트 요소 대신 사용 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>If an XPath expression is set using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property, it is applied after the XML data is transformed.</source>
          <target state="translated">XPath 식을 사용 하 여 설정 된 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 속성을 XML 데이터 변환 된 후 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>If you change the value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised.</source>
          <target state="translated">값을 변경 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>If caching is enabled and you change the value of <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph>, the cache is invalidated.</source>
          <target state="translated">캐싱을 사용 하 고 값을 변경 하면 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A&gt;</ph>, 캐시를 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> class uses the deprecated <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class to perform XSL transformations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 클래스를 사용 하 여 사용 되지 않는 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> XSL 변환을 수행 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>If you want to use style sheet features that were introduced after the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class was deprecated, apply the transforms manually by using the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class.</source>
          <target state="translated">이후 도입 된 스타일 시트의 기능을 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> 클래스의 사용이 중단 되었으며, 사용 하 여 수동으로 변환을 적용 된 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display transformed XML data on a Web form.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 표시할 컨트롤을 Web form에 XML 데이터를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The transformation is performed using the style sheet indicated by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> property.</source>
          <target state="translated">로 표시 하는 스타일 시트를 사용 하 여 변환이 수행 된는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>You can optionally supply transformation arguments for the style sheet using an <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph>.</source>
          <target state="translated">선택적으로 사용 하 여 스타일 시트에 대 한 변환 인수를 제공할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> 속성을 참조하세요.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The XSL style sheet that performs the XML transformation has the following structure:</source>
          <target state="translated">XML 변환을 수행 하는 XSL 스타일 시트의 구조는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.TransformFile">
          <source>The document is loading.</source>
          <target state="translated">문서를 로드하고 있는 경우</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>Occurs before the style sheet that is defined by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /&gt;</ph> property or identified by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /&gt;</ph> property is applied to XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /&gt;</ph> 속성에서 정의하거나 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /&gt;</ph> 속성에서 식별하는 스타일시트가 XML 데이터에 적용되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> event to set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> property with an <ph id="ph3">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> object before the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control performs an XML transformation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> 설정 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 하기 전에 개체는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 컨트롤이 XML 변환을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> control to display transformed XML data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> 변환 된 XML 데이터 컨트롤을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>The XML transformation is performed using the style sheet indicated by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> property.</source>
          <target state="translated">XML 변환으로 표시 하는 스타일 시트를 사용 하 여 수행 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>Additionally, the style sheet uses transform arguments that are passed to the data source control in an <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> at run time.</source>
          <target state="translated">스타일 시트의 데이터 소스 제어에 전달 되는 변환 인수를 사용 하는 또한는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 런타임 시.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>The code example demonstrates how to pass the <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> object to the data source control by handling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> event with a custom event handler.</source>
          <target state="translated">코드 예제에서는 전달 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 개체를 처리 하 여 데이터 소스 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.XmlDataSource.Transforming&gt;</ph> 사용자 지정 이벤트 처리기를 사용 하 여 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.XmlDataSource.Transforming">
          <source>The transformation of the XML data is performed with the following style sheet:</source>
          <target state="translated">XML 데이터의 변환과 다음 스타일 시트와 함께 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>Specifies an XPath expression to be applied to the XML data contained by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> property or by the XML file indicated by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> 속성에 포함되어 있거나 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성으로 지정된 XML 파일에 포함되어 있는 XML 데이터에 적용할 XPath 식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>A string that represents an XPath expression that can be used to filter the data contained by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> property or by the XML file indicated by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /&gt;</ph> 속성에 포함되어 있거나 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /&gt;</ph> 속성으로 지정된 XML 파일에 포함되어 있는 데이터를 필터링하는 데 사용할 수 있는 XPath 식을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>For more information on XPath data-binding expressions, see <bpt id="p1">[</bpt>Binding a Tabular Control to the XmlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8)</ept>.</source>
          <target state="translated">XPath 데이터 바인딩 식에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>테이블 형식 컨트롤을 바인딩하는 XmlDataSource 컨트롤<ept id="p1">](http://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> control with a templated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control to display XML data that has been filtered using an XPath expression.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;</ph> 템플릿 기반 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> XPath 식을 사용 하 여 필터링 된 XML 데이터를 표시 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>In this example, XPath syntax is used to filter the XML data when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> property of the data source control is set, and also binds elements of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> control template to the XML data.</source>
          <target state="translated">이 예제에서는 XPath 구문을 XML 데이터를 필터링 하는 데 사용 때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A&gt;</ph> 데이터 소스 컨트롤의 속성을 설정 하 고 또한의 요소를 바인딩하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Repeater&gt;</ph> XML 데이터에 컨트롤 템플릿을 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>The XML file in the code example has the following data:</source>
          <target state="translated">코드 예제에서 XML 파일에는 다음과 같은 데이터가 있습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.XmlDataSource.XPath">
          <source>The document is loading.</source>
          <target state="translated">문서를 로드하고 있는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>