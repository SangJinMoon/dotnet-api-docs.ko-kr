<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8ae7451236a61233aad5861792535d77e32aee0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39939197" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type SqlDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2eedb-101">데이터 바인딩된 컨트롤의 SQL 데이터베이스를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eedb-101">Represents an SQL database to data-bound controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="2eedb-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="2eedb-103">소개</span><span class="sxs-lookup"><span data-stu-id="2eedb-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="2eedb-104">데이터 연결</span><span class="sxs-lookup"><span data-stu-id="2eedb-104">Data Connections</span></span>](#data_connections)  
  
-   [<span data-ttu-id="2eedb-105">데이터 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-105">Performing Data Operations</span></span>](#performing_data_operations)  
  
-   [<span data-ttu-id="2eedb-106">데이터 공급자</span><span class="sxs-lookup"><span data-stu-id="2eedb-106">Data Provider</span></span>](#data_provider)  
  
-   [<span data-ttu-id="2eedb-107">캐싱</span><span class="sxs-lookup"><span data-stu-id="2eedb-107">Caching</span></span>](#caching)  
  
-   [<span data-ttu-id="2eedb-108">추가 기능</span><span class="sxs-lookup"><span data-stu-id="2eedb-108">Additional Features</span></span>](#additional_features)  
  
-   [<span data-ttu-id="2eedb-109">데이터 원본 뷰</span><span class="sxs-lookup"><span data-stu-id="2eedb-109">Data Source View</span></span>](#data_source_view)  
  
-   [<span data-ttu-id="2eedb-110">선언 구문</span><span class="sxs-lookup"><span data-stu-id="2eedb-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="2eedb-111">소개</span><span class="sxs-lookup"><span data-stu-id="2eedb-111">Introduction</span></span>  
 <span data-ttu-id="2eedb-112"><xref:System.Web.UI.WebControls.SqlDataSource> 데이터 소스 컨트롤 데이터 바인딩된 컨트롤에는 SQL 관계형 데이터베이스의 데이터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-112">The <xref:System.Web.UI.WebControls.SqlDataSource> data source control represents data in an SQL relational database to data-bound controls.</span></span> <span data-ttu-id="2eedb-113">사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSource> 관계형 데이터베이스에서 데이터를 검색 및 표시, 편집 및 적거나 없는 코드를 사용 하 여 웹 페이지에서 데이터를 정렬 하는 데이터 바인딩된 컨트롤과 함께에서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-113">You can use the <xref:System.Web.UI.WebControls.SqlDataSource> control in conjunction with a data-bound control to retrieve data from a relational database and to display, edit, and sort data on a Web page with little or no code.</span></span>  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a><span data-ttu-id="2eedb-114">데이터 연결</span><span class="sxs-lookup"><span data-stu-id="2eedb-114">Data Connections</span></span>  
 <span data-ttu-id="2eedb-115">설정 데이터베이스에 연결 해야 합니다는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 유효한 연결 문자열 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-115">To connect to a database, you must set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to a valid connection string.</span></span> <span data-ttu-id="2eedb-116"><xref:System.Web.UI.WebControls.SqlDataSource> 와 같은 ADO.NET 공급자를 사용 하 여 연결할 수 있는 모든 SQL 관계형 데이터베이스를 지원할 수는 `SqlClient`, `OleDb`, `Odbc`, 또는 `OracleClient` 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-116">The <xref:System.Web.UI.WebControls.SqlDataSource> can support any SQL relational database that can be connected to using an ADO.NET provider, such as the `SqlClient`, `OleDb`, `Odbc`, or `OracleClient` provider.</span></span> <span data-ttu-id="2eedb-117">연결 문자열을 보호 하는 방법에 대 한 정보를 참조 하세요 [방법: 컨트롤을 사용 하 여 데이터 원본 때 보안 연결 문자열](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-117">For information about how to secure connection strings, see [How To: Secure Connection Strings when Using Data Source Controls](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).</span></span>  
  
 <span data-ttu-id="2eedb-118">기본 데이터베이스에서 데이터를 검색할 설정의 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL 쿼리를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-118">To retrieve data from an underlying database, set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property with an SQL query.</span></span> <span data-ttu-id="2eedb-119">경우 데이터베이스는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 관련이 지 원하는 저장 프로시저를 사용 하 여 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성을 저장된 프로시저의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-119">If the database that the <xref:System.Web.UI.WebControls.SqlDataSource> is associated with supports stored procedures, you can set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to the name of a stored procedure.</span></span> <span data-ttu-id="2eedb-120">지정 하는 SQL 쿼리 매개 변수가 있는 쿼리일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-120">The SQL query that you specify can also be a parameterized query.</span></span> <span data-ttu-id="2eedb-121">추가할 수 있습니다 <xref:System.Web.UI.WebControls.Parameter> 매개 변수가 있는 쿼리를 사용 하 여 연결 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-121">You can add <xref:System.Web.UI.WebControls.Parameter> objects that are associated with a parameterized query to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-122">매개 변수가 있는 SQL 쿼리 및 해당 구문에 대 한 자세한 내용은 참조 하세요. [필터링에 대 한 데이터 소스 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-122">For more information about parameterized SQL queries and their syntax, see [Using Parameters with Data Source Controls for Filtering](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).</span></span>  
  
 <span data-ttu-id="2eedb-123"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 데이터를 검색할 때마다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-123">The <xref:System.Web.UI.WebControls.SqlDataSource> control retrieves data whenever the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is called.</span></span> <span data-ttu-id="2eedb-124">이 메서드는 지정 된 메서드에 프로그래밍 방식 액세스를 제공 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-124">This method provides programmatic access to the method that is specified by <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="2eedb-125"><xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 자동으로 메서드는 컨트롤에 바인딩되는 <xref:System.Web.UI.WebControls.SqlDataSource> 때 해당 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-125">The <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is automatically called by controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> when their <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method is called.</span></span> <span data-ttu-id="2eedb-126">설정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 데이터 바인딩된 컨트롤의 속성, 컨트롤을 자동으로 데이터에 바인딩하 필요에 따라 데이터 원본에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-126">If you set the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> property of a data-bound control, the control automatically binds to data from the data source, as required.</span></span> <span data-ttu-id="2eedb-127">설정 합니다 `DataSourceID` 속성은 바인딩에 대 한 권장 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 데이터 바인딩된 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-127">Setting the `DataSourceID` property is the recommended method for binding an <xref:System.Web.UI.WebControls.ObjectDataSource> control to a data-bound control.</span></span> <span data-ttu-id="2eedb-128">사용할 수 있습니다 합니다 `DataSource` 속성인 있지만 명시적으로 호출 해야 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 데이터 바인딩된 컨트롤의 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-128">Alternatively, you can use the `DataSource` property, but then you must explicitly call the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the data-bound control.</span></span> <span data-ttu-id="2eedb-129">사용할 수 있는 데이터 바인딩된 컨트롤의 예로 <xref:System.Web.UI.WebControls.SqlDataSource> 됩니다 <xref:System.Web.UI.WebControls.DataGrid>를 <xref:System.Web.UI.WebControls.DetailsView>를 <xref:System.Web.UI.WebControls.DataList>, 및 <xref:System.Web.UI.WebControls.DropDownList>합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-129">Some examples of data-bound controls that can use <xref:System.Web.UI.WebControls.SqlDataSource> are <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, and <xref:System.Web.UI.WebControls.DropDownList>.</span></span> <span data-ttu-id="2eedb-130">호출할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 프로그래밍 방식으로 언제 든 지 기본 데이터베이스에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-130">You can call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method programmatically at any time to retrieve data from the underlying database.</span></span>  
  
 <span data-ttu-id="2eedb-131">선언적 및 프로그래밍 방식으로 ASP.NET 시나리오에서 설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 ID 데이터 바인딩된 컨트롤의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-131">In declarative and programmatic ASP.NET scenarios, you can set the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the data-bound control to the ID of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="2eedb-132">인스턴스를 할당할 수도 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 데이터 바인딩된 컨트롤의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-132">You can also assign an instance of the <xref:System.Web.UI.WebControls.SqlDataSource> class to the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property of the data-bound control.</span></span> <span data-ttu-id="2eedb-133">바인딩 데이터 바인딩된 컨트롤을 데이터 소스 컨트롤에 대 한 자세한 내용은 참조 하세요. [ASP.NET 데이터 액세스 옵션](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-133">For more information about binding data-bound control to data source controls, see [ASP.NET Data Access Options](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).</span></span>  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a><span data-ttu-id="2eedb-134">데이터 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-134">Performing Data Operations</span></span>  
 <span data-ttu-id="2eedb-135">인스턴스의 구성과 내부 데이터베이스 제품의 기능에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스를 삽입, 업데이트 및 삭제와 같은 데이터 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-135">Depending on the capabilities of the underlying database product and the configuration of the instance of the <xref:System.Web.UI.WebControls.SqlDataSource> class, you can perform data operations, such as updates, inserts, and deletes.</span></span> <span data-ttu-id="2eedb-136">이러한 데이터 작업을 수행 하려면 적절 한 명령 텍스트 및 수행 하려는 작업에 대 한 연결된 매개 변수를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-136">To perform these data operations, set the appropriate command text and any associated parameters for the operation that you want to perform.</span></span> <span data-ttu-id="2eedb-137">예를 들어, 업데이트 작업을 설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성은 SQL 문자열이 나 저장된 프로시저의 이름으로 모든 필수 매개 변수를 추가 하 고는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-137">For example, for an update operation, set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property to an SQL string or the name of a stored procedure and add any required parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-138">업데이트가 수행 되는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드가 호출 되는 데이터 바인딩된 컨트롤에 의해 코드에서 명시적으로 또는 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-138">The update is performed when the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method is called, either explicitly by your code or automatically by a data-bound control.</span></span> <span data-ttu-id="2eedb-139">동일한 일반 패턴에 대 한 뒤 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 고 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-139">The same general pattern is followed for <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operations.</span></span>  
  
 <span data-ttu-id="2eedb-140">SQL 쿼리 및에서 사용 하는 명령을 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성을 매개 변수화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-140">The SQL queries and commands that you use in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, and <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> properties can be parameterized.</span></span> <span data-ttu-id="2eedb-141">이 쿼리 또는 명령을 리터럴 값 대신 자리 표시자를 사용할 수 있으며 응용 프로그램 또는 사용자 정의 변수 자리 표시자를 바인딩할 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-141">This means that the query or command can use placeholders instead of literal values and bind the placeholders to application or user-defined variables.</span></span> <span data-ttu-id="2eedb-142">세션 변수에, Web Forms 페이지에 대 한 쿼리 문자열에 전달 되는 값, 다른 서버 컨트롤의 속성 값을 SQL 쿼리에서 매개 변수를 바인딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-142">You can bind parameters in SQL queries to Session variables, values that are passed on the query string for a Web Forms page, the property values of other server controls, and more.</span></span> <span data-ttu-id="2eedb-143">SQL 쿼리와 매개 변수를 사용 하는 방법에 대 한 자세한 합니다 <xref:System.Web.UI.WebControls.SqlDataSource>를 참조 하세요 [필터링에 대 한 데이터 소스 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) 및 [SqlDataSource컨트롤을사용하여매개변수를사용하여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span><span class="sxs-lookup"><span data-stu-id="2eedb-143">For more information about how to use parameters in SQL queries with the <xref:System.Web.UI.WebControls.SqlDataSource>, see [Using Parameters with Data Source Controls for Filtering](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) and [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-144">기본적으로 매개 변수 중 하나가 `null` 실행 하는 경우는 `Select` 명령을 데이터 없음이 반환 되 고 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-144">By default, if one of the parameters is `null` when you execute a `Select` command, no data will be returned and no exception will be thrown.</span></span> <span data-ttu-id="2eedb-145">설정 하 여이 동작을 변경할 수는 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> 속성을 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-145">You can change this behavior by setting the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property to `false`.</span></span>  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a><span data-ttu-id="2eedb-146">데이터 공급자</span><span class="sxs-lookup"><span data-stu-id="2eedb-146">Data Provider</span></span>  
 <span data-ttu-id="2eedb-147">기본적으로 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 SQL Server 용.NET Framework Data Provider를 사용 하 여 작동 하지만 <xref:System.Web.UI.WebControls.SqlDataSource> 없는 Microsoft SQL Server 관련 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-147">By default, the <xref:System.Web.UI.WebControls.SqlDataSource> control works with the .NET Framework Data Provider for SQL Server, but <xref:System.Web.UI.WebControls.SqlDataSource> is not Microsoft SQL Server–specific.</span></span> <span data-ttu-id="2eedb-148">연결할 수는 <xref:System.Web.UI.WebControls.SqlDataSource> 관리 되는 ADO.NET 공급자가 모든 데이터베이스 제품을 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-148">You can connect the <xref:System.Web.UI.WebControls.SqlDataSource> control with any database product for which there is a managed ADO.NET provider.</span></span> <span data-ttu-id="2eedb-149">와 함께 사용할 경우는 <xref:System.Data.OleDb?displayProperty=nameWithType> 공급자는 <xref:System.Web.UI.WebControls.SqlDataSource> 모든 OLE DB 호환 데이터베이스로 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-149">When used with the <xref:System.Data.OleDb?displayProperty=nameWithType> provider, the <xref:System.Web.UI.WebControls.SqlDataSource> can work with any OLE DB-compliant database.</span></span> <span data-ttu-id="2eedb-150">와 함께 사용할 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자는 <xref:System.Web.UI.WebControls.SqlDataSource> ODBC 드라이버 및 IBM DB2, MySQL 및 PostgreSQL을 비롯 하 여 데이터베이스를 사용 하 여 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-150">When used with the <xref:System.Data.Odbc?displayProperty=nameWithType> provider, the <xref:System.Web.UI.WebControls.SqlDataSource> can be used with any ODBC driver and database, including IBM DB2, MySQL, and PostgreSQL.</span></span> <span data-ttu-id="2eedb-151">와 함께 사용할 경우는 <xref:System.Data.OracleClient?displayProperty=nameWithType> 공급자는 <xref:System.Web.UI.WebControls.SqlDataSource> 8.1.7 Oracle 데이터베이스를 사용 하 여 이상 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-151">When used with the <xref:System.Data.OracleClient?displayProperty=nameWithType> provider, the <xref:System.Web.UI.WebControls.SqlDataSource> can work with Oracle 8.1.7 databases and later.</span></span> <span data-ttu-id="2eedb-152">허용 되는 공급자 목록에 등록 된는 `DbProviderFactories` 합니다 Machine.config 또는 Web.config 파일에서 구성 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-152">The list of allowable providers is registered in the `DbProviderFactories` section of the configuration file, either in the Machine.config or Web.config file.</span></span> <span data-ttu-id="2eedb-153">자세한 내용은 [SqlDataSource 컨트롤을 사용 하 여 선택 하면 데이터](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-153">For more information, see [Selecting Data Using the SqlDataSource Control](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).</span></span>  
  
<a name="caching"></a>   
## <a name="caching"></a><span data-ttu-id="2eedb-154">캐싱</span><span class="sxs-lookup"><span data-stu-id="2eedb-154">Caching</span></span>  
 <span data-ttu-id="2eedb-155">사용 하 여 페이지의 데이터를 표시 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 페이지의 성능 데이터 캐싱 데이터 소스 컨트롤의 기능을 사용 하 여 늘릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-155">If you display data on your page using a <xref:System.Web.UI.WebControls.SqlDataSource> control, you can increase the performance of the page by using the data caching capabilities of the data source control.</span></span> <span data-ttu-id="2eedb-156">웹 서버에서 메모리 데이터베이스 서버의 처리 부하를 줄입니다 캐싱 대부분의 경우에서 적절 한 절충 이것이입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-156">Caching reduces the processing load on the database servers at the expense of memory on the Web server; in most cases, this is a good trade-off.</span></span> <span data-ttu-id="2eedb-157"><xref:System.Web.UI.WebControls.SqlDataSource> 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성 캐시는 캐시 엔트리가 삭제 되기 전에 데이터를 저장 하는 시간 (초) 수로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-157">The <xref:System.Web.UI.WebControls.SqlDataSource> automatically caches data when the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property is set to the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="2eedb-158">지정할 수도 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 및 선택적 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-158">You can also specify a <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> and an optional <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> value.</span></span>  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a><span data-ttu-id="2eedb-159">추가 기능</span><span class="sxs-lookup"><span data-stu-id="2eedb-159">Additional Features</span></span>  
 <span data-ttu-id="2eedb-160"><xref:System.Web.UI.WebControls.SqlDataSource> 다음 표에 나열 된 추가 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-160">The <xref:System.Web.UI.WebControls.SqlDataSource> provides additional capabilities, as listed in the following table.</span></span>  
  
|<span data-ttu-id="2eedb-161">기능</span><span class="sxs-lookup"><span data-stu-id="2eedb-161">Capability</span></span>|<span data-ttu-id="2eedb-162">요구 사항</span><span class="sxs-lookup"><span data-stu-id="2eedb-162">Requirements</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="2eedb-163">캐싱</span><span class="sxs-lookup"><span data-stu-id="2eedb-163">Caching</span></span>|<span data-ttu-id="2eedb-164">설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값을 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성을 `true`, 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 캐시 된 데이터에 대해 원하는 캐싱 동작에 따라 속성.</span><span class="sxs-lookup"><span data-stu-id="2eedb-164">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value, the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property to `true`, and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties according to the caching behavior you want for your cached data.</span></span>|  
|<span data-ttu-id="2eedb-165">삭제</span><span class="sxs-lookup"><span data-stu-id="2eedb-165">Deleting</span></span>|<span data-ttu-id="2eedb-166">설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 데이터를 삭제 하는 데 사용 되는 SQL 문에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-166">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property to an SQL statement used to delete data.</span></span> <span data-ttu-id="2eedb-167">이 문은 일반적으로 매개 변수화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-167">This statement is typically parameterized.</span></span>|  
|<span data-ttu-id="2eedb-168">필터링</span><span class="sxs-lookup"><span data-stu-id="2eedb-168">Filtering</span></span>|<span data-ttu-id="2eedb-169">설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을는 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-169">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value.</span></span> <span data-ttu-id="2eedb-170">설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성 데이터를 필터링 하는 데 사용 하는 필터링 식에 때는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-170">Set the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property to a filtering expression used to filter the data when the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is called.</span></span>|  
|<span data-ttu-id="2eedb-171">삽입</span><span class="sxs-lookup"><span data-stu-id="2eedb-171">Inserting</span></span>|<span data-ttu-id="2eedb-172">설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> SQL 문 사용 하 여 데이터를 삽입 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-172">Set the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property to an SQL statement used to insert data.</span></span> <span data-ttu-id="2eedb-173">이 문은 일반적으로 매개 변수화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-173">This statement is typically parameterized.</span></span>|  
|<span data-ttu-id="2eedb-174">페이징</span><span class="sxs-lookup"><span data-stu-id="2eedb-174">Paging</span></span>|<span data-ttu-id="2eedb-175">하지만 현재 지원 되지 않습니다를 <xref:System.Web.UI.WebControls.SqlDataSource>일부 데이터 바인딩 같은 컨트롤 <xref:System.Web.UI.WebControls.GridView>를 설정한 경우 페이징을 지원 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값.</span><span class="sxs-lookup"><span data-stu-id="2eedb-175">Not currently supported by the <xref:System.Web.UI.WebControls.SqlDataSource>, however some data-bound controls, such as <xref:System.Web.UI.WebControls.GridView>, support paging when you set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value.</span></span>|  
|<span data-ttu-id="2eedb-176">선택</span><span class="sxs-lookup"><span data-stu-id="2eedb-176">Selecting</span></span>|<span data-ttu-id="2eedb-177">설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 데이터를 검색 하는 데 사용 되는 SQL 문에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-177">Set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL statement used to retrieve data.</span></span>|  
|<span data-ttu-id="2eedb-178">정렬</span><span class="sxs-lookup"><span data-stu-id="2eedb-178">Sorting</span></span>|<span data-ttu-id="2eedb-179"><xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-179">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.</span></span>|  
|<span data-ttu-id="2eedb-180">업데이트하는 중</span><span class="sxs-lookup"><span data-stu-id="2eedb-180">Updating</span></span>|<span data-ttu-id="2eedb-181">설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 데이터를 업데이트 하는 데 사용 되는 SQL 문에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-181">Set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property to an SQL statement used to update data.</span></span> <span data-ttu-id="2eedb-182">이 문은 일반적으로 매개 변수화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-182">This statement is typically parameterized.</span></span>|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a><span data-ttu-id="2eedb-183">데이터 원본 뷰</span><span class="sxs-lookup"><span data-stu-id="2eedb-183">Data Source View</span></span>  
 <span data-ttu-id="2eedb-184">모든 데이터 소스 컨트롤과 마찬가지로 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 소스 뷰 클래스와 연결 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-184">As with all data source controls, the <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with a data source view class.</span></span> <span data-ttu-id="2eedb-185"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에 연결 된 하나만 <xref:System.Web.UI.WebControls.SqlDataSourceView>, 이름은 항상 및 `Table`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-185">The <xref:System.Web.UI.WebControls.SqlDataSource> control has only one associated <xref:System.Web.UI.WebControls.SqlDataSourceView>, and it is always named `Table`.</span></span>  
  
 <span data-ttu-id="2eedb-186">시각적으로 렌더링 되지를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 만들 수 있습니다 선언적으로, 필요에 따라 상태 관리에 참여 하도록 허용할 수 있도록 컨트롤로 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-186">There is no visual rendering of the <xref:System.Web.UI.WebControls.SqlDataSource> control; it is implemented as a control so that you can create it declaratively and, optionally, to allow it to participate in state management.</span></span> <span data-ttu-id="2eedb-187">결과적으로 <xref:System.Web.UI.WebControls.SqlDataSource> 에서 제공 하는 것과 같은 시각적 기능을 지원 하지 않습니다 합니다 <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> 또는 <xref:System.Web.UI.DataSourceControl.SkinID%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-187">As a result, the <xref:System.Web.UI.WebControls.SqlDataSource> does not support visual features, such as the ones that are provided by the <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> or <xref:System.Web.UI.DataSourceControl.SkinID%2A> property.</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="2eedb-188">선언 구문</span><span class="sxs-lookup"><span data-stu-id="2eedb-188">Declarative Syntax</span></span>  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-189">소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 사용할 수 있습니다: [다운로드](http://go.microsoft.com/fwlink/?LinkId=192424)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-189">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192424).</span></span>  
  
 <span data-ttu-id="2eedb-190">이 섹션에서는 네 가지 코드 예제가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-190">This section contains four code examples:</span></span>  
  
-   <span data-ttu-id="2eedb-191">첫 번째 코드 예제에는 SQL server에서 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 선언적 구문을 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-191">The first code example demonstrates how to display data from SQL Server in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.</span></span>  
  
-   <span data-ttu-id="2eedb-192">두 번째 코드 예제는 ODBC 호환 데이터베이스의 데이터를에서 표시 하는 방법에 설명 된 <xref:System.Web.UI.WebControls.GridView> 선언적 구문을 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-192">The second code example demonstrates how to display data from an ODBC-compliant database in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.</span></span>  
  
-   <span data-ttu-id="2eedb-193">세 번째 코드 예제에서 데이터 표시 및 업데이트 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-193">The third code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
-   <span data-ttu-id="2eedb-194">네 번째 코드 예제에서 데이터 표시 및 업데이트 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-194">The fourth code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="2eedb-195">이러한 예제에는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-195">These examples show how to use declarative syntax for data access.</span></span> <span data-ttu-id="2eedb-196">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-196">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="2eedb-197">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> SQL Server에서 데이터를 검색 및 표시를 선언적으로 제어를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-197">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control declaratively to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-198">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색을 선언적으로 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-198">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control declaratively to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-199">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성의 이름은.NET Framework Data Provider for ODBC는 <xref:System.Data.Odbc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-199">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is the name of the .NET Framework Data Provider for ODBC, which is <xref:System.Data.Odbc?displayProperty=nameWithType>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-200">다음 코드 예제에서는 일반적인 표시 및 업데이트 시나리오를 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-200">The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-201">이전 예제를 사용 하 여 Northwind 데이터베이스에서 데이터에 표시 되는 여 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-201">As with the previous examples, data from the Northwind database is displayed in the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-202">또한 때문에 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성이 지정 되어 및 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> 속성이 `true`를 편집 하 고 추가 코드 없이 사용 하 여 레코드를 업데이트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-202">Additionally, because an <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is specified and the <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> property is set to `true`, you can edit and update the records with no additional code.</span></span> <span data-ttu-id="2eedb-203"><xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 매개 변수를 추가 처리를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션과 호출 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 때를 **업데이트** 단추를 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 클릭할.</span><span class="sxs-lookup"><span data-stu-id="2eedb-203">The <xref:System.Web.UI.WebControls.GridView> control automatically handles adding parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** button in the <xref:System.Web.UI.WebControls.GridView> control is clicked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-204">다음 코드 예제에서는 일반적인 표시 및 업데이트 시나리오를 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 고 <xref:System.Web.UI.WebControls.TextBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-204">The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.DropDownList> and <xref:System.Web.UI.WebControls.TextBox> controls.</span></span> <span data-ttu-id="2eedb-205"><xref:System.Web.UI.WebControls.DropDownList> 제어 매개 변수 업데이트를 자동으로 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션도 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드, 그렇게 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-205">The <xref:System.Web.UI.WebControls.DropDownList> control does not automatically add update parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection nor call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method, so you must do so.</span></span> <span data-ttu-id="2eedb-206">업데이트 매개 변수를 선언적으로 지정 되 고 수행 하는 이벤트 처리기를 추가할 수는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 이벤트가 발생할 때 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-206">The update parameters are specified declaratively and you can add an event handler to perform the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation when an event is raised.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-207">이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-207">This example includes a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-208">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-208">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="2eedb-209">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-209">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-210">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-210">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-211">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-211">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="2eedb-212">내부 데이터베이스에 연결하는 데 사용되는 연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-212">The connection string used to connect to the underlying database.</span>
          </span>
        </param>
        <param name="selectCommand">
          <span data-ttu-id="2eedb-213">내부 데이터베이스에서 데이터를 검색하는 데 사용되는 SQL 쿼리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-213">The SQL query used to retrieve data from the underlying database.</span>
          </span>
          <span data-ttu-id="2eedb-214">SQL 쿼리가 매개 변수가 있는 SQL 문자열인 경우 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체를 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 추가해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-214">If the SQL query is a parameterized SQL string, you might need to add <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eedb-215">지정된 연결 문자열과 Select 명령을 사용하여 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-215">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class with the specified connection string and Select command.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-216">데이터베이스 제품 마다 다양 한 SQL 구문 사용 하므로 `selectCommand` 는 현재 사용 중인 ADO.NET 공급자를 식별 되는 종속 된 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-216">Because different database products use different varieties of SQL, the syntax for `selectCommand` depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="2eedb-217">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-217">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="2eedb-218">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="2eedb-218">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="2eedb-219">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-219">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or the <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="2eedb-220">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-220">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-221"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 값일 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.</span><span class="sxs-lookup"><span data-stu-id="2eedb-221">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> value can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-222">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 제어는 <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-222">The following code example demonstrates how to create a <xref:System.Web.UI.WebControls.SqlDataSource> control using the <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2eedb-223">예제에는 일반적이 지 않습니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 되는 중간 계층 개체의 구현 되지만 Web Forms 페이지에 없는 비즈니스 개체에 대 한 간단 하 게 데이터베이스와 상호 작용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-223">The example is unusual in that the <xref:System.Web.UI.WebControls.SqlDataSource> control is being used not on a Web Forms page, but in the implementation of a middle-tier object as a simple way for a business object to interact with a database.</span></span> <span data-ttu-id="2eedb-224">이 예제에서는 Web.config 파일에 저장 된 연결 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-224">The example uses a connection string that is stored in the Web.config file.</span></span>  
  
 <span data-ttu-id="2eedb-225">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-225">This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (providerName, connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">
          <span data-ttu-id="2eedb-226">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 사용하는 데이터 공급자의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-226">The name of the data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses.</span>
          </span>
          <span data-ttu-id="2eedb-227">공급자를 설정하지 않은 경우 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />는 기본적으로 Microsoft SQL Server용 ADO.NET 공급자를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-227">If no provider is set, the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses the ADO.NET provider for Microsoft SQL Server, by default.</span>
          </span>
        </param>
        <param name="connectionString">
          <span data-ttu-id="2eedb-228">내부 데이터베이스에 연결하는 데 사용되는 연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-228">The connection string used to connect to the underlying database.</span>
          </span>
        </param>
        <param name="selectCommand">
          <span data-ttu-id="2eedb-229">내부 데이터베이스에서 데이터를 검색하는 데 사용되는 SQL 쿼리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-229">The SQL query used to retrieve data from the underlying database.</span>
          </span>
          <span data-ttu-id="2eedb-230">SQL 쿼리가 매개 변수가 있는 SQL 문자열인 경우 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체를 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 추가해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-230">If the SQL query is a parameterized SQL string, you might need to add <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eedb-231">지정된 연결 문자열과 Select 명령을 사용하여 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-231">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class with the specified connection string and Select command.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-232">데이터베이스 제품 마다 다양 한 SQL 구문 사용 하므로 `selectCommand` 는 현재 사용 중인 ADO.NET 공급자를 식별 되는 종속 된 `providerName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-232">Because different database products use different varieties of SQL, the syntax of `selectCommand` depends on the current ADO.NET provider being used, which is identified by the `providerName` parameter.</span></span> <span data-ttu-id="2eedb-233">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-233">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="2eedb-234">예를 들어 공급자가 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-234">For example, if the provider is <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="2eedb-235">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-235">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or the <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="2eedb-236">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-236">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-237"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.</span><span class="sxs-lookup"><span data-stu-id="2eedb-237">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-238">
            <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드로 검색한 데이터를 데이터 소스 컨트롤에서 캐시하는 시간(초)을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-238">Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-239">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 작업의 결과를 캐시하는 시간(초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-239">The number of seconds that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> caches the results of a <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> operation.</span>
          </span>
          <span data-ttu-id="2eedb-240">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-240">The default is 0.</span>
          </span>
          <span data-ttu-id="2eedb-241">값은 음수일 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-241">The value cannot be negative.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-242"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-242">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="2eedb-243">데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-243">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="2eedb-244">캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-244">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2eedb-245"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성 캐시에 캐시 엔트리 이전의 데이터가 저장 되는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-245">The <xref:System.Web.UI.WebControls.SqlDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="2eedb-246">값이 0 무한정 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-246">A value of 0 indicates an infinitely long cache.</span></span>  
  
 <span data-ttu-id="2eedb-247">캐시의 동작 기간의 조합으로 결정 됩니다 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-247">The behavior of the cache is determined by a combination of the duration and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property.</span></span> <span data-ttu-id="2eedb-248">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 값을 <xref:System.Web.UI.WebControls.SqlDataSource> 첫 번째 데이터 검색 작업에 데이터를 캐시, 최대 시간으로 지정 된 기간 동안 메모리에 보관 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-248">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value, the <xref:System.Web.UI.WebControls.SqlDataSource> caches data on the first data retrieval operation, holds it in memory for, at most, the amount of time that is specified by <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property.</span></span> <span data-ttu-id="2eedb-249">메모리가 필요한 경우 데이터를 기간, 이전 해제 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-249">The data might be released before the duration time, if the memory is required.</span></span> <span data-ttu-id="2eedb-250">다음 작업 중에 캐시 한 다음 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-250">The cache is then refreshed during the next operation.</span></span> <span data-ttu-id="2eedb-251">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 데이터 소스 컨트롤은 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 포함 하는 시간 창을 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-251">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for each subsequent operation.</span></span> <span data-ttu-id="2eedb-252">해당 시간 동안 활동이 없는 경우 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 마지막 값 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-252">The cache expires, if there is no activity for a time that is equal to the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value since the last <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="2eedb-253">합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 경우에 데이터를 캐시할 수 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-253">The <xref:System.Web.UI.WebControls.SqlDataSource> control can cache data only when it is in <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span> <span data-ttu-id="2eedb-254"><xref:System.NotSupportedException> 예외를 throw를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 경우 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 로 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 및 캐싱도 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-254">A <xref:System.NotSupportedException> exception is thrown by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method, if the <xref:System.Web.UI.WebControls.SqlDataSource> control is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value and caching is also enabled.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-255">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-255">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="2eedb-256">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-256">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="2eedb-257">데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-257">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="2eedb-258">데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="2eedb-258">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-259">다음 코드 예제에는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤, 데이터 캐싱을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-259">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled.</span></span> <span data-ttu-id="2eedb-260"><xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 20 초로 설정 됩니다 되므로 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성이 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 기본적으로이 페이지의 사용자 값 새로운 데이터 20 초 마다 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-260">The <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> is set to 20 seconds and, because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value by default, users of this page will see fresh data every 20 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-261">기간과 결합될 때 데이터 소스 컨트롤에서 사용하는 캐시의 동작을 설명하는 캐시 만료 동작을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-261">Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-262">
            <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-262">One of the <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> values.</span>
          </span>
          <span data-ttu-id="2eedb-263">기본값은 <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-263">The default is the <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-264"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-264">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="2eedb-265">데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-265">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="2eedb-266">캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-266">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2eedb-267">캐시의 동작의 조합으로 결정 됩니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-267">The behavior of the cache is determined by a combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> settings.</span></span> <span data-ttu-id="2eedb-268">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 값을 <xref:System.Web.UI.WebControls.SqlDataSource> 첫 번째 데이터 검색 작업에 데이터를 캐시, 지정 된 시간 동안 메모리에 보관는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성을 다음 시간 후 삭제 하 고 경과 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-268">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value, the <xref:System.Web.UI.WebControls.SqlDataSource> caches data on the first data retrieval operation, holds it in memory for the amount of time that is specified by the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property, and then discards it after the time has lapsed.</span></span> <span data-ttu-id="2eedb-269">다음 작업 중에 캐시 한 다음 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-269">The cache is then refreshed during the next operation.</span></span> <span data-ttu-id="2eedb-270">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 데이터 소스 컨트롤은 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 포함 하는 시간 창을 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-270">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for each subsequent operation.</span></span> <span data-ttu-id="2eedb-271">해당 시간 동안 활동이 없는 경우 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 마지막 값 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-271">The cache expires, if there is no activity for a time that is equal to the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value since the last <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="2eedb-272">합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에서 데이터를 캐시할 수의 경우에만 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-272">The <xref:System.Web.UI.WebControls.SqlDataSource> control can cache data only when in the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span> <span data-ttu-id="2eedb-273"><xref:System.NotSupportedException> 예외를 throw를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 경우 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 로 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 및 캐싱도 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-273">A <xref:System.NotSupportedException> exception is thrown by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method, if the <xref:System.Web.UI.WebControls.SqlDataSource> control is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value and caching is also enabled.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-274">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-274">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="2eedb-275">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-275">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="2eedb-276">데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-276">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="2eedb-277">데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="2eedb-277">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-278">다음 코드 예제에는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤, 데이터 캐싱을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-278">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled.</span></span> <span data-ttu-id="2eedb-279">때문에 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 사용자가 새 데이터도 표시 되지 것입니다는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 값은 20 초.</span><span class="sxs-lookup"><span data-stu-id="2eedb-279">Because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, users will not see fresh data even though the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value is 20 seconds.</span></span> <span data-ttu-id="2eedb-280">캐시 된 데이터는 이후 마지막으로 페이지 로드 20 초 이상에 대 한 페이지에서 활동이 없는 경우에 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-280">The cached data is refreshed only if there is no activity on the page for more than 20 seconds since the last page load.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-281">데이터 소스 컨트롤에서 만든 모든 데이터 캐시 개체에 링크된 사용자 정의 키 종속성을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-281">Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</span>
          </span>
          <span data-ttu-id="2eedb-282">이 키가 만료되면 모든 캐시 개체도 명시적으로 만료됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-282">All cache objects are explicitly expired when the key is expired.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-283">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 만든 모든 캐시 개체를 식별하는 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-283">A key that identifies all cache objects created by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-284"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-284">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="2eedb-285">데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-285">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="2eedb-286">캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-286">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2eedb-287">설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> 속성에서 만든 모든 캐시 항목 간의 종속성을 만들려면는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤과 키입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-287">You can set the <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> property to create a dependency between all cache entries that are created by the <xref:System.Web.UI.WebControls.SqlDataSource> control and the key.</span></span> <span data-ttu-id="2eedb-288">키를 만료 하 여 언제 든 지 모든 캐시 항목을 만료 프로그래밍 방식으로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-288">You can programmatically expire all the cache entries at any time by expiring the key.</span></span>  
  
 <span data-ttu-id="2eedb-289">합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에서 데이터를 캐시할 수의 경우에만 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-289">The <xref:System.Web.UI.WebControls.SqlDataSource> control can cache data only when in the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span> <span data-ttu-id="2eedb-290"><xref:System.NotSupportedException> 예외를 throw를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 경우 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 로 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 및 캐싱도 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-290">A <xref:System.NotSupportedException> exception is thrown by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method, if the <xref:System.Web.UI.WebControls.SqlDataSource> control is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value and caching is also enabled.</span></span>  
  
 <span data-ttu-id="2eedb-291">모든 조합에 대 한 고유 캐시 엔트리 만들어집니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-291">A unique cache entry is created for every combination of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, and <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> properties.</span></span> <span data-ttu-id="2eedb-292">여러 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 같은 캐시 엔트리 시나리오에서 사용할 수 컨트롤 같은 기본 데이터베이스에서 동일한 데이터를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-292">Multiple <xref:System.Web.UI.WebControls.SqlDataSource> controls can use the same cache entries in scenarios where the controls load the same data from the same underlying database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-293">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-293">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="2eedb-294">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-294">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="2eedb-295">데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-295">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="2eedb-296">데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="2eedb-296">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-297">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 포함된 매개 변수가 <see langword="null" />일 때 데이터 검색 작업이 취소되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-297">Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection evaluates to <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-298">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 포함된 매개 변수가 <see langword="true" />일 때 데이터 검색 작업이 취소되는 경우 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-298">
              <see langword="true" /> if a data retrieval operation is canceled when a parameter contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection evaluated to <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2eedb-299">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-299">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-300">값을 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-300">The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-301">작업 시간 동안 내부 데이터베이스의 행 데이터가 변경된 경우 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 업데이트 및 삭제를 수행하는 방법을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-301">Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-302">
            <see cref="T:System.Web.UI.ConflictOptions" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-302">One of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span>
          </span>
          <span data-ttu-id="2eedb-303">기본값은 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-303">The default is the <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-304">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성 이전 및 새 값에 대 한 매개 변수에 적용 되었는지 여부를 결정 합니다 `Update` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-304">The <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property determines whether parameters for old and new values are applied to the `Update` method.</span></span> <span data-ttu-id="2eedb-305">예를 들어 명령입니다로 지정 된를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성에서 반환을 <xref:System.Data.DataTable> 열을 사용 하 여 개체 `Name` 및 `Number` 및 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 에 대 한 매개 변수는 생성 값 `Name` 하 고 `Number` 에 대 한는 `Update` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-305">For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property returns a <xref:System.Data.DataTable> object with the columns `Name` and `Number` and the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> value, parameters are created for `Name` and `Number` for the `Update` method.</span></span> <span data-ttu-id="2eedb-306">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 에 대 한 매개 변수는 생성 값 `Name`, `Number`, `original_Name`, 및 `original_Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-306">If the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`.</span></span> <span data-ttu-id="2eedb-307">(원래 값에 대 한 정확한 매개 변수 이름에 따라 달라 집니다는 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성입니다.) <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 다음 경우를 결정 합니다 `Update` 에 지정 된 메서드는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성이 일치 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-307">(The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property.) The <xref:System.Web.UI.WebControls.SqlDataSource> control then determines if the `Update` method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property has parameters that match.</span></span>  
  
 <span data-ttu-id="2eedb-308">동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어 하려면 데이터 저장소를 사용 하는 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-308">Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="2eedb-309">예를 들어, 하나의 클라이언트 데이터를 읽고 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 하는 동안 사용자에 게 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-309">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="2eedb-310">두 사용자가 데이터를 업데이트 하 데이터 저장소에 제출 하는 경우 두 클라이언트가 모두 동일한 데이터에 대해 다른 값을 업데이트할 수 있으므로 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-310">If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.</span></span> <span data-ttu-id="2eedb-311">이 충돌로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-311">This is considered a conflict.</span></span> <span data-ttu-id="2eedb-312">설정 하 여는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 합니다 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값에 `Update` 메서드 수 충돌을 감지 하 고 필요에 따라 처리 하는 원래 데이터 원본에 이전 및 새 값을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-312">By setting the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, your `Update` method can then compare the old and new values to the original data source to detect conflicts and handle them, as necessary.</span></span>  
  
 <span data-ttu-id="2eedb-313"><xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-313">The <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-314">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 내부 데이터베이스에 연결하는 데 사용하는 ADO.NET 공급자 관련 연결 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-314">Gets or sets the ADO.NET provider–specific connection string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-315">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 해당 연결 문자열이 나타내는 SQL 데이터베이스에 연결하는 데 사용하는 .NET Framework 데이터 공급자 관련 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-315">A .NET Framework data provider–specific string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to connect to the SQL database that it represents.</span>
          </span>
          <span data-ttu-id="2eedb-316">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-316">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-317"><xref:System.Web.UI.WebControls.SqlDataSource> ADO.NET 공급자는 다양 한 제어를 사용할 수 있으며 기본 데이터 원본에 연결 하는 데 사용 되는 연결 문자열의 구문은 공급자별으로 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-317">The <xref:System.Web.UI.WebControls.SqlDataSource> control can be used with a variety of ADO.NET providers and the syntax of the connection string that is used to connect to an underlying data source is specific to the provider.</span></span>  
  
 <span data-ttu-id="2eedb-318">구성 하는 경우를 <xref:System.Web.UI.WebControls.SqlDataSource> 설정한 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성을 데이터베이스의 형식 (기본값은 <xref:System.Data.SqlClient?displayProperty=nameWithType>)를 설정 하면를 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성에 연결 하기 위해 필요한 정보를 포함 하는 연결 문자열을 데이터베이스.</span><span class="sxs-lookup"><span data-stu-id="2eedb-318">When you configure a <xref:System.Web.UI.WebControls.SqlDataSource> control, you set the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property to the type of database (the default is <xref:System.Data.SqlClient?displayProperty=nameWithType>), and you set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to a connection string that includes information that is required in order to connect to the database.</span></span> <span data-ttu-id="2eedb-319">연결 문자열의 내용을 데이터 소스 컨트롤에 액세스 하는 데이터베이스의 유형에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-319">The contents of a connection string differ depending on what type of database the data source control is accessing.</span></span> <span data-ttu-id="2eedb-320">예를 들어를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에는 서버 이름, 데이터베이스 (카탈로그) 이름 및 SQL Server에 연결할 때 사용자를 인증 하는 방법에 대 한 정보에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-320">For example, the <xref:System.Web.UI.WebControls.SqlDataSource> control requires a server name, database (catalog) name, and information about how to authenticate the user when connecting to a SQL Server.</span></span> <span data-ttu-id="2eedb-321">연결 문자열의 내용에 대 한 정보를 참조 하세요.는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 속성에 대 한는 <xref:System.Data.SqlClient.SqlConnection> 클래스 <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> 속성에 대 한 합니다 <xref:System.Data.OracleClient.OracleConnection> 클래스 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성에 대 한를 <xref:System.Data.OleDb.OleDbConnection> 클래스 또는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 에 대 한 속성을 <xref:System.Data.Odbc.OdbcConnection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-321">For information about the contents of connection strings, see the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property for the <xref:System.Data.SqlClient.SqlConnection> class, <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> property for the <xref:System.Data.OracleClient.OracleConnection> class, <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property for the <xref:System.Data.OleDb.OleDbConnection> class, or the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property for the <xref:System.Data.Odbc.OdbcConnection> class.</span></span>  
  
 <span data-ttu-id="2eedb-322">변경 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-322">If you change the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> control to rebind.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-323">연결 문자열을 저장 하는 방법에 대 한 내용은 [방법: 연결 문자열 보안 컨트롤을 사용 하 여 데이터 원본 때](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-323">For information about storing a connection string, see [How To: Secure Connection Strings when Using Data Source Controls](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-324">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-324">This section contains two code examples.</span></span> <span data-ttu-id="2eedb-325">첫 번째 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성을 Microsoft SQL Server 데이터베이스에 연결 하 고 결과 표시 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-325">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to connect to a Microsoft SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-326">두 번째 코드 예제는 더 복잡 한 시나리오를 보여 줍니다. 여기서는 <xref:System.Web.UI.WebControls.SqlDataSource> 표시 하 고 암호로 보호 된 Microsoft Access 데이터베이스의 데이터를 업데이트할 컨트롤을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-326">The second code example demonstrates a more complex scenario, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Microsoft Access database.</span></span> <span data-ttu-id="2eedb-327">각각의 경우에는 `connectionStrings` Web.config 파일의 요소는 표시 된 먼저 뒤에 포함 된 ASP.NET 페이지는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-327">In each case, the `connectionStrings` element of the Web.config file is shown first, followed by the ASP.NET page that contains the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 <span data-ttu-id="2eedb-328">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성을 SQL Server 데이터베이스에 연결 하 고 결과 표시 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-328">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to connect to a SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-329">다음 코드 예제에서는 앞의 코드 예제, 보다 복잡 한 시나리오를 보여 줍니다. 여기서는 <xref:System.Web.UI.WebControls.SqlDataSource> 암호로 보호 된 액세스 데이터베이스에 데이터 표시 및 업데이트 컨트롤을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-329">The following code example demonstrates a more complex scenario than the preceding code example, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Access database.</span></span> <span data-ttu-id="2eedb-330">때문에 <xref:System.Web.UI.WebControls.SqlDataSource> 액세스와 함께 사용 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성을 <xref:System.Data.OleDb> 공급자 및 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> UNC 공유 액세스 데이터베이스에 대 한 연결 문자열 속성.</span><span class="sxs-lookup"><span data-stu-id="2eedb-330">Because the <xref:System.Web.UI.WebControls.SqlDataSource> is used with Access, the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb> provider, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to an appropriate connection string for a UNC-shared Access database.</span></span> <span data-ttu-id="2eedb-331"><xref:System.Web.UI.WebControls.GridView> 컨트롤에는 배송 날짜를 사용 하 여 주문이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-331">A <xref:System.Web.UI.WebControls.GridView> control displays orders with shipment dates.</span></span> <span data-ttu-id="2eedb-332">적절 한 확인란을 선택한 다음 클릭 하 여 순서를 업데이트할 수 있습니다 합니다 **업데이트** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-332">You can update an order by checking the appropriate check box, and then clicking the **Update** button.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-333">이 예제는 설명 위한 용도로 사용 되는 일반 텍스트로 암호를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-333">This example includes a password in plain text only for illustration purposes.</span></span> <span data-ttu-id="2eedb-334">프로덕션 응용 프로그램에서 암호를 포함 하는 연결 문자열을 암호화 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-334">In a production application, connection strings that include passwords should be encrypted.</span></span> <span data-ttu-id="2eedb-335">자세한 내용은 [연결 정보 보호](~/docs/framework/data/adonet/protecting-connection-information.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-335">For more information, see [Protecting Connection Information](~/docs/framework/data/adonet/protecting-connection-information.md).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView&#xA;override this.CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="sqlDataSource.CreateDataSourceView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">
          <span data-ttu-id="2eedb-336">데이터 소스 뷰의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-336">The name of the data source view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eedb-337">데이터 소스 컨트롤과 연결된 데이터 소스 뷰 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-337">Creates a data source view object that is associated with the data source control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-338">
            <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />와 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-338">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-339">파생 된 클래스는 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스에서 재정의할 수는 <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> 강력 하 게 반환 하려면 데이터 원본 뷰 개체를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-339">Classes that derive from the <xref:System.Web.UI.WebControls.SqlDataSource> class can override the <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> method to return strongly typed data source view objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceMode : System.Web.UI.WebControls.SqlDataSourceMode with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-340">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 데이터를 페치하는 데 사용할 데이터 검색 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-340">Gets or sets the data retrieval mode that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to fetch data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-341">
            <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-341">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> values.</span>
          </span>
          <span data-ttu-id="2eedb-342">기본값은는 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-342">The default is the  <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-343">데이터 검색 모드를 식별 하는 방법을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 기본 데이터베이스에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-343">The data retrieval mode identifies how a <xref:System.Web.UI.WebControls.SqlDataSource> control retrieves data from the underlying database.</span></span>  
  
 <span data-ttu-id="2eedb-344">때를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값 데이터가 로드 되는 <xref:System.Data.DataSet> 개체 및 서버에서 메모리에 저장 된.</span><span class="sxs-lookup"><span data-stu-id="2eedb-344">When the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value, data is loaded into a <xref:System.Data.DataSet> object and stored in memory on the server.</span></span> <span data-ttu-id="2eedb-345">이 시나리오와 같은 사용자 인터페이스 컨트롤 위치를 통해 <xref:System.Web.UI.WebControls.GridView>, 정렬, 필터링 및 페이징 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-345">This enables scenarios where user interface controls, such as <xref:System.Web.UI.WebControls.GridView>, offer sorting, filtering, and paging capabilities.</span></span>  
  
 <span data-ttu-id="2eedb-346">때를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 데이터를 검색 하는 <xref:System.Data.IDataReader> 개체는 읽기 전용, 정방향 전용 커서는.</span><span class="sxs-lookup"><span data-stu-id="2eedb-346">When the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value, data is retrieved by a <xref:System.Data.IDataReader> object, which is a forward-only, read-only cursor.</span></span> <span data-ttu-id="2eedb-347">특정 유형의 합니다 <xref:System.Data.IDataReader> 개체 순 데이터 공급자에 따라 달라 집니다는 <xref:System.Web.UI.WebControls.SqlDataSource> 식별 되는 사용 하 여는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="2eedb-347">The specific type of the <xref:System.Data.IDataReader> object depends on the NET data provider that the <xref:System.Web.UI.WebControls.SqlDataSource> uses, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="2eedb-348">기본적으로 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 Microsoft SQL Server에 대 한 공급자를 사용 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>, 데이터 판독기가 및는 <xref:System.Data.SqlClient.SqlDataReader> 개체.</span><span class="sxs-lookup"><span data-stu-id="2eedb-348">By default, the <xref:System.Web.UI.WebControls.SqlDataSource> control uses the provider for Microsoft SQL Server, the <xref:System.Data.SqlClient?displayProperty=nameWithType>, and the data reader is a <xref:System.Data.SqlClient.SqlDataReader> object.</span></span>  
  
 <span data-ttu-id="2eedb-349">변경 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할.</span><span class="sxs-lookup"><span data-stu-id="2eedb-349">If you change the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> to rebind.</span></span>  
  
 <span data-ttu-id="2eedb-350">값을 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-350">The value of the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-351">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 사용 하는 시나리오에 대 한 값을 <xref:System.Web.UI.WebControls.ListBox> 없습니다 정렬 해야 하는 컨트롤, 페이징, 필터링 또는.</span><span class="sxs-lookup"><span data-stu-id="2eedb-351">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value for a scenario with a <xref:System.Web.UI.WebControls.ListBox> control that requires no sorting, paging, nor filtering.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2eedb-352">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> 속성이 <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />에 정의된 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-352">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property is not one of the values defined in the <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="sqlDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-353">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> 컬렉션에 있는 매개 변수를 사용하여 삭제 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-353">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-354">내부 데이터베이스에서 삭제되는 행 수를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-354">A value that represents the number of rows deleted from the underlying database.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-355">삭제 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-355">Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event.</span></span> <span data-ttu-id="2eedb-356">매개 변수의 값을 확인 하 고 삭제 작업 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-356">You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete operation.</span></span>  
  
 <span data-ttu-id="2eedb-357">작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2eedb-357">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event.</span></span> <span data-ttu-id="2eedb-358">모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-358">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2eedb-359">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드를 프로그래밍 방식 액세스를 위해 제공 됩니다는 `Delete` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-359">The <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method is provided for programmatic access to the `Delete` method.</span></span> <span data-ttu-id="2eedb-360">경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 데이터 바인딩된 컨트롤을 사용 하 여 연결, 데이터 바인딩된 컨트롤을 자동으로 호출 합니다 **삭제** 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-360">If the <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with a data-bound control, the data-bound control automatically calls the **Delete** method.</span></span>  
  
 <span data-ttu-id="2eedb-361"><xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-361">The <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="2eedb-362">작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드를 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 값 및 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대해 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-362">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> values, and then executes the <xref:System.Data.Common.DbCommand> against the underlying database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-363">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스에서 주문을 삭제 하는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-363">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database.</span></span> <span data-ttu-id="2eedb-364">데이터를 Orders 테이블에서 검색 하 고 표시 하는 처음에 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-364">Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-365">명시적으로 선언 해야 합니다는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성과 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 와 같은 데이터 바인딩된 컨트롤을 사용 하는 경우 메서드는 <xref:System.Web.UI.WebControls.DropDownList> (컨트롤과 달리 같은 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>는 자동으로 채울는 매개 변수 및 호출 된 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 데이터 소스 컨트롤에서 메서드).</span><span class="sxs-lookup"><span data-stu-id="2eedb-365">You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control).</span></span> <span data-ttu-id="2eedb-366">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 이벤트 개인에 게 위임 `OnDelete` 명시적으로 호출 하는 이벤트 처리기를 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드의 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-366">In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2eedb-367">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-367">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-368">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 내부 데이터베이스에서 데이터를 삭제하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-368">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to delete data from the underlying database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-369">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 데이터를 삭제하는 데 사용하는 SQL 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-369">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to delete data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-370">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-370">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> represents an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.</span></span>  
  
 <span data-ttu-id="2eedb-371">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-371">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="2eedb-372">SQL 문자열 매개 변수가 있는 쿼리 또는 명령을 이면 매개 변수 구문의 또한 사용 중인 ADO.NET 공급자에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-372">If the SQL string is a parameterized query or command, the syntax of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="2eedb-373">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스의 매개 변수 구문은 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="2eedb-373">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the syntax of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="2eedb-374">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-374">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="2eedb-375">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-375">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-376"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터베이스 저장된 프로시저를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-376">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property can be an SQL string or the name of a stored procedure, if the database supports stored procedures.</span></span>  
  
 <span data-ttu-id="2eedb-377"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-377">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-378">보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성은 뷰 상태에 저장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-378">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property is not stored in view state.</span></span> <span data-ttu-id="2eedb-379">클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-379">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-380">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스의 Orders 테이블에서 주문을 삭제 하는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-380">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table.</span></span> <span data-ttu-id="2eedb-381">데이터는 Orders 테이블에서 검색 되어 표시를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-381">Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-382"><xref:System.Web.UI.WebControls.GridView> 렌더링을 **삭제** 자동으로 단추 때를 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`.</span><span class="sxs-lookup"><span data-stu-id="2eedb-382">The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`.</span></span> <span data-ttu-id="2eedb-383">또한 때를 **삭제** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 채웁니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션과 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-383">Additionally, when the **Delete** button is clicked, the <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.</span></span> <span data-ttu-id="2eedb-384">마지막으로,이 코드 예제에서는 데이터를 삭제 하기 때문에 이벤트 처리기가 추가 되기 전에 디스크에 데이터베이스를 백업 하려고 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 작업이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-384">Finally, because this code example deletes data, an event handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-385">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-385">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property is an SQL statement or the name of a stored procedure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-386">
            <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-386">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span>
          </span>
          <span data-ttu-id="2eedb-387">기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-387">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-388"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-388">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-389">삭제 작업이 완료된 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-389">Occurs when a delete operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-390">처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 삭제 작업이 완료 된 후의 값을 검사 하는 이벤트 매개 변수를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-390">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event to examine the values of output parameters after a delete operation has completed.</span></span> <span data-ttu-id="2eedb-391">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-391">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2eedb-392">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-392">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-393">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체에서 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-393">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-394">
            <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-394">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-395">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-395">If the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-396">했는지 없습니다 <xref:System.Web.UI.WebControls.BoundField> 에 바인딩할 수 있는 데이터 바인딩된 컨트롤의 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 모든 매개 변수 이름과 일치 하는 이름이 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션.</span><span class="sxs-lookup"><span data-stu-id="2eedb-396">Make sure that no <xref:System.Web.UI.WebControls.BoundField> controls in the data-bound control that you bind to the <xref:System.Web.UI.WebControls.SqlDataSource> control have names that match any parameter names in the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-397">바인딩된 필드는 SQL 명령에서 "매개 변수가 제공 되지 않았습니다." 오류를 제외 하는 대로 동일한 이름을 가진 매개 변수가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-397">Parameters that have the same name as bound fields are excluded from the SQL command, and a "parameter was not supplied" error might result.</span></span>  
  
 <span data-ttu-id="2eedb-398">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 매개 변수 데이터의 이전 및 새 값에 대해 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-398">If the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the parameters are created for both the old and new values of the data.</span></span> <span data-ttu-id="2eedb-399">에 따라 이전 값에 대 한 매개 변수는 명명 된 된 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-399">The parameters for the old values are named according to the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property.</span></span>  
  
 <span data-ttu-id="2eedb-400">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-400">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection might be important.</span></span> <span data-ttu-id="2eedb-401">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-401">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="2eedb-402">합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자를 사용 하 여 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-402">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.</span></span> <span data-ttu-id="2eedb-403">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-403">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-404"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-404">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-405">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-405">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-406">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-406">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-407">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-407">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-408">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스에서 주문을 삭제 하는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-408">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database.</span></span> <span data-ttu-id="2eedb-409">데이터를 Orders 테이블에서 검색 하 고 표시 하는 처음에 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-409">Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-410">명시적으로 선언 해야 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성 및 호출 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 와 같은 데이터 바인딩된 컨트롤을 사용 하는 경우 메서드 <xref:System.Web.UI.WebControls.DropDownList> (다른 컨트롤과 달리와 같은 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>, 매개 변수 자동 채우기는 및 호출 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 데이터 소스 컨트롤에서).</span><span class="sxs-lookup"><span data-stu-id="2eedb-410">You must explicitly declare <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method when using data-bound controls, such as <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> on a data source control).</span></span> <span data-ttu-id="2eedb-411">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 이벤트 개인에 게 위임 `OnDelete` 명시적으로 호출 하는 이벤트 처리기를 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드의 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-411">In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-412">삭제 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-412">Occurs before a delete operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-413">처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 삭제 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-413">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.</span></span>  
  
 <span data-ttu-id="2eedb-414">데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-414">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="2eedb-415">직접 호출 하 여 작업을 취소할 수 없습니다 따라서를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체.</span><span class="sxs-lookup"><span data-stu-id="2eedb-415">Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="2eedb-416">설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-416">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="2eedb-417">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-417">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-418">다음 코드 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 하기 전에 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 작업이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-418">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation occurs.</span></span> <span data-ttu-id="2eedb-419">이 예제에서는 Northwind 데이터베이스에서 데이터를 삭제 하기 때문에 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 처리기를 추가 하기 전에 디스크에 데이터베이스를 백업 하려고 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 작업이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-419">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-420">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 데이터 캐싱이 활성화되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-420">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has data caching enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-421">데이터 소스 컨트롤에서 데이터 캐싱을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-421">
              <see langword="true" /> if data caching is enabled for the data source control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2eedb-422">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-422">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-423"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-423">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="2eedb-424">데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-424">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="2eedb-425">캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-425">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="2eedb-426"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이로 설정 되어 `true` 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성 캐시를 검색 하기 전에 데이터를 저장 하는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다는 새 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-426">The <xref:System.Web.UI.WebControls.SqlDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before retrieving a fresh set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-427">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-427">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="2eedb-428">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-428">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="2eedb-429">데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-429">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="2eedb-430">데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="2eedb-430">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-431">다음 코드 예제에는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤, 데이터 캐싱을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-431">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled.</span></span> <span data-ttu-id="2eedb-432">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이 `true` 하며 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 20 초로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-432">The <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> is set to 20 seconds.</span></span> <span data-ttu-id="2eedb-433">때문에 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 기본적으로이 페이지의 사용자 필드 새로운 데이터 20 초 마다 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-433">Because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> field by default, users of this page will see fresh data every 20 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2eedb-434">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />에서 캐싱 기능을 지원하지 않을 때 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 속성이 <see langword="true" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-434">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> property is set to <see langword="true" /> when caching is not supported by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-435">
            <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드가 호출될 때 적용되는 필터링 식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-435">Gets or sets a filtering expression that is applied when the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-436">
            <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드를 사용하여 데이터가 검색될 때 적용되는 필터링 식을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-436">A string that represents a filtering expression applied when data is retrieved using the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-437"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성 값은 형식 문자열 식 (에 의해 처리 되는 문자열을 <xref:System.String.Format%2A?displayProperty=nameWithType> 메서드)의 값을 사용 하는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 문자열에 포함 된 대체 매개 변수 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-437">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property value is a format string expression (a string that is processed by the <xref:System.String.Format%2A?displayProperty=nameWithType> method) that uses the values in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> collection for any substitution parameters included in the string.</span></span> <span data-ttu-id="2eedb-438">필터 식 구문은에 허용 되는 동일한 구문을 <xref:System.Data.DataView.RowFilter%2A> 속성을 필터 식에 적용 되므로 <xref:System.Data.DataView.RowFilter%2A> 의 속성을 <xref:System.Data.DataView> 실행에서 반환 되는 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-438">The filter expression syntax is the same syntax that is accepted by the <xref:System.Data.DataView.RowFilter%2A> property, because the filter expression is applied to the <xref:System.Data.DataView.RowFilter%2A> property of the <xref:System.Data.DataView> object that is returned from executing the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.</span></span> <span data-ttu-id="2eedb-439">자세한 내용은 <xref:System.Data.DataColumn.Expression%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-439">For more information, see <xref:System.Data.DataColumn.Expression%2A>.</span></span>  
  
 <span data-ttu-id="2eedb-440">매개 변수를 추가 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션 형식 문자열 자리 표시자를 포함할 수도 있습니다 (예를 들어 `"{0}")` 매개 변수 값에 대 한 대체 식에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-440">If you add parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection, you can also include format string placeholders (for example, `"{0}")` in the expression to substitute for parameter values.</span></span> <span data-ttu-id="2eedb-441">매개 변수의 인덱스에 따라 자리 표시자는는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-441">The placeholders are replaced according to the index of the parameter in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-442">경우에 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 수집은 `null`, 개체를 빈 문자열로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-442">If an object in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection is `null`, the object will be replaced by an empty string.</span></span>  
  
 <span data-ttu-id="2eedb-443">매개 변수는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-443">You can include parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span> <span data-ttu-id="2eedb-444">매개 변수 문자열 또는 문자 형식이 면 매개 변수를 작은따옴표로 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-444">If the parameter is a string or character type, enclose the parameter in single quotation marks.</span></span> <span data-ttu-id="2eedb-445">매개 변수가 숫자 형식인 경우 따옴표가 필요 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-445">Quotation marks are not required, if the parameter is a numeric type.</span></span> <span data-ttu-id="2eedb-446">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션에 있는 자리 표시자에 대 한 계산 되는 매개 변수를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-446">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span>  
  
 <span data-ttu-id="2eedb-447">합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 데이터 필터링을 지원의 경우에만 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-447">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span>  
  
 <span data-ttu-id="2eedb-448"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-448">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-449">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터링 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 문자열 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-449">The following code example demonstrates how to retrieve data from the Northwind database and filter it using a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> string and the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-450"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성에는 언제 든 지 적용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 데이터를 검색할 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-450">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="2eedb-451">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 에 포함 된 필터 매개 변수에 대 한 자리 표시자를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-451">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-452">또한 filter 매개 변수는를 <xref:System.Web.UI.WebControls.ControlParameter> 바인딩되는 개체를 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-452">In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-453">때문에 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에 해당 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 속성이로 설정 `true`에 대 한 선택 변경 합니다 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤이 서버에 대 한 정보를 게시 하는 페이지 및 <xref:System.Web.UI.WebControls.GridView> 데이터 원본에 바인딩할 컨트롤 새 필터를 사용 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-453">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the selection for the <xref:System.Web.UI.WebControls.DropDownList> control causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2eedb-454">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> 속성이 설정되었고 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> 모드인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-454">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> property was set and the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-455">필터 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-455">Occurs before a filter operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-456">처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 하기 전에 필터 매개 변수 값에 대 한 유효성 검사 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 필터 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-456">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs a filter operation.</span></span> <span data-ttu-id="2eedb-457">취소할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 설정 하 여 메서드를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> 개체를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-457">You can cancel the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`.</span></span> <span data-ttu-id="2eedb-458">경우에 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-458">The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property is set.</span></span>  
  
 <span data-ttu-id="2eedb-459"><xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> 에 위임 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> 의 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-459">The <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> event delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> event of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 <span data-ttu-id="2eedb-460">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-460">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-461">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-461">Gets a collection of parameters that are associated with any parameter placeholders that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-462">
            <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-462">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-463">매개 변수를 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션에 지정 된 매개 변수를 사용 하 여 연결 된 된 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-463">The parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span> <span data-ttu-id="2eedb-464">에 지정 된 매개 변수 자리 표시자를 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성의 매개 변수 개체를 순서 대로 일치 됩니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션 때는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-464">The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property are matched by order to parameter objects in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection when the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is called.</span></span>  
  
 <span data-ttu-id="2eedb-465"><xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-465">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-466">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-466">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-467">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-467">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-468">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-468">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-469">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터에 대 한 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-469">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="2eedb-470"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 언제 든 지 적용 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 데이터를 검색할 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-470">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied anytime the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="2eedb-471">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성에 포함 된 필터 매개 변수에 대 한 자리 표시자를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-471">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-472">또한 filter 매개 변수는를 <xref:System.Web.UI.WebControls.ControlParameter> 바인딩되는 개체를 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-472">In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-473">때문에 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에 해당 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 속성이로 설정 `true`, 변경 사항이 발생 합니다 <xref:System.Web.UI.WebControls.DropDownList> 선택 하면 페이지가 서버에 대 한 정보를 게시 및 <xref:System.Web.UI.WebControls.GridView> 사용 하 여 데이터 소스 컨트롤에 바인딩할 컨트롤은 새 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-473">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory&#xA;override this.GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory" Usage="sqlDataSource.GetDbProviderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-474">
            <see cref="T:System.Data.Common.DbProviderFactory" /> 속성으로 식별되는 ADO.NET 공급자에 연결된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-474">Returns the <see cref="T:System.Data.Common.DbProviderFactory" /> object that is associated with the ADO.NET provider that is identified by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-475">식별된 ADO.NET 공급자를 나타내는 <see cref="T:System.Data.Common.DbProviderFactory" />를 반환하며, 설정된 공급자가 없는 경우에는 <see cref="N:System.Data.SqlClient" />의 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-475">A <see cref="T:System.Data.Common.DbProviderFactory" /> that represents the identified ADO.NET provider; otherwise, and instance of the <see cref="N:System.Data.SqlClient" />, if no provider is set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-476"><xref:System.Data.Common.DbProviderFactory> 속성은 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터베이스와 상호 작용할 때 올바른 ADO.NET 연결, 명령 및 매개 변수 개체를 만들기 위해 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-476">The <xref:System.Data.Common.DbProviderFactory> property is used by the <xref:System.Web.UI.WebControls.SqlDataSource> control to create the correct ADO.NET connection, command, and parameter objects when interacting with a database.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="sqlDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">
          <span data-ttu-id="2eedb-477">검색할 뷰의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-477">The name of the view to retrieve.</span>
          </span>
          <span data-ttu-id="2eedb-478">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />는 한 개의 뷰만 지원하기 때문에 <c>viewName</c>은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-478">Because the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> supports only one view, <c>viewName</c> is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eedb-479">데이터 소스 컨트롤과 연결된 명명된 데이터 소스 뷰를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-479">Gets the named data source view that is associated with the data source control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-480">
            <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />와 연결된 "Table"이라는 이름의 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-480">The <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> named "Table" that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-481"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 하나의 데이터 원본 뷰를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-481">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports only one data source view.</span></span> <span data-ttu-id="2eedb-482">모든 데이터 원본 뷰 개체와 마찬가지로 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체 데이터 소스 컨트롤과 연결 된 해당 기능을 정의 기본 데이터베이스에서 데이터를 검색 하는 데 필요한 이며 정렬과 같은 작업을 수행 하는 모든 작업을 수행 합니다. 삽입, 삭제 및 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-482">As with all data source view objects, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the data source control defines its capabilities, performs all work that is necessary to retrieve data from the underlying database, and performs operations, such as sorting, inserting, deleting, and updating.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2eedb-483">
            <paramref name="viewName" />이 <see langword="null" />이거나 <c>Table</c>이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-483">
              <paramref name="viewName" /> is <see langword="null" /> or something other than <c>Table</c>.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="sqlDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-484">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤과 연결된 뷰 개체 목록을 나타내는 이름의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-484">Gets a collection of names representing the list of view objects that are associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-485">
            <see cref="T:System.Collections.ICollection" />와 연결된 뷰의 이름이 들어 있는 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-485">An <see cref="T:System.Collections.ICollection" /> that contains the names of the views associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-486">합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 명명 된 해당 기본 데이터에 대해 하나의 뷰만 지원 `"Table"`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-486">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports only one view on its underlying data, named `"Table"`.</span></span> <span data-ttu-id="2eedb-487"><xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> 메서드는이 보기 이름의 단일 요소 컬렉션을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-487">The <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> method returns a single-element collection of this one view name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="sqlDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-488">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> 컬렉션에 있는 매개 변수를 사용하여 삽입 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-488">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-489">내부 데이터베이스로 삽입되는 행 수를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-489">A value that represents the number of rows inserted into the underlying database.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-490">삽입 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-490">Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event.</span></span> <span data-ttu-id="2eedb-491">매개 변수의 값을 확인 하 고 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-491">You can handle this event to examine the values of the parameters and to perform any preprocessing before the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operation.</span></span> <span data-ttu-id="2eedb-492">삽입 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드 개체는 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 속성을 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-492">To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds an <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span>  
  
 <span data-ttu-id="2eedb-493">작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2eedb-493">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event.</span></span> <span data-ttu-id="2eedb-494">모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-494">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2eedb-495">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드를 프로그래밍 방식 액세스를 위해 제공 됩니다는 `Insert` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-495">The <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method is provided for programmatic access to the `Insert` method.</span></span> <span data-ttu-id="2eedb-496">경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 데이터 바인딩된 컨트롤을 사용 하 여 연결, 데이터 바인딩된 컨트롤을 자동으로 호출 된 `Insert` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-496">If the <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with a data-bound control, the data-bound control automatically calls the `Insert` method.</span></span>  
  
 <span data-ttu-id="2eedb-497"><xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-497">The <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-498">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-498">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-499">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-499">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-500">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-500">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-501">다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-501">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="2eedb-502">데이터 테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-502">The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-503">값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-503">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="2eedb-504">경우는 **삽입** 단추를 클릭 하면, 지정 된 값을 데이터베이스에 삽입 되 고는 <xref:System.Web.UI.WebControls.DropDownList> 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-504">When the **Insert** button is clicked, the specified values are inserted into the database, and then the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-505">이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 및 값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-505">This example includes a text box that accepts user input, which is a potential security threat and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="2eedb-506">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-506">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-507">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-507">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-508">이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-508">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="2eedb-509">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-509">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2eedb-510">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-510">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-511">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 내부 데이터베이스에 데이터를 삽입하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-511">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to insert data into the underlying database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-512">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 데이터를 삽입하는 데 사용하는 SQL 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-512">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to insert data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-513">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-513">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> represents either an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="2eedb-514">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-514">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="2eedb-515">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-515">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="2eedb-516">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="2eedb-516">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="2eedb-517">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-517">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="2eedb-518">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-518">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-519"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 데이터 원본에서 저장된 프로시저를 지 원하는 경우 SQL 문자열 또는 저장된 프로시저의 이름일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-519">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="2eedb-520">에 위임 하는이 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-520">This property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-521">보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성 저장 되지 않습니다 보기 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-521">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property is not stored is view state.</span></span> <span data-ttu-id="2eedb-522">클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-522">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-523">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-523">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-524">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-524">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-525">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-525">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-526">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-526">This section contains two code examples.</span></span> <span data-ttu-id="2eedb-527">첫 번째 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-527">The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="2eedb-528">두 번째 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 제어에 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 컨트롤 형태로 새 레코드를 삽입 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-528">The second code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row into the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-529">이러한 예제에는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-529">These examples show how to use declarative syntax for data access.</span></span> <span data-ttu-id="2eedb-530">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-530">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="2eedb-531">다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-531">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="2eedb-532">데이터 테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-532">The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-533">값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-533">You can add new records by entering values into the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="2eedb-534">경우는 **삽입** 단추를 클릭 하면, 지정된 된 값은 데이터베이스에 삽입 및 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-534">When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-535">잠재적인 보안 위협을 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-535">This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="2eedb-536">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-536">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-537">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-537">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-538">다음 코드 예제에는 SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 컨트롤 형태로 새 레코드를 삽입 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-538">The following code example demonstrates how to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="2eedb-539">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-539">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2eedb-540"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 의 선택된 된 행 되도록 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-540">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="2eedb-541">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-541">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="2eedb-542">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-542">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="2eedb-543">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-543">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="2eedb-544">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-544">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="2eedb-545">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-545">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="2eedb-546">마지막으로 하 여 데이터베이스에 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 됩니다 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-546">Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-547">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-547">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property is an SQL statement or the name of a stored procedure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-548">
            <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-548">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span>
          </span>
          <span data-ttu-id="2eedb-549">기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-549">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-550"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-550">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-551">다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-551">The following code example demonstrates how to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-552">사용 하는 방법을 보여 줍니다를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 와 폼에 새 레코드를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-552">It also demonstrates how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="2eedb-553">합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 데이터 집합이 표시 됩니다 및 <xref:System.Web.UI.WebControls.DetailsView> 특정 행에 대 한 세부 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-553">The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> displays the details for a particular row.</span></span> <span data-ttu-id="2eedb-554">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-554">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="2eedb-555">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-555">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="2eedb-556">저장된 프로시저 이름에 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성을 설정 하 여 저장된 프로시저를 식별 하 고는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> 값.</span><span class="sxs-lookup"><span data-stu-id="2eedb-556">The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value.</span></span>  
  
 <span data-ttu-id="2eedb-557">데이터베이스로 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드의 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-557">After data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-558">삽입 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-558">Occurs when an insert operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-559">처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 삽입 작업이 완료 된 후의 값을 확인 하려면 출력 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-559">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event to examine the values of output parameters after an insert operation has completed.</span></span> <span data-ttu-id="2eedb-560">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-560">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2eedb-561">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-561">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-562">다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 형태로 새 레코드를 삽입 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-562">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-563">이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-563">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="2eedb-564">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-564">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="2eedb-565">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-565">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2eedb-566"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 의 선택된 된 행 되도록 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-566">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="2eedb-567">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-567">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="2eedb-568">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-568">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="2eedb-569">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-569">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="2eedb-570">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-570">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="2eedb-571">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-571">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="2eedb-572">마지막으로 하 여 데이터베이스에 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-572">Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-573">삽입 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-573">Occurs before an insert operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-574">처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 삽입 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-574">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.</span></span> <span data-ttu-id="2eedb-575">데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-575">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="2eedb-576">직접 호출 하 여 작업을 취소할 수 없습니다 따라서를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 속성.</span><span class="sxs-lookup"><span data-stu-id="2eedb-576">Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> property.</span></span> <span data-ttu-id="2eedb-577">설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체를 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-577">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="2eedb-578">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-578">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-579">다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 형태로 새 레코드를 삽입 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-579">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-580">이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-580">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="2eedb-581">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-581">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="2eedb-582">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-582">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="2eedb-583"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 의 선택된 된 행 되도록 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-583">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="2eedb-584">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-584">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="2eedb-585">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-585">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="2eedb-586">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-586">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="2eedb-587">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="2eedb-587">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="2eedb-588">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-588">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="2eedb-589">마지막으로 하 여 데이터베이스에 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 `DataBind` 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-589">Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the `DataBind` method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-590">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체에서 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-590">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-591">
            <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-591">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-592"><xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-592">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 <span data-ttu-id="2eedb-593">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-593">If the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="2eedb-594">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 컬렉션 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-594">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection might be important.</span></span> <span data-ttu-id="2eedb-595">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-595">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="2eedb-596"><xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-596">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="2eedb-597">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-597">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-598">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-598">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-599">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-599">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-600">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-600">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-601">다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-601">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="2eedb-602">데이터 테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-602">The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-603">값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-603">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="2eedb-604">경우는 **삽입** 단추를 클릭 하면, 지정된 된 값은 데이터베이스에 삽입 및 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-604">When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-605">잠재적인 보안 위협을 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-605">This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="2eedb-606">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-606">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-607">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-607">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-608">이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-608">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="2eedb-609">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-609">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="2eedb-610">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />의 상태를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-610">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eedb-611">유지해야 하는 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에 있는 속성의 상태를 로드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-611">Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control that need to be persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-612">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> 메서드를 사용 하 여 이전에 저장 된 뷰 상태를 로드 하는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-612">The <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> method is used to load the previously saved view state of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-613">
            <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> 또는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> 메서드에 전달된 모든 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-613">Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-614">
            <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> 또는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> 메서드에 전달된 모든 <paramref name="oldValues" /> 매개 변수의 이름에 적용된 서식 문자열을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-614">A string that represents a format string applied to the names of any <paramref name="oldValues" /> parameters passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> methods.</span>
          </span>
          <span data-ttu-id="2eedb-615">기본값은 "{0}"입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-615">The default is "{0}".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-616"><xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 형식 문자열에서 식별 되는 것과 같은 기본 키에만 적용 됩니다는 `DataKeyNames` 삭제 또는 연결된 된 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 합니다 속성이<xref:System.Web.UI.ConflictOptions.CompareAllValues>값 및 집합이 `oldValues` 해당 데이터 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-616">The <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> format string is applied only to primary keys, such as those that are identified by the `DataKeyNames` property of the associated data-bound control, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` are passed to the corresponding data method.</span></span> <span data-ttu-id="2eedb-617">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 `oldValues` 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-617">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="2eedb-618">변경할 수 있는 두 가지 일반적인 시나리오는 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-618">Two common scenarios where you might change the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property are as follows:</span></span>  
  
-   <span data-ttu-id="2eedb-619">업데이트의 이전 및 새 값을 구분 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-619">To differentiate between old and new values in updates.</span></span> <span data-ttu-id="2eedb-620">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값, 매개 변수는 원래 및 새 값에 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션.</span><span class="sxs-lookup"><span data-stu-id="2eedb-620">When the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters for both the original and new values are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-621">서식 문자열을 사용 하지 않고 이름이 같은 두 개의 매개 변수는 각 데이터 필드에 대해 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-621">Without the formatting string, two parameters with the same name would be created for each data field.</span></span> <span data-ttu-id="2eedb-622">원래 값 매개 변수의 이름을 변경 하 여 충돌을 감지 하 고 키 값을 비교 하 여 원래 데이터 원본에 데이터를 비교할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-622">By changing the name of the original value parameter, you can compare the data to the original data source to detect conflicts and compare key values.</span></span>  
  
-   <span data-ttu-id="2eedb-623">일부 비주얼 디자이너에는 원래 값 및 키에 대 한 특정 명명 체계를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-623">Some visual designers implement a particular naming scheme for original values and keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="sqlDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="2eedb-624">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-624">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eedb-625">
            <see cref="E:System.Web.UI.Page.LoadComplete" /> 이벤트 처리기를 <see cref="T:System.Web.UI.Page" /> 컨트롤이 포함된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-625">Adds a <see cref="E:System.Web.UI.Page.LoadComplete" /> event handler to the <see cref="T:System.Web.UI.Page" /> control that contains the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-626">추가 되는 이벤트 처리기를 <xref:System.Web.UI.WebControls.SqlDataSource> 업데이트 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-626">The event handler that is added by the <xref:System.Web.UI.WebControls.SqlDataSource> object updates the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> values.</span></span> <span data-ttu-id="2eedb-627">값이 업데이트 되는 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-627">If the values are updated, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> control to rebind.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-628">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 내부 데이터 소스에 연결하기 위해 사용하는 .NET Framework 데이터 공급자의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-628">Gets or sets the name of the .NET Framework data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-629">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 사용하는 데이터 공급자의 이름을 반환하며 설정된 공급자가 없는 경우에는 Microsoft SQL Server용 ADO.NET 공급자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-629">The name of the data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses; otherwise, the ADO.NET provider for Microsoft SQL Server, if no provider is set.</span>
          </span>
          <span data-ttu-id="2eedb-630">기본값은 Microsoft SQL Server용 ADO.NET 공급자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-630">The default is the ADO.NET provider for Microsoft SQL Server.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-631">다음 데이터 공급자를 포함 하는.NET Framework:</span><span class="sxs-lookup"><span data-stu-id="2eedb-631">The .NET Framework includes the following data providers:</span></span>  
  
-   <span data-ttu-id="2eedb-632"><xref:System.Data.SqlClient?displayProperty=nameWithType> 공급자는 기본.NET Framework Data Provider for SQL Server입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-632">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider is the default .NET Framework Data Provider for SQL Server.</span></span>  
  
-   <span data-ttu-id="2eedb-633"><xref:System.Data.OleDb?displayProperty=nameWithType> 공급자는.NET Framework Data Provider for OLE DB입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-633">The <xref:System.Data.OleDb?displayProperty=nameWithType> provider is the .NET Framework Data Provider for OLE DB.</span></span>  
  
-   <span data-ttu-id="2eedb-634"><xref:System.Data.Odbc?displayProperty=nameWithType> 공급자는.NET Framework Data Provider for ODBC입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-634">The <xref:System.Data.Odbc?displayProperty=nameWithType> provider is the .NET Framework Data Provider for ODBC.</span></span>  
  
-   <span data-ttu-id="2eedb-635"><xref:System.Data.OracleClient?displayProperty=nameWithType> 공급자는.NET Framework Data Provider for Oracle입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-635">The <xref:System.Data.OracleClient?displayProperty=nameWithType> provider is the .NET Framework Data Provider for Oracle.</span></span>  
  
 <span data-ttu-id="2eedb-636">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 되지 속성은 관리 되지 않는 ADO.NET 공급자의 이름으로 같은 `MSDAORA`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-636">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is never set to the name of an unmanaged ADO.NET provider, such as `MSDAORA`.</span></span> <span data-ttu-id="2eedb-637">자세한 내용은 [SqlDataSource 컨트롤을 사용 하 여 선택 하면 데이터](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-637">For more information, see [Selecting Data Using the SqlDataSource Control](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).</span></span>  
  
 <span data-ttu-id="2eedb-638">변경 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할.</span><span class="sxs-lookup"><span data-stu-id="2eedb-638">If you change the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> to rebind.</span></span>  
  
 <span data-ttu-id="2eedb-639">사용 가능한 공급자 목록이 지정 되어는 `DbProviderFactories` 하위 섹션은 `system.data` 합니다 Machine.config 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-639">A list of available providers is specified in the `DbProviderFactories` subsection of the `system.data` section of the Machine.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-640">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-640">This section contains two code examples.</span></span> <span data-ttu-id="2eedb-641">첫 번째 코드에 대 한 SQL Server에 대 한.NET Framework Data Provider을 기본값을 사용 하 여 SQL Server 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 <xref:System.Data.SqlClient?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-641">The first code demonstrates how to connect to a SQL Server database using the default .NET Framework Data Provider for SQL Server for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eedb-642">두 번째 코드 예제는.NET Framework Data Provider for ODBC를 사용 하 여 ODBC 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Data.Odbc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-642">The second code example demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2eedb-643">다음 코드 예제에 대 한 기본 데이터 공급자를 사용 하 여 SQL Server 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 <xref:System.Data.SqlClient?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-643">The following code example demonstrates how to connect to a SQL Server database using the default data provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eedb-644">때마다는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성이 명시적으로 설정 되지 않은, 기본 공급자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-644">Whenever the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is not explicitly set, the default provider is used.</span></span> <span data-ttu-id="2eedb-645"><xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성은 공급자별으로 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-645">The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is provider-specific.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-646">다음 코드 예제는 기능적으로 앞의 코드 예제와 동일 합니다는.NET Framework Data Provider for ODBC를 사용 하 여 ODBC 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Data.Odbc?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-646">The following code example, which is functionally the same as the preceding code example, demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eedb-647"><xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 는 ODBC 데이터 원본 이름 (DSN ODBC 데이터베이스 연결에 사용 되 는) 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-647">The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN) that is used to connect to the ODBC database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-648">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤의 현재 뷰 상태를 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-648">Saves the current view state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-649">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />의 저장된 상태가 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-649">An object that contains the saved state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSource.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="2eedb-650">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-650">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that is used to request operations on the data beyond basic data retrieval.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eedb-651">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 있는 매개 변수를 사용하여 내부 데이터베이스에서 데이터를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-651">Retrieves data from the underlying database by using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-652">데이터 행의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-652">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-653">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 중 자동으로 호출 됩니다는 <xref:System.Web.UI.Control.PreRender> 페이지 수명 주기의 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-653">The <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is automatically called during the <xref:System.Web.UI.Control.PreRender> phase of the page life cycle.</span></span> <span data-ttu-id="2eedb-654">에 연결 되는 데이터 바인딩된 컨트롤에 의해 호출 되는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어를 통해 해당 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-654">It is called by data-bound controls that have been attached to a <xref:System.Web.UI.WebControls.SqlDataSource> control through their <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property.</span></span>  
  
 <span data-ttu-id="2eedb-655"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataView> 경우 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값.</span><span class="sxs-lookup"><span data-stu-id="2eedb-655">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value.</span></span> <span data-ttu-id="2eedb-656"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.IDataReader> 경우 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값.</span><span class="sxs-lookup"><span data-stu-id="2eedb-656">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method returns a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value.</span></span> <span data-ttu-id="2eedb-657">닫기는 <xref:System.Data.IDataReader> 데이터 읽기를 마쳤으면 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-657">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 <span data-ttu-id="2eedb-658">전에 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2eedb-658">Before the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event.</span></span> <span data-ttu-id="2eedb-659">매개 변수의 값을 확인 하 고 전에 처리를 수행 하려면이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-659">You can handle this event to examine the values of the parameters and to perform any processing before the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="2eedb-660">후는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Selected> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2eedb-660">After the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event.</span></span> <span data-ttu-id="2eedb-661">모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-661">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2eedb-662">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성이 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> 캐싱이 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource> 개체에서 데이터를 검색 하는 동안 캐시에 데이터를 저장 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-662">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSource> object retrieves data from and saves data to the cache during the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span> <span data-ttu-id="2eedb-663">캐시가 만들어지는, 삭제 또는 새로 고침의 조합에 의해 지정 된 캐싱 동작을 기반으로 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-663">The cache is created, discarded, or refreshed based on the caching behavior that is specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-664">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-664">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="2eedb-665">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-665">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="2eedb-666">데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-666">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="2eedb-667">데이터에 액세스 하는 둘 이상의 사용자를 예상 하 고 데이터베이스에 대 한 보안 구성으로 확인 하는 데이터의 각 검색 하는 경우 캐싱을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="2eedb-667">If you expect more than one user to access the data, and you want each retrieval of data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
 <span data-ttu-id="2eedb-668">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성이 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> 와 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성이 지정 된, 제공 된 필터 식이 계산 되 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성 및 결과 필터는 동안에 적용 된 데이터의 목록을 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>작업.</span><span class="sxs-lookup"><span data-stu-id="2eedb-668">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> and a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property has been specified, the filter expression is evaluated with any supplied <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties and the resulting filter is applied to the list of data during the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="2eedb-669"><xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-669">The <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="2eedb-670">데이터 검색 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드를 <xref:System.Data.Common.DbCommand> 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 값 및 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대해 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-670">To perform a data retrieval operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object by using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> values, and then executes the <xref:System.Data.Common.DbCommand> against the underlying database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-671">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-671">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-672">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-672">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-673">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-673">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-674">다음 예제에서는 프로그래밍 방식으로 호출 하는 방법을 보여는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 쿼리 결과 기반으로 하는 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-674">The following examples show how to programmatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method and set values based on the result of the query.</span></span> <span data-ttu-id="2eedb-675">다음 예제에서는 웹 컨트롤에 대 한 선언적 코드를 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-675">The following example shows the declarative code for the Web controls.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 <span data-ttu-id="2eedb-676">다음 예제에서는 프로그래밍 방식으로 호출 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-676">The following example shows how to programmatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.</span></span> <span data-ttu-id="2eedb-677"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-677">The <xref:System.Web.UI.WebControls.SqlDataSource> control returns an integer.</span></span> <span data-ttu-id="2eedb-678">정수 값의 텍스트를 설정 하는 <xref:System.Web.UI.WebControls.Label> 컨트롤 및 표시 여부를 결정 하는 <xref:System.Web.UI.WebControls.HyperLink> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-678">The value of the integer is used to set the text of a <xref:System.Web.UI.WebControls.Label> control and to determine whether to display a <xref:System.Web.UI.WebControls.HyperLink> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2eedb-679">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체를 내부 데이터 소스와 연결할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-679">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object cannot establish a connection with the underlying data source.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-680">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 내부 데이터베이스에서 데이터를 검색하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-680">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to retrieve data from the underlying database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-681">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 에서 데이터를 검색하는 데 사용되는 SQL 문자열이나 저장 프로시저 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-681">An SQL string or the name of a stored procedure that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to retrieve data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-682">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성은 SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> SQL Server 데이터베이스에서 데이터를 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-682">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property represents an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method to retrieve data from a SQL Server database.</span></span> <span data-ttu-id="2eedb-683">Select 명령에 별표 (\*)를 사용 하 여 모든 열을 선택 하 고 자동 코드 생성을 사용 하 여 작업을 삭제 또는 업데이트를 수행할 수 있는지 확인 하는 경우 열이 없는 경우 이름에 공백</span><span class="sxs-lookup"><span data-stu-id="2eedb-683">If you use an asterisk (\*) in the Select command to select all columns, and if you use automatic code generation to perform update or delete operations, make sure that no columns have spaces in their names.</span></span>  
  
 <span data-ttu-id="2eedb-684">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-684">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="2eedb-685">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-685">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="2eedb-686">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="2eedb-686">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="2eedb-687">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-687">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="2eedb-688">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-688">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-689"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.</span><span class="sxs-lookup"><span data-stu-id="2eedb-689">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="2eedb-690"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-690">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-691">보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 저장 되지 않습니다 보기 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-691">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is not stored is view state.</span></span> <span data-ttu-id="2eedb-692">클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-692">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-693">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-693">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-694">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-694">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-695">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-695">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-696">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-696">This section contains two code examples.</span></span> <span data-ttu-id="2eedb-697">첫 번째 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-697">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-698">두 번째 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 저장된 프로시저의 이름으로 텍스트 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Microsoft SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 값을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-698">The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 <span data-ttu-id="2eedb-699">두 예제에는 명시적으로 호출할 필요가 없습니다를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 통해 데이터 원본에 연결 된 데이터 바인딩된 컨트롤을 제어 하기 때문에 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 속성이 자동으로 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 합니다 중메서드<xref:System.Web.UI.Control.PreRender> 단계.</span><span class="sxs-lookup"><span data-stu-id="2eedb-699">In both examples, there is no need to explicitly call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method because the data-bound controls that are attached to the data source control through the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property will automatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method during the <xref:System.Web.UI.Control.PreRender> phase.</span></span>  
  
 <span data-ttu-id="2eedb-700">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-700">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-701">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 저장된 프로시저의 이름으로는 텍스트 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 속성을는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 값을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-701">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="2eedb-702"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 수 저장된 프로시저의 이름 또는 SQL 쿼리를 데이터 원본에서 저장된 프로시저를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-702">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-703">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> 속성의 텍스트가 SQL 쿼리인지 아니면 저장 프로시저의 이름인지 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-703">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property is an SQL query or the name of a stored procedure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-704">
            <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-704">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span>
          </span>
          <span data-ttu-id="2eedb-705">기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-705">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-706"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-706">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-707">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 저장된 프로시저의 이름으로는 텍스트 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 속성을는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Microsoft SQL Server 데이터베이스에서 데이터를 검색 하 고 표시 하기 위해 값을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-707">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value, in order to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-708">데이터 검색 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-708">Occurs when a data retrieval operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-709">처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Selected> 의 값을 검사 하는 이벤트 데이터 검색 작업이 완료 된 후 매개 변수를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-709">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event to examine the values of output parameters after a data retrieval operation has completed.</span></span> <span data-ttu-id="2eedb-710">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-710">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2eedb-711">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-711">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-712">데이터 검색 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-712">Occurs before a data retrieval operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-713">처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 선택 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-713">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the select operation.</span></span> <span data-ttu-id="2eedb-714">선택 인수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-714">The select arguments are available from the <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2eedb-715">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-715">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-716">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체에서 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-716">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-717">
            <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-717">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-718">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-718">If the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="2eedb-719">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-719">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection might be important.</span></span> <span data-ttu-id="2eedb-720">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-720">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="2eedb-721"><xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-721">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="2eedb-722">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-722">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-723"><xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-723">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-724">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-724">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-725">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-725">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-726">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-726">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-727">다음 코드 예제에서는 설정 하 여 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL 쿼리에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-727">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query.</span></span> <span data-ttu-id="2eedb-728">SQL 쿼리가 매개 변수화 된 및의 자리 표시자를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 일치 하는 <xref:System.Web.UI.WebControls.ControlParameter> 에 추가 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-728">The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-729"><xref:System.Web.UI.WebControls.DropDownList> 는 제어를 <xref:System.Web.UI.WebControls.ControlParameter> 에 바인딩된에 대 한 필터에 표시 되는 역할을 <xref:System.Web.UI.WebControls.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-729">The <xref:System.Web.UI.WebControls.DropDownList> control, which the <xref:System.Web.UI.WebControls.ControlParameter> is bound to, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.</span></span>  
  
 <span data-ttu-id="2eedb-730">다른 유형의 매개 변수에 사용할 수에 대 한 내용은 참조는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-730">For information about other types of parameters you can use, see the <xref:System.Web.UI.WebControls.Parameter> class overview.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2eedb-731">매개 변수는 WHERE 절을 사용 하기 때문에 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 코드 예제의 속성은 기능적으로 사용 하는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-731">Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in the code example is functionally equivalent to using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-732">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-732">Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-733">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-733">The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-734"><xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성이 확인에 포함 된 경우 SQL 명령 즉만 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성은 저장된 프로시저의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-734">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure.</span></span> <span data-ttu-id="2eedb-735">이 경우 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> 속성을 설정 하면 저장된 프로시저의 결과 정렬 하는 데 사용 되는 매개 변수의 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-735">In this case, if the <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.</span></span>  
  
 <span data-ttu-id="2eedb-736">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> 속성을 설정 하면 앞에 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-736">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-737">Microsoft SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 세미콜론으로 구분된 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-737">Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-738">SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-738">A string that indicates which databases and tables to use for the SQL Server cache dependency.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-739"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에 따라 선택적 만료 정책을 지원 합니다 <xref:System.Web.Caching.SqlCacheDependency> (데이터베이스 서버에 대 한 서비스를 구성 해야 합니다) 데이터 캐시에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-739">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports an optional expiration policy based on the <xref:System.Web.Caching.SqlCacheDependency> object for the data cache (the service must be configured for the database server).</span></span>  
  
 <span data-ttu-id="2eedb-740">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 데이터베이스 및 테이블에서 사용 되는 동일한 형식에 따라 식별 하는 문자열을 `@ Page` 뒤에 콜론 구분 기호를 문자열의 첫 번째 파트 인 Microsoft SQL Server 데이터베이스에 연결 문자열을 지시문 및 마지막으로 데이터베이스 테이블의 이름 (예를 들어 `"connectionstring1:table1"`).</span><span class="sxs-lookup"><span data-stu-id="2eedb-740">The <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> string identifies databases and tables according to the same format that is used by the `@ Page` directive, where the first part of the string is a connection string to a Microsoft SQL Server database, followed by a colon delimiter, and finally the name of the database table (for example, `"connectionstring1:table1"`).</span></span> <span data-ttu-id="2eedb-741">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 둘 이상의 테이블에 종속 속성, 연결 문자열 및 테이블 이름 쌍은 세미콜론으로 구분 됩니다 (예를 들어 `"connectionstring1:table1";connectionstring2:table2"`).</span><span class="sxs-lookup"><span data-stu-id="2eedb-741">If the <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> property depends on more than one table, the connection string-and-table name pairs are separated by semicolons (for example, `"connectionstring1:table1";connectionstring2:table2"`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-742">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-742">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="2eedb-743">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-743">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="2eedb-744">데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-744">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="2eedb-745">데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="2eedb-745">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-746">다음 코드 예제에는 SQL Server 캐시 종속성을 만들고 설정 하는 방법을 보여 줍니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-746">The following code example demonstrates how to create a SQL Server cache dependency and set the <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> property of a <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="2eedb-747">이 예제에서는 데이터베이스 120 초 마다 폴링됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-747">In this example, the database is polled every 120 seconds.</span></span> <span data-ttu-id="2eedb-748">Northwind Traders 직원의 데이터를 변경 하는 동안 시간 테이블에서 캐시 된 데이터를 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 하 고 표시 하 여는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 새로 고쳐질는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 다음에 데이터베이스를 사용 하는 간격으로 폴링됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-748">If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <xref:System.Web.UI.WebControls.SqlDataSource> control and displayed by the <xref:System.Web.UI.WebControls.GridView> control is refreshed by the <xref:System.Web.UI.WebControls.SqlDataSource> control the next time the database is polled.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-749">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장할 수 있도록 추적합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-749">Tracks view state changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-750"><xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> 컨트롤에 대 한 뷰 상태의 일부로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 지점을 표시 하기 위해 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-750">The <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the view state for the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="sqlDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-751">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> 컬렉션의 매개 변수를 사용하여 업데이트 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-751">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eedb-752">내부 데이터베이스에서 업데이트되는 행 수를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-752">A value that represents the number of rows updated in the underlying database.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-753"><xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드를 자동으로 호출 합니다 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView> 데이터가 변경 된 경우 다시 게시 하는 동안 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-753">The <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method is automatically called by the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView> controls during postback if the data has been changed.</span></span> <span data-ttu-id="2eedb-754">다른 컨트롤에서 변경 된 데이터에 대 한 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 포스트백 중에 메서드를 명시적으로 호출할 수는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-754">For data that has been changed in other controls, the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method can be explicitly called on postback during the <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 <span data-ttu-id="2eedb-755">전에 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2eedb-755">Before the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event.</span></span> <span data-ttu-id="2eedb-756">매개 변수의 값을 확인 하 고 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-756">You can handle this event to examine the values of the parameters and to perform any preprocessing before an <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation.</span></span>  
  
 <span data-ttu-id="2eedb-757">후는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="2eedb-757">After the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event.</span></span> <span data-ttu-id="2eedb-758">모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-758">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="2eedb-759"><xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-759">The <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="2eedb-760">업데이트 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드를 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 속성을 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-760">To perform an update operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-761">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-761">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-762">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-762">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-763">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-763">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-764">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-764">This section contains two code examples.</span></span> <span data-ttu-id="2eedb-765">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-765">The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="2eedb-766">두 번째 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-766">The second code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
 <span data-ttu-id="2eedb-767">다음 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-767">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="2eedb-768">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 매개 변수가 있는 SQL 문 및 두 개의 속성은 <xref:System.Web.UI.WebControls.ControlParameter> 매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-768">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-769">경우는 **제출** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 호출 하려는 이벤트가 처리 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 명시적으로.</span><span class="sxs-lookup"><span data-stu-id="2eedb-769">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-770">다음 코드 예제에는 SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-770">The following code example demonstrates how to display data that is retrieved from a SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="2eedb-771">예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하도록 컨트롤을 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-771">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2eedb-772">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-772">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-773">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 내부 데이터베이스의 데이터를 업데이트하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-773">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to update data in the underlying database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-774">
            <see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 데이터를 업데이트하는 데 사용하는 SQL 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-774">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to update data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-775">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2eedb-775">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> represents an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.</span></span>  
  
 <span data-ttu-id="2eedb-776">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-776">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="2eedb-777">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-777">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="2eedb-778">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="2eedb-778">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="2eedb-779">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-779">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="2eedb-780">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-780">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-781"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.</span><span class="sxs-lookup"><span data-stu-id="2eedb-781">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="2eedb-782"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-782">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-783">보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성 저장 되지 않습니다 보기 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-783">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is not stored is view state.</span></span> <span data-ttu-id="2eedb-784">클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-784">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-785">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-785">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-786">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-786">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-787">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-787">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-788">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-788">This section contains two code examples.</span></span> <span data-ttu-id="2eedb-789">첫 번째 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 Microsoft SQL Server 데이터베이스에서 데이터를 제어 및 업데이트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-789">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-790">두 번째 코드 예제에서는 사용 하 여 ODBC 데이터베이스의 데이터를 업데이트 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-790">The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="2eedb-791">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 SQL Server 데이터베이스에서 데이터를 제어 및 업데이트를 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-791">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-792"><xref:System.Web.UI.WebControls.GridView> 자동으로 채웁니다를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션, 매개 변수를 유추 합니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 때를 **업데이트** 링크를 편집할 수 있는 <xref:System.Web.UI.WebControls.GridView>을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-792">The <xref:System.Web.UI.WebControls.GridView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> is selected.</span></span> <span data-ttu-id="2eedb-793">이 예제에서는 일부 사후 처리에도 포함 되어 있습니다: 레코드 업데이트 되 면 알림 전자 메일 메시지를 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-793">This example also includes some post-processing: after a record is updated, a notification email message is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 <span data-ttu-id="2eedb-794">앞의 코드 예제와 기능적으로 동일 인 다음 코드 예제를 사용 하 여 ODBC 데이터베이스의 데이터를 업데이트 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-794">The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-795"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> ODBC 용 ADO.NET 공급자를로 <xref:System.Data.Odbc?displayProperty=nameWithType>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성은 ODBC 데이터 원본 이름 (DSN)의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-795">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-796">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-796">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property is an SQL statement or the name of a stored procedure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-797">
            <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-797">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span>
          </span>
          <span data-ttu-id="2eedb-798">기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-798">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-799"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-799">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-800">업데이트 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-800">Occurs when an update operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-801">처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 업데이트 작업이 완료 된 후의 값을 확인 하려면 출력 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-801">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event to examine the values of output parameters after an update operation has completed.</span></span> <span data-ttu-id="2eedb-802">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-802">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="2eedb-803">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-803">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-804">다음 코드 예제에 표시의 ODBC 데이터베이스에서 검색 되는 데이터를 업데이트 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-804">The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="2eedb-805">레코드를 성공적으로 업데이트 후의 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 전자 메일 알림이 전송 되는 후 처리 단계를 수행 하는 이벤트 처리기 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-805">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-806">
            <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-806">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eedb-807">
            <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-807">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-808">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-808">If the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="2eedb-809">매개 변수 이름은 영향을 받을 수는 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성 이름을 사용 하 여 지정 된 키와 같은 기본 키를 식별 하는 경우에 특히 합니다 `DataKeyNames` 삭제 또는 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치를 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 및 집합이 `oldValues` 해당 데이터 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-809">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property, specifically if the name identifies a primary key, such as a key specified using the `DataKeyNames` property of the data-bound control, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` are passed to the corresponding data method.</span></span> <span data-ttu-id="2eedb-810">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 `oldValues` 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-810">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="2eedb-811">매개 변수 순서는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션 ADO.NET 공급자에 따라 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-811">The order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection might be important, depending on the ADO.NET provider.</span></span> <span data-ttu-id="2eedb-812">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-812">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="2eedb-813"><xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-813">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="2eedb-814">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-814">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="2eedb-815"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="2eedb-815">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-816">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-816">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-817">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-817">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-818">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-818">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-819">다음 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-819">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="2eedb-820">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 매개 변수가 있는 SQL 문 및 2를 사용 하 여 설정 됩니다 <xref:System.Web.UI.WebControls.ControlParameter> 매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-820">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="2eedb-821">경우는 **제출** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 호출 하려는 이벤트가 처리 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 명시적으로.</span><span class="sxs-lookup"><span data-stu-id="2eedb-821">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-822">잠재적인 보안 위협을 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-822">This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="2eedb-823">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-823">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-824">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-824">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eedb-825">업데이트 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eedb-825">Occurs before an update operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eedb-826">처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 업데이트 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-826">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.</span></span> <span data-ttu-id="2eedb-827">데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-827">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="2eedb-828">따라서 직접을 취소할 수 없습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업을 호출 하 여 데이터베이스를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체.</span><span class="sxs-lookup"><span data-stu-id="2eedb-828">Therefore, you cannot directly cancel the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> database operation by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="2eedb-829">설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-829">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="2eedb-830">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-830">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2eedb-831">값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-831">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="2eedb-832">사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-832">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="2eedb-833">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2eedb-833">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eedb-834">다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-834">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="2eedb-835">예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하도록 컨트롤을 합니다.</span><span class="sxs-lookup"><span data-stu-id="2eedb-835">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>