<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlDataSource.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac534dff01451d4ba6258731af2ba7a9443d91cb876.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34dff01451d4ba6258731af2ba7a9443d91cb876</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Represents an SQL database to data-bound controls.</source>
          <target state="translated">데이터 바인딩된 컨트롤의 SQL 데이터베이스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>In this topic:</source>
          <target state="translated">항목 내용:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>소개<ept id="p1">](#introduction)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Data Connections<ept id="p1">](#data_connections)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 연결<ept id="p1">](#data_connections)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Performing Data Operations<ept id="p1">](#performing_data_operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 작업을 수행합니다.<ept id="p1">](#performing_data_operations)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Data Provider<ept id="p1">](#data_provider)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 공급자<ept id="p1">](#data_provider)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Caching<ept id="p1">](#caching)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>캐싱<ept id="p1">](#caching)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Additional Features<ept id="p1">](#additional_features)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>추가 기능<ept id="p1">](#additional_features)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Data Source View<ept id="p1">](#data_source_view)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 원본 뷰<ept id="p1">](#data_source_view)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>선언 구문<ept id="p1">](#declarative_syntax)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Introduction</source>
          <target state="translated">소개</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> data source control represents data in an SQL relational database to data-bound controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터 소스 제어 데이터 바인딩된 컨트롤에는 SQL 관계형 데이터베이스의 데이터를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control in conjunction with a data-bound control to retrieve data from a relational database and to display, edit, and sort data on a Web page with little or no code.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 관계형 데이터베이스에서 데이터를 검색 하 고 표시, 편집 및 코드를 거의 사용 하지 않고 웹 페이지에서 데이터를 정렬 하는 데이터 바인딩된 컨트롤과 함께에서 제어 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Data Connections</source>
          <target state="translated">데이터 연결</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>To connect to a database, you must set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property to a valid connection string.</source>
          <target state="translated">데이터베이스에 연결 하려면 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성을 유효한 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> can support any SQL relational database that can be connected to using an ADO.NET provider, such as the <ph id="ph2">`SqlClient`</ph>, <ph id="ph3">`OleDb`</ph>, <ph id="ph4">`Odbc`</ph>, or <ph id="ph5">`OracleClient`</ph> provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 같은 ADO.NET 공급자를 사용 하 여 연결할 수 있는 모든 SQL 관계형 데이터베이스를 지원할 수는 <ph id="ph2">`SqlClient`</ph>, <ph id="ph3">`OleDb`</ph>, <ph id="ph4">`Odbc`</ph>, 또는 <ph id="ph5">`OracleClient`</ph> 공급자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For information about how to secure connection strings, see <bpt id="p1">[</bpt>How To: Secure Connection Strings when Using Data Source Controls<ept id="p1">](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)</ept>.</source>
          <target state="translated">연결 문자열을 보호 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>How To:를 사용 하 여 데이터 소스를 제어 하는 경우 보안 연결 문자열<ept id="p1">](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>To retrieve data from an underlying database, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property with an SQL query.</source>
          <target state="translated">기본 데이터베이스에서 데이터를 검색 하려면 설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성 SQL 쿼리를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>If the database that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> is associated with supports stored procedures, you can set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property to the name of a stored procedure.</source>
          <target state="translated">하는 경우 데이터베이스는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 연결 된 지 원하는 저장 프로시저를 사용 설정할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성을 저장된 프로시저의 이름입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The SQL query that you specify can also be a parameterized query.</source>
          <target state="translated">지정 하는 SQL 쿼리 매개 변수가 있는 쿼리 될 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can add <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that are associated with a parameterized query to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">추가할 수 있습니다 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> 매개 변수가 있는 쿼리를와 연결 된 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For more information about parameterized SQL queries and their syntax, see <bpt id="p1">[</bpt>Using Parameters with Data Source Controls for Filtering<ept id="p1">](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 해당 구문에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>필터링에 대 한 데이터 소스 컨트롤과 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control retrieves data whenever the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 데이터를 검색할 때마다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>This method provides programmatic access to the method that is specified by <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드는 지정 된 메서드에 프로그래밍 방식의 액세스를 제공 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is automatically called by controls that are bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> when their <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 자동으로 메서드는 컨트롤에 바인딩되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 때 해당 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A&gt;</ph> property of a data-bound control, the control automatically binds to data from the data source, as required.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A&gt;</ph> 데이터 바인딩된 컨트롤의 속성, 컨트롤 자동으로 데이터에 바인딩하 필요에 따라 데이터 원본의 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Setting the <ph id="ph1">`DataSourceID`</ph> property is the recommended method for binding an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to a data-bound control.</source>
          <target state="translated">설정의 <ph id="ph1">`DataSourceID`</ph> 속성은 바인딩에 대 한 권장 되는 방법 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 데이터 바인딩된 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Alternatively, you can use the <ph id="ph1">`DataSource`</ph> property, but then you must explicitly call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the data-bound control.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">`DataSource`</ph> 속성이 아니라 다음 명시적으로 호출 해야는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 데이터 바인딩된 컨트롤의 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Some examples of data-bound controls that can use <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> are <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DataList&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>.</source>
          <target state="translated">사용할 수 있는 데이터 바인딩된 컨트롤의 몇 가지 예 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DataList&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method programmatically at any time to retrieve data from the underlying database.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드 프로그래밍 방식으로 언제 든 지 기본 데이터베이스에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>In declarative and programmatic ASP.NET scenarios, you can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt;</ph> property of the data-bound control to the ID of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">선언적 방법과 프로그래밍 ASP.NET 시나리오에서 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt;</ph> 의 ID로 데이터 바인딩된 컨트롤의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can also assign an instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A&gt;</ph> property of the data-bound control.</source>
          <target state="translated">인스턴스를 할당할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A&gt;</ph> 데이터 바인딩된 컨트롤의 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For more information about binding data-bound control to data source controls, see <bpt id="p1">[</bpt>ASP.NET Data Access Options<ept id="p1">](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d)</ept>.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 데이터 소스 컨트롤 바인딩에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET 데이터 액세스 옵션<ept id="p1">](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Performing Data Operations</source>
          <target state="translated">데이터 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Depending on the capabilities of the underlying database product and the configuration of the instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, you can perform data operations, such as updates, inserts, and deletes.</source>
          <target state="translated">인스턴스를 구성 및 내부 데이터베이스 제품 기능에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스, 삽입, 업데이트 및 삭제와 같은 데이터 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>To perform these data operations, set the appropriate command text and any associated parameters for the operation that you want to perform.</source>
          <target state="translated">이러한 데이터 작업을 수행 하려면 적절 한 명령 텍스트 및 수행 하려는 작업에 대 한 관련된 매개 변수를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For example, for an update operation, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property to an SQL string or the name of a stored procedure and add any required parameters to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated">예를 들어 업데이트 작업에 대 한 설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> SQL 문자열 또는 저장된 프로시저의 이름으로 속성에 필수 매개 변수를 추가 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The update is performed when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method is called, either explicitly by your code or automatically by a data-bound control.</source>
          <target state="translated">업데이트가 수행 되는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드가 호출 되는 데이터 바인딩된 컨트롤에서 사용자 코드에서 명시적으로 또는 자동으로 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The same general pattern is followed for <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> operations.</source>
          <target state="translated">동일한 일반 패턴에 대 한 뒤 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The SQL queries and commands that you use in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> properties can be parameterized.</source>
          <target state="translated">SQL 쿼리 및에서 사용 하는 명령은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 속성 매개 변수화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>This means that the query or command can use placeholders instead of literal values and bind the placeholders to application or user-defined variables.</source>
          <target state="translated">즉, 쿼리 또는 명령이 리터럴 값 대신 자리 표시자를 사용할 수 있으며 응용 프로그램 또는 사용자 정의 변수를 자리 표시자를 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can bind parameters in SQL queries to Session variables, values that are passed on the query string for a Web Forms page, the property values of other server controls, and more.</source>
          <target state="translated">세션 변수, Web Forms 페이지에 대 한 쿼리 문자열에 전달 되는 값, 다른 서버 컨트롤 등의 속성 값을 SQL 쿼리의 매개 변수를 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For more information about how to use parameters in SQL queries with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph>, see <bpt id="p1">[</bpt>Using Parameters with Data Source Controls for Filtering<ept id="p1">](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)</ept> and <bpt id="p2">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p2">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">SQL 쿼리의 매개 변수를 사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph>, 참조 <bpt id="p1">[</bpt>필터링에 대 한 데이터 소스 컨트롤과 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)</ept> 및 <bpt id="p2">[</bpt>SqlDataSource컨트롤에서매개변수를사용하여<ept id="p2">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>By default, if one of the parameters is <ph id="ph1">`null`</ph> when you execute a <ph id="ph2">`Select`</ph> command, no data will be returned and no exception will be thrown.</source>
          <target state="translated">기본적으로 매개 변수 중 하나가 <ph id="ph1">`null`</ph> 실행 하는 동안 한 <ph id="ph2">`Select`</ph> 명령, 데이터가 반환 되 고 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can change this behavior by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">설정 하 여이 동작을 변경할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Data Provider</source>
          <target state="translated">데이터 공급자</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control works with the .NET Framework Data Provider for SQL Server, but <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> is not Microsoft SQL Server–specific.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤의.NET Framework Data provider for SQL Server 작동 하지만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 없는 Microsoft SQL Server 관련 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can connect the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control with any database product for which there is a managed ADO.NET provider.</source>
          <target state="translated">연결할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 관리 되는 ADO.NET 공급자가 데이터베이스 제품 제어 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>When used with the <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> provider, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> can work with any OLE DB-compliant database.</source>
          <target state="translated">와 함께 사용할 경우의 <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 공급자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 모든 OLE DB 호환 데이터베이스로 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>When used with the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> provider, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> can be used with any ODBC driver and database, including IBM DB2, MySQL, and PostgreSQL.</source>
          <target state="translated">와 함께 사용할 경우의 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 모든 ODBC 드라이버 및 IBM DB2, MySQL, PostgreSQL 등 데이터베이스와 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>When used with the <ph id="ph1">&lt;xref:System.Data.OracleClient?displayProperty=nameWithType&gt;</ph> provider, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> can work with Oracle 8.1.7 databases and later.</source>
          <target state="translated">와 함께 사용할 경우의 <ph id="ph1">&lt;xref:System.Data.OracleClient?displayProperty=nameWithType&gt;</ph> 공급자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 및 이후 버전 8.1.7 Oracle 데이터베이스와 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The list of allowable providers is registered in the <ph id="ph1">`DbProviderFactories`</ph> section of the configuration file, either in the Machine.config or Web.config file.</source>
          <target state="translated">허용 가능한 공급자 목록에 등록 되어는 <ph id="ph1">`DbProviderFactories`</ph> Machine.config 또는 Web.config 파일에 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For more information, see <bpt id="p1">[</bpt>Selecting Data Using the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤을 사용 하 여 데이터를 선택<ept id="p1">](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Caching</source>
          <target state="translated">캐싱</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>If you display data on your page using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, you can increase the performance of the page by using the data caching capabilities of the data source control.</source>
          <target state="translated">사용 하 여 페이지의 데이터를 표시 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤, 데이터 캐싱 데이터 소스 컨트롤의 기능을 사용 하 여 페이지의 성능의 늘릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Caching reduces the processing load on the database servers at the expense of memory on the Web server; in most cases, this is a good trade-off.</source>
          <target state="translated">웹 서버의 메모리 소모 데이터베이스 서버의 처리 부하를 줄일 수 캐싱 대부분의 경우에서 좋은 절충안입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> property is set to the number of seconds that the cache stores data before the cache entry is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 캐시 하는 자동으로 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 속성은 캐시는 캐시 엔트리가 삭제 되기 전에 데이터를 저장 하는 시간 (초)의 수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>You can also specify a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> and an optional <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> value.</source>
          <target state="translated">지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 선택적 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Additional Features</source>
          <target state="translated">추가 기능</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> provides additional capabilities, as listed in the following table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 다음 표에 나열 된 추가 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Capability</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Caching</source>
          <target state="translated">캐싱</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> property to <ph id="ph4">`true`</ph>, and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> properties according to the caching behavior you want for your cached data.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 값의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> 속성을 <ph id="ph4">`true`</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 캐시 된 데이터에 대해 원하는 캐싱 동작에 따라 속성입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Deleting</source>
          <target state="translated">삭제</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> property to an SQL statement used to delete data.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 속성 데이터를 삭제 하는 데 사용 되는 SQL 문의을 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>This statement is typically parameterized.</source>
          <target state="translated">이 문은 일반적으로 매개 변수화 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Filtering</source>
          <target state="translated">필터링</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> value.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property to a filtering expression used to filter the data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is called.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성 데이터를 필터링 하는 데 사용 되는 필터링 식의을 때의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Inserting</source>
          <target state="translated">삽입</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> property to an SQL statement used to insert data.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 속성 데이터를 삽입 하는 데 사용 되는 SQL 문의을 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>This statement is typically parameterized.</source>
          <target state="translated">이 문은 일반적으로 매개 변수화 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Paging</source>
          <target state="translated">페이징</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Not currently supported by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph>, however some data-bound controls, such as <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, support paging when you set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> value.</source>
          <target state="translated">하지만 현재 지원 되지 않습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph>일부 데이터 바인딩와 같은 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>를 설정한 경우 페이징을 지원은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성을는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Selecting</source>
          <target state="translated">선택</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property to an SQL statement used to retrieve data.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성 데이터를 검색 하는 데 사용 되는 SQL 문의을 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Sorting</source>
          <target state="translated">정렬</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph>으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Updating</source>
          <target state="translated">업데이트하는 중</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property to an SQL statement used to update data.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 속성 데이터를 업데이트 하는 데 사용 되는 SQL 문의을 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>This statement is typically parameterized.</source>
          <target state="translated">이 문은 일반적으로 매개 변수화 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Data Source View</source>
          <target state="translated">데이터 원본 뷰</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>As with all data source controls, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is associated with a data source view class.</source>
          <target state="translated">모든 데이터 소스 제어와 마찬가지로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 데이터 원본 뷰 클래스와 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control has only one associated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>, and it is always named <ph id="ph3">`Table`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 하나만 연결 된 컨트롤에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>, 이름은 항상 및 <ph id="ph3">`Table`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>There is no visual rendering of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control; it is implemented as a control so that you can create it declaratively and, optionally, to allow it to participate in state management.</source>
          <target state="translated">시각적으로 렌더링 되지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤을 만들 수 있습니다 선언적으로 및 필요에 따라, 상태 관리에 참여 하도록 허용할 수 있도록 컨트롤으로 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> does not support visual features, such as the ones that are provided by the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceControl.EnableTheming%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.UI.DataSourceControl.SkinID%2A&gt;</ph> property.</source>
          <target state="translated">결과적으로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 에서 제공 되는 것과 같은 시각적 기능을 지원 하지 않습니다는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceControl.EnableTheming%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Web.UI.DataSourceControl.SkinID%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Declarative Syntax</source>
          <target state="translated">선언 구문</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>A Visual Studio Web site project with source code is available to accompany this topic: <bpt id="p1">[</bpt>Download<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=192424)</ept>.</source>
          <target state="translated">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: <bpt id="p1">[</bpt>다운로드<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=192424)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>This section contains four code examples:</source>
          <target state="translated">이 섹션에는 네 개의 코드 예제가 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The first code example demonstrates how to display data from SQL Server in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control using declarative syntax.</source>
          <target state="translated">첫 번째 코드 예제에서 SQL Server에서 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 선언적 구문을 사용 하 여 제어 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The second code example demonstrates how to display data from an ODBC-compliant database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control using declarative syntax.</source>
          <target state="translated">두 번째 코드 예제에서는 ODBC 호환 데이터베이스의 데이터를에서 표시 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 선언적 구문을 사용 하 여 제어 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The third code example demonstrates how to display and update data in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">세 번째 코드 예제에 표시 하 고 데이터를 업데이트 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The fourth code example demonstrates how to display and update data in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">네 번째 코드 예제에 표시 하 고 데이터를 업데이트 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>These examples show how to use declarative syntax for data access.</source>
          <target state="translated">이 예에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For information about how to access data by using code instead of markup, see <bpt id="p1">[</bpt>Accessing data in Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>.</source>
          <target state="translated">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Visual Studio에서 데이터 액세스<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control declaratively to retrieve data from SQL Server and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 선언적으로 SQL Server에서 데이터를 검색에 표시 하는 컨트롤을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control declaratively to retrieve data from an ODBC-compliant database and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 표시 하는 ODBC 호환 데이터베이스에서 데이터 검색을 선언적으로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property is the name of the .NET Framework Data Provider for ODBC, which is <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성의 이름인.NET Framework Data Provider for ODBC는 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The following code example demonstrates a common display and update scenario with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 일반적인 표시 및 업데이트 시나리오를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>As with the previous examples, data from the Northwind database is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">Northwind 데이터베이스의 데이터가 표시 되는 이전 예제 처럼는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Additionally, because an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property is specified and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, you can edit and update the records with no additional code.</source>
          <target state="translated">또한 때문에 프로그램 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 속성이 지정 된 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>, 편집 하 고 추가 코드 없이 레코드를 업데이트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control automatically handles adding parameters to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method when the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> button in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤이 자동으로 처리 하는 매개 변수를 추가 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션 및 호출 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드 때는 <bpt id="p1">**</bpt>업데이트<ept id="p1">**</ept> 단추는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The following code example demonstrates a common display and update scenario with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls.</source>
          <target state="translated">다음 코드 예제에서는 일반적인 표시 및 업데이트 시나리오를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control does not automatically add update parameters to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection nor call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method, so you must do so.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 업데이트 매개 변수를 자동으로 추가 되지 않습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션 또는 호출의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드, 그렇게 해야 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>The update parameters are specified declaratively and you can add an event handler to perform the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> operation when an event is raised.</source>
          <target state="translated">업데이트 매개 변수를 선언적으로 지정 하 고 수행 하는 이벤트 처리기를 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 이벤트가 발생할 때 작업 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>This example includes a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 잠재적인 보안 문제가 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.SqlDataSource">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>The connection string used to connect to the underlying database.</source>
          <target state="translated">내부 데이터베이스에 연결하는 데 사용되는 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>The SQL query used to retrieve data from the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 데이터를 검색하는 데 사용되는 SQL 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>If the SQL query is a parameterized SQL string, you might need to add <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> collection.</source>
          <target state="translated">SQL 쿼리가 매개 변수가 있는 SQL 문자열인 경우 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> 개체를 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> 컬렉션에 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> class with the specified connection string and Select command.</source>
          <target state="translated">지정된 연결 문자열과 Select 명령을 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>Because different database products use different varieties of SQL, the syntax for <ph id="ph1">`selectCommand`</ph> depends on the current ADO.NET provider being used, which is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품 마다 다양 한 구문에 대 한 SQL 사용 하기 때문에 <ph id="ph1">`selectCommand`</ph> 했는지에 따라는 현재 사용 중인 ADO.NET 공급자를 식별 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> value can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 값일 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>The following code example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 를 사용 하 여 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>The example is unusual in that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is being used not on a Web Forms page, but in the implementation of a middle-tier object as a simple way for a business object to interact with a database.</source>
          <target state="translated">이 예제에서는 일반적인 경우와 않습니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 사용 되는 Web Forms 페이지에 없는 있지만 중간 계층 개체의 구현에 비즈니스 개체에 대 한 간단한 방법으로 데이터베이스와 상호 작용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>The example uses a connection string that is stored in the Web.config file.</source>
          <target state="translated">이 예제에서는 Web.config 파일에 저장 된 연결 문자열을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>The name of the data provider that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>에서 사용하는 데이터 공급자의 이름입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>If no provider is set, the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses the ADO.NET provider for Microsoft SQL Server, by default.</source>
          <target state="translated">공급자를 설정하지 않은 경우 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>는 기본적으로 Microsoft SQL Server용 ADO.NET 공급자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>The connection string used to connect to the underlying database.</source>
          <target state="translated">내부 데이터베이스에 연결하는 데 사용되는 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>The SQL query used to retrieve data from the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 데이터를 검색하는 데 사용되는 SQL 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>If the SQL query is a parameterized SQL string, you might need to add <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> collection.</source>
          <target state="translated">SQL 쿼리가 매개 변수가 있는 SQL 문자열인 경우 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> 개체를 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> 컬렉션에 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> class with the specified connection string and Select command.</source>
          <target state="translated">지정된 연결 문자열과 Select 명령을 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>Because different database products use different varieties of SQL, the syntax of <ph id="ph1">`selectCommand`</ph> depends on the current ADO.NET provider being used, which is identified by the <ph id="ph2">`providerName`</ph> parameter.</source>
          <target state="translated">데이터베이스 제품 마다 다양 한 SQL의 구문 사용 하기 때문에 <ph id="ph1">`selectCommand`</ph> 했는지에 따라는 현재 사용 중인 ADO.NET 공급자를 식별 되는 <ph id="ph2">`providerName`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>For example, if the provider is <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자가 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 대 한 기본 공급자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or the <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 메서드로 검색한 데이터를 데이터 소스 컨트롤에서 캐시하는 시간(초)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The number of seconds that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> caches the results of a <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 작업의 결과를 캐시하는 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The value cannot be negative.</source>
          <target state="translated">값은 음수일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>While data is cached, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the cache rather than from the underlying database.</source>
          <target state="translated">데이터가 캐시 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드는 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the underlying database, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드 내부 데이터베이스에서 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 자동으로 캐시 하는 컨트롤 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 속성이 캐시에 데이터를 캐시 엔트리의 하기 전에 저장 하는 시간 (초)의 수를 나타내는 0 보다 큰 값으로 설정 된 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>A value of 0 indicates an infinitely long cache.</source>
          <target state="translated">값이 0 무한정 캐시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The behavior of the cache is determined by a combination of the duration and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property.</source>
          <target state="translated">캐시의 동작은 기간의 조합으로 결정 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> caches data on the first data retrieval operation, holds it in memory for, at most, the amount of time that is specified by <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> 값은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 첫 번째 데이터 검색 작업에 데이터를 캐시, 많아야 하 여 지정 된 시간 기간 동안 메모리에 보관 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The data might be released before the duration time, if the memory is required.</source>
          <target state="translated">메모리가 필요한 경우 데이터 지속 시간 이전 해제 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The cache is then refreshed during the next operation.</source>
          <target state="translated">다음 작업 중에 캐시 한 다음 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> value, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for each subsequent operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> 값을 데이터 소스 제어의 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 보유 하는 시간 창을 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The cache expires, if there is no activity for a time that is equal to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> value since the last <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">해당 하는 한 번에 대 한 작업이 수행 되지 않은 경우 캐시 만료는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 마지막 이후 값 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control can cache data only when it is in <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤의 경우에 데이터를 캐시할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 모드입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method, if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is set to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> value and caching is also enabled.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 예외를 throw 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드를 하는 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> 값 및 캐시도 사용 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</source>
          <target state="translated">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>If another user requests the same data, the data is retrieved from the cache.</source>
          <target state="translated">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The data is not retrieved by making another call to the database to verify the user's access to the data.</source>
          <target state="translated">데이터에 대 한 사용자의 액세스를 확인 하려면 데이터베이스에 다른 호출 하 여 데이터를 검색 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</source>
          <target state="translated">데이터에 액세스할 수 있는 둘 이상의 사용자 다시 데이터베이스에 대 한 보안 구성으로 확인 하려면 데이터에 각 검색, 캐싱을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, with data caching enabled.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터 캐싱을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> is set to 20 seconds and, because the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph3">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> value by default, users of this page will see fresh data every 20 seconds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 20 초로 설정 때문에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph3">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> 값이이 페이지의 사용자가 기본적으로 새로운 데이터 20 초 마다 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</source>
          <target state="translated">기간과 결합될 때 데이터 소스 컨트롤에서 사용하는 캐시의 동작을 설명하는 캐시 만료 동작을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCacheExpiry" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCacheExpiry" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>While data is cached, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the cache rather than from the underlying database.</source>
          <target state="translated">데이터가 캐시 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드는 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the underlying database, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드 내부 데이터베이스에서 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The behavior of the cache is determined by a combination of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> settings.</source>
          <target state="translated">캐시의 동작의 조합으로 결정 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> caches data on the first data retrieval operation, holds it in memory for the amount of time that is specified by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> property, and then discards it after the time has lapsed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> 값은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 첫 번째 데이터 검색 작업에 데이터를 캐시 하 여 지정 된 시간 동안 메모리에 보유 한 다음는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 속성을 다음 시간 후 삭제 지났기 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The cache is then refreshed during the next operation.</source>
          <target state="translated">다음 작업 중에 캐시 한 다음 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> value, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for each subsequent operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> 값을 데이터 소스 제어의 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 보유 하는 시간 창을 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The cache expires, if there is no activity for a time that is equal to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> value since the last <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">해당 하는 한 번에 대 한 작업이 수행 되지 않은 경우 캐시 만료는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 마지막 이후 값 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control can cache data only when in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 데이터를 캐시할 수의 경우에만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 모드입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method, if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is set to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> value and caching is also enabled.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 예외를 throw 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드를 하는 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> 값 및 캐시도 사용 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</source>
          <target state="translated">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>If another user requests the same data, the data is retrieved from the cache.</source>
          <target state="translated">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The data is not retrieved by making another call to the database to verify the user's access to the data.</source>
          <target state="translated">데이터에 대 한 사용자의 액세스를 확인 하려면 데이터베이스에 다른 호출 하 여 데이터를 검색 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</source>
          <target state="translated">데이터에 액세스할 수 있는 둘 이상의 사용자 다시 데이터베이스에 대 한 보안 구성으로 확인 하려면 데이터에 각 검색, 캐싱을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, with data caching enabled.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터 캐싱을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> value, users will not see fresh data even though the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> value is 20 seconds.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> 값을 새로운 데이터도 표시 되지 것입니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 값은 20 초입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy">
          <source>The cached data is refreshed only if there is no activity on the page for more than 20 seconds since the last page load.</source>
          <target state="translated">캐시 된 데이터는 마지막 페이지 로드 이후 20 초 이상에 대 한 페이지에서 작업이 수행 되지 않은 경우에 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</source>
          <target state="translated">데이터 소스 컨트롤에서 만든 모든 데이터 캐시 개체에 링크된 사용자 정의 키 종속성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>All cache objects are explicitly expired when the key is expired.</source>
          <target state="translated">이 키가 만료되면 모든 캐시 개체도 명시적으로 만료됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>A key that identifies all cache objects created by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>에서 만든 모든 캐시 개체를 식별하는 키입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>While data is cached, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the cache rather than from the underlying database.</source>
          <target state="translated">데이터가 캐시 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드는 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the underlying database, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드 내부 데이터베이스에서 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A&gt;</ph> property to create a dependency between all cache entries that are created by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and the key.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A&gt;</ph> 속성에 의해 만들어진 모든 캐시 항목 간의 종속성을 만들려면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤과 키입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>You can programmatically expire all the cache entries at any time by expiring the key.</source>
          <target state="translated">키 만료 시켜 언제 든 지 모든 캐시 항목을 만료 프로그래밍 방식으로 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control can cache data only when in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 데이터를 캐시할 수의 경우에만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 모드입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method, if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is set to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> value and caching is also enabled.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 예외를 throw 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드를 하는 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> 값 및 캐시도 사용 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>A unique cache entry is created for every combination of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> properties.</source>
          <target state="translated">모든 조합에 대 한 고유 캐시 엔트리가 만들어집니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>Multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> controls can use the same cache entries in scenarios where the controls load the same data from the same underlying database.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 동일한 캐시 항목 시나리오에서 사용할 수는 컨트롤 같은 기본 데이터베이스를 동일한 데이터를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</source>
          <target state="translated">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>If another user requests the same data, the data is retrieved from the cache.</source>
          <target state="translated">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>The data is not retrieved by making another call to the database to verify the user's access to the data.</source>
          <target state="translated">데이터에 대 한 사용자의 액세스를 확인 하려면 데이터베이스에 다른 호출 하 여 데이터를 검색 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency">
          <source>If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</source>
          <target state="translated">데이터에 액세스할 수 있는 둘 이상의 사용자 다시 데이터베이스에 대 한 보안 구성으로 확인 하려면 데이터에 각 검색, 캐싱을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter">
          <source>Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> collection evaluates to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> 컬렉션에 포함된 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 때 데이터 검색 작업이 취소되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a data retrieval operation is canceled when a parameter contained in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> collection evaluated to <ph id="ph3">&lt;see langword="null" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> 컬렉션에 포함된 매개 변수가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>일 때 데이터 검색 작업이 취소되는 경우 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>Gets or sets the value indicating how the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</source>
          <target state="translated">작업 시간 동안 내부 데이터베이스의 행 데이터가 변경된 경우 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤이 업데이트 및 삭제를 수행하는 방법을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property determines whether parameters for old and new values are applied to the <ph id="ph2">`Update`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성에 이전 및 새 값에 대 한 매개 변수 적용 되었는지 여부를 결정은 <ph id="ph2">`Update`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>For example, if the command that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object with the columns <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph6">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> value, parameters are created for <ph id="ph7">`Name`</ph> and <ph id="ph8">`Number`</ph> for the <ph id="ph9">`Update`</ph> method.</source>
          <target state="translated">예를 들어, 즉 명령으로 지정 된는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성에서 반환은 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 열이 포함 된 개체 <ph id="ph3">`Name`</ph> 및 <ph id="ph4">`Number`</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph6">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> 값에 대 한 매개 변수를 생성 됩니다 <ph id="ph7">`Name`</ph> 및 <ph id="ph8">`Number`</ph> 에 대 한는 <ph id="ph9">`Update`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, parameters are created for <ph id="ph3">`Name`</ph>, <ph id="ph4">`Number`</ph>, <ph id="ph5">`original_Name`</ph>, and <ph id="ph6">`original_Number`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값 매개 변수가 대해 만들어진 <ph id="ph3">`Name`</ph>, <ph id="ph4">`Number`</ph>, <ph id="ph5">`original_Name`</ph>, 및 <ph id="ph6">`original_Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>(The exact name of the parameters for the original values depends on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> property.) The <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control then determines if the <ph id="ph3">`Update`</ph> method that is specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property has parameters that match.</source>
          <target state="translated">(원래 값에 대 한 정확한 이름은 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성입니다.) <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하는 경우 다음 결정는 <ph id="ph3">`Update`</ph> 에 지정 된 메서드는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 속성에 일치 하는 매개 변수가 있습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</source>
          <target state="translated">동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어 하려면 데이터 저장소를 사용 하는 기술입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</source>
          <target state="translated">예를 들어 하나의 클라이언트 데이터 읽고는 사용자에 게 제공 하는 동안 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.</source>
          <target state="translated">두 사용자가 데이터를 업데이트 하는 데이터 저장소에 제출 하는 경우 두 클라이언트 모두 동일한 데이터에 대해 서로 다른 값을 업데이트할 수 없기 때문에 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>This is considered a conflict.</source>
          <target state="translated">충돌로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>By setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, your <ph id="ph3">`Update`</ph> method can then compare the old and new values to the original data source to detect conflicts and handle them, as necessary.</source>
          <target state="translated">설정 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값, 프로그램 <ph id="ph3">`Update`</ph> 메서드 충돌을 감지 하 고 처리할 필요에 따라 데이터 원본에 이전 및 새 값 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>Gets or sets the ADO.NET provider–specific connection string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control uses to connect to an underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에서 내부 데이터베이스에 연결하는 데 사용하는 ADO.NET 공급자 관련 연결 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>A .NET Framework data provider–specific string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses to connect to the SQL database that it represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>에서 해당 연결 문자열이 나타내는 SQL 데이터베이스에 연결하는 데 사용하는 .NET Framework 데이터 공급자 관련 문자열입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control can be used with a variety of ADO.NET providers and the syntax of the connection string that is used to connect to an underlying data source is specific to the provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터 원본에 연결 하는 데 사용 되는 연결 문자열의 구문은 공급자와 관련 및 ADO.NET 공급자의 다양 한 컨트롤을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>When you configure a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, you set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property to the type of database (the default is <ph id="ph3">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>), and you set the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property to a connection string that includes information that is required in order to connect to the database.</source>
          <target state="translated">구성 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 설정한 컨트롤을는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성을 데이터베이스의 형식 (기본값은 <ph id="ph3">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>)을 설정 하는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성을 연결 하는 데 필요한 정보를 포함 하는 연결 문자열 에 데이터베이스입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>The contents of a connection string differ depending on what type of database the data source control is accessing.</source>
          <target state="translated">연결 문자열의 내용은 데이터 소스 제어에 액세스 하는 데이터베이스의 유형에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control requires a server name, database (catalog) name, and information about how to authenticate the user when connecting to a SQL Server.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤을 사용 하려면 서버 이름, 데이터베이스 (카탈로그) 이름 및 SQL Server에 연결할 때 사용자를 인증 하는 방법에 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>For information about the contents of connection strings, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property for the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> class, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> property for the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> class, <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property for the <ph id="ph6">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> class, or the <ph id="ph7">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> property for the <ph id="ph8">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> class.</source>
          <target state="translated">연결 문자열의 내용에 대 한 정보를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 속성에 대 한는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 클래스 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A&gt;</ph> 속성에 대 한는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> 클래스 <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> 속성에 대 한는 <ph id="ph6">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> 클래스 또는 <ph id="ph7">&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;</ph> 에 대 한 속성의 <ph id="ph8">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>If you change the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised, causing any controls that are bound to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to rebind.</source>
          <target state="translated">변경 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트에 바인딩된 모든 컨트롤을 일으키는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>For information about storing a connection string, see <bpt id="p1">[</bpt>How To: Secure Connection Strings when Using Data Source Controls<ept id="p1">](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)</ept>.</source>
          <target state="translated">연결 문자열을 저장 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>How To:를 사용 하 여 데이터 소스 제어 하는 경우의 보안 연결 문자열<ept id="p1">](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>The first code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property to connect to a Microsoft SQL Server database and display the results of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">첫 번째 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성을 Microsoft SQL Server 데이터베이스에 연결 하 고 결과를 표시는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>The second code example demonstrates a more complex scenario, where a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is used to display and update data in a password-protected Microsoft Access database.</source>
          <target state="translated">두 번째 코드 예제는 더 복잡 한 시나리오를 보여 줍니다. 여기서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 표시 하 고 암호로 보호 된 Microsoft Access 데이터베이스의 데이터를 업데이트 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>In each case, the <ph id="ph1">`connectionStrings`</ph> element of the Web.config file is shown first, followed by the ASP.NET page that contains the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">각각의 경우에는 <ph id="ph1">`connectionStrings`</ph> Web.config 파일의 요소는 먼저 표시 표시 ASP.NET 페이지를 포함 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property to connect to a SQL Server database and display the results of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성을 SQL Server 데이터베이스에 연결 하 고 결과를 표시는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>The following code example demonstrates a more complex scenario than the preceding code example, where a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is used to display and update data in a password-protected Access database.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제 보다 더 복잡 한 시나리오를 보여 줍니다. 여기서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 표시 하 고 암호로 보호 된 Access 데이터베이스의 데이터를 업데이트 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> is used with Access, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property is set to the <ph id="ph3">&lt;xref:System.Data.OleDb&gt;</ph> provider, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property is set to an appropriate connection string for a UNC-shared Access database.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 액세스와 함께 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph3">&lt;xref:System.Data.OleDb&gt;</ph> 공급자 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> UNC 공유 Access 데이터베이스에 대 한 연결 문자열 속성입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control displays orders with shipment dates.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 주문이 배송 날짜와 함께 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>You can update an order by checking the appropriate check box, and then clicking the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> button.</source>
          <target state="translated">해당 확인란을 선택한 다음 클릭 하 여 주문을 업데이트할 수는 <bpt id="p1">**</bpt>업데이트<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>This example includes a password in plain text only for illustration purposes.</source>
          <target state="translated">이 예제는 설명 위한 용도로 사용 되는 일반 텍스트로 암호를 포함합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>In a production application, connection strings that include passwords should be encrypted.</source>
          <target state="translated">프로덕션 응용 프로그램에서 암호를 포함 하는 연결 문자열을 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString">
          <source>For more information, see <bpt id="p1">[</bpt>Protecting Connection Information<ept id="p1">](~/docs/framework/data/adonet/protecting-connection-information.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>연결 정보 보호<ept id="p1">](~/docs/framework/data/adonet/protecting-connection-information.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)">
          <source>The name of the data source view.</source>
          <target state="translated">데이터 소스 뷰의 이름입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)">
          <source>Creates a data source view object that is associated with the data source control.</source>
          <target state="translated">데이터 소스 컨트롤과 연결된 데이터 소스 뷰 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>와 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A&gt;</ph> method to return strongly typed data source view objects.</source>
          <target state="translated">파생 된 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 재정의할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A&gt;</ph> 강력 하 게 반환 하는 메서드는 데이터 원본 뷰 개체를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>Gets or sets the data retrieval mode that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control uses to fetch data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에서 데이터를 페치하는 데 사용할 데이터 검색 모드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>The default is the  <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /&gt;</ph> value.</source>
          <target state="translated">기본값은는 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>The data retrieval mode identifies how a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control retrieves data from the underlying database.</source>
          <target state="translated">데이터 검색 모드 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 기본 데이터베이스에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> value, data is loaded into a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> object and stored in memory on the server.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 값, 데이터에 로드 됩니다는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 개체와 메모리는 서버에 저장된 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>This enables scenarios where user interface controls, such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, offer sorting, filtering, and paging capabilities.</source>
          <target state="translated">이 시나리오와 같은 사용자 인터페이스 컨트롤에서 통해 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, 정렬, 필터링 및 페이징 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> value, data is retrieved by a <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> object, which is a forward-only, read-only cursor.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> 여 데이터를 검색 값을는 <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> 개체는 읽기 전용, 정방향 전용 커서입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>The specific type of the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> object depends on the NET data provider that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> uses, which is identified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">특정 유형의 <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> 개체 순수한 데이터 공급자에 따라 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 으로 식별 되는 사용 하 여는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control uses the provider for Microsoft SQL Server, the <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, and the data reader is a <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> object.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤의 공급자를 사용 하 여 Microsoft SQL server는 <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 데이터 판독기는는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>If you change the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised, causing any controls that are bound to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> to rebind.</source>
          <target state="translated">변경 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트에 바인딩된 모든 컨트롤을 일으키는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 다시 바인딩해야 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> value for a scenario with a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ListBox&gt;</ph> control that requires no sorting, paging, nor filtering.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤을 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> 사용 하는 시나리오에 대 한 값을 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ListBox&gt;</ph> 정렬 없음 필요한 컨트롤을, 페이징 또는 필터링 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /&gt;</ph> property is not one of the values defined in the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /&gt;</ph>에 정의된 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>Performs a delete operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph> SQL string and any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph> SQL 문자열과 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /&gt;</ph> 컬렉션에 있는 매개 변수를 사용하여 삭제 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>A value that represents the number of rows deleted from the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 삭제되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>Before the delete operation is performed, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated">삭제 작업을 수행 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete operation.</source>
          <target state="translated">이 이벤트는 매개 변수의 값을 확인 하 고 작업을 삭제 하기 전에 전처리를 수행할 수를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>After the operation completes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> event.</source>
          <target state="translated">작업이 완료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>You can handle this event to examine any return values and error codes and to perform any post-processing.</source>
          <target state="translated">모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method is provided for programmatic access to the <ph id="ph2">`Delete`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 메서드 프로그래밍 방식의 액세스를 위해 제공 됩니다는 <ph id="ph2">`Delete`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is associated with a data-bound control, the data-bound control automatically calls the <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 데이터 바인딩된 컨트롤에 연결 되 면 데이터 바인딩된 컨트롤이 자동으로 호출 된 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>To perform the operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> builds a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> values, and then executes the <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> against the underlying database.</source>
          <target state="translated">작업을 수행 하기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 빌드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 값, 및 다음 실행에서 <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 기본 데이터베이스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> text to delete an order from the Northwind database.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 주문을 Northwind 데이터베이스에서 삭제 하는 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>Initially, data is retrieved from the Orders table and displayed in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">데이터는 Orders 테이블에서 검색 하 고에 표시 하는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>You must explicitly declare the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> property and call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method when using data-bound controls, such as the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> (unlike other controls, such as <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, which automatically populate the parameters and call the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method on a data source control).</source>
          <target state="translated">명시적으로 선언 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 속성과 호출은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 와 같은 데이터 바인딩된 컨트롤을 사용 하는 경우 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> (다른 컨트롤과 달리와 같은 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>는 자동으로 채울는 매개 변수 및 호출 된 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 데이터 소스 제어에서 메서드).</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event is delegated to the private <ph id="ph2">`OnDelete`</ph> event handler, which explicitly calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이벤트 개인에 게 위임 <ph id="ph2">`OnDelete`</ph> 명시적으로 호출 하는 이벤트 처리기는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Delete">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control uses to delete data from the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤이 내부 데이터베이스에서 데이터를 삭제하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>An SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses to delete data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>에서 데이터를 삭제하는 데 사용하는 SQL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> represents an SQL query or the name of a stored procedure, and is used by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내고에서 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>If the SQL string is a parameterized query or command, the syntax of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리 또는 명령 이면 매개 변수 구문의 사용 중인 ADO.NET 공급자에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the syntax of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스의 매개 변수 구문은 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> property can be an SQL string or the name of a stored procedure, if the database supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 데이터베이스 저장된 프로시저를 지 원하는 경우 속성은 SQL 문자열 또는 저장된 프로시저의 이름에 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>For security purposes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> property is not stored in view state.</source>
          <target state="translated">보안상의 이유로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 속성은 뷰 상태에 저장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</source>
          <target state="translated">클라이언트에서 상태 보기의 내용을 디코딩할 수 있기 때문에 보기에 데이터베이스 구조에 대 한 중요 한 정보를 저장 상태로 될 수 정보 공개 문제점 취약점이 있습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> text to delete an order from the Northwind database Orders table.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> Northwind 데이터베이스의 Orders 테이블에서 주문을 삭제 하는 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>Data is retrieved from the Orders table and displayed in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">데이터는 Orders 테이블에서 검색 되어에 표시 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> renders a <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button automatically when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 렌더링는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 자동으로 단추 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>Additionally, when the <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> collection and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method.</source>
          <target state="translated">또한,는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 단추를 클릭 하면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 컬렉션 및 호출은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand">
          <source>Finally, because this code example deletes data, an event handler is added to attempt to back up the database to disk before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> operation is performed.</source>
          <target state="translated">마지막으로,이 코드 예제에서는 데이터를 삭제 하기 때문에 이벤트 처리기가 추가 되기 전에 디스크에 데이터베이스를 백업 하려고 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 작업이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph> property is an SQL statement or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleted">
          <source>Occurs when a delete operation has completed.</source>
          <target state="translated">삭제 작업이 완료된 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> event to examine the values of output parameters after a delete operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> 삭제 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleted">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>Gets the parameters collection that contains the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph> property from the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤에 연결된 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열의 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>Make sure that no <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> controls in the data-bound control that you bind to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control have names that match any parameter names in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> collection.</source>
          <target state="translated">다음 사항을 확인 없는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 에 바인딩할 수 있는 데이터 바인딩된 컨트롤의 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤의 모든 매개 변수 이름과 일치 하는 이름을 사용할는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>Parameters that have the same name as bound fields are excluded from the SQL command, and a "parameter was not supplied" error might result.</source>
          <target state="translated">바인딩된 필드 "매개 변수가 제공 되지 않았습니다." 오류 및 SQL 명령에서 제외 된와 동일한 이름을 가진 매개 변수가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, the parameters are created for both the old and new values of the data.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값을 매개 변수 데이터의 이전 및 새 값에 대해 만들어집니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>The parameters for the old values are named according to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수를 이전 값에 따라 지정 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>Depending on the ADO.NET provider, the order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> collection might be important.</source>
          <target state="translated">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 컬렉션 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리에 표시 되는 매개 변수 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, 매개 변수의 이름을 SQL 쿼리의 자리 표시자와 비교 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> text to delete an order from the Northwind database.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 주문을 Northwind 데이터베이스에서 삭제 하는 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>Initially, data is retrieved from the Orders table and displayed in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">데이터는 Orders 테이블에서 검색 하 고에 표시 하는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>You must explicitly declare <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> property and call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method when using data-bound controls, such as <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> (unlike other controls, such as <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, which automatically populate the parameters and call <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> on a data source control).</source>
          <target state="translated">명시적으로 선언 해야 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 속성과 호출은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 메서드 같은 데이터 바인딩된 컨트롤을 사용할 경우 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> (다른 컨트롤과 달리와 같은 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, 매개 변수는 자동으로 채울 및 호출 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 데이터 소스 제어에).</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event is delegated to the private <ph id="ph2">`OnDelete`</ph> event handler, which explicitly calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이벤트 개인에 게 위임 <ph id="ph2">`OnDelete`</ph> 명시적으로 호출 하는 이벤트 처리기는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>Occurs before a delete operation.</source>
          <target state="translated">삭제 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the delete operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 삭제 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>The connection to the underlying data source is not yet open when the event handler delegate is called.</source>
          <target state="translated">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>Therefore, you cannot cancel the operation directly by calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object that is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> object.</source>
          <target state="translated">직접 호출 하 여 작업을 취소할 수 없습니다 따라서는 <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 의해 노출 되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>You can, however, cancel the database operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> object to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">그러나 설정 하 여 데이터베이스 작업을 취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 개체를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event that is raised before a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> operation occurs.</source>
          <target state="translated">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 이벤트 전에 발생 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 작업도 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Deleting">
          <source>Because this example deletes data from the Northwind database, an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> handler is added to attempt to back up the database to disk before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> operation is performed.</source>
          <target state="translated">이 예제에서는 Northwind 데이터베이스에서 데이터를 삭제 하기 때문에 프로그램 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> 처리기를 추가 하기 전에 디스크에 데이터베이스를 백업 하려고 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 작업이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control has data caching enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에서 데이터 캐싱이 활성화되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data caching is enabled for the data source control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터 소스 컨트롤에서 데이터 캐싱을 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>While data is cached, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the cache rather than from the underlying database.</source>
          <target state="translated">데이터가 캐시 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드는 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method retrieves data from the underlying database, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드 내부 데이터베이스에서 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before retrieving a fresh set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 자동으로 캐시 하는 컨트롤 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 속성 캐시를 검색 하기 전에 데이터를 저장 하는 시간 (초)의 수를 나타내는 0 보다 큰 값으로 설정 되는 새 집합입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</source>
          <target state="translated">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>If another user requests the same data, the data is retrieved from the cache.</source>
          <target state="translated">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>The data is not retrieved by making another call to the database to verify the user's access to the data.</source>
          <target state="translated">데이터에 대 한 사용자의 액세스를 확인 하려면 데이터베이스에 다른 호출 하 여 데이터를 검색 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</source>
          <target state="translated">데이터에 액세스할 수 있는 둘 이상의 사용자 다시 데이터베이스에 대 한 보안 구성으로 확인 하려면 데이터에 각 검색, 캐싱을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, with data caching enabled.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터 캐싱을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> is set to 20 seconds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 20 초로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> field by default, users of this page will see fresh data every 20 seconds.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> 기본적으로이 페이지의 사용자 필드 새로운 데이터 20 초 마다 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> when caching is not supported by the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /&gt;</ph>에서 캐싱 기능을 지원하지 않을 때 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>Gets or sets a filtering expression that is applied when the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 메서드가 호출될 때 적용되는 필터링 식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>A string that represents a filtering expression applied when data is retrieved using the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 메서드를 사용하여 데이터가 검색될 때 적용되는 필터링 식을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property value is a format string expression (a string that is processed by the <ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> method) that uses the values in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> collection for any substitution parameters included in the string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성 값은 형식 문자열 식 (에서 처리 하는 문자열의 <ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph> 메서드)의 값을 사용 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 문자열에 포함 된 대체 매개 변수 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The filter expression syntax is the same syntax that is accepted by the <ph id="ph1">&lt;xref:System.Data.DataView.RowFilter%2A&gt;</ph> property, because the filter expression is applied to the <ph id="ph2">&lt;xref:System.Data.DataView.RowFilter%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> object that is returned from executing the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">필터 식 구문은에 허용 되는 동일한 구문을 <ph id="ph1">&lt;xref:System.Data.DataView.RowFilter%2A&gt;</ph> 속성을 필터 식에 적용 되므로 <ph id="ph2">&lt;xref:System.Data.DataView.RowFilter%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> 실행에서 반환 되는 개체는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>If you add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection, you can also include format string placeholders (for example, <ph id="ph2">`"{0}")`</ph> in the expression to substitute for parameter values.</source>
          <target state="translated">매개 변수를 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션 형식 문자열 자리 표시자를 포함할 수도 있습니다 (예를 들어 <ph id="ph2">`"{0}")`</ph> 매개 변수 값에 대 한 대체 식에 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The placeholders are replaced according to the index of the parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">인덱스에 있는 매개 변수 자리 표시자는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>If an object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection is <ph id="ph2">`null`</ph>, the object will be replaced by an empty string.</source>
          <target state="translated">에 있는 개체가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션이 <ph id="ph2">`null`</ph>, 개체가 빈 문자열로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>You can include parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수를 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>If the parameter is a string or character type, enclose the parameter in single quotation marks.</source>
          <target state="translated">매개 변수는 문자열 또는 문자 형식인 경우 매개 변수를 작은따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>Quotation marks are not required, if the parameter is a numeric type.</source>
          <target state="translated">매개 변수가 숫자 형식인 경우에 인용 부호를 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection contains the parameters that are evaluated for the placeholders that are found in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 에 있는 자리 표시자에 대 한 계산 되는 매개 변수를 포함 하는 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports filtering data only when in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터 필터링을 지원 하는 컨트롤의 경우에만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 모드입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The following code example demonstrates how to retrieve data from the Northwind database and filter it using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> string and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터링 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 문자열 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property is applied any time the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is executed to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성에는 언제 든 지 적용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 데이터를 검색할 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> contains a placeholder for a filter parameter, which is contained in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 에 포함 된 필터 매개 변수에 대 한 자리 표시자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>In addition, the filter parameter is a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> object that is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">또한 filter 매개 변수는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 바인딩되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control has its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>, any change in the selection for the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control causes the page to post information back to the server and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to rebind to the data source control with the new filter.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤에 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`true`</ph>, 모든 변경에 대 한 선택 영역에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤이 서버에 대 한 정보를 게시 하는 페이지 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터 원본에 바인딩됩니다 새 필터를 사용을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /&gt;</ph> property was set and the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> is in <ph id="ph3">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /&gt;</ph> mode.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /&gt;</ph> 속성이 설정되었고 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /&gt;</ph> 모드인 경우</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Filtering">
          <source>Occurs before a filter operation.</source>
          <target state="translated">필터 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Filtering">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to perform validation operations on filter parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs a filter operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 하기 전에 필터 매개 변수 값에 대해 유효성 검사 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 필터 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Filtering">
          <source>You can cancel the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method by setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&gt;</ph> object to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 설정 하 여 메서드는 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&gt;</ph> 개체를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Filtering">
          <source>The event is raised only if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property is set.</source>
          <target state="translated">경우에 이벤트가 발생 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Filtering">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType&gt;</ph> event delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType&gt;</ph> 에 위임 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType&gt;</ph> 의 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Filtering">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>Gets a collection of parameters that are associated with any parameter placeholders that are in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /&gt;</ph> string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /&gt;</ph> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains a set of parameters associated with any parameter placeholders found in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>The parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection are associated with any parameters that are specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션에 지정 된 매개 변수와 연결 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>The parameter placeholders that are specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property are matched by order to parameter objects in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is called.</source>
          <target state="translated">에 지정 된 매개 변수 자리 표시자는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성의 매개 변수 개체는 순서와 일치 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션 때는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터링 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is applied anytime the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is executed to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 언제 든 지 적용 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 데이터를 검색할 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property contains a placeholder for a filter parameter, which is contained in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성에 포함 된 필터 매개 변수에 대 한 자리 표시자 포함는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>In addition, the filter parameter is a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> object that is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">또한 filter 매개 변수는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 바인딩되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control has its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>, any change in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> selection causes the page to post information back to the server and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to rebind to the data source control with the new filter.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤에 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`true`</ph>, 변경 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 선택 하면 서버에 대 한 정보를 게시 하는 페이지 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 함께 데이터 소스 제어에 다시 바인딩하려면 컨트롤의 새 필터입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderFactory" /&gt;</ph> object that is associated with the ADO.NET provider that is identified by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderFactory" /&gt;</ph> 속성으로 식별되는 ADO.NET 공급자에 연결된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderFactory" /&gt;</ph> that represents the identified ADO.NET provider; otherwise, and instance of the <ph id="ph2">&lt;see cref="N:System.Data.SqlClient" /&gt;</ph>, if no provider is set.</source>
          <target state="translated">식별된 ADO.NET 공급자를 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderFactory" /&gt;</ph>를 반환하며, 설정된 공급자가 없는 경우에는 <ph id="ph2">&lt;see cref="N:System.Data.SqlClient" /&gt;</ph>의 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> property is used by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to create the correct ADO.NET connection, command, and parameter objects when interacting with a database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> 속성은 사용는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터베이스와 상호 작용할 때 올바른 ADO.NET 연결, 명령 및 매개 변수 개체를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
          <source>The name of the view to retrieve.</source>
          <target state="translated">검색할 뷰의 이름입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
          <source>Because the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> supports only one view, <bpt id="p1">&lt;c&gt;</bpt>viewName<ept id="p1">&lt;/c&gt;</ept> is ignored.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>는 한 개의 뷰만 지원하기 때문에 <bpt id="p1">&lt;c&gt;</bpt>viewName<ept id="p1">&lt;/c&gt;</ept>은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
          <source>Gets the named data source view that is associated with the data source control.</source>
          <target state="translated">데이터 소스 컨트롤과 연결된 명명된 데이터 소스 뷰를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> named "Table" that is associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>와 연결된 "Table"이라는 이름의 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports only one data source view.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤은 하나의 데이터 원본 뷰를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
          <source>As with all data source view objects, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the data source control defines its capabilities, performs all work that is necessary to retrieve data from the underlying database, and performs operations, such as sorting, inserting, deleting, and updating.</source>
          <target state="translated">모든 데이터 원본 뷰 개체와 마찬가지로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체 데이터 소스 제어와 연결 된 해당 기능을 정의 기본 데이터베이스에서 데이터를 검색 하는 데 필요한 되며 정렬, 같은 작업을 수행 하는 모든 작업 수행 삽입, 삭제 및 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)">
          <source><ph id="ph1">&lt;paramref name="viewName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or something other than <bpt id="p1">&lt;c&gt;</bpt>Table<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="viewName" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 <bpt id="p1">&lt;c&gt;</bpt>Table<ept id="p1">&lt;/c&gt;</ept>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames">
          <source>Gets a collection of names representing the list of view objects that are associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤과 연결된 뷰 개체 목록을 나타내는 이름의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the names of the views associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>와 연결된 뷰의 이름이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports only one view on its underlying data, named <ph id="ph2">`"Table"`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에서 명명 된 원본 데이터를 하나의 뷰만 지원 <ph id="ph2">`"Table"`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A&gt;</ph> method returns a single-element collection of this one view name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A&gt;</ph> 메서드가 하나의 뷰 이름의 단일 요소 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>Performs an insert operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph> SQL string and any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph> SQL 문자열과 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /&gt;</ph> 컬렉션에 있는 매개 변수를 사용하여 삽입 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>A value that represents the number of rows inserted into the underlying database.</source>
          <target state="translated">내부 데이터베이스로 삽입되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>Before the insert operation is performed, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">삽입 작업을 수행 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>You can handle this event to examine the values of the parameters and to perform any preprocessing before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> operation.</source>
          <target state="translated">이 이벤트는 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수를 처리할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>To perform an insert operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object builds an <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> properties, and then executes the <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object against the underlying database.</source>
          <target state="translated">삽입 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 속성을 빌드한 다음 실행에서 <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 기본 데이터베이스에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>After the operation completes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event.</source>
          <target state="translated">작업이 완료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>You can handle this event to examine any return values and error codes and to perform any post-processing.</source>
          <target state="translated">모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method is provided for programmatic access to the <ph id="ph2">`Insert`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드 프로그래밍 방식의 액세스를 위해 제공 됩니다는 <ph id="ph2">`Insert`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is associated with a data-bound control, the data-bound control automatically calls the <ph id="ph2">`Insert`</ph> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 데이터 바인딩된 컨트롤에 연결 되 면 데이터 바인딩된 컨트롤이 자동으로 호출 된 <ph id="ph2">`Insert`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>The following code example demonstrates how to insert data into a database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and a simple Web Forms page.</source>
          <target state="translated">사용 하 여 데이터베이스에 데이터를 삽입 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 및 간단한 Web Forms 페이지.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>The current data in the Data table is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">데이터 테이블의 현재 데이터에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>You can add new records by entering values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and then clicking the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">값을 입력 하 여 새 레코드를 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤과 클릭 한 다음는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>When the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button is clicked, the specified values are inserted into the database, and then the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> is refreshed.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추를 클릭 하면, 지정된 된 값은 데이터베이스에 삽입 한 다음은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 가 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>This example includes a text box that accepts user input, which is a potential security threat and values are inserted into parameters without validation, which is also a potential security threat.</source>
          <target state="translated">잠재적 보안 위협이 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적 보안 위협이 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>This example shows how to use declarative syntax for data access.</source>
          <target state="translated">이 예제에는 데이터 액세스를 위한 선언 구문을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>For information about how to access data by using code instead of markup, see <bpt id="p1">[</bpt>Accessing data in Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>.</source>
          <target state="translated">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Visual Studio에서 데이터 액세스<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Insert">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control uses to insert data into the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에서 내부 데이터베이스에 데이터를 삽입하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>An SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses to insert data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>에서 데이터를 삽입하는 데 사용하는 SQL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> represents either an SQL query or the name of a stored procedure, and is used by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내고에서 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>This property delegates to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">이 속성에 위임는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 와 연결 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>For security purposes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> property is not stored is view state.</source>
          <target state="translated">보안상의 이유로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 속성은 저장 되지 뷰 상태입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</source>
          <target state="translated">클라이언트에서 상태 보기의 내용을 디코딩할 수 있기 때문에 보기에 데이터베이스 구조에 대 한 중요 한 정보를 저장 상태로 될 수 정보 공개 문제점 취약점이 있습니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The first code example demonstrates how to insert data into a database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and a simple Web Forms page.</source>
          <target state="translated">첫 번째 코드 예제에 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 및 간단한 Web Forms 페이지.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The second code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and how to use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row into the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and as a form to insert new records.</source>
          <target state="translated">두 번째 코드 예제에 표시 하 고 Microsoft SQL Server에서 데이터를 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 및 사용 하는 방법을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에 선택 된 행의 세부 사항을 볼 수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>These examples show how to use declarative syntax for data access.</source>
          <target state="translated">이 예에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>For information about how to access data by using code instead of markup, see <bpt id="p1">[</bpt>Accessing data in Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>.</source>
          <target state="translated">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Visual Studio에서 데이터 액세스<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The following code example demonstrates how to insert data into a database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and a simple Web Forms page.</source>
          <target state="translated">사용 하 여 데이터베이스에 데이터를 삽입 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 및 간단한 Web Forms 페이지.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The current data in the Data table is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">데이터 테이블의 현재 데이터에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>You can add new records by entering values into the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and then clicking the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">에 값을 입력 하 여 새 레코드를 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤과 클릭 한 다음는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>When the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button is clicked, the specified values are inserted into the database, and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control is refreshed.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추를 클릭 하면, 지정 된 값은 데이터베이스에 삽입 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</source>
          <target state="translated">잠재적 보안 위협이 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적 보안 위협이 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The following code example demonstrates how to retrieve data from SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and how to use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에서는 SQL Server에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 및 사용 하는 방법을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 정보를는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensures that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand">
          <source>Finally, after data is inserted into the database by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 데이터베이스에 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph> property is an SQL statement or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>The following code example demonstrates how to retrieve data from a Microsoft SQL Server database and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에 표시 하는 Microsoft SQL Server 데이터베이스에서 데이터를 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>It also demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 사항을 볼 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 형태로 새 레코드를 삽입 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control displays a set of data and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> displays the details for a particular row.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤에 데이터 집합을 표시 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 특정 행에 대 한 세부 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>The stored procedure name is set in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> property and identified as a stored procedure by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> value.</source>
          <target state="translated">설정 저장된 프로시저 이름을 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 속성을 설정 하 여 저장된 프로시저로 식별 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType">
          <source>After data is inserted into the database by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">데이터베이스에 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키 값 표시 됩니다 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 의 메서드는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤은 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>Occurs when an insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event to examine the values of output parameters after an insert operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 삽입 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and how to use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 및 사용 하는 방법을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 정보를는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>This example shows how to use declarative syntax for data access.</source>
          <target state="translated">이 예제에는 데이터 액세스를 위한 선언 구문을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>For information about how to access data by using code instead of markup, see <bpt id="p1">[</bpt>Accessing data in Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>.</source>
          <target state="translated">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Visual Studio에서 데이터 액세스<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensures that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserted">
          <source>Finally, after data is inserted into the database by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 데이터베이스에 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키 값 표시 됩니다 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>Occurs before an insert operation.</source>
          <target state="translated">삽입 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the insert operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 삽입 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>The connection to the underlying data source is not yet open when the event handler delegate is called.</source>
          <target state="translated">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>Therefore, you cannot cancel the operation directly by calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object that is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> property.</source>
          <target state="translated">직접 호출 하 여 작업을 취소할 수 없습니다 따라서는 <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 의해 노출 되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>You can, however, cancel the database operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> object to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">그러나 설정 하 여 데이터베이스 작업을 취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 개체를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and how to use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 및 사용 하는 방법을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 정보를는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>This example shows how to use declarative syntax for data access.</source>
          <target state="translated">이 예제에는 데이터 액세스를 위한 선언 구문을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>For information about how to access data by using code instead of markup, see <bpt id="p1">[</bpt>Accessing data in Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>.</source>
          <target state="translated">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Visual Studio에서 데이터 액세스<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensures that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Inserting">
          <source>Finally, after data is inserted into the database by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">`DataBind`</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 데이터베이스에 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키 값 표시 됩니다 및 <ph id="ph4">`DataBind`</ph> 는 메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>Gets the parameters collection that contains the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph> property from the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤에 연결된 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열의 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>Depending on the ADO.NET provider, the order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection might be important.</source>
          <target state="translated">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 컬렉션 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리는 매개 변수가 표시 되는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>The following code example demonstrates how to insert data into a database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and a simple Web Forms page.</source>
          <target state="translated">사용 하 여 데이터베이스에 데이터를 삽입 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 및 간단한 Web Forms 페이지.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>The current data in the Data table is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">데이터 테이블의 현재 데이터에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>You can add new records by entering values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and then clicking the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">값을 입력 하 여 새 레코드를 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤과 클릭 한 다음는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>When the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button is clicked, the specified values are inserted into the database, and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control is refreshed.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추를 클릭 하면, 지정 된 값은 데이터베이스에 삽입 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</source>
          <target state="translated">잠재적 보안 위협이 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적 보안 위협이 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>This example shows how to use declarative syntax for data access.</source>
          <target state="translated">이 예제에는 데이터 액세스를 위한 선언 구문을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters">
          <source>For information about how to access data by using code instead of markup, see <bpt id="p1">[</bpt>Accessing data in Visual Studio<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>.</source>
          <target state="translated">태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Visual Studio에서 데이터 액세스<ept id="p1">](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)">
          <source>An object that represents the state of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>의 상태를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)">
          <source>Loads the state of the properties in the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control that need to be persisted.</source>
          <target state="translated">유지해야 하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에 있는 속성의 상태를 로드합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A&gt;</ph> method is used to load the previously saved view state of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A&gt;</ph> 메서드는 이전에 저장 된 뷰 상태를 로드 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>Gets or sets a format string to apply to the names of any parameters that are passed to the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /&gt;</ph> 메서드에 전달된 모든 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>A string that represents a format string applied to the names of any <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> parameters passed to the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /&gt;</ph> 메서드에 전달된 모든 <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> 매개 변수의 이름에 적용된 서식 문자열을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>The default is "{0}".</source>
          <target state="translated">기본값은 "{0}"입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> format string is applied only to primary keys, such as those that are identified by the <ph id="ph2">`DataKeyNames`</ph> property of the associated data-bound control, or in delete and update scenarios where the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value and a set of <ph id="ph5">`oldValues`</ph> are passed to the corresponding data method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> 형식 문자열이으로 식별 하는 것과 같은 기본 키에만 적용 되는 <ph id="ph2">`DataKeyNames`</ph> 삭제 또는 연결된 된 데이터 바인딩 컨트롤의 속성 업데이트 시나리오 및 위치는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 는 속성이<ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph>값과 집합이 <ph id="ph5">`oldValues`</ph> 해당 데이터 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>In this case, the format string is applied to each parameter name in the <ph id="ph1">`oldValues`</ph> collection.</source>
          <target state="translated">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 <ph id="ph1">`oldValues`</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>Two common scenarios where you might change the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> property are as follows:</source>
          <target state="translated">변경할 수 있는 두 가지 일반적인 시나리오는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>To differentiate between old and new values in updates.</source>
          <target state="translated">이전 값과 새 값 업데이트에 달라 집니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, parameters for both the original and new values are added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 의 값, 매개 변수는 원래 값과 새 값 모두에 추가 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>Without the formatting string, two parameters with the same name would be created for each data field.</source>
          <target state="translated">서식 문자열 사용 하지 않고 동일한 이름 가진 두 개의 매개 변수는 각 데이터 필드에 대 한 만들어졌습니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>By changing the name of the original value parameter, you can compare the data to the original data source to detect conflicts and compare key values.</source>
          <target state="translated">원래 값 매개 변수의 이름을 변경 하 여 충돌을 감지 하 고 키 값을 비교 하려면 데이터 원본에 데이터를 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString">
          <source>Some visual designers implement a particular naming scheme for original values and keys.</source>
          <target state="translated">원래 값 및 키에 대 한 특정 이름 지정 체계를 구현 하는 일부 시각적 디자이너입니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)">
          <source>Adds a <ph id="ph1">&lt;see cref="E:System.Web.UI.Page.LoadComplete" /&gt;</ph> event handler to the <ph id="ph2">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> control that contains the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.Page.LoadComplete" /&gt;</ph> 이벤트 처리기를 <ph id="ph2">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> 컨트롤이 포함된 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에 추가합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)">
          <source>The event handler that is added by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> object updates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> values.</source>
          <target state="translated">추가 되는 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 업데이트 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)">
          <source>If the values are updated, the <ph id="ph1">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised, causing any controls that are bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to rebind.</source>
          <target state="translated">값이 업데이트 되는 <ph id="ph1">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트에 바인딩된 모든 컨트롤을 일으키는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>Gets or sets the name of the .NET Framework data provider that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control uses to connect to an underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤이 내부 데이터 소스에 연결하기 위해 사용하는 .NET Framework 데이터 공급자의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The name of the data provider that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses; otherwise, the ADO.NET provider for Microsoft SQL Server, if no provider is set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 사용하는 데이터 공급자의 이름을 반환하며 설정된 공급자가 없는 경우에는 Microsoft SQL Server용 ADO.NET 공급자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The default is the ADO.NET provider for Microsoft SQL Server.</source>
          <target state="translated">기본값은 Microsoft SQL Server용 ADO.NET 공급자입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The .NET Framework includes the following data providers:</source>
          <target state="translated">.NET Framework에는 다음 데이터 공급자에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider is the default .NET Framework Data Provider for SQL Server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 공급자는 기본.NET Framework Data Provider for SQL Server.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> provider is the .NET Framework Data Provider for OLE DB.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 공급자는.NET Framework Data Provider for OLE DB 합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> provider is the .NET Framework Data Provider for ODBC.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자는.NET Framework Data Provider for ODBC 합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient?displayProperty=nameWithType&gt;</ph> provider is the .NET Framework Data Provider for Oracle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient?displayProperty=nameWithType&gt;</ph> 공급자는.NET Framework Data Provider for Oracle입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property is never set to the name of an unmanaged ADO.NET provider, such as <ph id="ph2">`MSDAORA`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 되지 속성은 사용 하는 관리 되지 않는 ADO.NET 공급자의 이름으로 같은 <ph id="ph2">`MSDAORA`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>For more information, see <bpt id="p1">[</bpt>Selecting Data Using the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤을 사용 하 여 데이터를 선택<ept id="p1">](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>If you change the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> event is raised, causing any controls that are bound to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> to rebind.</source>
          <target state="translated">변경 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt;</ph> 이벤트에 바인딩된 모든 컨트롤을 일으키는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 다시 바인딩해야 합니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>A list of available providers is specified in the <ph id="ph1">`DbProviderFactories`</ph> subsection of the <ph id="ph2">`system.data`</ph> section of the Machine.config file.</source>
          <target state="translated">사용 가능한 공급자 목록에 지정 된 된 <ph id="ph1">`DbProviderFactories`</ph> 하위 섹션은 <ph id="ph2">`system.data`</ph> Machine.config 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The first code demonstrates how to connect to a SQL Server database using the default .NET Framework Data Provider for SQL Server for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">첫 번째 코드에 대 한 SQL Server에 대 한.NET Framework Data Provider을 기본값을 사용 하 여 SQL Server 데이터베이스에 연결 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The second code example demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">두 번째 코드 예제에서는.NET Framework Data Provider for ODBC를 사용 하 여 ODBC 데이터베이스에 연결 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The following code example demonstrates how to connect to a SQL Server database using the default data provider for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">에 대 한 기본 데이터 공급자를 사용 하 여 SQL Server 데이터베이스에 연결 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property is not explicitly set, the default provider is used.</source>
          <target state="translated">때마다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성이 명시적으로 설정 되지 않은, 기본 공급자가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property is provider-specific.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성은 공급자별으로 다릅니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The following code example, which is functionally the same as the preceding code example, demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다음 코드 예제는 앞의 코드 예제와 동일 하 게 기능적으로,.NET Framework Data Provider for ODBC를 사용 하 여 ODBC 데이터베이스에 연결 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.ProviderName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property is set to the name of an ODBC data source name (DSN) that is used to connect to the ODBC database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성 이름의 ODBC 데이터 소스 (DSN) ODBC 데이터베이스에 연결 하는 데 사용 되는 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState">
          <source>Saves the current view state of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤의 현재 뷰 상태를 저장합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState">
          <source>An object that contains the saved state of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>의 저장된 상태가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceSelectArguments" /&gt;</ph> object that is used to request operations on the data beyond basic data retrieval.</source>
          <target state="translated">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceSelectArguments" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>Retrieves data from the underlying database by using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph> SQL string and any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph> SQL 문자열과 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /&gt;</ph> 컬렉션에 있는 매개 변수를 사용하여 내부 데이터베이스에서 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> list of data rows.</source>
          <target state="translated">데이터 행의 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 목록입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is automatically called during the <ph id="ph2">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> phase of the page life cycle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드 동안 자동으로 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> 페이지 수명 주기의 단계입니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>It is called by data-bound controls that have been attached to a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control through their <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt;</ph> property.</source>
          <target state="translated">에 연결 되는 데이터 바인딩된 컨트롤에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어를 통해 자신의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> object if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> 경우 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> object if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> 경우 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>Close the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> object when you have finished reading the data.</source>
          <target state="translated">닫기는 <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> 끝나면 데이터를 읽는 개체입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>Before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> operation is performed, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 작업이 수행 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>You can handle this event to examine the values of the parameters and to perform any processing before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">매개 변수의 값을 확인 하 고 하기 전에 처리를 수행 하려면이 이벤트를 처리할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>After the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> operation completes, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> event.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 작업이 완료 되 면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>You can handle this event to examine any return values and error codes and to perform any post-processing.</source>
          <target state="translated">모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType&gt;</ph> and caching is enabled, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> object retrieves data from and saves data to the cache during the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType&gt;</ph> 캐싱을 사용 하 고, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 개체에서 데이터를 검색 하는 동안 캐시에 데이터를 저장 하는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The cache is created, discarded, or refreshed based on the caching behavior that is specified by the combination of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> properties.</source>
          <target state="translated">캐시 또는 생성 된 경우 삭제 된 새로 고침의 조합에 의해 지정 된 캐싱 동작에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</source>
          <target state="translated">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>If another user requests the same data, the data is retrieved from the cache.</source>
          <target state="translated">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The data is not retrieved by making another call to the database to verify the user's access to the data.</source>
          <target state="translated">데이터에 대 한 사용자의 액세스를 확인 하려면 데이터베이스에 다른 호출 하 여 데이터를 검색 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>If you expect more than one user to access the data, and you want each retrieval of data to be verified by the security configurations for the database, do not use caching.</source>
          <target state="translated">데이터에 액세스할 수 있는 둘 이상의 사용자 다시 데이터베이스에 대 한 보안 구성에 의해 확인할 데이터의 각 검색, 캐싱을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType&gt;</ph> and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property has been specified, the filter expression is evaluated with any supplied <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties and the resulting filter is applied to the list of data during the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성이 지정 된 경우, 제공 된 필터 식이 평가 됩니다 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 속성 및 결과 필터 데이터 목록에는 하는동안적용되<ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph>작업 합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>To perform a data retrieval operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> builds a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> values, and then executes the <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> against the underlying database.</source>
          <target state="translated">데이터 검색 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 빌드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 값, 및 다음 실행의 <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 기본 데이터베이스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The following examples show how to programmatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method and set values based on the result of the query.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 호출 하는 방법을 보여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드는 쿼리의 결과에 따라 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The following example shows the declarative code for the Web controls.</source>
          <target state="translated">다음 예제에서는 웹 컨트롤에 대 한 선언적 코드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The following example shows how to programmatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 호출 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control returns an integer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어는 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The value of the integer is used to set the text of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control and to determine whether to display a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.HyperLink&gt;</ph> control.</source>
          <target state="translated">텍스트를 설정 하는 정수 값이 사용는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> 컨트롤을 표시할지 여부를 결정 하려면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.HyperLink&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> object cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체를 내부 데이터 소스와 연결할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control uses to retrieve data from the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤이 내부 데이터베이스에서 데이터를 검색하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>An SQL string or the name of a stored procedure that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 에서 데이터를 검색하는 데 사용되는 SQL 문자열이나 저장 프로시저 이름입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property represents an SQL query or the name of a stored procedure, and is used by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method to retrieve data from a SQL Server database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성 SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드는 SQL Server 데이터베이스에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>If you use an asterisk (*) in the Select command to select all columns, and if you use automatic code generation to perform update or delete operations, make sure that no columns have spaces in their names.</source>
          <target state="translated">Select 명령에는 별표 (*)를 사용 하 여 모든 열을 선택 하 고 업데이트를 수행 하거나 삭제 작업을 자동 코드 생성을 사용 하는 경우 있는지 확인 하는 열이 없는 경우 이름에 공백이 있습니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>For security purposes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property is not stored is view state.</source>
          <target state="translated">보안상의 이유로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성은 저장 되지 뷰 상태입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</source>
          <target state="translated">클라이언트에서 상태 보기의 내용을 디코딩할 수 있기 때문에 보기에 데이터베이스 구조에 대 한 중요 한 정보를 저장 상태로 될 수 정보 공개 문제점 취약점이 있습니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The first code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">첫 번째 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The second code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to the name of a stored procedure and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> value to retrieve data from a Microsoft SQL Server database and display it in a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">두 번째 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 저장된 프로시저의 이름에 텍스트 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> 값에 표시 하는 Microsoft SQL Server 데이터베이스에서 데이터를 검색 하는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>In both examples, there is no need to explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method because the data-bound controls that are attached to the data source control through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt;</ph> property will automatically call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method during the <ph id="ph4">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> phase.</source>
          <target state="translated">두 예제에서는를 명시적으로 호출할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드를 통해 데이터 원본에 연결 되어 있는 데이터 바인딩된 컨트롤을 제어 하기 때문에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A&gt;</ph> 속성에서는 자동으로 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 는 하는동안메서드<ph id="ph4">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> 단계입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to the name of a stored procedure and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> value to retrieve data from a SQL Server database and display it in a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 저장된 프로시저의 이름으로는 텍스트 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> 값에 표시 하는 SQL Server 데이터베이스에서 데이터를 검색 하는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성 수는 SQL 쿼리 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph> property is an SQL query or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph> 속성의 텍스트가 SQL 쿼리인지 아니면 저장 프로시저의 이름인지 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to the name of a stored procedure and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> value, in order to retrieve data from a Microsoft SQL Server database and display it in a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 저장된 프로시저의 이름에 텍스트와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> 값에 표시 하는 Microsoft SQL Server 데이터베이스에서 데이터를 검색 하기 위해는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Selected">
          <source>Occurs when a data retrieval operation has completed.</source>
          <target state="translated">데이터 검색 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Selected">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> event to examine the values of output parameters after a data retrieval operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> 데이터 검색 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Selected">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Selected">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Selecting">
          <source>Occurs before a data retrieval operation.</source>
          <target state="translated">데이터 검색 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Selecting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the select operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 선택 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Selecting">
          <source>The select arguments are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">사용할 수 있는 선택 인수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Selecting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>Gets the parameters collection that contains the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph> property from the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤에 연결된 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열의 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>Depending on the ADO.NET provider, the order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> collection might be important.</source>
          <target state="translated">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 컬렉션 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리는 매개 변수가 표시 되는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property to an SQL query.</source>
          <target state="translated">설정 하 여 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> SQL 쿼리의 속성입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>The SQL query is parameterized and the placeholder in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property is matched to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> object that is added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">SQL 쿼리를 매개 변수화 및 자리 표시자에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성에 일치는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 개체에 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, which the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> is bound to, acts as a filter for what is displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ListBox&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 바인딩된, 기능에 대 한 필터에 표시는 역할을 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ListBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>For information about other types of parameters you can use, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> class overview.</source>
          <target state="translated">다른 유형의 매개 변수에 사용할 수 있습니다에 대 한 정보를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters">
          <source>Because the parameter is used in a WHERE clause, the use of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> property in the code example is functionally equivalent to using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties.</source>
          <target state="translated">사용 하는 WHERE 절에 매개 변수가 사용 되기 때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 코드 예제의 속성은 동일한 기능을 사용 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName">
          <source>Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</source>
          <target state="translated">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName">
          <source>The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</source>
          <target state="translated">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property is evaluated only when the SQL command that is contained by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property is the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성이 확인 된는 SQL 명령이 포함 된만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 속성은 저장된 프로시저의 이름입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName">
          <source>In this case, if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A&gt;</ph> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.</source>
          <target state="translated">이 예제의 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A&gt;</ph> 속성이 설정 되어 있으면 저장된 프로시저의 결과 정렬 하는 데 사용 되는 매개 변수의 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> property is set, it is prepended to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> 속성이 설정 되어 있으면 앞에 추가 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</source>
          <target state="translated">Microsoft SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 세미콜론으로 구분된 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>A string that indicates which databases and tables to use for the SQL Server cache dependency.</source>
          <target state="translated">SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports an optional expiration policy based on the <ph id="ph2">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> object for the data cache (the service must be configured for the database server).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 지원에 따라 선택적 만료 정책을 <ph id="ph2">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> (데이터베이스 서버에 대 한 서비스 구성 해야 합니다) 데이터 캐시에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> string identifies databases and tables according to the same format that is used by the <ph id="ph2">`@ Page`</ph> directive, where the first part of the string is a connection string to a Microsoft SQL Server database, followed by a colon delimiter, and finally the name of the database table (for example, <ph id="ph3">`"connectionstring1:table1"`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> 데이터베이스 및 테이블에서 사용 되는 동일한 형식에 따라 식별 하는 문자열은 <ph id="ph2">`@ Page`</ph> 으로 구분 하 여 지시문, 여기서 문자열의 첫 번째 부분은 Microsoft SQL Server 데이터베이스에 연결 문자열, 뒤 및 마지막으로 데이터베이스 테이블의 이름 (예를 들어 <ph id="ph3">`"connectionstring1:table1"`</ph>).</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> property depends on more than one table, the connection string-and-table name pairs are separated by semicolons (for example, <ph id="ph2">`"connectionstring1:table1";connectionstring2:table2"`</ph>).</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> 둘 이상의 테이블에 종속 속성, 연결 문자열 및 테이블 이름 쌍은 세미콜론으로 구분 됩니다 (예를 들어 <ph id="ph2">`"connectionstring1:table1";connectionstring2:table2"`</ph>).</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</source>
          <target state="translated">Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>If another user requests the same data, the data is retrieved from the cache.</source>
          <target state="translated">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>The data is not retrieved by making another call to the database to verify the user's access to the data.</source>
          <target state="translated">데이터에 대 한 사용자의 액세스를 확인 하려면 데이터베이스에 다른 호출 하 여 데이터를 검색 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</source>
          <target state="translated">데이터에 액세스할 수 있는 둘 이상의 사용자 다시 데이터베이스에 대 한 보안 구성으로 확인 하려면 데이터에 각 검색, 캐싱을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>The following code example demonstrates how to create a SQL Server cache dependency and set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에는 SQL Server 캐시 종속성을 만들고 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A&gt;</ph> 의 속성을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>In this example, the database is polled every 120 seconds.</source>
          <target state="translated">이 예제에서는 데이터베이스 120 초 마다 폴링됩니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency">
          <source>If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and displayed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is refreshed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control the next time the database is polled.</source>
          <target state="translated">Northwind Traders 직원의 데이터를 변경 하는 동안 시간 테이블에서 캐시 된 모든 데이터는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고 여 표시 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 새로 고쳐질는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 다음에 데이터베이스를 사용 하는 간격으로 폴링됩니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState">
          <source>Tracks view state changes to the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control so that the changes can be stored in the <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph> object for the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph> 개체에 저장할 수 있도록 추적합니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A&gt;</ph> method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the view state for the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A&gt;</ph> 메서드는 컨트롤에 대 한 뷰 상태의 일부로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 위치를 표시 하도록 재정의 됩니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>Performs an update operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph> SQL string and any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph> SQL 문자열과 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /&gt;</ph> 컬렉션의 매개 변수를 사용하여 업데이트 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>A value that represents the number of rows updated in the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 업데이트되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method is automatically called by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> controls during postback if the data has been changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드를 자동으로 호출 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.FormView&gt;</ph> 데이터가 변경 된 경우 다시 게시 하는 동안 제어 합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>For data that has been changed in other controls, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method can be explicitly called on postback during the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event.</source>
          <target state="translated">다른 컨트롤에서 변경 된 데이터에 대 한는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 포스트백 중에 메서드를 명시적으로 호출할 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>Before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> operation is performed, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 작업이 수행 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>You can handle this event to examine the values of the parameters and to perform any preprocessing before an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> operation.</source>
          <target state="translated">이 이벤트는 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수를 처리할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>After the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> operation completes, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> event.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 작업이 완료 되 면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>You can handle this event to examine any return values and error codes and to perform any post-processing.</source>
          <target state="translated">모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>To perform an update operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> builds a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> properties, and then executes the <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object against the underlying database.</source>
          <target state="translated">업데이트 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 빌드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 속성을 빌드한 다음 실행는 <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 기본 데이터베이스에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The first code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to display data in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update data when the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 데이터를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 및 업데이트 데이터 때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The second code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update the record using a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">두 번째 코드 예제는 Microsoft SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 하 고 사용 하 여 레코드 업데이트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to display data in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update data when the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 데이터를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 및 업데이트 데이터 때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property is set with a parameterized SQL statement, and two <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> parameters are added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 매개 변수가 있는 SQL 문 및 두 개의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 매개 변수가 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>When the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event is handled to call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method explicitly.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 하면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이 이벤트는 호출 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The following code example demonstrates how to display data that is retrieved from a SQL Server database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update the record using a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서 SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 하 고 사용 하 여 레코드 업데이트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The example shows how you can use a <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> object to add transaction context when using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to update data.</source>
          <target state="translated">예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 업데이트 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSource.Update">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control uses to update data in the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에서 내부 데이터베이스의 데이터를 업데이트하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>An SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> uses to update data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>에서 데이터를 업데이트하는 데 사용하는 SQL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> represents an SQL query or the name of a stored procedure, and is used by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내고에서 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 속성 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>For security purposes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property is not stored is view state.</source>
          <target state="translated">보안상의 이유로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 속성은 저장 되지 뷰 상태입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</source>
          <target state="translated">클라이언트에서 상태 보기의 내용을 디코딩할 수 있기 때문에 보기에 데이터베이스 구조에 대 한 중요 한 정보를 저장 상태로 될 수 정보 공개 문제점 취약점이 있습니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The first code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and update data in a Microsoft SQL Server database using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">첫 번째 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 사용 하 여 Microsoft SQL Server 데이터베이스의 데이터를 제어 및 업데이트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The second code example demonstrates how to update data in an ODBC database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">두 번째 코드 예제에 사용 하 여 ODBC 데이터베이스에 데이터를 업데이트 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and update data in a SQL Server database using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 사용 하 여 SQL Server 데이터베이스의 데이터를 제어 및 업데이트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection, inferring the parameters from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> objects, and calls the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method when the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> link on the editable <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is selected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 유추에서 매개 변수 컬렉션을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체를 호출 하는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드 때는 <bpt id="p1">**</bpt>업데이트<ept id="p1">**</ept> 편집 가능한 에서링크<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>This example also includes some post-processing: after a record is updated, a notification email message is sent.</source>
          <target state="translated">이 예제에도 일부 사후 처리: 알림 전자 메일 메시지를 보내는 후 레코드를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제는 기능적으로 동일 이전 코드 예제를 사용 하 여 ODBC 데이터베이스에서 데이터를 업데이트 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> is set to the ADO.NET provider for ODBC, the <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property is set to the name of an ODBC data source name (DSN).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> ODBC 용 ADO.NET 공급자로 설정 되어는 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성은 ODBC 데이터 원본 이름 (DSN)의 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph> property is an SQL statement or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Updated">
          <source>Occurs when an update operation has completed.</source>
          <target state="translated">업데이트 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> event to examine the values of output parameters after an update operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> 업데이트 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updated">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updated">
          <source>The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">ODBC 데이터베이스에서 검색 된 데이터 표시 및 업데이트 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updated">
          <source>After a record is successfully updated, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> event is handled by an event handler to perform a post-processing step where an email notification is sent.</source>
          <target state="translated">레코드를 업데이트 한 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> 전자 메일 알림이 전송 되는 후 처리 단계를 수행 하는 이벤트 처리기 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>Gets the parameters collection that contains the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph> property from the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> control that is associated with the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤에 연결된 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열의 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>Parameter names might be affected by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> property, specifically if the name identifies a primary key, such as a key specified using the <ph id="ph2">`DataKeyNames`</ph> property of the data-bound control, or in delete and update scenarios where the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value and a set of <ph id="ph5">`oldValues`</ph> are passed to the corresponding data method.</source>
          <target state="translated">매개 변수 이름은 영향을 받을 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성 이름을 사용 하 여 지정 된 키와 같은 기본 키를 식별 하는 경우에 특히는 <ph id="ph2">`DataKeyNames`</ph> 삭제 또는 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성의 <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값과 집합이 <ph id="ph5">`oldValues`</ph> 해당 데이터 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>In this case, the format string is applied to each parameter name in the <ph id="ph1">`oldValues`</ph> collection.</source>
          <target state="translated">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 <ph id="ph1">`oldValues`</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>The order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection might be important, depending on the ADO.NET provider.</source>
          <target state="translated">매개 변수의 순서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션 ADO.NET 공급자에 따라 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리는 매개 변수가 표시 되는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>For more information about parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Filtering&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to display data in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update data when the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 데이터를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 및 업데이트 데이터 때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> is set with a parameterized SQL statement and two <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> parameters are added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 매개 변수가 있는 SQL 문을 2로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 매개 변수가 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>When the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event is handled to call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method explicitly.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 하면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이 이벤트는 호출 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</source>
          <target state="translated">잠재적 보안 위협이 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적 보안 위협이 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>Occurs before an update operation.</source>
          <target state="translated">업데이트 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the update operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 업데이트 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>The connection to the underlying data source is not yet open when the event handler delegate is called.</source>
          <target state="translated">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>Therefore, you cannot directly cancel the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> database operation by calling the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object that is exposed by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> object.</source>
          <target state="translated">따라서 직접을 취소할 수 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 호출 하 여 데이터베이스 작업에는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> 에서 메서드는 <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 의해 노출 되는 개체는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 개체.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>You can, however, cancel the database operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">그러나 설정 하 여 데이터베이스 작업을 취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>Values are inserted into parameters without validation, which is a potential security threat.</source>
          <target state="translated">값을 매개 변수에 잠재적 보안 위협이 유효성 검사 없이 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> event to validate parameter values before executing the query.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> 을 쿼리를 실행 하기 전에 매개 변수 값을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update the record using a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 하 고 사용 하 여 레코드 업데이트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSource.Updating">
          <source>The example shows how you can use a <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> object to add transaction context when using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to update data.</source>
          <target state="translated">예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 업데이트 하는 컨트롤입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>