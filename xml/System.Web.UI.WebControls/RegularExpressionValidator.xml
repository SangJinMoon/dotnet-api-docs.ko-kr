<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegularExpressionValidator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5809e7cb9bd9697e3d28a889198e7aa1a507a905e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">809e7cb9bd9697e3d28a889198e7aa1a507a905e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>Validates whether the value of an associated input control matches the pattern specified by a regular expression.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> control checks whether the value of an input control matches a pattern defined by a regular expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> 컨트롤 입력된 컨트롤의 값이 정규식에 의해 정의 된 패턴과 일치 하는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>This type of validation allows you to check for predictable sequences of characters, such as those in email addresses, telephone numbers, and postal codes.</source>
          <target state="translated">이 형식의 유효성 검사를 사용 하면 예측 가능한 시퀀스의 예: 전자 메일 주소, 전화 번호 및 우편 번호의 문자를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>Validation succeeds if the input control is empty.</source>
          <target state="translated">유효성 검사는 입력된 컨트롤 비어 있으면 성공 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>If a value is required for the associated input control, use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt;</ph> control in addition to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> control.</source>
          <target state="translated">값이 연결된 된 입력된 컨트롤에 대 한 필요를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt;</ph> 외에 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A&gt;</ph> property to <ph id="ph2">`false`</ph>).</source>
          <target state="translated">브라우저 클라이언트 쪽 유효성 검사를 지원 하지 않거나 클라이언트 쪽 유효성 검사가 명시적으로 해제 하지 않는 한 서버 쪽 및 클라이언트 쪽 모두 유효성 검사가 수행 됩니다 (설정 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>The regular-expression validation implementation is slightly different on the client than on the server.</source>
          <target state="translated">정규식 유효성 검사 구현은 서버에서 보다는 클라이언트에서 약간 다릅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>On the client, JScript regular-expression syntax is used.</source>
          <target state="translated">클라이언트에서 JScript 정규식 구문을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>On the server, <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> syntax is used.</source>
          <target state="translated">서버에서 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> 구문을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>Since JScript regular expression syntax is a subset of <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.</source>
          <target state="translated">Jscript 구문 정규식의 하위 집합인 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> 구문 것이 좋습니다 JScript 정규식 구문 클라이언트와 서버 모두에서 동일한 결과 생성 하기 위해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> control inside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, make sure that the validator control and the control it is associated with are in the same panel.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> 컨트롤 내부는 <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> 검사기 컨트롤과 연결 된 컨트롤은 동일한 패널에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>For more information about using the <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control for partial-page updates, see <bpt id="p1">[</bpt>Partial-Page Rendering Overview<ept id="p1">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> 부분 페이지 업데이트를 제어, 참조 <bpt id="p1">[</bpt>부분 페이지 렌더링 개요<ept id="p1">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>For additional information about validation controls, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator&gt;</ph>.</source>
          <target state="translated">유효성 검사 컨트롤에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseValidator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>For more information on regular expressions, see <bpt id="p1">[</bpt>.NET Framework Regular Expressions<ept id="p1">](~/docs/standard/base-types/regular-expressions.md)</ept>.</source>
          <target state="translated">정규식에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>.NET Framework 정규식<ept id="p1">](~/docs/standard/base-types/regular-expressions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>Accessibility</source>
          <target state="translated">액세스 가능성</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <bpt id="p1">[</bpt>Accessibility in Visual Studio and ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)</ept> and <bpt id="p2">[</bpt>ASP.NET Controls and Accessibility<ept id="p2">](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)</ept>.</source>
          <target state="translated">내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Visual Studio 및 ASP.NET의 내게 필요한 옵션<ept id="p1">](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)</ept> 및 <bpt id="p2">[</bpt>ASP.NET 컨트롤 및내게필요한옵션<ept id="p2">](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> control to validate a five-digit postal code.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> 5 자리 우편 번호 유효성을 검사 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.RegularExpressionValidator">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> that represents the output stream to render HTML content on the client.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>Adds to the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object the HTML attributes and styles that need to be rendered for the control.</source>
          
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A&gt;</ph> method in a custom server control so that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> error message always displays as bold.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A&gt;</ph> 사용자 지정 서버 컨트롤에서 있도록는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> 오류 메시지는 항상 굵은 글꼴로 표시 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>The following code example demonstrates how to use the use the <ph id="ph1">`CustomRegularExpressionValidatorAddAttributesToRender`</ph> control, defined in the preceding example, on a Web Forms page.</source>
          <target state="translated">다음 코드 예제에서는 사용을 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">`CustomRegularExpressionValidatorAddAttributesToRender`</ph> Web Forms 페이지에 앞의 예제에 정의 된 제어 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid">
          <source>Indicates whether the value in the input control is valid.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value in the input control is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A&gt;</ph> method in a custom server control so that it always checks the value against the expression for a match in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A&gt;</ph> 에서 일치 항목에 대 한 식에 대해 값을 항상 검사 되도록 컨트롤을 사용자 지정 서버에서 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid">
          <source>The following code example demonstrates how to use the <ph id="ph1">`CustomRegularExpressionValidatorEvaluateIsValid`</ph> control, defined in the preceding example, on a Web Forms page.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">`CustomRegularExpressionValidatorEvaluateIsValid`</ph> Web Forms 페이지에 앞의 예제에 정의 된 제어 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout">
          <source>Gets or set the maximum time interval to execute a single matching operation before the operation times out.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout">
          <source>The maximum time interval to execute a single matching operation before the operation times out.</source>
          <target state="translated">작업의 제한 시간이 초과되기 전에 단일 일치 작업을 실행할 최대 시간 간격입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>Gets or sets the regular expression that determines the pattern used to validate a field.</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>A string that specifies the regular expression used to validate a field for format.</source>
          <target state="translated">형식에 대 한 필드 유효성을 검사 하는 데 사용할 정규식을 지정 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, email addresses, telephone numbers, and postal codes.</source>
          <target state="translated">예측 가능한 시퀀스의 주민 등록 번호, 전자 메일 주소, 전화 번호 및 우편 번호 등의 문자를 확인 하는 데 사용 패턴을 지정 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> does not perform validation on an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph> 빈 문자열에 유효성 검사를 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>If the string you are testing might be empty, use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt;</ph> as well as the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph>.</source>
          <target state="translated">테스트 하는 문자열은 비어 있을 수 있습니다를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RequiredFieldValidator&gt;</ph> 으로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>For more information on regular expressions, see <bpt id="p1">[</bpt>.NET Framework Regular Expressions<ept id="p1">](~/docs/standard/base-types/regular-expressions.md)</ept>.</source>
          <target state="translated">정규식에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>.NET Framework 정규식<ept id="p1">](~/docs/standard/base-types/regular-expressions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>If you experience problems with pattern matching constructs, try wrapping the expression with "^(" and ")$".</source>
          <target state="translated">패턴 일치 구문 문제가 발생 하는 경우 식을 래핑합니다와 "^ $("및")"입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>For example, "a&amp;#124;ab" becomes "^(a&amp;#124;ab)$".</source>
          <target state="translated">예를 들어 "는&amp;#124;ab"가 "^ (한&amp;#124;ab) $"입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>This property cannot be set by themes or style sheet themes.</source>
          <target state="translated">테마 또는 스타일 시트 테마가이 속성을 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> and <bpt id="p1">[</bpt>ASP.NET Themes and Skins<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.ThemeableAttribute&gt;</ph> 및 <bpt id="p1">[</bpt>ASP.NET 테마와 스킨<ept id="p1">](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A&gt;</ph> property to validate a field with five numeric digits.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A&gt;</ph> 속성을 5 개의 숫자가 있는 필드 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is clicked, the resulting <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event handler checks the <ph id="ph3">&lt;xref:System.Web.UI.Page.IsValid%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> to determine whether the text in the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> satisfies the regular expression.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> 컨트롤을 클릭할 결과 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이벤트 처리기 검사는 <ph id="ph3">&lt;xref:System.Web.UI.Page.IsValid%2A&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> 확인 하려면 있는지 여부를에 있는 텍스트는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 정규식을 충족 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression">
          <source>The regular expression is not properly formed.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>