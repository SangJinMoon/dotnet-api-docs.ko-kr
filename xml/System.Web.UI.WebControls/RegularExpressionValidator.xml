<Type Name="RegularExpressionValidator" FullName="System.Web.UI.WebControls.RegularExpressionValidator">
  <TypeSignature Language="C#" Value="public class RegularExpressionValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RegularExpressionValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionValidator : System::Web::UI::WebControls::BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RegularExpressionValidator runat="server" ErrorMessage="RegularExpressionValidator"&gt;&lt;/{0}:RegularExpressionValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="be616-101">연결된 입력 컨트롤의 값이 정규식에 의해 지정된 패턴과 일치하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-101">Validates whether the value of an associated input control matches the pattern specified by a regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be616-102"><xref:System.Web.UI.WebControls.RegularExpressionValidator> 컨트롤 입력된 컨트롤의 값이 정규식에 의해 정의 된 패턴과 일치 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-102">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> control checks whether the value of an input control matches a pattern defined by a regular expression.</span></span> <span data-ttu-id="be616-103">이 형식의 유효성 검사를 사용 하면 예측 가능한 시퀀스의 예: 전자 메일 주소, 전화 번호 및 우편 번호의 문자를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-103">This type of validation allows you to check for predictable sequences of characters, such as those in email addresses, telephone numbers, and postal codes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be616-104">유효성 검사는 입력된 컨트롤 비어 있으면 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-104">Validation succeeds if the input control is empty.</span></span> <span data-ttu-id="be616-105">값이 연결된 된 입력된 컨트롤에 대 한 필요를 사용 하 여는 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 외에 제어는 <xref:System.Web.UI.WebControls.RegularExpressionValidator> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-105">If a value is required for the associated input control, use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control in addition to the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control.</span></span>  
  
 <span data-ttu-id="be616-106">브라우저 클라이언트 쪽 유효성 검사를 지원 하지 않거나 클라이언트 쪽 유효성 검사가 명시적으로 해제 하지 않는 한 서버 쪽 및 클라이언트 쪽 모두 유효성 검사가 수행 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> 속성을 `false`).</span><span class="sxs-lookup"><span data-stu-id="be616-106">Both server-side and client-side validation are performed unless the browser does not support client-side validation or client-side validation is explicitly disabled (by setting the <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> property to `false`).</span></span>  
  
 <span data-ttu-id="be616-107">정규식 유효성 검사 구현은 서버에서 보다는 클라이언트에서 약간 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="be616-107">The regular-expression validation implementation is slightly different on the client than on the server.</span></span> <span data-ttu-id="be616-108">클라이언트에서 JScript 정규식 구문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-108">On the client, JScript regular-expression syntax is used.</span></span> <span data-ttu-id="be616-109">서버에서 <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> 구문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-109">On the server, <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax is used.</span></span> <span data-ttu-id="be616-110">Jscript 구문 정규식의 하위 집합인 <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> 구문 것이 좋습니다 JScript 정규식 구문 클라이언트와 서버 모두에서 동일한 결과 생성 하기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-110">Since JScript regular expression syntax is a subset of <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> syntax, it is recommended that JScript regular-expression syntax be used in order to yield the same results on both the client and the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be616-111">사용 하는 경우는 <xref:System.Web.UI.WebControls.RegularExpressionValidator> 컨트롤 내부는 <xref:System.Web.UI.UpdatePanel> 검사기 컨트롤과 연결 된 컨트롤은 동일한 패널에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-111">When you use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel.</span></span> <span data-ttu-id="be616-112">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.UpdatePanel> 부분 페이지 업데이트를 제어, 참조 [부분 페이지 렌더링 개요](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-112">For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
 <span data-ttu-id="be616-113">유효성 검사 컨트롤에 대 한 자세한 내용은 참조 하십시오. <xref:System.Web.UI.WebControls.BaseValidator>합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-113">For additional information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.</span></span> <span data-ttu-id="be616-114">정규식에 대 한 자세한 내용은 참조 하십시오. [.NET Framework 정규식](~/docs/standard/base-types/regular-expressions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-114">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
## <a name="accessibility"></a><span data-ttu-id="be616-115">액세스 가능성</span><span class="sxs-lookup"><span data-stu-id="be616-115">Accessibility</span></span>  
 <span data-ttu-id="be616-116">내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하십시오. [Visual Studio 및 ASP.NET의 내게 필요한 옵션](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤 및내게필요한옵션](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).</span><span class="sxs-lookup"><span data-stu-id="be616-116">For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be616-117">다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.RegularExpressionValidator> 5 자리 우편 번호 유효성을 검사 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-117">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator> control to validate a five-digit postal code.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be616-118">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-118">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="be616-119">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-119">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="be616-120">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="be616-120">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be616-121"><see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-121">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="be616-122">클라이언트에서 HTML 콘텐츠를 렌더링하는 데 사용되는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-122">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</span></span></param>
        <summary><span data-ttu-id="be616-123">컨트롤에 렌더링해야 하는 HTML 특성 및 스타일을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-123">Adds to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object the HTML attributes and styles that need to be rendered for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="be616-124">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> 사용자 지정 서버 컨트롤에서 있도록는 <xref:System.Web.UI.WebControls.RegularExpressionValidator> 오류 메시지는 항상 굵은 글꼴로 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-124">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.AddAttributesToRender%2A> method in a custom server control so that the <xref:System.Web.UI.WebControls.RegularExpressionValidator> error message always displays as bold.</span></span>  
  
 [!code-csharp[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorender.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorender.vb#2)]  
  
 <span data-ttu-id="be616-125">다음 코드 예제에서는 사용을 사용 하는 방법을 보여 줍니다.는 `CustomRegularExpressionValidatorAddAttributesToRender` Web Forms 페이지에 앞의 예제에 정의 된 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-125">The following code example demonstrates how to use the use the `CustomRegularExpressionValidatorAddAttributesToRender` control, defined in the preceding example, on a Web Forms page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be616-126">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-126">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="be616-127">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-127">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="be616-128">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="be616-128">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/CS/custom_regularexpressionvalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorAddAttributesToRender/VB/custom_regularexpressionvalidator_addattributestorendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be616-129">입력 컨트롤의 값이 유효한지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="be616-129">Indicates whether the value in the input control is valid.</span></span></summary>
        <returns>
          <span data-ttu-id="be616-130">입력 컨트롤의 값이 유효하면 <see langword="true" />이고, 유효하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-130"><see langword="true" /> if the value in the input control is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="be616-131">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> 에서 일치 항목에 대 한 식에 대해 값을 항상 검사 되도록 컨트롤을 사용자 지정 서버에서 메서드는 <xref:System.Web.UI.WebControls.RegularExpressionValidator>합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-131">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RegularExpressionValidator.EvaluateIsValid%2A> method in a custom server control so that it always checks the value against the expression for a match in a <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be616-132">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-132">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="be616-133">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-133">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="be616-134">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="be616-134">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalid.cs#2)]
 [!code-vb[CustomRegularExpressionValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalid.vb#2)]  
  
 <span data-ttu-id="be616-135">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 `CustomRegularExpressionValidatorEvaluateIsValid` Web Forms 페이지에 앞의 예제에 정의 된 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-135">The following code example demonstrates how to use the `CustomRegularExpressionValidatorEvaluateIsValid` control, defined in the preceding example, on a Web Forms page.</span></span>  
  
 [!code-aspx-csharp[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/CS/custom_regularexpressionvalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomRegularExpressionValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRegularExpressionValidatorEvaluateIsValid/VB/custom_regularexpressionvalidator_evaluateisvalidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.EnableClientScript" />
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; MatchTimeout { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be616-136">작업의 제한 시간이 초과되기 전에 단일 일치 작업을 실행할 최대 시간 간격을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-136">Gets or set the maximum time interval to execute a single matching operation before the operation times out.</span></span></summary>
        <value><span data-ttu-id="be616-137">작업의 제한 시간이 초과되기 전에 단일 일치 작업을 실행할 최대 시간 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-137">The maximum time interval to execute a single matching operation before the operation times out.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationExpression">
      <MemberSignature Language="C#" Value="public string ValidationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.RegexTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be616-138">필드의 유효성을 검사하는 데 사용되는 패턴을 결정하는 정규식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-138">Gets or sets the regular expression that determines the pattern used to validate a field.</span></span></summary>
        <value><span data-ttu-id="be616-139">형식 지정용 필드의 유효성 검사하는 데 사용되는 정규식을 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-139">A string that specifies the regular expression used to validate a field for format.</span></span> <span data-ttu-id="be616-140">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-140">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be616-141">예측 가능한 시퀀스의 주민 등록 번호, 전자 메일 주소, 전화 번호 및 우편 번호 등의 문자를 확인 하는 데 사용 패턴을 지정 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-141">Use this property to specify the pattern used to check for predictable sequences of characters, such as those in social security numbers, email addresses, telephone numbers, and postal codes.</span></span>  
  
 <span data-ttu-id="be616-142"><xref:System.Web.UI.WebControls.RegularExpressionValidator>는 빈 문자열에 대한 유효성 검사를 수행하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-142">The <xref:System.Web.UI.WebControls.RegularExpressionValidator> does not perform validation on an empty string.</span></span> <span data-ttu-id="be616-143">테스트 하는 문자열은 비어 있을 수 있습니다를 사용 하 여는 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 으로 <xref:System.Web.UI.WebControls.RegularExpressionValidator>합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-143">If the string you are testing might be empty, use the <xref:System.Web.UI.WebControls.RequiredFieldValidator> as well as the <xref:System.Web.UI.WebControls.RegularExpressionValidator>.</span></span>  
  
 <span data-ttu-id="be616-144">정규식에 대 한 자세한 내용은 참조 하십시오. [.NET Framework 정규식](~/docs/standard/base-types/regular-expressions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-144">For more information on regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="be616-145">패턴 일치 구문 문제가 발생 하는 경우 식을 래핑합니다와 "^ $("및")"입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-145">If you experience problems with pattern matching constructs, try wrapping the expression with "^(" and ")$".</span></span> <span data-ttu-id="be616-146">예를 들어 "는&#124;ab"가 "^ (한&#124;ab) $"입니다.</span><span class="sxs-lookup"><span data-stu-id="be616-146">For example, "a&#124;ab" becomes "^(a&#124;ab)$".</span></span>  
  
 <span data-ttu-id="be616-147">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-147">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="be616-148">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-148">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be616-149">다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> 속성을 5 개의 숫자가 있는 필드 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-149">The following example demonstrates how to use the <xref:System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression%2A> property to validate a field with five numeric digits.</span></span> <span data-ttu-id="be616-150">때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭할 결과 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 이벤트 처리기 검사는 <xref:System.Web.UI.Page.IsValid%2A> 의 속성은 <xref:System.Web.UI.Page> 확인 하려면 있는지 여부를에 있는 텍스트는 <xref:System.Web.UI.WebControls.TextBox> 정규식을 충족 합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-150">When the <xref:System.Web.UI.WebControls.Button> control is clicked, the resulting <xref:System.Web.UI.WebControls.Button.OnClick%2A> event handler checks the <xref:System.Web.UI.Page.IsValid%2A> property of the <xref:System.Web.UI.Page> to determine whether the text in the <xref:System.Web.UI.WebControls.TextBox> satisfies the regular expression.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="be616-151">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="be616-151">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="be616-152">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="be616-152">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="be616-153">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="be616-153">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic RegularExpressionValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic RegularExpressionValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RegularExpressionValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="be616-154">정규식의 형식이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="be616-154">The regular expression is not properly formed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>