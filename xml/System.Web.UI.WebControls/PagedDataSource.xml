<Type Name="PagedDataSource" FullName="System.Web.UI.WebControls.PagedDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b65f96676d6473704f6310e2b738c603fc940605" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36380202" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PagedDataSource extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ComponentModel.ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.PagedDataSource" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PagedDataSource&#xA;Implements ICollection, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class PagedDataSource sealed : System::Collections::ICollection, System::ComponentModel::ITypedList" />
  <TypeSignature Language="F#" Value="type PagedDataSource = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="fa2ee-101">
        <see cref="T:System.Web.UI.WebControls.DataGrid" />, <see cref="T:System.Web.UI.WebControls.GridView" />, <see cref="T:System.Web.UI.WebControls.DetailsView" /> 및 <see cref="T:System.Web.UI.WebControls.FormView" />와 같은 데이터 바인딩된 컨트롤에서 페이징을 수행하는 데 사용되는 페이징 관련 속성을 캡슐화합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa2ee-101">Encapsulates the paging-related properties of a data-bound control (such as <see cref="T:System.Web.UI.WebControls.DataGrid" />, <see cref="T:System.Web.UI.WebControls.GridView" />, <see cref="T:System.Web.UI.WebControls.DetailsView" />, and <see cref="T:System.Web.UI.WebControls.FormView" />) that allow it to perform paging.</span>
      </span>
      <span data-ttu-id="fa2ee-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa2ee-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-103"><xref:System.Web.UI.WebControls.PagedDataSource> 와 같은 데이터 소스 제어를 허용 하는 속성을 캡슐화 하는 클래스는 <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>페이징 수행 하 고, 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-103">The <xref:System.Web.UI.WebControls.PagedDataSource> class encapsulates the properties that allow data-source controls, such as the <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>, to perform paging.</span></span> <span data-ttu-id="fa2ee-104">이 클래스는 사용자 지정 데이터 바인딩된 컨트롤 페이징 지원을 제공 하는 경우 컨트롤 개발자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-104">This class is used by control developers when providing paging support to a custom data-bound control.</span></span>  
  
 <span data-ttu-id="fa2ee-105">이 클래스는 현재 페이지에 속한 데이터 전체를 열거 하 가장 사용 가능한 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-105">This class uses the best available method to enumerate over the data belonging to the current page.</span></span> <span data-ttu-id="fa2ee-106">데이터 원본에서 인덱싱된 액세스를 지 원하는 경우 (같은 <xref:System.Array?displayProperty=nameWithType> 및 <xref:System.Collections.IList?displayProperty=nameWithType>),이 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-106">If the underlying data source supports indexed access (such as <xref:System.Array?displayProperty=nameWithType> and <xref:System.Collections.IList?displayProperty=nameWithType>), this class uses it.</span></span> <span data-ttu-id="fa2ee-107">그렇지 않은 경우 만든 열거자를 사용 하 여 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-107">Otherwise, it uses the enumerator created by the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
 <span data-ttu-id="fa2ee-108">인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.PagedDataSource>, 참조는 <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-108">For a list of initial property values for an instance of <xref:System.Web.UI.WebControls.PagedDataSource>, see the <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Array" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.IEnumerable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PagedDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-109">
            <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-109">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-110">이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.PagedDataSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-110">Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.PagedDataSource> class.</span></span>  
  
 <span data-ttu-id="fa2ee-111">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.WebControls.PagedDataSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-111">The following table shows initial property values for an instance of <xref:System.Web.UI.WebControls.PagedDataSource>.</span></span>  
  
|<span data-ttu-id="fa2ee-112">속성</span><span class="sxs-lookup"><span data-stu-id="fa2ee-112">Property</span></span>|<span data-ttu-id="fa2ee-113">초기 값</span><span class="sxs-lookup"><span data-stu-id="fa2ee-113">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|<span data-ttu-id="fa2ee-114">0</span><span class="sxs-lookup"><span data-stu-id="fa2ee-114">0</span></span>|  
|<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|<span data-ttu-id="fa2ee-115">10</span><span class="sxs-lookup"><span data-stu-id="fa2ee-115">10</span></span>|  
|<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|<span data-ttu-id="fa2ee-116">0</span><span class="sxs-lookup"><span data-stu-id="fa2ee-116">0</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-117">사용자 지정 페이징이 데이터 바인딩된 컨트롤에서 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-117">Gets or sets a value indicating whether custom paging is enabled in a data-bound control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-118">사용자 지정 페이징이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-118">
              <see langword="true" /> if custom paging is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-119">사용 된 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 사용자 지정 페이징을 사용 되는지 여부를 나타내는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-119">Use the <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> property to indicate whether custom paging is enabled.</span></span> <span data-ttu-id="fa2ee-120">사용자 지정 페이징을 페이징에서 특정 하 게 제공 되는 선택적 유형의 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-120">Custom paging is an optional type of paging provided specifically by the <xref:System.Web.UI.WebControls.DataGrid> control.</span></span> <span data-ttu-id="fa2ee-121">ASP.NET 버전 2.0 데이터 바인딩된 컨트롤 (예: <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>) 서버측 페이징을 사용 하 고 사용자 지정 페이징을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-121">ASP.NET version 2.0 data-bound control (such as <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>) uses server-side paging and does not support custom paging.</span></span> <span data-ttu-id="fa2ee-122">사용자 지정 페이징과 서버 쪽 페이징은 함께 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-122">Custom paging and server-side paging are mutually exclusive.</span></span> <span data-ttu-id="fa2ee-123">설정한 경우 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 를 `true`되어 있는지 확인 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 로 설정 된 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-123">If you set <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> to `true`, be sure that <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="fa2ee-124">사용자 지정 페이징에 대 한 자세한 내용은 참조 하십시오. <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-124">For more information about custom paging, see <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-125">페이징이 데이터 바인딩된 컨트롤에서 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-125">Gets or sets a value indicating whether paging is enabled in a data-bound control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-126">페이징이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-126">
              <see langword="true" /> if paging is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-127">사용 하 여 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> 속성을 통해 데이터 바인딩된 컨트롤에서 페이징을 사용 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-127">Use the <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> property to specify whether a data-bound control has paging enabled.</span></span> <span data-ttu-id="fa2ee-128">ASP.NET 버전 2.0 데이터 바인딩된 컨트롤 (예: <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>)도 서버 쪽 페이징을 사용 하 여 자동 페이징 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-128">ASP.NET version 2.0 data-bound controls (such as <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>) also use server-side paging to provide automatic paging functionality.</span></span> <span data-ttu-id="fa2ee-129">서버 쪽 페이징에 대 한 자세한 내용은 참조 하십시오. <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-129">For more information on server-side paging, see <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>.</span></span> <span data-ttu-id="fa2ee-130">사용 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤을 제공할 수도 있습니다 고유의 사용자 지정 페이징 논리입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-130">When using the <xref:System.Web.UI.WebControls.DataGrid> control, you can also provide your own custom paging logic.</span></span> <span data-ttu-id="fa2ee-131">사용자 지정 페이징에 대 한 자세한 내용은 참조 하십시오. <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType> 및 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-131">For more information on custom paging, see <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=nameWithType> and <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fa2ee-132">데이터 바인딩된 컨트롤에 대 한 페이징 지원에 대 한 자세한 내용은 참조는 `AllowPaging` 데이터 바인딩된 컨트롤의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-132">For more information about paging support for data-bound controls, see the `AllowPaging` property of the data-bound control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowServerPaging">
      <MemberSignature Language="C#" Value="public bool AllowServerPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowServerPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowServerPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowServerPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowServerPaging : bool with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-133">서버측 페이징이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-133">Gets or sets a value indicating whether server-side paging is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-134">서버측 페이징이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-134">
              <see langword="true" /> if server-side paging is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-135">ASP.NET 버전 2.0 데이터 바인딩된 컨트롤 (예: <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView>) 서버측 페이징을 통해 자동 페이징 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-135">ASP.NET version 2.0 data-bound controls (such as <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView>) provide automatic paging functionality through server-side paging.</span></span> <span data-ttu-id="fa2ee-136">ASP.NET 2.0 데이터 바인딩된 컨트롤을 사용할 경우이 속성을 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-136">When using an ASP.NET 2.0 data-bound control, set this property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-137">서버 쪽 페이징 및 사용자 지정 페이징 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-137">Server-side paging and custom paging are mutually exclusive.</span></span> <span data-ttu-id="fa2ee-138">설정한 경우 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 를 `true`되어 있는지 확인 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 로 설정 된 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-138">If you set <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> to `true`, be sure that <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="pagedDataSource.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="fa2ee-139">데이터 소스에서 복사한 항목을 받는 <see cref="T:System.Array" />(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-139">A zero-based <see cref="T:System.Array" /> that receives the copied items from the data source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="fa2ee-140">복사한 내용을 받도록 지정된 <see cref="T:System.Array" />의 첫째 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-140">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa2ee-141">데이터 소스의 모든 항목을 <see cref="T:System.Array" />의 지정된 인덱스에서 시작하여 지정된 <see cref="T:System.Array" />로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-141">Copies all the items from the data source to the specified <see cref="T:System.Array" />, starting at the specified index in the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-142">이 메서드를 사용 하 여 지정 된 데이터 원본의 내용을 복사 <xref:System.Array?displayProperty=nameWithType>지정된 된 인덱스부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-142">Use this method to copy the contents of the data source into the specified <xref:System.Array?displayProperty=nameWithType>, starting at the specified index.</span></span> <span data-ttu-id="fa2ee-143"><xref:System.Array?displayProperty=nameWithType> 은 데이터 소스의 항목을 반복 하는 데 자주 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-143">The <xref:System.Array?displayProperty=nameWithType> is often used to iterate through the items in the data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-144">데이터 소스에서 사용할 항목의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-144">Gets the number of items to be used from the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-145">데이터 소스에서 사용할 항목의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-145">The number of items to be used from the data source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-146">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.Count%2A> 속성을 데이터 원본에서 사용할 수 있는 항목의 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-146">Use the <xref:System.Web.UI.WebControls.PagedDataSource.Count%2A> property to determine the number of items to be used from the data source.</span></span> <span data-ttu-id="fa2ee-147">반환 되는 값 페이징을 활성화 되어 있는지 여부 및 사용자 지정 페이징을 사용 여부에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-147">The value returned depends on whether paging is enabled and whether custom paging is used.</span></span>  
  
-   <span data-ttu-id="fa2ee-148">페이징 사용 하지 않는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 속성을 `false`)의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> 속성이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-148">If paging is disabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `false`), the value of the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property is returned.</span></span>  
  
-   <span data-ttu-id="fa2ee-149">페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 속성을 `true`) 사용자 지정 페이징을 사용 하도록 설정 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> 속성이로 설정 `true`)의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 속성이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-149">If paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `true`) and custom paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> property set to `true`), the value of the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property is returned.</span></span>  
  
-   <span data-ttu-id="fa2ee-150">페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 속성을 `true`) 및 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> 속성이로 설정 되어 `false`의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 속성이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-150">If paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `true`) and the <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> property is set to `false`, the value of the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property is returned.</span></span>  
  
-   <span data-ttu-id="fa2ee-151">페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 속성을 `true`), 사용자 지정 페이징을 사용할 수 없습니다 (설정 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> 속성 `false`), 및 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> 속성이로 설정 되어 `true`는 값<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>속성의 값에서 빼면는 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> 반환 하기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-151">If paging is enabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to `true`), custom paging is disabled (by setting the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> property `false`), and the <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> property is set to `true`, the value of the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property is subtracted from the value of the <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> property before it is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-152">경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 속성 포함 `null`, 0이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-152">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property contains `null`, 0 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentPageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageIndex : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-153">현재 페이지의 인덱스를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-153">Gets or sets the index of the current page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-154">현재 페이지의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-154">The index of the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-155">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A> 속성을 지정 하거나 현재 페이지의 인덱스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-155">Use the <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A> property to specify or determine the index of the current page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ DataSource { System::Collections::IEnumerable ^ get(); void set(System::Collections::IEnumerable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Collections.IEnumerable with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-156">데이터 소스를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-156">Gets or sets the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-157">데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" /> 구현 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-157">A <see cref="T:System.Collections.IEnumerable" /> implemented object that represents the data source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-158">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 속성을 지정 하거나 페이징 되는 데이터 소스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-158">Use the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property to specify or determine the data source being paged.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceCount">
      <MemberSignature Language="C#" Value="public int DataSourceCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSourceCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSourceCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataSourceCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-159">데이터 소스의 항목 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-159">Gets the number of items in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-160">데이터 소스의 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-160">The number of items in the data source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-161">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> 속성을 데이터 원본에 있는 항목의 수를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-161">Use the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property to determine the number of items in the data source.</span></span> <span data-ttu-id="fa2ee-162">서버 쪽 페이징 또는 사용자 지정 페이징을 사용 하는 경우의 값은 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> 속성이 반환 됩니다. 그렇지 않으면 데이터 원본에 있는 항목의 총 수는 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-162">If custom paging or server-side paging is used, the value of the <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> property is returned; otherwise, the total number of items in the data source is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-163">경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 속성 포함 `null`, 0이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-163">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property contains `null`, 0 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="fa2ee-164">데이터 소스가 <see cref="T:System.Collections.ICollection" /> 구현 개체가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-164">The data source is not an <see cref="T:System.Collections.ICollection" /> implemented object.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="FirstIndexInPage">
      <MemberSignature Language="C#" Value="public int FirstIndexInPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstIndexInPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstIndexInPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstIndexInPage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstIndexInPage : int" Usage="System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-165">페이지에 표시되는 첫 번째 레코드의 인덱스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-165">Gets the index of the first record displayed on the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-166">페이지에 표시되는 첫 번째 레코드의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-166">The index of the first record displayed on the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-167">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> 속성을 현재 페이지에서 첫 번째 항목의 인덱스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-167">Use the <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> property to determine the index of the first item on the current page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-168">경우는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 속성이 `false`, 또는 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> 또는 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 속성으로 설정 됩니다 `true`, 또는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 속성 포함 `null`, 0이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-168">If the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property is set to `false`, or the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> or <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> properties are set to `true`, or the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property contains `null`, 0 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="pagedDataSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-169">데이터 소스의 모든 항목을 포함하는 <see cref="T:System.Collections.IEnumerator" /> 구현 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-169">Returns a <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all items in the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa2ee-170">데이터 소스의 모든 항목을 포함하는 <see cref="T:System.Collections.IEnumerator" /> 구현 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-170">A <see cref="T:System.Collections.IEnumerator" /> implemented object that contains all items in the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-171">이 메서드를 만드는 데는 <xref:System.Collections.IEnumerator?displayProperty=nameWithType> 반복할 수 있는 통해 항목을 가져오는 각 데이터 원본에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-171">Use this method to create a <xref:System.Collections.IEnumerator?displayProperty=nameWithType> that can be iterated through to get each item in the data source.</span></span> <span data-ttu-id="fa2ee-172">열거자의 현재 위치에 있는 항목에 액세스 하려면 사용 된 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-172">To access the item at the current position in the enumerator, use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fa2ee-173">사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 메서드를 컬렉션의 다음 항목으로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-173">Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> method to move to the next item in the collection.</span></span> <span data-ttu-id="fa2ee-174">초기 위치에 열거자를 이동 하려면 사용 된 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-174">To move the enumerator to its initial position, use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-175">처음에 열거자를 가져옵니다. 하거나 때 사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드를 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-175">When you initially get the enumerator or use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> method to move the enumerator to the first item in the collection, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fa2ee-176">그렇지 않으면으로 표시 되는 항목은 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 속성이 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-176">Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> property is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="pagedDataSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="fa2ee-177">반환된 목록 이름을 포함하는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-177">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that contains the list name returned.</span>
          </span>
          <span data-ttu-id="fa2ee-178">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-178">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa2ee-179">데이터를 바인딩하는데 사용되는 각 항목의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-179">Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa2ee-180">데이터를 바인딩하는데 사용되는 각 항목의 속성을 나타내는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-180">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-181">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> 만드는 메서드를는 <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=nameWithType> 데이터에 바인딩하는 데 사용 하는 각 항목의 속성을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-181">Use the <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> method to create a <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=nameWithType> that represents the properties on each item used to bind data.</span></span> <span data-ttu-id="fa2ee-182">경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 속성은 `null` 없거나는 <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> 구현 개체를 `null` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-182">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property is `null` or is not a <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> implemented object, `null` is returned.</span></span> <span data-ttu-id="fa2ee-183">대 한 자세한 내용은 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> 메서드를 참조 <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-183">For more information on the <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> method, see <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="pagedDataSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="fa2ee-184">반환된 목록 이름을 포함하는 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-184">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that contains the list name returned.</span>
          </span>
          <span data-ttu-id="fa2ee-185">이 매개 변수는 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-185">This can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa2ee-186">해당 목록의 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-186">Returns the name of the list.</span>
          </span>
          <span data-ttu-id="fa2ee-187">이 메서드는 이 클래스에 적용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-187">This method does not apply to this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa2ee-188">모든 경우에 <see cref="F:System.String.Empty" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-188">
              <see cref="F:System.String.Empty" /> for all cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-189">이 메서드는 상속 <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> 및이 클래스에 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-189">This method is inherited from <xref:System.ComponentModel.ITypedList?displayProperty=nameWithType> and is not applicable to this class.</span></span> <span data-ttu-id="fa2ee-190">반환할 구현 되었습니다 <xref:System.String.Empty?displayProperty=nameWithType> 모든 경우에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-190">It has been implemented to return <xref:System.String.Empty?displayProperty=nameWithType> for all cases.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsCustomPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-191">사용자 지정 페이징의 활성화 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-191">Gets a value indicating whether custom paging is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-192">사용자 지정 페이징이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-192">
              <see langword="true" /> if custom paging is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-193">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> 속성을 사용자 지정 페이징을 사용 되는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-193">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> property to determine whether custom paging is enabled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-194">둘 다는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 및 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> 속성이 해야 `true` 반환 하도록이 속성에 대 한 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-194">Both the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> and <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> properties must be `true` for this property to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstPage">
      <MemberSignature Language="C#" Value="public bool IsFirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-195">현재 페이지가 첫 번째 페이지인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-195">Gets a value indicating whether the current page is the first page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-196">현재 페이지가 첫 번째 페이지이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-196">
              <see langword="true" /> if the current page is the first page; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-197">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsFirstPage%2A> 속성을 현재 페이지의 첫 번째 페이지 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-197">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsFirstPage%2A> property to determine whether the current page is the first page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      </Docs>
    </Member>
    <Member MemberName="IsLastPage">
      <MemberSignature Language="C#" Value="public bool IsLastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastPage : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-198">현재 페이지가 마지막 페이지인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-198">Gets a value indicating whether the current page is the last page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-199">현재 페이지가 마지막 페이지이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-199">
              <see langword="true" /> if the current page is the last page; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-200">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> 속성을 현재 페이지의 마지막 페이지 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-200">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> property to determine whether the current page is the last page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      </Docs>
    </Member>
    <Member MemberName="IsPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-201">페이징의 활성화 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-201">Gets a value indicating whether paging is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-202">페이징이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-202">
              <see langword="true" /> if paging is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-203">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 페이징의 사용 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-203">Use the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property to determine whether paging is enabled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-204"><xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> 속성 이어야 `true` 및 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 속성을 반환 하도록이 속성에 대 한 0으로 설정할 수 없습니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-204">The <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> property must be `true` and the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property cannot be set to 0 for this property to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-205">데이터 소스가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-205">Gets a value indicating whether the data source is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-206">모든 경우에 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-206">
              <see langword="false" /> for all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-207">이 속성은 항상 반환 하도록 구현 `false`, 데이터 원본의 모든 경우에에서 수정 될 수 있음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-207">This property is implemented to always return `false`, which indicates that the data source can be modified in all cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsServerPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerPagingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerPagingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerPagingEnabled : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-208">서버측 페이징이 지원되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-208">Gets a value indicating whether server-side paging support is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-209">페이징이 사용되고 <see cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" /> 속성을 사용하여 서버측 페이징이 지정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-209">
              <see langword="true" /> if paging is enabled and server-side paging is indicated using the <see cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" /> property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-210">서버 쪽 페이징을 사용 하는 경우는 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> 및 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> 속성 둘 다로 설정 `true`, 데이터 원본에서 검색 된 데이터 양을 단일 페이지에 표시 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-210">Server-side paging is enabled when the <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> and <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> properties are both set to `true`, and the amount of data retrieved by the data source cannot be displayed in a single page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-211">데이터 소스에 대한 액세스가 동기화(스레드로부터 안전)되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-211">Gets a value indicating whether access to the data source is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-212">모든 경우에 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-212">
              <see langword="false" /> for all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-213">이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=nameWithType> 클래스 및 항상 반환 하도록 재정의 `false` 이 클래스가 스레드로부터 안전 하지 않음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-213">This property is derived from the <xref:System.Collections.ICollection?displayProperty=nameWithType> class and is overridden to always return `false` to indicate that this class is not thread-safe.</span></span>  
  
 <span data-ttu-id="fa2ee-214">대 한 자세한 내용은 <xref:System.Web.UI.WebControls.PagedDataSource.IsSynchronized%2A> 속성 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-214">For more information on the <xref:System.Web.UI.WebControls.PagedDataSource.IsSynchronized%2A> property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> property of the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-215">데이터 소스의 모든 항목을 표시하는 데 필요한 전체 페이지 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-215">Gets the total number of pages necessary to display all items in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-216">데이터 소스의 모든 항목을 표시하는 데 필요한 페이지 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-216">The number of pages necessary to display all items in the data source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-217">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.PageCount%2A> 속성을 데이터 원본에서 모든 항목을 표시 하는 데 필요한 페이지 수를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-217">Use the <xref:System.Web.UI.WebControls.PagedDataSource.PageCount%2A> property to determine the number of pages necessary to display all items in the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa2ee-218">경우는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> 속성은 `null`, 0이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-218">If the <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> property is `null`, 0 is returned.</span></span> <span data-ttu-id="fa2ee-219">경우는 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> 속성이 `false` 또는 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> 0 이하로 속성이 설정 되어 있으면 1이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-219">If the <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> property is set to `false` or the <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> property is set to 0 or less, 1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-220">단일 페이지에 표시할 항목 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-220">Gets or sets the number of items to display on a single page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-221">단일 페이지에 표시할 항목의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-221">The number of items to display on a single page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-222">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> 속성을 지정 하거나 단일 페이지에 표시할 항목의 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-222">Use the <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> property to specify or determine the number of items to display on a single page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-223">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-223">Gets the object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-224">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-224">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-225">이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.PagedDataSource> 개체 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-225">The object returned in this implementation is the <xref:System.Web.UI.WebControls.PagedDataSource> object itself.</span></span>  
  
 <span data-ttu-id="fa2ee-226">대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> 속성 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-226">For more information on the <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> property of the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="VirtualCount">
      <MemberSignature Language="C#" Value="public int VirtualCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualCount : int with get, set" Usage="System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa2ee-227">사용자 지정 페이징을 사용하는 경우 데이터 소스에 있는 가상 항목의 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-227">Gets or sets the virtual number of items in the data source when custom paging is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa2ee-228">사용자 지정 페이징을 사용하는 경우 데이터 소스에 있는 가상 항목의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa2ee-228">The virtual number of items in the data source when custom paging is used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa2ee-229">사용 하 여는 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> 속성 사용자 지정 페이징 또는 서버 쪽 페이징을 사용 하 여 데이터 원본에 있는 항목의 가상 수를 결정 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-229">Use the <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> property when custom paging or server-side paging is used to determine the virtual number of items in the data source.</span></span> <span data-ttu-id="fa2ee-230">대 한 자세한 내용은 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> 속성 참조 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fa2ee-230">For more information on the <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> property, see <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      </Docs>
    </Member>
  </Members>
</Type>