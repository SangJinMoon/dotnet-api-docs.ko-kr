<Type Name="FormViewCommandEventArgs" FullName="System.Web.UI.WebControls.FormViewCommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f3fda6151f8ffb8639e9d802b519452eb9367008" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36582163" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewCommandEventArgs&#xA;Inherits CommandEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewCommandEventArgs : System::Web::UI::WebControls::CommandEventArgs" />
  <TypeSignature Language="F#" Value="type FormViewCommandEventArgs = class&#xA;    inherit CommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 이벤트는에 있는 단추는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 클릭 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 내에서 단추는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 컨트롤의 기본 기능 중 일부를 호출할 수도 있습니다. 이러한 작업 중 하나를 수행 하려면 설정는 `CommandName` 다음 표에 있는 값 중 하나에 있는 단추의 속성입니다.  
  
|CommandName 값|설명|  
|-----------------------|-----------------|  
|"취소"|편집 또는 삽입 작업을 취소 하 고 보냅니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 모드 및 지정 된을 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 속성. 발생 된 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트입니다.|  
|"Delete"|현재 레코드를 삭제합니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 이벤트입니다.|  
|"Edit"|배치는 <xref:System.Web.UI.WebControls.FormView> 편집 모드에서 제어 합니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트입니다.|  
|"삽입"|데이터 소스의 현재 레코드를 삽입합니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 및 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 이벤트입니다.|  
|"새"|배치는 <xref:System.Web.UI.WebControls.FormView> 삽입 모드에서 제어 합니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트입니다.|  
|"Page"|페이징 작업을 수행합니다. 설정의 `CommandArgument` 단추 "First", "마지막"를, "다음", "이전" 또는 페이징 작업의 형식을 지정 하는 페이지 번호를 수행 하려면의 속성입니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 이벤트입니다.|  
|"업데이트"|데이터 소스에서 현재 레코드를 업데이트 합니다. 발생 된 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 이벤트입니다.|  
  
 하지만 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 앞의 표에 나열 된 단추를 클릭할 때 이벤트가 발생, 작업에 대 한 테이블에 나열 된 이벤트를 사용 하는 것이 좋습니다.  
  
 A <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 개체 명령 이름과 클릭 된 단추의 명령 인수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 명령 이름 및 명령 인수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 및 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 속성을 각각. 사용 하 여 이벤트를 발생 하는 단추 컨트롤에 액세스할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 클래스의 인스턴스에 대한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.%23ctor%2A> 생성자를 참조하십시오.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 개체에 대 한 이벤트 처리 메서드에 전달는 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 어느 단추 내에서 결정 하기 위해 이벤트는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 사용자가 클릭 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandSource As Object, originalArgs As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewCommandEventArgs(System::Object ^ commandSource, System::Web::UI::WebControls::CommandEventArgs ^ originalArgs);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewCommandEventArgs : obj * System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.FormViewCommandEventArgs" Usage="new System.Web.UI.WebControls.FormViewCommandEventArgs (commandSource, originalArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">The source of the command.</param>
        <param name="originalArgs">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> that contains event data.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 클래스입니다.  
  
 다음 표에서는 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 인스턴스의 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|값은 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 속성은 <xref:System.Web.UI.WebControls.CommandEventArgs> 에 포함 된는 `originalArgs` 매개 변수입니다.|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|값은 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 속성은 <xref:System.Web.UI.WebControls.CommandEventArgs> 에 포함 된는 `originalArgs` 매개 변수입니다.|  
|<xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A>|에 포함 된 개체는 `commandSource` 매개 변수입니다.|  
  
> [!NOTE]
>  이 생성자는 이벤트를 발생 시킬 때 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandSource : obj" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control that raised the event.</summary>
        <value>
          <see cref="T:System.Object" /> 이벤트를 발생 하는 컨트롤을 나타내는입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> 이벤트를 발생 하는 컨트롤의 속성에 액세스 하는 속성입니다. 경우에 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 개체를 컨트롤은 사용자가 클릭 된 단추입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs.CommandSource%2A> 발생 하는 단추 컨트롤의 속성에 액세스 하는 속성은 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the control has handled the event.</summary>
        <value>
          <see langword="true" /> 데이터 바인딩 이벤트 코드 건너뛰었거나; 완료 하는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `true` 되도록 지정 하려면 이벤트 처리기에는 <xref:System.Web.UI.WebControls.FormView> 코드에서 처리 하는 때문에 컨트롤 이벤트를 처리 하지 않도록 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>