<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e2893-101">웹 페이지에 누름 단추 컨트롤을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-101">Displays a push button control on the Web page.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="e2893-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="e2893-103">소개</span><span class="sxs-lookup"><span data-stu-id="e2893-103">Introduction</span></span>](#Introduction)  
  
-   [<span data-ttu-id="e2893-104">포스트백 동작 및 서버 이벤트 단추</span><span class="sxs-lookup"><span data-stu-id="e2893-104">Button Postback Behavior and Server Events</span></span>](#ButtonPostbackBehaviorandServerEvents)  
  
-   [<span data-ttu-id="e2893-105">클라이언트 스크립트에서 처리 단추 이벤트</span><span class="sxs-lookup"><span data-stu-id="e2893-105">Handling Button Events in Client Script</span></span>](#HandlingButtonEventsinClientScript)  
  
-   [<span data-ttu-id="e2893-106">단추 컨트롤 및 유효성 검사</span><span class="sxs-lookup"><span data-stu-id="e2893-106">Button Controls and Validation</span></span>](#ButtonControlsAndValidation)  
  
-   [<span data-ttu-id="e2893-107">데이터 컨트롤의 단추</span><span class="sxs-lookup"><span data-stu-id="e2893-107">Buttons in Data Controls</span></span>](#ButtonsInDataControls)  
  
-   [<span data-ttu-id="e2893-108">컨트롤에 데이터 바인딩</span><span class="sxs-lookup"><span data-stu-id="e2893-108">Binding Data to the Controls</span></span>](#BindingDataToTheControls)  
  
-   [<span data-ttu-id="e2893-109">UpdatePanel 컨트롤에 단추 사용</span><span class="sxs-lookup"><span data-stu-id="e2893-109">Using Buttons with UpdatePanel Controls</span></span>](#UsingButtonsWithUpdatePanelControls)  
  
-   [<span data-ttu-id="e2893-110">선언 구문</span><span class="sxs-lookup"><span data-stu-id="e2893-110">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="e2893-111">소개</span><span class="sxs-lookup"><span data-stu-id="e2893-111">Introduction</span></span>  
 <span data-ttu-id="e2893-112">사용 하 여는 <xref:System.Web.UI.WebControls.Button> 사용자가 페이지를 서버에 게시할 수 있도록 웹 페이지에 누름 단추를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-112">Use the <xref:System.Web.UI.WebControls.Button> control to create a push button on the Web page that lets users to post a page to the server.</span></span> <span data-ttu-id="e2893-113">컨트롤에서 포스트백에 응답 하기 위해 처리할 수 있는 서버 코드에서 이벤트를 트리거합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-113">The control triggers an event in server code that you can handle to respond to the postback.</span></span> <span data-ttu-id="e2893-114">또한 페이지를 게시 하거나 실행 하 고 다음 페이지의 제출을 취소할 수 있는 전에 처리할 수 있는 클라이언트 스크립트에서 이벤트를 발생 시킬 수 있기 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-114">It can also raise an event in client script that you can handle before the page is posted or that can run and then cancel submission of the page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2893-115">ASP.NET 웹 페이지에는 각각 다르게 표시 단추 컨트롤의 몇 가지 종류를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-115">ASP.NET includes several kinds of button controls, each of which appears differently on Web pages.</span></span> <span data-ttu-id="e2893-116">이들은 <xref:System.Web.UI.WebControls.Button> 누름 단추;으로 렌더링 되는 제어는 <xref:System.Web.UI.WebControls.LinkButton> ; 링크로 렌더링 되는 제어 및 <xref:System.Web.UI.WebControls.ImageButton> 이미지; 형식으로 렌더링 되는 제어 및 <xref:System.Web.UI.WebControls.ImageMap> 스폿이 그래픽을 만들 수 있는 컨트롤 사용자가 클릭할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-116">They are the <xref:System.Web.UI.WebControls.Button> control, which renders as a push button; the <xref:System.Web.UI.WebControls.LinkButton> control, which renders as a link; and the <xref:System.Web.UI.WebControls.ImageButton> control, which renders as an image; and the <xref:System.Web.UI.WebControls.ImageMap> control, which lets you create a graphic that has hotspots that users can click.</span></span> <span data-ttu-id="e2893-117">기본적으로 모든 단추 컨트롤을 클릭 하면 페이지를 제출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-117">By default, all button controls submit the page when clicked.</span></span> <span data-ttu-id="e2893-118">사용할 수도 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlButton> 및 <xref:System.Web.UI.HtmlControls.HtmlInputButton> 서버 코드로 프로그래밍할 수 있는 컨트롤 페이지 단추를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-118">You can also use the <xref:System.Web.UI.HtmlControls.HtmlButton> and <xref:System.Web.UI.HtmlControls.HtmlInputButton> controls to create buttons on the page that are programmable in server code.</span></span> <span data-ttu-id="e2893-119">HTML 및 웹 서버 컨트롤의 차이점에 대 한 세부 정보를 참조 하십시오. [ASP.NET 웹 서버 컨트롤 개요](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-119">For details about the differences between HTML and Web server controls, see [ASP.NET Web Server Controls Overview](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).</span></span>  
  
 <span data-ttu-id="e2893-120">기본적으로는 <xref:System.Web.UI.WebControls.Button> 컨트롤은 제출 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-120">By default, a <xref:System.Web.UI.WebControls.Button> control is a Submit button.</span></span> <span data-ttu-id="e2893-121">제출 단추는 명령 이름을 없습니다 (에 지정 된는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성)는 단추와 서버에 웹 페이지를 다시 게시물 단순히와 관련 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-121">A Submit button does not have a command name (specified by the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property) associated with the button and simply posts the Web page back to the server.</span></span> <span data-ttu-id="e2893-122">에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.Click> 제출 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-122">You can provide an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event to programmatically control the actions performed when the Submit button is clicked.</span></span>  
  
 <span data-ttu-id="e2893-123">명령 단추에는 단추와 같은 연관 되는 명령 이름을 `Sort`를 설정 하 여는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-123">A Command button has a command name associated with the button, such as `Sort`, by setting the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property.</span></span> <span data-ttu-id="e2893-124">이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-124">This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-125">사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성에 같은 수행할 명령에 대 한 추가 정보를 제공 하는 명령 단추 `Ascending`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-125">You can also use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property with a command button to provide additional information about the command to perform, such as `Ascending`.</span></span> <span data-ttu-id="e2893-126">에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.Command> 명령 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-126">You can provide an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to programmatically control the actions performed when the Command button is clicked.</span></span>  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a><span data-ttu-id="e2893-127">포스트백 동작 및 서버 이벤트 단추</span><span class="sxs-lookup"><span data-stu-id="e2893-127">Button Postback Behavior and Server Events</span></span>  
 <span data-ttu-id="e2893-128">사용자가 모든 웹 서버 컨트롤 단추를 클릭 하면 페이지는 서버로 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-128">When a user clicks any Web server control button, the page is sent to the server.</span></span> <span data-ttu-id="e2893-129">그러면 웹 페이지가 처리 되 고 보류 중인 이벤트 서버 기반 코드에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-129">This causes the Web page to be processed and any pending events to be raised in server-based code.</span></span> <span data-ttu-id="e2893-130">모든 페이지와 컨트롤 처리가 완료 되 면 페이지 자체에 렌더링 브라우저 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-130">When all page and control processing has finished, the page renders itself to the browser again.</span></span>  
  
 <span data-ttu-id="e2893-131">단추를 발생 시킬 수 자신의 <xref:System.Web.UI.WebControls.Button.Click> 이벤트 또는 <xref:System.Web.UI.WebControls.Button.Command> 서버 기반 코드를 사용 하 여 처리할 수 있는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-131">The buttons can raise their own <xref:System.Web.UI.WebControls.Button.Click> events or <xref:System.Web.UI.WebControls.Button.Command> event, which you can handle by using server-based code.</span></span> <span data-ttu-id="e2893-132">이 단추의 클라이언트 기반 웹 응용 프로그램 이벤트에서 기존 HTML 페이지와 다른 `onclick` 클라이언트에서 실행 되는 JavaScript를 사용 하 여 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-132">This is different than events in traditional HTML pages or in client-based Web applications, where a button's `onclick` event is handled by using JavaScript that runs in the client.</span></span> <span data-ttu-id="e2893-133">자세한 내용은 참조 [ASP.NET Web Forms 서버 컨트롤 이벤트 모델](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-133">For more information, see [ASP.NET Web Forms Server Control Event Model](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).</span></span>  
  
 <span data-ttu-id="e2893-134">사용자가 단추 컨트롤을 클릭 하는 경우 페이지는 서버에 다시 게시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-134">When users click a button control, the page is posted back to the server.</span></span> <span data-ttu-id="e2893-135">기본적으로 페이지 자신에 게 다시 게시</span><span class="sxs-lookup"><span data-stu-id="e2893-135">By default, the page is posted back to itself,</span></span>  
  
 <span data-ttu-id="e2893-136">현재 페이지를 다른 페이지를 게시 하는 단추를 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-136">You can configure buttons to post the current page to another page.</span></span> <span data-ttu-id="e2893-137">이 다중 페이지 폼을 만드는 데 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-137">This can be useful for creating multi-page forms.</span></span> <span data-ttu-id="e2893-138">자세한 내용은 참조 [ASP.NET Web Forms의 게시 페이지 간](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-138">For details, see [Cross-Page Posting in ASP.NET Web Forms](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).</span></span>  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a><span data-ttu-id="e2893-139">클라이언트 스크립트에서 처리 단추 이벤트</span><span class="sxs-lookup"><span data-stu-id="e2893-139">Handling Button Events in Client Script</span></span>  
 <span data-ttu-id="e2893-140">단추 컨트롤에는 서버 이벤트와 클라이언트 이벤트 발생 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-140">Button controls can raise both server events and client events.</span></span> <span data-ttu-id="e2893-141">서버 이벤트를 다시 게시 한 후에 발생 하 고 페이지에 대해 작성 하는 서버 쪽 코드에서 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-141">Server events occur after postback, and they are handled in the server-side code that you write for the page.</span></span> <span data-ttu-id="e2893-142">클라이언트 이벤트 클라이언트 스크립트를 일반적으로 ECMAScript (JavaScript)에서 처리 되 고 페이지 전송 되기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-142">Client events are handled in client script, typically ECMAScript (JavaScript), and are raised before the page is submitted.</span></span> <span data-ttu-id="e2893-143">ASP.NET 단추 컨트롤에서 클라이언트측 이벤트를 더하여 페이지를 제출 하기 전에 확인 대화 상자를 표시 하는 등 작업을 수행할 수 있으며 고 전송을 취소할 수도 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-143">By adding client-side events to ASP.NET button controls, you can perform tasks such as displaying confirmation dialog boxes before submitting the page, and potentially cancel the submission.</span></span> <span data-ttu-id="e2893-144">자세한 내용은 참조 [ASP.NET 웹 페이지에서 클라이언트 스크립트](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) 및 [하는 방법: 클라이언트 스크립트에서 단추 웹 서버 컨트롤 이벤트에 응답](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-144">For details, see [Client Script in ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) and [How to: Respond to Button Web Server Control Events in Client Script](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).</span></span>  
  
 <span data-ttu-id="e2893-145">또한 할 수도 있습니다는 <xref:System.Web.UI.WebControls.Button> 제어도 클라이언트 스크립트를 사용 하는 HTTP POST 작업을 수행 하면) (대신 포스트백을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-145">You might also want the <xref:System.Web.UI.WebControls.Button> control to also use client script to perform the postback (instead of simply performing an HTTP POST operation).</span></span> <span data-ttu-id="e2893-146">이 페이지에서 다른 요소에 연결 하는 등 포스트백을 프로그래밍 방식으로 조작 하려는 경우에 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-146">This can be useful if you want to programmatically manipulate the postback, such as attaching it to other elements on the page.</span></span> <span data-ttu-id="e2893-147">설정할 수 있습니다는 <xref:System.Web.UI.WebControls.Button> 컨트롤의 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성을 `true` 시킬는 <xref:System.Web.UI.WebControls.Button> 클라이언트 스크립트를 사용 하는 컨트롤 포스트백을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-147">You can set the <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to `true` to cause the <xref:System.Web.UI.WebControls.Button> control to use client-script based postback.</span></span>  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a><span data-ttu-id="e2893-148">단추 컨트롤 및 유효성 검사</span><span class="sxs-lookup"><span data-stu-id="e2893-148">Button Controls and Validation</span></span>  
 <span data-ttu-id="e2893-149">페이지는 기본적으로 ASP.NET 유효성 검사 컨트롤을 포함 하는 경우 단추 컨트롤을 클릭 하면 컨트롤이 유효성 검사기 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-149">If a page contains ASP.NET validator controls, by default, clicking a button control causes the validator control to perform its check.</span></span> <span data-ttu-id="e2893-150">유효성 검사 컨트롤에 대 한 클라이언트 쪽 유효성 검사를 활성화, 유효성 검사에 실패 한 경우 페이지 전송 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-150">If client-side validation is enabled for a validator control, the page is not submitted if a validation check has failed.</span></span>  
  
 <span data-ttu-id="e2893-151">다음 표에서 유효성 검사 프로세스를 보다 정확 하 게 제어할 수 있도록 단추 컨트롤에서 지 원하는 속성을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-151">The following table describes the properties supported by button controls that enable you to control the validation process more precisely.</span></span>  
  
|<span data-ttu-id="e2893-152">속성</span><span class="sxs-lookup"><span data-stu-id="e2893-152">Property</span></span>|<span data-ttu-id="e2893-153">설명</span><span class="sxs-lookup"><span data-stu-id="e2893-153">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|<span data-ttu-id="e2893-154">여부 단추를 클릭 하면 유효성 검사도 수행을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-154">Specifies whether clicking the button also performs a validation check.</span></span> <span data-ttu-id="e2893-155">이 속성을 설정 `false` 유효성 검사를 수행 하지 않으려면입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-155">Set this property to `false` to prevent a validation check.</span></span>|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|<span data-ttu-id="e2893-156">페이지에서 유효성 검사기를 사용 하는 단추를 클릭할 때 호출를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-156">Enables you to specify which validators on the page are called when the button is clicked.</span></span> <span data-ttu-id="e2893-157">없는 유효성 검사 그룹을 설정 하는 경우 페이지에는 유효성 검사기의 모든 단추 클릭을 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-157">If no validation groups are established, a button click calls all of the validators that are on the page.</span></span>|  
  
 <span data-ttu-id="e2893-158">자세한 내용은 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e2893-158">For more information, see [Validating User Input in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).</span></span>  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a><span data-ttu-id="e2893-159">데이터 컨트롤의 단추</span><span class="sxs-lookup"><span data-stu-id="e2893-159">Buttons in Data Controls</span></span>  
 <span data-ttu-id="e2893-160">Button 웹 서버 컨트롤은 보통 데이터 컨트롤에서와 같은 사용 된 <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, 및 <xref:System.Web.UI.WebControls.Repeater> 목록 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-160">Button Web server controls are often used in data controls, such as in the <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, and <xref:System.Web.UI.WebControls.Repeater> list controls.</span></span> <span data-ttu-id="e2893-161">이 경우 일반적으로 응답 하지 않으면 단추에 직접 이벤트를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-161">In those cases, you typically do not respond directly to the button click event.</span></span> <span data-ttu-id="e2893-162">대신, 단추 데이터 컨트롤에 데이터 컨트롤에만 적용 되는 이벤트를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-162">Instead, a button in a data control raises an event that is specific to the data control.</span></span> <span data-ttu-id="e2893-163">예를 들어는 <xref:System.Web.UI.WebControls.DataList> 컨트롤 단추 발생 시킬 수 있습니다는 <xref:System.Web.UI.WebControls.DataList> 컨트롤의 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 이벤트를 발생 시키는 대신는 <xref:System.Web.UI.WebControls.Button> 컨트롤의 <xref:System.Web.UI.WebControls.Button.Click> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-163">For example, in the <xref:System.Web.UI.WebControls.DataList> control, a button might raise the <xref:System.Web.UI.WebControls.DataList> control's <xref:System.Web.UI.WebControls.DataList.ItemCommand> event instead of raising the <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.Click> event.</span></span>  
  
 <span data-ttu-id="e2893-164">데이터 바인딩된 목록 컨트롤에는 많은 단추가 포함 될 수 있습니다, 때문에 있는 단추를 설정할 수 있습니다 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성을 통해이 이벤트의 일부로 전달 하는 값을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-164">Because data-bound list controls can contain many buttons, you can set the button's <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to specify a value to pass as part of the event.</span></span> <span data-ttu-id="e2893-165">클릭 한 단추를 보려면이 인수에 대해 테스트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-165">You can then test for this argument to see which button was clicked.</span></span>  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a><span data-ttu-id="e2893-166">컨트롤에 데이터 바인딩</span><span class="sxs-lookup"><span data-stu-id="e2893-166">Binding Data to the Controls</span></span>  
 <span data-ttu-id="e2893-167">속성 설정을 제어 하려면 데이터 원본에 단추 웹 서버 컨트롤을 바인딩할 수 동적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-167">You can bind the button Web server controls to a data source in order to control their property settings dynamically.</span></span> <span data-ttu-id="e2893-168">예를 들어 단추를 설정할 수 있습니다 <xref:System.Web.UI.WebControls.Button.Text%2A> 데이터 바인딩을 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-168">For example, you can set a button's <xref:System.Web.UI.WebControls.Button.Text%2A> property by using data binding.</span></span>  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a><span data-ttu-id="e2893-169">UpdatePanel 컨트롤에 단추 사용</span><span class="sxs-lookup"><span data-stu-id="e2893-169">Using Buttons with UpdatePanel Controls</span></span>  
 <span data-ttu-id="e2893-170">부분 페이지 렌더링 포스트백 없이 페이지의 부분을 새로 고칠 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-170">Partial-page rendering makes it possible to refresh portions of a page without a postback.</span></span> <span data-ttu-id="e2893-171"><xref:System.Web.UI.UpdatePanel> 컨트롤을 사용 하 여 해당 페이지의 부분 페이지 렌더링에 참여 하는 부분을 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-171"><xref:System.Web.UI.UpdatePanel> controls enable you to mark parts of the page that participate in partial-page rendering.</span></span> <span data-ttu-id="e2893-172">기본적으로 내 컨트롤의 동작과 <xref:System.Web.UI.UpdatePanel> 컨트롤을 포함 하 여 <xref:System.Web.UI.WebControls.Button> 제어, 한 포스트백 대신 비동기 포스트백을 수행 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-172">By default, the behavior of controls inside an <xref:System.Web.UI.UpdatePanel> control, including <xref:System.Web.UI.WebControls.Button> controls, is to perform an asynchronous postback instead of a postback.</span></span> <span data-ttu-id="e2893-173">내용만 새로 고쳐진는 <xref:System.Web.UI.UpdatePanel> 포스트백 있는에서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-173">This refreshes only the contents of the <xref:System.Web.UI.UpdatePanel> control from which the postback originates.</span></span>  
  
 <span data-ttu-id="e2893-174">외의 시나리오에는 <xref:System.Web.UI.WebControls.Button> 컨트롤 내에 있는 <xref:System.Web.UI.UpdatePanel> 컨트롤에서는 <xref:System.Web.UI.WebControls.Button> 컨트롤과 <xref:System.Web.UI.UpdatePanel> 다음과 같은 시나리오에서 컨트롤:</span><span class="sxs-lookup"><span data-stu-id="e2893-174">In addition to the scenario of a <xref:System.Web.UI.WebControls.Button> control that is inside an <xref:System.Web.UI.UpdatePanel> control, you can use <xref:System.Web.UI.WebControls.Button> controls with <xref:System.Web.UI.UpdatePanel> controls in the following scenarios:</span></span>  
  
-   <span data-ttu-id="e2893-175">정의 <xref:System.Web.UI.WebControls.Button> 외부에 있는 컨트롤과 <xref:System.Web.UI.UpdatePanel> 으로 제어는 <xref:System.Web.UI.AsyncPostBackTrigger> 해당 패널에 대 한 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-175">Defining a <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control as an <xref:System.Web.UI.AsyncPostBackTrigger> control for that panel.</span></span> <span data-ttu-id="e2893-176">단추를 클릭할 때 비동기 포스트백을 수행 하 고 패널의 내용을 새로 고칩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-176">When the button is clicked, it performs an asynchronous postback and refreshes the contents of the panel.</span></span>  
  
-   <span data-ttu-id="e2893-177">정의 <xref:System.Web.UI.WebControls.Button> 컨트롤 내에 있는 프로그램 <xref:System.Web.UI.UpdatePanel> 으로 제어는 <xref:System.Web.UI.PostBackTrigger> 패널에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-177">Defining a <xref:System.Web.UI.WebControls.Button> control that is inside an <xref:System.Web.UI.UpdatePanel> control as a <xref:System.Web.UI.PostBackTrigger> for the panel.</span></span> <span data-ttu-id="e2893-178">내는 것 포스트백을 수행 하는 단추를 클릭할 때는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-178">When the button is clicked, it performs a postback even though it is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="e2893-179">부분 페이지 렌더링 하 고 사용 하 여에 대 한 자세한 내용은 <xref:System.Web.UI.UpdatePanel> 컨트롤 참조 [UpdatePanel 컨트롤 개요](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) 및 [부분 페이지 렌더링 개요](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-179">For more information about partial-page rendering and using <xref:System.Web.UI.UpdatePanel> controls, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="e2893-180">선언 구문</span><span class="sxs-lookup"><span data-stu-id="e2893-180">Declarative Syntax</span></span>  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e2893-181">다음 코드 예제에는 전송을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 콘텐츠 서버에 다시 게시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-181">The following code example demonstrates how to create a Submit <xref:System.Web.UI.WebControls.Button> control that posts the Web page content back to the server.</span></span>  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="e2893-182">다음 코드 예제에서는 명령을 만드는 방법을 보여 줍니다. <xref:System.Web.UI.WebControls.Button> 목록을 정렬 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-182">The following code example demonstrates how to create a Command <xref:System.Web.UI.WebControls.Button> control that sorts a list.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2893-183"><see cref="T:System.Web.UI.WebControls.Button" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-183">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Button" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-184">이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.Button> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-184">Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-185">다음 코드 예제를 만들고의 새 인스턴스를 초기화 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-185">The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.</span></span>  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="e2893-186">클라이언트에서 렌더링할 출력 스트림이 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-186">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</span></span></param>
        <summary><span data-ttu-id="e2893-187">클라이언트에서 렌더링하기 위한 출력 스트림에 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 특성을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-187">Adds the attributes of the <see cref="T:System.Web.UI.WebControls.Button" /> control to the output stream for rendering on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2893-188">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> 메서드는 사용자 지정 서버 컨트롤에 있도록는 <xref:System.Web.UI.WebControls.Button> 텍스트가 빨간색으로 항상 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-188">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.</span></span>  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-189"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭할 때 유효성 검사가 수행되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-189">Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <value>
          <span data-ttu-id="e2893-190"><see langword="true" /> 컨트롤을 클릭할 때 유효성 검사가 수행되면 <see cref="T:System.Web.UI.WebControls.Button" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-190"><see langword="true" /> if validation is performed when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e2893-191">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-191">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-192">기본적으로 페이지 유효성 검사가 수행 됩니다 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-192">By default, page validation is performed when a <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-193">페이지 유효성 검사는 입력된 컨트롤과 모두 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 하는 페이지에 유효성 검사 컨트롤 연관 있는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-193">Page validation determines whether the input controls associated with a validation control on the page all pass the validation rules specified by the validation control.</span></span>  
  
 <span data-ttu-id="e2893-194">클라이언트와 서버 모두에서 유효성 검사를 수행할지 여부를 확인 하거나 지정할 수 있습니다 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 사용 하 여 클릭는 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-194">You can specify or determine whether validation is performed on both the client and the server when a <xref:System.Web.UI.WebControls.Button> control is clicked by using the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property.</span></span> <span data-ttu-id="e2893-195">유효성 검사가 수행 되지를 방지 하려면 설정는 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-195">To prevent validation from being performed, set the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2893-196">설정 해야는 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성을 `false` 사용 하는 경우는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 다른 페이지에 다시 게시 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-196">You should set the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to `false` when you are using the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to post back to a different page.</span></span> <span data-ttu-id="e2893-197">다른 페이지를 다시 게시할 때 유효성 검사를 명시적으로 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-197">You should explicitly check validation when posting back to a different page.</span></span> <span data-ttu-id="e2893-198">예를 들어의 설명 섹션을 참조 하십시오.는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-198">For an example, see the Remarks section of the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property.</span></span>  
  
 <span data-ttu-id="e2893-199">이 속성은 보통 설정 `false` 에 대 한는 `reset` 또는 `clear` 유효성 검사가 단추를 클릭할 때 수행 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-199">This property is commonly set to `false` for a `reset` or `clear` button to prevent validation from being performed when the button is clicked.</span></span>  
  
 <span data-ttu-id="e2893-200">때의 값은 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성이로 설정 되어 `true`, 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 속성을 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.Button> 이 컨트롤로 유효성 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-200">When the value of the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`, you can also use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.Button> control causes validation.</span></span>  
  
 <span data-ttu-id="e2893-201">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-201">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e2893-202">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-202">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-203">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성 유효성 검사에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-203">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to prevent page validation from occurring.</span></span> <span data-ttu-id="e2893-204"><xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 메서드 각 유효성 검사 컨트롤을 독립적으로 활성화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-204">Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2893-205">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-205">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="e2893-206">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-206">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e2893-207">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e2893-207">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-208"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-208">Occurs when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-209"><xref:System.Web.UI.WebControls.Button.Click> 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-209">The <xref:System.Web.UI.WebControls.Button.Click> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-210">명령 이름이 없는 연결 된 경우이 이벤트는 주로 사용 된 <xref:System.Web.UI.WebControls.Button> 컨트롤 (예를 들어, 전송 단추).</span><span class="sxs-lookup"><span data-stu-id="e2893-210">This event is commonly used when no command name is associated with the <xref:System.Web.UI.WebControls.Button> control (for instance, with a Submit button).</span></span>  
  
 <span data-ttu-id="e2893-211">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-211">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-212">다음 코드 예제에 지정 하 고에 대 한 이벤트 처리기를 코딩 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button.Click> 이벤트는 웹에서 메시지를 표시 하도록 때 페이지는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-212">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-213"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-213">Occurs when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-214"><xref:System.Web.UI.WebControls.Button.Command> 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-214">The <xref:System.Web.UI.WebControls.Button.Command> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-215">때 명령 이름에 일반적으로이 이벤트는 같은 `Sort`, 연결 된는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-215">This event is commonly used when a command name, such as `Sort`, is associated with the <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="e2893-216">이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-216">This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2893-217"><xref:System.Web.UI.WebControls.Button.Command> 의 형태로 컨트롤 계층 구조를 통해 이벤트는 `BubbleEvent`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-217">The <xref:System.Web.UI.WebControls.Button.Command> event is raised through the control hierarchy in the form of the `BubbleEvent`.</span></span>  
  
 <span data-ttu-id="e2893-218">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-218">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-219">다음 코드 예제에 지정 하 고에 대 한 이벤트 처리기를 코딩 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button.Command> 이벤트 목록을 정렬 하려면 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-219">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-220">이 예제에서는 이벤트 처리기를 선언적으로 지정를 사용 하 여는 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 의 속성은 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-220">This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 <span data-ttu-id="e2893-221">다음 코드 예제에서는 이벤트 처리기를 지정 하 고 프로그래밍 방식으로 이벤트에 추가 하는 방법을 보여 줍니다.는 `Page_Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="e2893-221">The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.</span></span>  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-222">연결된 <see cref="E:System.Web.UI.WebControls.Button.Command" />과 함께 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 이벤트에 전달되는 선택적 매개 변수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-222">Gets or sets an optional parameter passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event along with the associated <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</span></span></summary>
        <value><span data-ttu-id="e2893-223">연결된 <see cref="E:System.Web.UI.WebControls.Button.Command" />과 함께 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 이벤트에 전달되는 선택적 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-223">An optional parameter passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event along with the associated <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</span></span> <span data-ttu-id="e2893-224">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-224">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-225">사용 하 여는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성 보완 하는 매개 변수를 지정 하는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-225">Use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to specify a parameter that compliments the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2893-226">설정할 수 있지만는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 자체적으로 속성을 경우에 사용는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 도 속성이 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-226">Although you can set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property by itself, it is normally only used when the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property is also set.</span></span>  
  
 <span data-ttu-id="e2893-227"><xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성 보완은 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 수행 하기 위한 명령에 대 한 추가 정보를 제공 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-227">The <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property complements the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property by allowing you to provide additional information about the command to perform.</span></span> <span data-ttu-id="e2893-228">예를 들어, 설정 하는 경우는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 `Sort` 및 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성을 `Ascending`를 오름차순으로 정렬 하는 명령을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-228">For example, if you set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to `Sort` and the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to `Ascending`, you specify a command to sort in ascending order.</span></span>  
  
 <span data-ttu-id="e2893-229">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-229">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e2893-230">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-230">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-231">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 만들 속성은 <xref:System.Web.UI.WebControls.Button> 목록을 오름차순으로 정렬 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-231">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-232"><see cref="T:System.Web.UI.WebControls.Button" /> 이벤트에 전달되는 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 컨트롤과 연결된 명령 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-232">Gets or sets the command name associated with the <see cref="T:System.Web.UI.WebControls.Button" /> control that is passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event.</span></span></summary>
        <value><span data-ttu-id="e2893-233"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 명령 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-233">The command name of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span> <span data-ttu-id="e2893-234">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-234">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-235">여러 개 <xref:System.Web.UI.WebControls.Button> 웹 페이지 컨트롤을 사용 하 여는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성 명령 이름을 지정 하거나 확인을 각각와 연관 된 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-235">When you have multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page, use the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to specify or determine the command name associated with each <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="e2893-236">설정할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 수행할 명령을 식별 하는 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-236">You can set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property with any string that identifies the command to perform.</span></span> <span data-ttu-id="e2893-237">명령 이름을 프로그래밍 방식으로 확인 한 다음 수는 <xref:System.Web.UI.WebControls.Button> 제어 하 고 적절 한 조치를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-237">You can then programmatically determine the command name of the <xref:System.Web.UI.WebControls.Button> control and perform the appropriate actions.</span></span>  
  
 <span data-ttu-id="e2893-238">명령에 대 한 자세한 내용은 같은 `Ascending`를 사용 하 여 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-238">Additional information about the command, such as `Ascending`, may be specified by using the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property.</span></span>  
  
 <span data-ttu-id="e2893-239">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-239">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e2893-240">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-240">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-241">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 만들 속성은 <xref:System.Web.UI.WebControls.Button> 목록을 정렬 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-241">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2893-242"><see cref="T:System.Web.UI.PostBackOptions" /> 컨트롤의 포스트백 동작을 나타내는 <see cref="T:System.Web.UI.WebControls.Button" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-242">Creates a <see cref="T:System.Web.UI.PostBackOptions" /> object that represents the <see cref="T:System.Web.UI.WebControls.Button" /> control's postback behavior.</span></span></summary>
        <returns><span data-ttu-id="e2893-243"><see cref="T:System.Web.UI.PostBackOptions" /> 컨트롤의 포스트백 동작을 나타내는 <see cref="T:System.Web.UI.WebControls.Button" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-243">A <see cref="T:System.Web.UI.PostBackOptions" /> that represents the <see cref="T:System.Web.UI.WebControls.Button" /> control's postback behavior.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-244"><xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> 메서드를 만듭니다는 <xref:System.Web.UI.PostBackOptions> 을 나타내는 개체는 <xref:System.Web.UI.WebControls.Button> 컨트롤의 포스트백 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-244">The <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> method creates a <xref:System.Web.UI.PostBackOptions> object that represents the <xref:System.Web.UI.WebControls.Button> control's postback behavior.</span></span> <span data-ttu-id="e2893-245"><xref:System.Web.UI.PostBackOptions> 에 일반적으로 전달 된 다음이 개체는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> 클라이언트 쪽 스크립트 함수에 대 한 참조를 가져올 호출에 사용 되는 메서드를 선택 하면 서버를 페이지에 다시 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-245">The <xref:System.Web.UI.PostBackOptions> object is then typically passed to the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> method, which is used to obtain a reference to a client-side script function that, when invoked, causes the server to post back to the page.</span></span>  
  
 <span data-ttu-id="e2893-246">이 메서드는 확장할 때 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.Button> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-246">This method is used primarily by control developers when extending the <xref:System.Web.UI.WebControls.Button> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e2893-247">재정의할 수 있습니다는 <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> 단추 컨트롤에 대 한 다시 게시 옵션을 수정 하거나 단추를 클릭할 때 클라이언트 쪽 스크립트를 호출 하 여 파생된 클래스에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="e2893-247">You can override the <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> method in your derived class to modify the postback options for the button control, or to call client-side script when the button is clicked.</span></span> <span data-ttu-id="e2893-248">기본 클래스를 호출 해야 <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> 메서드 표준 포스트백 옵션이 설정 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-248">Be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> method so that the standard postback options are set.</span></span></para>
        </block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e2893-249">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-249">The event data.</span></span></param>
        <summary><span data-ttu-id="e2893-250"><see cref="E:System.Web.UI.WebControls.Button.Click" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.Button" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-250">Raises the <see cref="E:System.Web.UI.WebControls.Button.Click" /> event of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-251"><xref:System.Web.UI.WebControls.Button.Click> 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-251">The <xref:System.Web.UI.WebControls.Button.Click> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-252">명령 이름이 없는 연결 된 경우이 이벤트는 주로 사용 된 <xref:System.Web.UI.WebControls.Button> 컨트롤 (예를 들어, 전송 단추).</span><span class="sxs-lookup"><span data-stu-id="e2893-252">This event is commonly used when no command name is associated with the <xref:System.Web.UI.WebControls.Button> control (for instance, with a Submit button).</span></span>  
  
 <span data-ttu-id="e2893-253">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-253">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e2893-254">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-254">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e2893-255">또한 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-255">The <xref:System.Web.UI.WebControls.Button.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e2893-256">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-256">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-257">다음 코드 예제에 지정 하 고에 대 한 이벤트 처리기를 코딩 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button.Click> 웹 페이지에는 간단한 메시지를 표시 하기 위해 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-257">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.</span></span>  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e2893-258">파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-258">When overriding <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-259"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 이벤트가 발생할 경우 실행될 클라이언트측 스크립트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-259">Gets or sets the client-side script that executes when a <see cref="T:System.Web.UI.WebControls.Button" /> control's <see cref="E:System.Web.UI.WebControls.Button.Click" /> event is raised.</span></span></summary>
        <value><span data-ttu-id="e2893-260"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 이벤트가 발생할 경우 실행될 클라이언트측 스크립트입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-260">The client-side script that executes when a <see cref="T:System.Web.UI.WebControls.Button" /> control's <see cref="E:System.Web.UI.WebControls.Button.Click" /> event is raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-261">사용 하 여는 <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> 속성 때 실행 되는 추가 클라이언트 쪽 스크립트를 지정 하는 <xref:System.Web.UI.WebControls.Button> 컨트롤의 <xref:System.Web.UI.WebControls.Button.Click> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-261">Use the <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.Click> event is raised.</span></span> <span data-ttu-id="e2893-262">이 속성은 렌더링에 대해 지정 하는 스크립트는 <xref:System.Web.UI.WebControls.Button> 컨트롤의 `OnClick` 미리 정의 된 클라이언트 쪽 스크립트 컨트롤의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-262">The script that you specify for this property is rendered in the <xref:System.Web.UI.WebControls.Button> control's `OnClick` attribute in addition to the control's predefined client-side script.</span></span>  
  
 <span data-ttu-id="e2893-263">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-263">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e2893-264">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-264">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-265">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=192871)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-265">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).</span></span>  
  
 <span data-ttu-id="e2893-266">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> 속성 때 실행 되는 추가 클라이언트 쪽 스크립트를 지정 하는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-266">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e2893-267">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-267">The event data.</span></span></param>
        <summary><span data-ttu-id="e2893-268"><see cref="E:System.Web.UI.WebControls.Button.Command" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.Button" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-268">Raises the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-269"><xref:System.Web.UI.WebControls.Button.Command> 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-269">The <xref:System.Web.UI.WebControls.Button.Command> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-270">때 명령 이름에 일반적으로이 이벤트는 같은 `Sort`, 연결 된는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-270">This event is commonly used when a command name, such as `Sort`, is associated with the <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="e2893-271">이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-271">This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2893-272"><xref:System.Web.UI.WebControls.Button.Command> 의 형태로 컨트롤 계층 구조를 통해 이벤트는 `BubbleEvent`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-272">The <xref:System.Web.UI.WebControls.Button.Command> event is raised through the control hierarchy in the form of the `BubbleEvent`.</span></span>  
  
 <span data-ttu-id="e2893-273">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-273">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e2893-274">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-274">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e2893-275">또한 <xref:System.Web.UI.WebControls.Button.OnCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-275">The <xref:System.Web.UI.WebControls.Button.OnCommand%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e2893-276">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-276">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-277">다음 코드 예제에 지정 하 고에 대 한 이벤트 처리기를 코딩 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button.Command> 이벤트 목록을 정렬 하려면 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-277">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-278">이 예제에서는 이벤트 처리기를 선언적으로 지정를 사용 하 여는 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 의 속성은 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-278">This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 <span data-ttu-id="e2893-279">다음 코드 예제에서는 이벤트 처리기를 지정 하 고 프로그래밍 방식으로 이벤트에 추가 하는 방법을 보여 줍니다.는 `Page_Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="e2893-279">The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.</span></span>  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e2893-280">파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-280">When overriding <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e2893-281">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-281">The event data.</span></span></param>
        <summary><span data-ttu-id="e2893-282">클라이언트에 렌더링하기 전에 단추를 클릭했는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-282">Determines whether the button has been clicked prior to rendering on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-283"><xref:System.Web.UI.WebControls.Button.OnPreRender%2A> 에서 사용자 지정 클래스를 파생 하는 경우 메서드는 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-283">The <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> method is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-284"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭했을 때 현재 페이지에서 게시할 웹 페이지의 URL을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-284">Gets or sets the URL of the page to post to from the current page when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <value><span data-ttu-id="e2893-285"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭했을 때 현재 페이지에서 게시할 웹 페이지의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-285">The URL of the Web page to post to from the current page when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span> <span data-ttu-id="e2893-286">기본값은 빈 문자열("")이며, 이 경우 페이지가 자신에게 포스트백됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-286">The default value is an empty string (""), which causes the page to post back to itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-287"><xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성을 사용 하면 페이지 간 post를 사용 하 여 수행 하는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-287">The <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2893-288">이 속성을 올바르게 지정 된 경로만 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-288">Only correctly specified paths work with this property.</span></span> <span data-ttu-id="e2893-289">예를 들어 상대 경로 (Test/default.aspx) 절대 경로 (https://localhost/WebApp/default.aspx) 및 가상 (~ \Test\default.aspx) 제대로 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-289">For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\Test\default.aspx) work correctly.</span></span> <span data-ttu-id="e2893-290">유형이 잘못 경로 같은 "/ Test/default.aspx" 또는 "\Test\default.aspx" 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-290">Incorrectly formed paths such as "/Test/default.aspx" or "\Test\default.aspx" do not work.</span></span> <span data-ttu-id="e2893-291">참조 [ASP.NET 웹 프로젝트 경로가](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) 올바른 경로 만드는 방법에 대 한 토론에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-291">See [ASP.NET Web Project Paths](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) for a discussion on creating correct paths.</span></span>  
  
 <span data-ttu-id="e2893-292">설정의 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성 때 게시할 웹 페이지의 URL로의 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-292">Set the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="e2893-293">예를 들어 지정 `Page2.aspx` 포함 된 페이지는 <xref:System.Web.UI.WebControls.Button> 를 `Page2.aspx`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-293">For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`.</span></span> <span data-ttu-id="e2893-294">에 대 한 값을 지정 하지 않으면는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성 페이지가 자신에 게 다시 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-294">If you do not specify a value for the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property, the page posts back to itself.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2893-295">있는지 확인 해야 컨트롤과 서버 쪽 유효성 검사와 페이지 간 포스트백을 수행 하는 경우 페이지의 <xref:System.Web.UI.Page.IsValid%2A> 속성은 `true` 포스트백을 처리 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="e2893-295">When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback.</span></span> <span data-ttu-id="e2893-296">확인 하려면 페이지는 페이지 간 포스트백의 경우는 <xref:System.Web.UI.Page.PreviousPage%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-296">In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>.</span></span> <span data-ttu-id="e2893-297">다음 VB 코드 이것은 수행 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-297">The following VB code shows how this is done:</span></span>  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 <span data-ttu-id="e2893-298">페이지 간 게시 방법에 대 한 자세한 내용은 참조 하십시오. [ASP.NET Web Forms의 게시 페이지 간](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-298">For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).</span></span>  
  
 <span data-ttu-id="e2893-299">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-299">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e2893-300">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-300">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-301">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 페이지 간 게시를 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-301">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to perform a cross-page post.</span></span> <span data-ttu-id="e2893-302">클릭 하면는 <xref:System.Web.UI.WebControls.Button> 컨트롤 페이지가 게시로 지정 된 대상 페이지에 텍스트 상자에 입력 한 값은 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-302">When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property.</span></span> <span data-ttu-id="e2893-303">이 샘플을 실행 하려면이 코드 예제와 동일한 디렉터리에 대상 페이지에 대 한 파일을 만들 수도 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-303">To run this sample, you must also create a file for the target page in the same directory as this code example.</span></span> <span data-ttu-id="e2893-304">대상 페이지에 대 한 코드는 다음 예제에 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-304">The code for target page is provided in the next example.</span></span>  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 <span data-ttu-id="e2893-305">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> 사용 하 여 다른 페이지에서 게시 된 값에 액세스 하는 속성은 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-305">The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> property to access a value that was posted from another page using the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property.</span></span> <span data-ttu-id="e2893-306">이 페이지는 이전 페이지에서 게시 하 고 사용자에 게 표시 하는 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-306">This page gets the string that was posted from the previous page and displays it to the user.</span></span> <span data-ttu-id="e2893-307">이 코드 예제를 직접 실행 하려고 하면 오류가 발생 하기 때문에 값을는 `text` 필드가 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-307">If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`.</span></span> <span data-ttu-id="e2893-308">대신이 코드를 사용 하 여 대상 페이지를 만들고 앞의 예제에 대 한 코드와 같은 디렉터리에 파일을 배치 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-308">Instead, use this code to create a target page and place the file in the same directory as the code for the previous example.</span></span> <span data-ttu-id="e2893-309">파일의 이름에 대해 지정 된 값과 일치 해야는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 앞의 예제에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-309">The name of the file must correspond to the value specified for the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property in the previous example.</span></span> <span data-ttu-id="e2893-310">앞의 예제에 대 한 코드를 실행 하면이 페이지는 페이지 간 게시가 발생할 때 자동으로 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-310">When you run the code for the previous example, this page will execute automatically when the cross page post occurs.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2893-311">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-311">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="e2893-312">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-312">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e2893-313">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e2893-313">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="e2893-314">이벤트의 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-314">The argument for the event.</span></span></param>
        <summary><span data-ttu-id="e2893-315">서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 대한 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-315">Raises events for the <see cref="T:System.Web.UI.WebControls.Button" /> control when it posts back to the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-316">이 이벤트는 내부적으로 사용는 <xref:System.Web.UI.WebControls.Button> 컨트롤이 발생 시키는 클릭할 때 한 <xref:System.Web.UI.WebControls.Button.Click> 이벤트를 정의 하는 경우는 <xref:System.Web.UI.WebControls.Button.Command> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-316">This event is used internally by the <xref:System.Web.UI.WebControls.Button> control, when it is clicked, to raise a <xref:System.Web.UI.WebControls.Button.Click> event, and if defined, a <xref:System.Web.UI.WebControls.Button.Command> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="e2893-317">클라이언트에서 HTML 콘텐츠를 렌더링하기 위한 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-317">A <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream to render HTML content on the client.</span></span></param>
        <summary><span data-ttu-id="e2893-318">지정된 작성기에 컨트롤의 내용을 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-318">Renders the contents of the control to the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e2893-319">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.RenderContents%2A> 텍스트 사용자 지정이 항상 표시 되도록 컨트롤을 사용자 지정 서버에서 메서드 <xref:System.Web.UI.WebControls.Button> 서버 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-319">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.RenderContents%2A> method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.</span></span>  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="e2893-320">이벤트의 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-320">The argument for the event.</span></span></param>
        <summary><span data-ttu-id="e2893-321">서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 대한 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-321">Raises events for the <see cref="T:System.Web.UI.WebControls.Button" /> control when it posts back to the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-322">이 이벤트는 내부적으로 사용는 <xref:System.Web.UI.WebControls.Button> 컨트롤이 발생 시키는 클릭할 때 한 <xref:System.Web.UI.WebControls.Button.Click> 이벤트를 정의 하는 경우는 <xref:System.Web.UI.WebControls.Button.Command> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-322">This event is used internally by the <xref:System.Web.UI.WebControls.Button> control, when it is clicked, to raise a <xref:System.Web.UI.WebControls.Button.Click> event, and if defined, a <xref:System.Web.UI.WebControls.Button.Command> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-323">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> 한다는 항상 발생 합니다. 메서드는 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 사용자 지정에서 이벤트 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-323">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-324"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 표시할 텍스트 캡션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-324">Gets or sets the text caption displayed in the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span></summary>
        <value><span data-ttu-id="e2893-325"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 표시할 텍스트 캡션입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-325">The text caption displayed in the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span> <span data-ttu-id="e2893-326">기본값은 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-326">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-327">사용 하 여는 <xref:System.Web.UI.WebControls.Button.Text%2A> 속성을 지정 하거나 확인에 표시할 캡션을 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-327">Use the <xref:System.Web.UI.WebControls.Button.Text%2A> property to specify or determine the caption to display in the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="e2893-328">이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-328">The value of this property, when set, can be saved automatically to a resource file by using a designer tool.</span></span> <span data-ttu-id="e2893-329">자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-329">For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-330">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.Text%2A> 속성에 표시 되는 캡션을 지정 하는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-330">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.Text%2A> property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-331"><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에서 클라이언트 브라우저의 전송 메커니즘을 사용하는지 또는 ASP.NET의 포스트백 메커니즘을 사용하는지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-331">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.Button" /> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.</span></span></summary>
        <value>
          <span data-ttu-id="e2893-332">컨트롤에서 클라이언트 브라우저의 전송 메커니즘을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-332"><see langword="true" /> if the control uses the client browser's submit mechanism; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e2893-333">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-333">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-334">사용 하 여는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성을 지정 여부는 <xref:System.Web.UI.WebControls.Button> 컨트롤 클라이언트를 사용 하 여 브라우저의 전송 메커니즘 또는 asp 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-334">Use the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to specify whether a <xref:System.Web.UI.WebControls.Button> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.</span></span> <span data-ttu-id="e2893-335">기본적으로이 속성의 값은 `true`이며는 <xref:System.Web.UI.WebControls.Button> 전송 메커니즘을 브라우저의 사용을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-335">By default the value of this property is `true`, causing the <xref:System.Web.UI.WebControls.Button> control to use the browser's submit mechanism.</span></span> <span data-ttu-id="e2893-336">지정 하는 경우 `false`, ASP.NET 페이지 프레임 워크 클라이언트 쪽 스크립트 폼을 서버에 게시 하는 페이지를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-336">If you specify `false`, the ASP.NET page framework adds client-side script to the page to post the form to the server.</span></span>  
  
 <span data-ttu-id="e2893-337">경우는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성은 `false`, 컨트롤 개발자가 사용할 수는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 클라이언트 반환 하는 방법에 대 한 이벤트를 다시 게시는 <xref:System.Web.UI.WebControls.Button>합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-337">When the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`, control developers can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button>.</span></span> <span data-ttu-id="e2893-338">반환 되는 문자열은 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드는 클라이언트 쪽 함수 호출의 텍스트를 포함 하 고 클라이언트 쪽 이벤트 처리기에 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-338">The string returned by the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method contains the text of the client-side function call and can be inserted into a client-side event handler.</span></span>  
  
 <span data-ttu-id="e2893-339">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-339">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e2893-340">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-340">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-341">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성 전송 메커니즘을 지정 하는 <xref:System.Web.UI.WebControls.Button> 서버에 다시 게시 될 때 컨트롤 사용.</span><span class="sxs-lookup"><span data-stu-id="e2893-341">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server.</span></span> <span data-ttu-id="e2893-342"><xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성이로 설정 되어 `false`, ASP.NET을 사용 하려면 단추를 일으키는 메커니즘을 다시 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-342">The <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, causing the button to use the ASP.NET postback mechanism.</span></span> <span data-ttu-id="e2893-343">브라우저의 소스 보기 명령을 사용 하 여 렌더링된 된 페이지에 대 한 소스 코드를 보는 경우 폼을 서버에 게시 하는 ASP.NET 페이지 프레임 워크에서 클라이언트 쪽 스크립트를 추가한 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-343">If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.</span></span>  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2893-344">서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤이 유효성 검사를 수행할 컨트롤 그룹을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-344">Gets or sets the group of controls for which the <see cref="T:System.Web.UI.WebControls.Button" /> control causes validation when it posts back to the server.</span></span></summary>
        <value><span data-ttu-id="e2893-345">서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤이 유효성 검사를 수행할 컨트롤 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-345">The group of controls for which the <see cref="T:System.Web.UI.WebControls.Button" /> control causes validation when it posts back to the server.</span></span> <span data-ttu-id="e2893-346">기본값은 빈 문자열("")입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-346">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2893-347">유효성 검사 그룹을 사용 하는 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-347">Validation groups allow you to assign validation controls on a page to a specific category.</span></span> <span data-ttu-id="e2893-348">각 유효성 검사 그룹 페이지에서 다른 유효성 검사 그룹 별개로 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-348">Each validation group can be validated independently of other validation groups on the page.</span></span> <span data-ttu-id="e2893-349">사용 하 여는 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 속성을 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.Button> 제어 서버에 다시 게시 될 때 유효성 검사가 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-349">Use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.Button> control causes validation when it posts back to the server.</span></span>  
  
 <span data-ttu-id="e2893-350">이 속성은 적용 경우에만의 값은 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-350">This property has an effect only when the value of the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`.</span></span> <span data-ttu-id="e2893-351">에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 속성을 지정된 된 그룹의 일부인 유효성 검사 컨트롤은 때 유효성을 검사는 <xref:System.Web.UI.WebControls.Button> 컨트롤이 서버에 다시 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-351">When you specify a value for the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property, only the validation controls that are part of the specified group are validated when the <xref:System.Web.UI.WebControls.Button> control posts back to the server.</span></span> <span data-ttu-id="e2893-352">이 속성의 값을 지정 하지 않으면 및 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성이 `true`, 페이지에서 유효성 검사 그룹에 할당 되지 않은 모든 유효성 검사 컨트롤에는 컨트롤이 서버에 다시 게시 될 때 유효성이 검사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-352">If you do not specify a value for this property and the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`, all validation controls on the page that are not assigned to a validation group are validated when the control posts back to the server.</span></span>  
  
 <span data-ttu-id="e2893-353">이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-353">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="e2893-354">자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-354">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2893-355">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 속성을 검사할 때 컨트롤을 지정 하는 <xref:System.Web.UI.WebControls.Button> 컨트롤이 서버에 다시 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-355">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server.</span></span> <span data-ttu-id="e2893-356">이 페이지는 세 가지 텍스트 상자에서 사용자 데이터를 캡처하려면 및 3 개 포함 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 있는지 사용자 남지 않습니다는 텍스트 상자가 비어 있는지 확인 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-356">The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank.</span></span> <span data-ttu-id="e2893-357"><xref:System.Web.UI.WebControls.RequiredFieldValidator> 처음 두 개의 텍스트 상자에는 대 한 제어는 `PersonalInfoGroup` 유효성 검사 그룹 및 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 세 번째 텍스트 상자에 대 한 제어는 `LocationInfoGroup` 유효성 검사 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-357">The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group.</span></span> <span data-ttu-id="e2893-358">때 `Button1` 를 클릭 하면 유효성 검사 그룹의 컨트롤에만 `PersonalInfoGroup` 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-358">When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated.</span></span> <span data-ttu-id="e2893-359">때 `Button2` 를 클릭 하면 유효성 검사 그룹의 컨트롤에만 `LocationInfoGroup` 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-359">When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2893-360">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-360">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="e2893-361">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e2893-361">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="e2893-362">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e2893-362">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>