<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ae8b6d0cbe457000dec5a9e9ea0987ec2b6abd1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36582348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 발생는 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 이벤트 업데이트 단추 (단추 해당 `CommandName` 속성이 "업데이트"로 설정) 컨트롤 내에서 클릭 하면 후는 <xref:System.Web.UI.WebControls.FormView> 레코드를 업데이트 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 개체 영향을 받는 레코드와 발생할 수 있는 모든 예외 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 업데이트 작업에 의해 영향 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 속성입니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 속성 예외가 발생 한 것인지 확인 합니다. 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 속성입니다. 업데이트 된 레코드에 대 한 원래 키 필드 값에 액세스 해야 할 경우 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 속성입니다. 키가 아닌 필드의 원래 값을 사용 하 여 액세스할 수는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 속성입니다. 업데이트 된 값 (키 필드를 편집 하려면 사용자를 허용 하는 경우 업데이트 된 키 필드 값을 포함)를 사용 하 여 액세스는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 속성입니다.  
  
 기본적으로는 <xref:System.Web.UI.WebControls.FormView> 제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 업데이트 작업 후 속성입니다. 업데이트 작업 중에 발생 한 예외를 처리할 때 상태로 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 설정 하 여 편집 모드에는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A> 생성자를 참조하십시오.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 에 대 한 이벤트 처리 메서드에 전달 된 개체는 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 업데이트 작업 중에 예외가 발생 했는지 여부를 결정 하는 이벤트입니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">업데이트 작업의 영향을 받는 행의 수입니다.</param>
        <param name="e">업데이트 작업이 수행되는 동안 발생한 예외를 나타내는 <see cref="T:System.Exception" />입니다. 발생한 예외가 없으면 이 매개 변수에 대해 <see langword="null" />을 사용합니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 클래스입니다.  
  
 다음 표에서는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|`affectedRows` 매개 변수의 값입니다.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> 에 포함 된 개체는 `e` 매개 변수입니다.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|로 초기화 `false`합니다.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|로 초기화 `false`합니다.|  
  
> [!NOTE]
>  이 생성자는 이벤트를 발생 시킬 때 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업의 영향을 받는 행의 수를 가져옵니다.</summary>
        <value>업데이트 작업의 영향을 받는 행의 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 속성 업데이트 작업에 영향을 받는 레코드 수를 결정 합니다. 이 속성은 레코드의 정확한 수는 다음과 같은 상황에서 업데이트 되었는지 확인 하려면 일반적으로 사용 됩니다.  
  
-   하나의 레코드만 업데이트 되었는지 확인 합니다. 경우에 따라 잘못 작성 된 update 문이 여러 개의 레코드를 업데이트할 수 있습니다.  
  
-   예외가 발생 하지 않으므로 업데이트 작업 중 오류가 발생 하면 레코드가 업데이트 되었는지 확인 합니다.  
  
-   때와 같은 충돌 감지 (낙관적 동시성 검사)를 지 원하는 데이터 소스 제어는 레코드가 업데이트 되었는지 확인 하십시오.는 <xref:System.Web.UI.WebControls.SqlDataSource> 및 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어에 해당 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성이로 설정 된 `ConflictOptions.CompareAllValues` 열거형 값 . 이 설정에 따라 다른 사용자가 동시에 수정 된 레코드를 업데이트할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 레코드가 업데이트 되었는지 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업 중에 발생한 예외(있을 경우)를 가져옵니다.</summary>
        <value>업데이트 작업 중에 발생한 예외를 나타내는 <see cref="T:System.Exception" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 속성 (있는 경우) 예외를 확인 하는 업데이트 작업 동안 예외가 발생 합니다. 발생한 예외가 없으면 이 속성은 `null`을 반환합니다.  
  
> [!NOTE]
>  예외가 발생 했습니다. 이벤트 처리기에서 예외를 처리 하려는 설정 해야는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 속성을 `true`, 그렇지 않으면 예외를 다시 throw는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 속성을 업데이트 작업 중에 예외가 발생 했는지 여부를 확인 합니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업 중에 발생한 예외가 이벤트 처리기에서 처리되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>예외가 이벤트 처리기에서 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 업데이트 작업 중에 예외가 발생 하는 경우 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 예외가 처리 되었는지 여부를 이벤트 처리기를 나타내는 속성을 합니다. 이 속성이로 설정 된 경우 `true`, 예외 처리 된 것으로 간주 되어 의해 다시 throw 되지 않습니다는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 이 속성은로 설정 하는 경우 `false`, 예외가 다시 throw 됩니다. 발생 한 예외를 확인 하려면는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하 여 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 하 여 예외가 처리 이벤트 처리기를 나타내는 속성을 합니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업 후 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 편집 모드로 유지할지 여부를 나타내는 값을 가져오거나 반환합니다.</summary>
        <value>업데이트 작업 후 편집 모드로 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로는 <xref:System.Web.UI.WebControls.FormView> 제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 업데이트 작업 후 속성입니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 통해 지정 여부는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 편집 모드에 유지 해야 합니다. 계속 하려면는 <xref:System.Web.UI.WebControls.FormView> 편집 모드에 컨트롤을이 속성을 설정 `true`합니다.  
  
> [!NOTE]
>  이 속성은 상황이 발생 하면 (예: 예외 발생) 정상적인 경우 다르게 동작 하도록 컨트롤을 필요로 하 하는 경우에 사용 해야 합니다. 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 기본적으로 편집 모드로 유지으로 설정 해야 합니다는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 속성 대신 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 유지 한 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 편집 모드로 예외가 발생 합니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트된 레코드에 대한 키 필드의 원래 키 이름/값 쌍이 들어 있는 사전을 가져옵니다.</summary>
        <value>업데이트된 레코드에 대한 키 필드의 원래 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 속성에 나열 된 키 필드의 원래 값이 포함 된 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 의 속성은 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 속성을 업데이트 된 레코드에 대 한 키 필드의 값에 액세스 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.  
  
> [!NOTE]
>  키 필드의 값을 업데이트 하는 사용자를 허용 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성 키 필드의 원래 값을 포함 합니다. 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary> 구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다. <xref:System.Collections.Specialized.OrderedDictionary> 개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다. 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 의 속성은 <xref:System.Collections.Specialized.OrderedDictionary> 개체입니다. 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 업데이트 된 레코드에 대 한 키 필드의 값에 액세스 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트된 레코드의 새 필드 이름/값 쌍이 들어 있는 사전을 가져옵니다.</summary>
        <value>업데이트된 레코드의 새 필드 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 속성을 업데이트 된 레코드에 대 한 새 필드 값에 액세스 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.  
  
> [!NOTE]
>  키 필드의 값을 업데이트 하는 사용자를 허용 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성 키 필드의 원래 값을 포함 합니다. 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary> 구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다. <xref:System.Collections.Specialized.OrderedDictionary> 개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다. 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 의 속성은 <xref:System.Collections.Specialized.OrderedDictionary> 개체입니다. 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 속성을 업데이트 된 레코드의 키가 아닌 필드에 대 한 사용자가 입력 한 새 값에 액세스 합니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트된 레코드에 대한 키가 아닌 필드의 원래 이름/값 쌍이 들어 있는 사전을 가져옵니다.</summary>
        <value>업데이트된 레코드의 원래 필드 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 속성을 업데이트 된 레코드에 대 한 키가 아닌 필드의 원래 값에 액세스 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다. 와 같은 충돌 감지 (낙관적 동시성 검사)를 지 원하는 데이터 소스 제어는 <xref:System.Web.UI.WebControls.SqlDataSource> 및 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤와 해당 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성이로 설정 된 `ConflictOptions.CompareAllValues` 또한 이러한 원래 값과 비교는 레코드 업데이트 작업 전에 데이터베이스에서 수행 됩니다. 레코드가 수정 된 경우 다른 사용자가 동시에, 레코드 업데이트 되지 않습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 속성 키 필드가 포함 되지 않습니다. 키 필드의 값을 업데이트 하려는 사용자를 허용 하는 경우 키 필드의 원래 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성입니다. 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary> 구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다. <xref:System.Collections.Specialized.OrderedDictionary> 개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다. 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 의 속성은 <xref:System.Collections.Specialized.OrderedDictionary> 개체입니다. 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 속성을 업데이트 된 레코드에 대 한 키가 아닌 필드의 원래 값에 액세스 합니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>