<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlDataSourceView.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac556793326c9289dc8571df36d7fa8e9d17af807b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56793326c9289dc8571df36d7fa8e9d17af807b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Supports the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤을 지원하고 데이터 바인딩된 컨트롤에서 관계형 데이터베이스에 대해 SQL 데이터 작업을 수행하는 데 필요한 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스는 기본적으로 사용 하도록 데이터 바인딩된 컨트롤에서 및 페이지 코드에서 프로그래밍 가능한 개체로 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>ASP.NET data source controls contain one or more lists of data, represented by data source view objects.</source>
          <target state="translated">ASP.NET 데이터 소스 컨트롤의 데이터를 데이터 원본 뷰 개체를 나타내는 하나 이상의 목록을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class extends the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> class, defines the capabilities of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control with which it is associated, and implements the basic data functionality for the data source control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스 확장은 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView&gt;</ph> 클래스의 기능을 정의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 된 연결, 이므로 데이터 소스 제어에 대 한 기본 데이터 기능을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class implements the data functionality for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, including the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> operations, sorting, filtering, and managing settings that are kept in view state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스에 대 한 데이터 기능을 구현 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤을 포함 하 여는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> 작업, 정렬, 필터링 및 보기에 유지 되는 설정 관리 상태입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Although the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object is not directly exposed to page developers by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, many of its properties are.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체에서 페이지 개발자에 게 직접 노출 되지 않은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 속성 중 대부분은 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The most basic operation that a data source view performs is data retrieval from the underlying database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method, which retrieves an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> collection of data items.</source>
          <target state="translated">데이터 원본 뷰를 수행 하는 가장 기본적인 작업을 사용 하 여 원본 데이터베이스에서 데이터를 검색 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 를 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 데이터 항목의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class implements data retrieval from relational databases using SQL queries.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스 구현 SQL 쿼리를 사용 하 여 관계형 데이터베이스에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The SQL queries can be parameterized for greater flexibility and security.</source>
          <target state="translated">유연성 및 보안에 대 한 SQL 쿼리를 매개 변수화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The following data retrieval methods, properties, and events are implemented by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> and exposed directly by its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to page developers and other callers:</source>
          <target state="translated">다음 데이터 검색 메서드, 속성 및 이벤트 구현한는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 에서 직접 노출 하 고 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 페이지 개발자와 다른 호출자에 게 제어:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object supports updating data in a relational database using SQL commands.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체 SQL 명령을 사용 하 여 관계형 데이터베이스의 데이터 업데이트를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The SQL commands can be parameterized for greater flexibility and security.</source>
          <target state="translated">SQL 명령 유연성 및 보안에 대 한 매개 변수화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Data-bound controls, such as the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, can be configured to perform updates automatically using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>, while other controls cannot.</source>
          <target state="translated">와 같은 데이터 바인딩된 컨트롤에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, 자동으로 사용 하 여 업데이트를 수행 하도록 구성할 수 있습니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>다른 컨트롤과 달리, 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The following update methods, properties, and events are implemented by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> and exposed directly by its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to page developers and other callers:</source>
          <target state="translated">다음 업데이트 메서드, 속성 및 이벤트에서 구현 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 에서 직접 노출 하 고 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 페이지 개발자와 다른 호출자에 게 제어:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> supports inserting new rows of data into a relational database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 관계형 데이터베이스에 새 데이터 행을 삽입을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The SQL commands that are specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> property can be parameterized for greater flexibility and security.</source>
          <target state="translated">에 지정 된 SQL 명령을 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> 유연성 및 보안 속성을 매개 변수화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Data-bound controls, such as the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, can be configured to perform inserts automatically using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>, while other controls cannot.</source>
          <target state="translated">와 같은 데이터 바인딩된 컨트롤에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, 자동으로 사용 하 여 삽입을 수행 하도록 구성할 수 있습니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>다른 컨트롤과 달리, 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The following insert methods, properties, and events are implemented by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> and exposed directly by its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to page developers and other callers:</source>
          <target state="translated">다음 삽입 메서드, 속성 및 이벤트를 구현 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 에서 직접 노출 하 고 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 페이지 개발자와 다른 호출자에 게 제어:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object also supports deleting data from a relational database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체도 관계형 데이터베이스에서 데이터 삭제를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>As with other commands, the SQL commands that are specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> property can be parameterized for greater flexibility and security.</source>
          <target state="translated">다른 명령과 마찬가지로 SQL 명령에 지정 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> 유연성 및 보안 속성을 매개 변수화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Data-bound controls, such as the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, can be configured to perform deletes automatically using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>, while other controls cannot.</source>
          <target state="translated">와 같은 데이터 바인딩된 컨트롤에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, 자동으로 사용 하 여 삭제를 수행 하도록 구성할 수 있습니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>다른 컨트롤과 달리, 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The following delete methods, properties, and events are implemented by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> and exposed directly by its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to page developers and other callers:</source>
          <target state="translated">다음 메서드, 속성을 삭제 하 고 이벤트를 구현 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 에서 직접 노출 하 고 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 페이지 개발자와 다른 호출자에 게 제어:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> 이벤트</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic.</source>
          <target state="translated">데이터 검색은 데이터를 검색 하는 동안 데이터를 필터링 하는 데 사용 되는 절이 동적 더 강력 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page.</source>
          <target state="translated">즉, 여기서 절이 같이 유연 하 고 SQL 쿼리로 강력한 WHERE 절의 값 Web Forms 페이지에 있는 컨트롤에 표시 되는 값과 같은 변경할 수 있는 값은 바인딩할에 정적 SQL 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Instead of rebuilding an SQL query and setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property on every page load, you can use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> properties to apply dynamic filtering to data retrieval.</source>
          <target state="translated">SQL 다시 작성 하지 않고 쿼리 설정 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 사용할 수 있습니다 모든 페이지 로드 시 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> 속성 데이터 검색에 동적 필터링을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>These properties are implemented by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> and exposed directly by its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to data-bound controls and other callers.</source>
          <target state="translated">이러한 속성으로 구현 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 에서 직접 노출 하 고 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터 바인딩된 컨트롤 및 다른 호출자에 게 제어 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>You can sort the data that you retrieve with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved.</source>
          <target state="translated">검색 하는 데이터를 정렬할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 에서 순서가 지정 하면에 대 한 데이터를 검색 하는 경우 데이터베이스는 ORDER BY 절을 추가 하거나 검색 된 후 메모리에 데이터를 정렬 하 여 제어 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>You can supply a sorting expression to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> object that is passed to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method.</source>
          <target state="translated">에 정렬 식을 제공할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 설정 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> 에 전달 되는 개체는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The syntax for the <ph id="ph1">&lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt;</ph> property is the same as the syntax for a <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">에 대 한 구문은 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt;</ph> 속성에 대 한 구문과 동일은 <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>If you use a stored procedure to retrieve data, you can also use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property to specify a parameter that is used specifically for sorting the results of a stored procedure call.</source>
          <target state="translated">저장된 프로시저를 사용 하 여 데이터를 검색 하는 경우 사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성을 지정 하는 저장된 프로시저 호출의 결과 정렬 하기 위해 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>When more than one user can change the database concurrently, there is the potential for concurrency conflict.</source>
          <target state="translated">둘 이상의 사용자 데이터베이스를 동시에 변경할 수, 하는 경우 동시성 충돌 가능성이 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control has controls concurrency through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 컨트롤 동시성을 통해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>The functionality is implemented in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">기능에서 구현 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Like many other Web server controls, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> interface and uses view state to track its state across page requests.</source>
          <target state="translated">다른 많은 웹 서버 컨트롤과 같이 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 구현 하는 <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> 인터페이스 및 사용 하 여 뷰 페이지 요청에 대해 해당 상태를 추적 하는 상태입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>Implementations of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A&gt;</ph> and property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A&gt;</ph> methods are provided to enable view state tracking for the control.</source>
          <target state="translated">구현에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A&gt;</ph> 및 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A&gt;</ph> 컨트롤의 뷰 상태 추적을 사용 하도록 설정 하려면 메서드가 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceView">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET 상태 관리 개요<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>The data source control with which the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> is associated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>가 연결된 데이터 소스 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>A unique name for the data source view, within the scope of the data source control that owns it.</source>
          <target state="translated">소유하고 있는 데이터 소스 컨트롤의 범위 내에 있는 데이터 소스 뷰의 고유한 이름입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> class setting the specified <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control as the owner of the current view.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤을 현재 뷰의 소유자로 설정하여 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A&gt;</ph> constructor is called by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A&gt;</ph> method to return a new instance of a data source view with the specified <ph id="ph3">`name`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A&gt;</ph> 생성자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A&gt;</ph> 지정 된 데이터 원본 뷰의 새 인스턴스를 반환 하는 메서드 <ph id="ph3">`name`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is associated with only one <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object at any one time, and always names the view <ph id="ph3">`Table`</ph>, although this naming restriction is imposed by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, not the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 하나만와 연결 되어 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체, 한 번에 한 항상 해당 뷰 이름을 <ph id="ph3">`Table`</ph>이 명명 언제나 하지만는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하지는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>You can override the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A&gt;</ph> method to support views with a different naming convention.</source>
          <target state="translated">재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A&gt;</ph> 다른 명명 규칙을 사용 하 여 뷰를 지원 하도록 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> object that is passed by the <ph id="ph2">`context`</ph> parameter is used by the data source view to access parameter objects, such as the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> 으로 전달 되는 개체는 <ph id="ph2">`context`</ph> 매개 변수는 사용 데이터 원본 뷰 액세스 매개 변수 개체와 같은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter">
          <source>Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> collection evaluates to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> 컬렉션에 포함된 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 때 데이터 검색 작업이 취소되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if a data retrieval operation is canceled when a parameter contained in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> collection evaluated to <ph id="ph3">&lt;see langword="null" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> 컬렉션에 포함된 매개 변수가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>일 때 검색 작업이 취소되는 경우 <ph id="ph3">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the current <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control supports the delete operation.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤과 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체가 삭제 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the operation is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업이 지원되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`true`</ph> 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete">
          <source>A delete operation could still fail if all the data properties are not set or are not set correctly.</source>
          <target state="translated">모든 데이터 속성이 설정 되어 있지 않거나 올바르게 설정 되지 않은 삭제 작업이 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the current <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control supports the insert operation.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 개체와 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체가 삽입 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the operation is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업이 지원되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`true`</ph> 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert">
          <source>An insert operation could still fail if all the data properties are not set or are not set correctly.</source>
          <target state="translated">모든 데이터 속성이 설정 되지 않은 또는 올바르게 설정 되지 않은 경우에 삽입 작업이 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the current <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control supports the paging of retrieved data.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 개체와 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체가 검색된 데이터의 페이징 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object does not support paging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체 페이징을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the current <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control supports retrieving the total number of data rows, in addition to the set of data.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤과 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체가 데이터 집합과 총 데이터 행 수에 대한 검색을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object does not support retrieving row counts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체가 행 개수 검색을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the current <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control supports a sorted view on the retrieved data.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤과 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체가 검색된 데이터에 대한 정렬된 뷰를 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if sorting is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">정렬이 지원되는 경우에는 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>, if the current <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> value and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`true`</ph>경우 현재 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 값 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object that is associated with the current <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control supports the update operation.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤과 연결된 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 개체가 업데이트 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the operation is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업이 지원되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`true`</ph> 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate">
          <source>A delete operation could still fail if all the data properties are not set or are not set correctly.</source>
          <target state="translated">모든 데이터 속성이 설정 되어 있지 않거나 올바르게 설정 되지 않은 삭제 작업이 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>Gets or sets the value indicating how the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</source>
          <target state="translated">작업 시간 동안 내부 데이터베이스의 행 데이터가 변경된 경우 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 컨트롤이 업데이트 및 삭제를 수행하는 방법을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property determines whether parameters for old and new values are applied to the <ph id="ph2">`Update`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성에 이전 및 새 값에 대 한 매개 변수 적용 되었는지 여부를 결정은 <ph id="ph2">`Update`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>For example, if the command that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object with the columns <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph>, and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph6">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> value, parameters are created for <ph id="ph7">`Name`</ph> and <ph id="ph8">`Number`</ph> for the update operation.</source>
          <target state="translated">예를 들어, 즉 명령으로 지정 된는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 속성에서 반환은 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 열이 포함 된 개체 <ph id="ph3">`Name`</ph> 및 <ph id="ph4">`Number`</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph6">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> 값에 대 한 매개 변수를 생성 됩니다 <ph id="ph7">`Name`</ph> 및 <ph id="ph8">`Number`</ph> 업데이트 작업에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, parameters are created for <ph id="ph3">`Name`</ph>, <ph id="ph4">`Number`</ph>, <ph id="ph5">`original_Name`</ph>, and <ph id="ph6">`original_Number`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값 매개 변수가 대해 만들어진 <ph id="ph3">`Name`</ph>, <ph id="ph4">`Number`</ph>, <ph id="ph5">`original_Name`</ph>, 및 <ph id="ph6">`original_Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>(The exact name of the parameters for the original values depends on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph>.) Then, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object determines if the method that is specified in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> property has parameters that match.</source>
          <target state="translated">(원래 값에 대 한 정확한 이름은 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph>.) 그런 다음 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체 인지 여부를 확인 메서드는에 지정 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> 속성에 일치 하는 매개 변수가 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</source>
          <target state="translated">동시성 제어는 데이터 저장소가 데이터 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 방법을 제어 하는 데 사용 하는 방법.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</source>
          <target state="translated">예를 들어 하나의 클라이언트 데이터 읽고는 사용자에 게 제공 하는 동안 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.</source>
          <target state="translated">두 사용자가 데이터를 업데이트 하는 데이터 저장소에 제출 하는 경우 두 클라이언트 모두 동일한 데이터에 대해 서로 다른 값을 업데이트할 수 없기 때문에 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>This is considered a conflict.</source>
          <target state="translated">충돌로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>By setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.</source>
          <target state="translated">설정 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값을 업데이트 작업을 비교할 수 충돌을 감지 하 고 처리할 필요에 따라 데이터 원본에 이전 및 새 값입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection">
          <source>The selected value is not one of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> values.</source>
          <target state="translated">선택한 값이 <ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of object or row key values for the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /&gt;</ph> operation to delete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 작업에서 삭제할 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /&gt;</ph>의 개체 또는 행 키 값입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains row values that are evaluated only if the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> property is set to the <ph id="ph3">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> 값으로 설정된 경우에만 계산되는 행 값이 포함된 <ph id="ph3">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs a delete operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> SQL string, any parameters that are specified in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /&gt;</ph> collection, and the values that are in the specified <ph id="ph3">&lt;paramref name="keys" /&gt;</ph> and <ph id="ph4">&lt;paramref name="oldValues" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> SQL 문자열, <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /&gt;</ph> 컬렉션에 지정된 매개 변수와 지정된 <ph id="ph3">&lt;paramref name="keys" /&gt;</ph> 및 <ph id="ph4">&lt;paramref name="oldValues" /&gt;</ph> 컬렉션의 값을 사용하여 삭제 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>A value that represents the number of rows deleted from the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 삭제되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A&gt;</ph> method, passing the <ph id="ph3">`keys`</ph> and <ph id="ph4">`oldValues`</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A&gt;</ph> 전달 하는 메서드는 <ph id="ph3">`keys`</ph> 및 <ph id="ph4">`oldValues`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> property is set to the <ph id="ph2">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> value and no <ph id="ph3">&lt;paramref name="oldValues" /&gt;</ph> parameters are passed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> 값으로 설정되고 전달된 <ph id="ph3">&lt;paramref name="oldValues" /&gt;</ph> 매개 변수가 없는 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> uses to delete data from the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>에서 내부 데이터베이스의 데이터를 삭제하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>An SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> uses to delete data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>에서 데이터를 삭제하는 데 사용하는 SQL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>However, if the provider is set to the  <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> 기본 데이터베이스에서는 저장된 프로시저를 지원 하는 경우 SQL 문자열 또는 저장된 프로시저의 이름이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> text to delete an order from the Northwind database Orders table.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> Northwind 데이터베이스의 Orders 테이블에서 주문을 삭제 하는 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>Data is retrieved from the Orders table and displayed in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">데이터는 Orders 테이블에서 검색 되어에 표시 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> renders a <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button automatically when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and automatically populates the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> collection and calls the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> method when the <bpt id="p2">**</bpt>Delete<ept id="p2">**</ept> button is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 렌더링는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 자동으로 단추 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph> 를 자동으로 채우려고는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 컬렉션과 호출은 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> 메서드 때는 <bpt id="p2">**</bpt>삭제<ept id="p2">**</ept> 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand">
          <source>Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.</source>
          <target state="translated">마지막으로,이 예에서는 데이터를 삭제 하기 때문에 이벤트 처리기 수행할 삭제 작업 전에 디스크에 데이터베이스를 백업 하려고 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> property is a SQL statement or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType">
          <source>The selected value is not one of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated">선택한 값이 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted">
          <source>Occurs when a delete operation has completed.</source>
          <target state="translated">삭제 작업이 완료된 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted&gt;</ph> event to examine the values of output parameters after a delete operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted&gt;</ph> 삭제 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>Gets the parameters collection containing the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열의 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>Parameter names might be affected by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> property; specifically, if the name identifies a primary key, such as a key that is specified using the <ph id="ph2">`DataKeyNames`</ph> property of a data-bound control, or in delete and update scenarios in which the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value and a set of <ph id="ph5">`oldValues`</ph> is passed to the corresponding data method.</source>
          <target state="translated">매개 변수 이름은 영향을 받을 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 속성; 구체적으로, 기본 키를 식별 하는 이름을 키와 같은 지정 된 사용 하 여는 <ph id="ph2">`DataKeyNames`</ph> 또는 삭제에는 데이터 바인딩된 컨트롤의 속성 및 업데이트는 시나리오는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph>속성이로 설정 되는 <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값과 집합이 <ph id="ph5">`oldValues`</ph> 해당 데이터 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>In this case, the format string is applied to each parameter name in the <ph id="ph1">`oldValues`</ph> collection.</source>
          <target state="translated">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 <ph id="ph1">`oldValues`</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>Depending on the ADO.NET provider, the order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> collection might be important.</source>
          <target state="translated">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> 컬렉션 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리는 매개 변수가 표시 되는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, 매개 변수의 이름을 SQL 쿼리의 자리 표시자와 비교 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> text to delete an order from the Northwind database.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A&gt;</ph> 주문을 Northwind 데이터베이스에서 삭제 하는 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>Initially, data is retrieved from the Orders table and displayed in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">데이터는 Orders 테이블에서 검색 하 고에 표시 하는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>You must explicitly declare the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> property and call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> method when using data-bound controls, such as the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> (unlike controls, such as the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>, which automatically populate the parameters and call the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method on a data source control).</source>
          <target state="translated">명시적으로 선언 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A&gt;</ph> 속성과 호출은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> 와 같은 데이터 바인딩된 컨트롤을 사용 하는 경우 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> (컨트롤과 달리와 같은 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>는 자동으로 채울는 매개 변수 및 호출 된 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 데이터 소스 제어에서 메서드).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event is delegated to the private <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> event handler, which explicitly calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이벤트 개인에 게 위임 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> 명시적으로 호출 하는 이벤트 처리기는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>Occurs before a delete operation.</source>
          <target state="translated">삭제 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the delete operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 삭제 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>The connection to the underlying data source is not yet open when the event handler delegate is called.</source>
          <target state="translated">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>Therefore, you cannot cancel the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> operation directly by calling the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object that is exposed by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> object.</source>
          <target state="translated">따라서 취소할 수 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> 직접 호출 하 여 작업은 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> 에서 메서드는 <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 의해 노출 되는 개체는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>You can, however, cancel the operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">하지만 설정 하 여 작업을 취소 수는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event that is raised before a delete operation occurs.</source>
          <target state="translated">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 이벤트 삭제 작업이 발생 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting">
          <source>Because this example deletes data from the Northwind database, an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> handler is added to attempt to back up the database to disk before the delete operation is performed.</source>
          <target state="translated">이 예제에서는 Northwind 데이터베이스에서 데이터를 삭제 하기 때문에 프로그램 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> 처리기 삭제 작업을 수행 하기 전에 디스크에 데이터베이스를 백업할 수 있도록에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of object or row key values for the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /&gt;</ph> operation to delete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 작업에서 삭제할 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /&gt;</ph>의 개체 또는 행 키 값입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that contains row values that are evaluated only if the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> property is set to the <ph id="ph3">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> 값으로 설정된 경우에만 계산되는 행 값이 포함된 <ph id="ph3">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs a delete operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> SQL string, any parameters that are specified in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /&gt;</ph> collection, and the values that are in the specified <ph id="ph3">&lt;paramref name="keys" /&gt;</ph> and <ph id="ph4">&lt;paramref name="oldValues" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /&gt;</ph> SQL 문자열, <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /&gt;</ph> 컬렉션에 지정된 매개 변수와 지정된 <ph id="ph3">&lt;paramref name="keys" /&gt;</ph> 및 <ph id="ph4">&lt;paramref name="oldValues" /&gt;</ph> 컬렉션의 값을 사용하여 삭제 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>A value that represents the number of rows deleted from the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 삭제되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class implements the inherited <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt;</ph> method to delete data from a database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스는 상속 된 구현 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt;</ph> 메서드는 데이터베이스에서 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Page developers and data-bound control authors do not call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A&gt;</ph> method directly; instead, use the publicly exposed <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> method.</source>
          <target state="translated">페이지 개발자와 데이터 바인딩된 컨트롤 작성자는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A&gt;</ph> 메서드 직접; 대신 사용 하 여 공개적으로 노출 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The values that are contained in the <ph id="ph1">`keys`</ph> collection are evaluated and merged with any values that are contained by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> collection.</source>
          <target state="translated">에 포함 된 값의 <ph id="ph1">`keys`</ph> 컬렉션 평가 되 고 포함 된 모든 값과 병합는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, the values that are contained in the <ph id="ph3">`oldValues`</ph> collection are formatted with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> property and are also merged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값, 값에 포함 된는 <ph id="ph3">`oldValues`</ph> 컬렉션으로 지정 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 속성 고 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Before the delete operation is performed, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting&gt;</ph> event.</source>
          <target state="translated">삭제 작업을 수행 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.</source>
          <target state="translated">이 이벤트는 매개 변수의 값을 확인 하 고 삭제 하기 전에 전처리를 수행할 수를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>To perform a delete operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object builds a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> properties, and then executes the <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object against the underlying database.</source>
          <target state="translated">삭제 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A&gt;</ph> 속성을 빌드한 다음 실행의 <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 기본 데이터베이스에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>After the delete operation completes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted&gt;</ph> event.</source>
          <target state="translated">삭제 작업이 완료 된 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You can handle this event to examine any return values and error codes and to perform any post-processing.</source>
          <target state="translated">모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> property is set to the <ph id="ph2">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> value and no <ph id="ph3">&lt;paramref name="oldValues" /&gt;</ph> parameters are passed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> 값으로 설정되고 전달된 <ph id="ph3">&lt;paramref name="oldValues" /&gt;</ph> 매개 변수가 없는 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The current user does not have the correct permissions to access to the database.</source>
          <target state="translated">현재 사용자에게 데이터베이스에 액세스할 수 있는 올바른 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The instance of the control is an <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.AccessDataSource" /&gt;</ph> control and access is denied to the path specified for the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /&gt;</ph> property.</source>
          <target state="translated">컨트롤의 인스턴스가 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.AccessDataSource" /&gt;</ph> 컨트롤이고 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /&gt;</ph> 속성에 지정된 경로에 대한 액세스가 거부된 경우</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>A design-time relative path was not mapped correctly by the designer before using an instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.AccessDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.AccessDataSource" /&gt;</ph> 컨트롤의 인스턴스를 사용하기 전에 디자이너가 디자인 타임 상대 경로를 올바르게 매핑하지 않은 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of values used with the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> property to perform the insert database operation.</source>
          <target state="translated">삽입 데이터베이스 작업을 수행하기 위해 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성과 함께 사용되는 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>If there are no parameters associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> property is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 매개 변수가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> 속성이 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>Performs an insert operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> SQL string, any parameters that are specified in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /&gt;</ph> collection, and the values that are in the specified <ph id="ph3">&lt;paramref name="values" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> SQL 문자열, <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /&gt;</ph> 컬렉션에 지정된 매개 변수 및 지정된 <ph id="ph3">&lt;paramref name="values" /&gt;</ph> 컬렉션의 값을 사용하여 삽입 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>A value that represents the number of rows inserted into the underlying database.</source>
          <target state="translated">내부 데이터베이스로 삽입되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class implements the inherited <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt;</ph> method to insert data into a database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스는 상속 된 구현 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt;</ph> 메서드는 데이터베이스에 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>Page developers and data-bound control authors do not call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A&gt;</ph> method directly; instead, use the publicly exposed <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">페이지 개발자와 데이터 바인딩된 컨트롤 작성자는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A&gt;</ph> 메서드 직접; 대신 사용 하 여 공개적으로 노출 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>Before the insert operation is performed, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting&gt;</ph> event.</source>
          <target state="translated">삽입 작업을 수행 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.</source>
          <target state="translated">이 이벤트는 매개 변수의 값을 확인 하 고 삽입 하기 전에 전처리를 수행할 수를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>To perform an insert operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object builds a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> properties, and then executes the <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object against the underlying database.</source>
          <target state="translated">삽입 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> 속성을 빌드한 다음 실행에서 <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 기본 데이터베이스에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>After the insert completes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted&gt;</ph> event.</source>
          <target state="translated">삽입 완료 된 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>You can handle this event to examine any return values and error codes and to perform any post-processing.</source>
          <target state="translated">모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>The current user does not have the correct permissions to gain access to the database.</source>
          <target state="translated">현재 사용자에게 데이터베이스에 액세스할 수 있는 올바른 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceSelectArguments" /&gt;</ph> object used to request operations on the data beyond basic data retrieval.</source>
          <target state="translated">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceSelectArguments" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>Retrieves data from the underlying database using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> SQL string and any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> SQL 문자열과 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> 컬렉션에 있는 매개 변수를 사용하여 내부 데이터베이스에서 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> list of data rows.</source>
          <target state="translated">데이터 행의 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 목록입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class implements the inherited <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> method to retrieve data from a database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스는 상속 된 구현 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> 메서드는 데이터베이스에서 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>Page developers and data-bound control authors do not call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> method directly; instead, use the publicly exposed <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">페이지 개발자와 데이터 바인딩된 컨트롤 작성자는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> 메서드 직접; 대신 사용 하 여 공개적으로 노출 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>Before the data retrieval is performed, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting&gt;</ph> event.</source>
          <target state="translated">데이터 검색을 수행 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.</source>
          <target state="translated">이 이벤트는 매개 변수의 값을 검사 하 고 데이터를 검색 하기 전에 모든 전처리를 수행할 수를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>To perform the operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object builds a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph>, and executes it against the underlying database.</source>
          <target state="translated">작업을 수행 하기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph>, 기본 데이터베이스에 대해 실행 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>After the operation completes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> event.</source>
          <target state="translated">작업이 완료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>You can handle this event to examine any return values, error codes, and perform any post-processing.</source>
          <target state="translated">모든 반환 값, 오류 코드를 검사 하려면이 이벤트를 처리 하 고 후 처리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> object if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> is set to <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph>, or a <ph id="ph5">&lt;xref:System.Data.IDataReader&gt;</ph> object if the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> is set to <ph id="ph7">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> 경우 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 로 설정 되어 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Data.IDataReader&gt;</ph> 개체를 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 로 설정 된 <ph id="ph7">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>Close the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> object when you have finished reading the data.</source>
          <target state="translated">닫기는 <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> 끝나면 데이터를 읽는 개체입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> and caching is enabled, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> retrieves data from and saves data to the cache during the data operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 캐싱을 사용 하 고, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 에서 데이터를 검색 하 고 데이터 작업 중에 데이터 캐시를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> properties.</source>
          <target state="translated">캐시 또는 생성 된 경우 삭제 된 새로 고침의 조합에 의해 지정 된 캐싱 동작에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data.</source>
          <target state="translated">Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>If another user requests the same data, the data is retrieved from the cache.</source>
          <target state="translated">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>The data is not retrieved by making another call to the database to verify the user's access to the data.</source>
          <target state="translated">데이터에 대 한 사용자의 액세스를 확인 하려면 데이터베이스에 다른 호출 하 여 데이터를 검색 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.</source>
          <target state="translated">여러 사용자가 데이터에 액세스할 수를 예상 하는 경우 각 검색 데이터베이스의 보안 구성으로 확인 하려면 데이터에 캐싱을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> has been specified, it is evaluated along with any supplied <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> and the resulting filter is applied to the list of data during the data retrieval operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 지정 제공 된 함께 평가 되 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> 데이터 검색 작업 동안 데이터의 목록에 결과 필터를 적용 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> passed to the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 메서드에 전달된 <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph>는 검색된 데이터를 페이징 또는 정렬할 수 있도록 데이터 검색 중에 데이터 소스가 일부 추가 작업을 수행해야 하지만 데이터 소스 컨트롤이 필요한 기능을 지원하지 않음을 나타내는 경우</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>Caching is enabled but the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /&gt;</ph> property of the data source is not set to <ph id="ph2">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /&gt;</ph>.</source>
          <target state="translated">캐싱이 활성화되었지만 데이터 소스의 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /&gt;</ph>으로 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /&gt;</ph> property is set but <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /&gt;</ph> is not set to <ph id="ph3">&lt;see cref="F:System.Data.CommandType.StoredProcedure" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /&gt;</ph> 속성이 설정되어 있지만 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.Data.CommandType.StoredProcedure" /&gt;</ph>로 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>The data source cannot create a database connection.</source>
          <target state="translated">데이터 소스에서 데이터베이스에 연결할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
          <source>Caching is enabled but the internal cache and command types do not match.</source>
          <target state="translated">캐싱이 활성화되었지만 내부 캐시 및 명령 형식이 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of primary keys to use with the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property to perform the update database operation.</source>
          <target state="translated">업데이트 데이터베이스 작업을 수행하기 위해 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성과 함께 사용할 기본 키의 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If there are no keys associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 키가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> 속성이 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of values to use with the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property to perform the update database operation.</source>
          <target state="translated">업데이트 데이터베이스 작업을 수행하기 위해 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성과 함께 사용할 값의 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If there are no parameters associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 매개 변수가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that represents the original values in the database.</source>
          <target state="translated">데이터베이스의 원래 값을 나타내는 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If there are no parameters associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 매개 변수가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> 속성이 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs an update operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> SQL string, any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /&gt;</ph> collection, and the values that are in the specified <ph id="ph3">&lt;paramref name="keys" /&gt;</ph>, <ph id="ph4">&lt;paramref name="values" /&gt;</ph>, and <ph id="ph5">&lt;paramref name="oldValues" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> SQL 문자열, <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /&gt;</ph> 컬렉션에 지정된 매개 변수, 지정된 <ph id="ph3">&lt;paramref name="keys" /&gt;</ph>, <ph id="ph4">&lt;paramref name="values" /&gt;</ph> 및 <ph id="ph5">&lt;paramref name="oldValues" /&gt;</ph> 컬렉션의 값을 사용하여 업데이트 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>A value that represents the number of rows updated in the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 업데이트되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class implements the inherited <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A&gt;</ph> method to update data in a database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스는 상속 된 구현 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A&gt;</ph> 메서드는 데이터베이스의 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Page developers and data-bound control authors do not call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A&gt;</ph> method directly; instead, use the publicly exposed <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method.</source>
          <target state="translated">페이지 개발자와 데이터 바인딩된 컨트롤 작성자는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A&gt;</ph> 메서드 직접; 대신 사용 하 여 공개적으로 노출 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The values contained in the <ph id="ph1">`keys`</ph> and <ph id="ph2">`values`</ph> collections are evaluated and merged with any values contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated">에 포함 된 값의 <ph id="ph1">`keys`</ph> 및 <ph id="ph2">`values`</ph> 컬렉션 평가 되 고 포함 된 모든 값과 병합는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is set to  <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph>, the values contained in the <ph id="ph3">`oldValues`</ph> collection are formatted with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> and also merged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph>에 포함 된 값의 <ph id="ph3">`oldValues`</ph> 컬렉션으로 지정 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 고 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Before the update operation is performed, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updating&gt;</ph> event.</source>
          <target state="translated">업데이트 작업을 수행 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You can handle this event to examine the values of the parameters and perform any preprocessing before an update.</source>
          <target state="translated">매개 변수의 값을 확인 하 고 업데이트 하기 전에 전처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>To perform the operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> builds a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> text and any associated <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> properties, and then executes the <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object against the underlying database.</source>
          <target state="translated">작업을 수행 하기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 빌드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> 텍스트와 모든 관련 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> 속성을 빌드한 다음 실행에서 <ph id="ph5">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 기본 데이터베이스에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>After the operation completes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A&gt;</ph> method is called to raise the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updated&gt;</ph> event.</source>
          <target state="translated">작업이 완료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You can handle this event to examine any return values and error codes and to perform any post-processing.</source>
          <target state="translated">모든 반환 값과 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> property is set to the <ph id="ph2">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> value and no <ph id="ph3">&lt;paramref name="oldValues" /&gt;</ph> parameters are passed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /&gt;</ph> 값으로 설정되고 전달된 <ph id="ph3">&lt;paramref name="oldValues" /&gt;</ph> 매개 변수가 없는 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The current user does not have the correct permissions to gain access to the database.</source>
          <target state="translated">현재 사용자에게 데이터베이스에 액세스할 수 있는 올바른 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>Gets or sets a filtering expression that is applied when the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /&gt;</ph> 메서드가 호출될 때 적용되는 필터링 식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>A string that represents a filtering expression applied when data is retrieved using the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 메서드를 사용하여 데이터가 검색될 때 적용되는 필터링 식을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The syntax that is used for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> property is a format string–style syntax.</source>
          <target state="translated">에 사용 되는 구문에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 속성은 형식 문자열 스타일 구문입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>You can include parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수를 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>If the type of the parameter is string or character, enclose the parameter in single quotation marks.</source>
          <target state="translated">매개 변수 형식의 문자열 또는 문자 이면 매개 변수를 작은따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>Quotation marks are not required, if the parameter is a numeric type.</source>
          <target state="translated">매개 변수가 숫자 형식인 경우에 인용 부호를 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> collection contains the parameters that are evaluated for the placeholders that are found in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> 에 있는 자리 표시자에 대 한 계산 되는 매개 변수를 포함 하는 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control supports filtering data only when in <ph id="ph2">`DataSet`</ph> mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터 필터링을 지원 하는 컨트롤의 경우에만 <ph id="ph2">`DataSet`</ph> 모드입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>You should validate any filter parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 필터 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 에서 반환 되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성으로 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하는 보안 조치입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터링 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is applied any time the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is executed to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에는 언제 든 지 적용 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 데이터를 검색할 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property contains a placeholder for a filter parameter, which is contained in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성에 포함 된 필터 매개 변수에 대 한 자리 표시자 포함는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>In this example, the filter parameter is a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> object that is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">이 예제에서 필터 매개 변수는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 바인딩되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control has its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>, any change in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> selection causes the page to post to the server and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to rebind to the data source control with the new filter.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤에 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`true`</ph>, 변경 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 선택 하면 서버에 게시 하는 페이지 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 새 필터와 데이터 소스 컨트롤에 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /&gt;</ph> property was set when the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> is in the <ph id="ph3">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /&gt;</ph> mode.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 모드일 때 <ph id="ph3">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /&gt;</ph> 속성이 설정되어 있는 경우 </target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>Occurs before a filter operation.</source>
          <target state="translated">필터 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering&gt;</ph> event to perform validation operations on filter parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object performs a filter operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering&gt;</ph> 하기 전에 필터 매개 변수 값에 대해 유효성 검사 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 필터 작업을 수행 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>You can cancel the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method by setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&gt;</ph> object to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 설정 하 여 메서드는 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&gt;</ph> 개체를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>The event is raised only if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> property is set.</source>
          <target state="translated">경우에 이벤트가 발생 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>You should validate any filter parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 필터 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 에서 반환 되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성으로 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하는 보안 조치입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>Gets a collection of parameters that are associated with any parameter placeholders in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /&gt;</ph> string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /&gt;</ph> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains a set of parameters associated with any parameter placeholders found in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>The parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> collection are associated with any parameters that are specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> 컬렉션에 지정 된 매개 변수와 연결 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>The parameter placeholders that are specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> are evaluated by order and matched to parameter objects in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> collection when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method is called.</source>
          <target state="translated">에 지정 된 매개 변수 자리 표시자는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A&gt;</ph> 순서에 따라 평가 되 고의 매개 변수 개체와 일치 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A&gt;</ph> 컬렉션 때는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>You should validate any filter parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 필터 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 에서 반환 되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성으로 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하는 보안 조치입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터링 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control is applied any time the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> method is executed to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에는 언제 든 지 적용 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Select%2A&gt;</ph> 데이터를 검색할 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> property contains a placeholder for a filter parameter, which is contained in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 속성에 포함 된 필터 매개 변수에 대 한 자리 표시자 포함는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>In addition, the filter parameter is a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> object that is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">또한 filter 매개 변수는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 바인딩되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control has its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>, any change in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> selection causes the page to post information back to the server and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to rebind to the data source control with the new filter.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤에 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`true`</ph>, 변경 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 선택 하면 서버에 대 한 정보를 게시 하는 페이지 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 함께 데이터 소스 제어에 다시 바인딩하려면 컨트롤의 새 필터입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of parameters for the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> property to use to perform the insert database operation.</source>
          <target state="translated">삽입 데이터베이스 작업을 수행하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성에 대한 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
          <source>If there are no parameters associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 매개 변수가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph>가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
          <source>Performs an insert operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> SQL string, any parameters that are specified in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /&gt;</ph> collection, and the values that are in the specified <ph id="ph3">&lt;paramref name="values" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> SQL 문자열, <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /&gt;</ph> 컬렉션에 지정된 매개 변수 및 지정된 <ph id="ph3">&lt;paramref name="values" /&gt;</ph> 컬렉션의 값을 사용하여 삽입 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
          <source>A value that represents the number of rows inserted into the underlying database.</source>
          <target state="translated">내부 데이터베이스로 삽입되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A&gt;</ph> method, passing the <ph id="ph3">`values`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A&gt;</ph> 전달 하는 메서드는 <ph id="ph3">`values`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object uses to insert data into the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 개체에서 내부 데이터베이스로 데이터를 삽입하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>An SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> uses to insert data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>에서 데이터를 삽입하는 데 사용하는 SQL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> 속성 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The first code example demonstrates how to insert data into a database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">첫 번째 코드 예제에 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">두 번째 코드 예제에 표시를 Microsoft SQL Server에서 데이터를 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 사항을 볼 수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The following code example demonstrates how to insert data into a database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">사용 하 여 데이터베이스에 데이터를 삽입 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The current data in the table is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">에 테이블의 현재 데이터가 표시 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>You can add new records by entering values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and then clicking the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">값을 입력 하 여 새 레코드를 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤과 클릭 한 다음는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>When the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button is clicked, the specified values are inserted into the database and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> is refreshed.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추를 클릭 하면, 지정 된 값 데이터베이스에 삽입 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 가 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The following code example demonstrates how to retrieve data from SQL Server, display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에 표시를 SQL Server에서 데이터를 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 사항을 볼 수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensure that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand">
          <source>Finally, after data is inserted by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control into the database, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 하 여 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 데이터베이스에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 의메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> property is a SQL statement or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>The value is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에 표시를 Microsoft SQL Server에서 데이터를 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 사항을 볼 수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control displays a set of data and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the details for a particular row.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤에 데이터 집합을 표시 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에는 특정 행에 대 한 세부 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>The stored procedure name is set in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> property and is identified as a stored procedure by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> value.</source>
          <target state="translated">설정 저장된 프로시저 이름을 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A&gt;</ph> 속성을 설정 하 여 저장 프로시저로 식별 되 고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>Finally, after data is inserted by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control into the database, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 하 여 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 데이터베이스에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 의메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType">
          <source>The selected value is not one of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated">선택한 값이 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>Occurs when an insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted&gt;</ph> event to examine the values of output parameters after an insert operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted&gt;</ph> 삽입 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">Microsoft SQL Server에서 데이터를 검색 하 고에 표시 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>The example also uses a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to display details of the selected row in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, and as a form to insert new records.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 정보를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, 형태로 새 레코드를 삽입 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensure that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface that is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted">
          <source>Finally, after data is inserted by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control into the database, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 하 여 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 데이터베이스에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 의메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>Occurs before an insert operation.</source>
          <target state="translated">삽입 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the insert operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 삽입 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>The connection to the underlying data source is not yet open when the event handler delegate is called.</source>
          <target state="translated">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>Therefore, you cannot cancel the database operation directly by calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object that is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> object.</source>
          <target state="translated">직접 호출 하 여 데이터베이스 작업을 취소할 수 없습니다 따라서는 <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 의해 노출 되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>You can, however, cancel the database operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">그러나 설정 하 여 데이터베이스 작업을 취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">Microsoft SQL Server에서 데이터를 검색에 표시 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>The example also uses a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to display details of the selected row in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, and as a form to insert new records.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 정보를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>, 형태로 새 레코드를 삽입 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensure that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object, and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting">
          <source>Finally, after data is inserted by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control into the database, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 하 여 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 데이터베이스에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 의메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>Gets the parameters collection containing the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열의 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>Depending on the ADO.NET provider, the order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> collection might be important.</source>
          <target state="translated">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A&gt;</ph> 컬렉션 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리에 표시 되는 매개 변수 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>The following code example demonstrates how to insert data into a database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and a simple Web Forms page.</source>
          <target state="translated">사용 하 여 데이터베이스에 데이터를 삽입 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 및 간단한 Web Forms 페이지.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>The current data in the table is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">에 테이블의 현재 데이터가 표시 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>You can add new records by entering values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and then clicking the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">값을 입력 하 여 새 레코드를 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤과 클릭 한 다음는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters">
          <source>When the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button is clicked, the specified values are inserted into the database and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> is refreshed.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추를 클릭 하면, 지정 된 값 데이터베이스에 삽입 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 가 새로 고쳐집니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object is saving changes to its view state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 개체가 해당 뷰 상태의 변경 내용을 저장하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the data source view is marked to save its state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)">
          <source>An object that represents the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> state to restore.</source>
          <target state="translated">복원할 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 상태를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)">
          <source>Restores the previously saved view state for the data source view.</source>
          <target state="translated">데이터 소스 뷰를 이전에 저장된 뷰 상태로 복원합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)">
          <source>This method is primarily used by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 메서드는 주로 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)">
          <source>However, control developers can override this method to specify how a custom server control restores its view state.</source>
          <target state="translated">그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET 상태 관리 개요<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A&gt;</ph> method restores view-state information for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> object from a previous page request that was saved by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A&gt;</ph> 메서드 복원에 대 한 뷰 상태 정보는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 에서 저장 된 이전 페이지 요청에서 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
          <source>Gets or sets a format string to apply to the names of any parameters that are passed to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /&gt;</ph> or <ph id="ph2">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /&gt;</ph> 메서드에 전달된 모든 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
          <source>A string that represents a format string applied to the names of any <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> parameters passed to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /&gt;</ph> 메서드에 전달된 모든 <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> 매개 변수의 이름에 적용된 서식 문자열을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
          <source>The default is "{0}".</source>
          <target state="translated">기본값은 "{0}"입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> format string is applied to primary keys only, such as those that are identified by the <ph id="ph2">`DataKeyNames`</ph> property of the data-bound control or in delete and update scenarios where the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value and a set of <ph id="ph5">`oldValues`</ph> is passed to the corresponding data method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 형식 문자열이으로 식별 하는 것과 같은 기본 키에 적용 되는 <ph id="ph2">`DataKeyNames`</ph> 되거나 삭제 된 데이터 바인딩 컨트롤의 속성 업데이트 시나리오 및 위치는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값 및 설정 <ph id="ph5">`oldValues`</ph> 해당 데이터 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
          <source>In this case, the format string is applied to each parameter name in the <ph id="ph1">`oldValues`</ph> collection.</source>
          <target state="translated">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 <ph id="ph1">`oldValues`</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /&gt;</ph> event after the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control has completed a delete operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /&gt;</ph> 컨트롤이 삭제 작업을 완료한 후에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /&gt;</ph> event before the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control attempts a delete operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /&gt;</ph> 컨트롤이 삭제 작업을 시도하기 바로 전에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event, which is raised before a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> operation occurs.</source>
          <target state="translated">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 하기 전에 발생 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A&gt;</ph> 작업도 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Because this example deletes data from the Northwind database, an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> handler is added to attempt to back up the database to disk before the delete is performed.</source>
          <target state="translated">이 예제에서는 Northwind 데이터베이스에서 데이터를 삭제 하기 때문에 프로그램 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> 처리기를 추가 하는 delete를 수행 하기 전에 디스크에 데이터베이스를 백업 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /&gt;</ph> event before the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control filters the results of a select operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /&gt;</ph> 컨트롤이 선택 작업의 결과를 필터링하기 전에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /&gt;</ph> event after the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control has completed an insert operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /&gt;</ph> 컨트롤이 삽입 작업을 완료한 후에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에 표시를 Microsoft SQL Server에서 데이터를 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 사항을 볼 수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensure that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Finally, after data is inserted by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control into the database, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 하 여 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 데이터베이스에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 의메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /&gt;</ph> event before the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control attempts an insert operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /&gt;</ph> 컨트롤이 삽입 작업을 시도하기 전에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에 표시를 Microsoft SQL Server에서 데이터를 검색 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 사항을 볼 수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Initially, the data is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터에 표시 되는 처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties, which ensure that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 의 선택된 된 행 되도록 하는 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 은 표시 합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>If you click the automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 클릭 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 의 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The example uses a stored procedure to insert records and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> object when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우 개체입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key that is returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 되는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Finally, after data is inserted by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control into the database, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 하 여 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 데이터베이스에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 의메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /&gt;</ph> event after the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control has completed a data retrieval operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /&gt;</ph> 컨트롤이 데이터 검색 작업을 완료한 후에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /&gt;</ph> event before the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control attempts a data retrieval operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /&gt;</ph> 컨트롤이 데이터 검색 작업을 시도하기 전에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /&gt;</ph> event after the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control has completed an update operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /&gt;</ph> 컨트롤이 업데이트 작업을 완료한 후에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>The following code example demonstrates how to display and update data retrieved from an ODBC database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에 표시 하 고의 ODBC 데이터베이스에서 검색 된 데이터를 업데이트 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>After a record is successfully updated, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</source>
          <target state="translated">레코드를 업데이트 한 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> 알림 전자 메일 메시지를 보내는 위치는 후 처리 단계를 수행 하는 이벤트 처리기 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /&gt;</ph> event before the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control attempts an update operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /&gt;</ph> 컨트롤이 업데이트 작업을 시도하기 바로 전에 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update the record using a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 하 고 사용 하 여 레코드 업데이트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>The example shows how you can use a <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> object to add transaction context when using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to update data.</source>
          <target state="translated">예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 업데이트 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
          <source>Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리에 있는 매개 변수 자리 표시자의 접두사를 지정하는 데 사용되는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
          <source>The "@" string.</source>
          <target state="translated">"@" 문자열입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
          <source>SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time.</source>
          <target state="translated">SQL 쿼리 및 명령의 매개 변수화 할 수, 쿼리 실행 시 바인딩된 값에 대 한 자리 표시자를 포함 한다는 점에서 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
          <source>Depending on the ADO.NET provider that is set for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, which is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property, the parameters are evaluated by alias or by their ordering in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ParameterCollection&gt;</ph> object.</source>
          <target state="translated">ADO.NET 공급자에 대 한 설정에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 으로 식별 되는 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성을 매개 변수에 의해 평가 되에서 별칭 또는 순서에 의해는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ParameterCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> is not set or is set to the <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, parameters are evaluated by alias and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> property is used to add a parameter prefix to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> property of each <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> object in a <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ParameterCollection&gt;</ph> during a data retrieval or data manipulation operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 설정 되어 있지 않거나로 설정 되는 <ph id="ph2">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 매개 변수 별칭으로 평가 되며 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> 속성 매개 변수 접두사를 추가 하는 데 사용 됩니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> 각 속성 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> 개체에 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ParameterCollection&gt;</ph> 데이터 중 검색 또는 데이터 조작 작업입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>, the parameters are evaluated by order and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> properties are ignored.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>, 매개 변수 순서에 따라 평가 됩니다 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> 속성은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix">
          <source>If you extend the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> class, you can override the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> property to supply a prefix other than the <ph id="ph3">`"@"`</ph> string, if required.</source>
          <target state="translated">확장 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 클래스를 재정의할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> 이외의 다른 접두사를 제공 하는 속성은 <ph id="ph3">`"@"`</ph> 문자열, 필요한 경우.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCapabilities" /&gt;</ph> values that is compared against the capabilities that the view supports.</source>
          <target state="translated">뷰가 지원하는 기능과 비교되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCapabilities" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)">
          <source>Compares the capabilities that are requested for an <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> operation against those that the view supports and is called by the <ph id="ph2">&lt;see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 작업에 대해 요청된 기능을 뷰에서 지원하고 <ph id="ph2">&lt;see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /&gt;</ph> 메서드에서 호출하는 기능과 비교합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A&gt;</ph> method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> object that is passed to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method, and to compare those capabilities to the capabilities that are supported by the data source view.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A&gt;</ph> 메서드를 사용 하는 데이터 원본 뷰에서 요소로 표시 되는 데이터 바인딩된 컨트롤에서 요청 하는 기능을 각각 검사는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> 에 전달 되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 메서드를 이러한 기능을 비교 하 고 기능에서 지 원하는 데이터 원본 뷰.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)">
          <source>For the capabilities that are represented by the <ph id="ph1">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> object and are not supported by the data source view, a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception is raised.</source>
          <target state="translated">으로 표현 되는 기능에 대 한는 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> 개체 및 데이터 원본 뷰에서 지원 되지 않습니다는 <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)">
          <source>The data source does not have the selected <ph id="ph1">&lt;paramref name="capability" /&gt;</ph> enabled.</source>
          <target state="translated">데이터 소스에서 선택된 <ph id="ph1">&lt;paramref name="capability" /&gt;</ph>를 활성화하지 않는 경우</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>Saves the changes to the view state for the  <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> control since the time that the page was posted back to the server.</source>
          <target state="translated">페이지가 서버에 포스트백된 이후에 발생한 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 컨트롤에 대한 뷰 상태의 변경 사항을 저장합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>The object that contains the changes to the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> view state; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if there is no view state associated with the object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 뷰 상태의 변경 사항이 포함된 개체를 반환하고, 그렇지 않으면 개체와 연결된 뷰 상태가 없는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph> method is primarily used by control developers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph> 메서드는 주로 컨트롤 개발자가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>View state is the accumulation of the values of the properties for a server control.</source>
          <target state="translated">뷰 상태는 서버 컨트롤에 대 한 속성 값의 누적 된 것입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>These values are automatically placed in the <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property for the server control, which is an instance of the <ph id="ph2">&lt;xref:System.Web.UI.StateBag&gt;</ph> class.</source>
          <target state="translated">이러한 값에 자동으로 배치 되는 <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 인스턴스 서버 컨트롤에 대 한 속성의는 <ph id="ph2">&lt;xref:System.Web.UI.StateBag&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> value for the server control is then persisted to a string object after the save state stage of the server control life cycle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> 저장 상태 서버 컨트롤 수명 주기 단계 후에 문자열 개체 그런 다음 서버 컨트롤은 유지에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML <ph id="ph1">`Hidden`</ph> element.</source>
          <target state="translated">HTML에 저장 된 변수로 저장 상태 서버 컨트롤 수명 주기 단계 후에 유지 되는 문자열 개체 클라이언트에 반환 뷰 상태가 저장 되 면 <ph id="ph1">`Hidden`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>When you author custom server controls, you can improve efficiency by overriding the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph> method and modifying the <ph id="ph2">`ViewState`</ph> property for your server control.</source>
          <target state="translated">사용자 지정 서버 컨트롤을 만들 경우 재정의 하 여 효율성을 개선할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A&gt;</ph> 메서드 및 수정 된 <ph id="ph2">`ViewState`</ph> 서버 컨트롤에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET 상태 관리 개요<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceSelectArguments" /&gt;</ph> used to request operations on the data beyond basic data retrieval.</source>
          <target state="translated">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceSelectArguments" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>Retrieves data from the underlying database using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> SQL string and any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> SQL 문자열과 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /&gt;</ph> 컬렉션에 있는 매개 변수를 사용하여 내부 데이터베이스에서 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> list of data rows.</source>
          <target state="translated">데이터 행의 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 목록입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> method, passing the <ph id="ph3">`selectArgs`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> 전달 하는 메서드는 <ph id="ph3">`selectArgs`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> object, if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> value or it returns a <ph id="ph5">&lt;xref:System.Data.IDataReader&gt;</ph> object, if the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> property is set to the <ph id="ph7">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> 경우 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet&gt;</ph> 값 반환는 <ph id="ph5">&lt;xref:System.Data.IDataReader&gt;</ph> 경우 개체는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph7">&lt;xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>Close the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> object when you have finished reading the data.</source>
          <target state="translated">닫기는 <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> 끝나면 데이터를 읽는 개체입니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;paramref name="selectArgs" /&gt;</ph> passed to the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /&gt;</ph> 메서드에 전달된 <ph id="ph1">&lt;paramref name="selectArgs" /&gt;</ph>는 검색된 데이터를 페이징 또는 정렬할 수 있도록 데이터 검색 중에 데이터 소스가 일부 추가 작업을 수행해야 하지만 데이터 소스 컨트롤이 필요한 기능을 지원하지 않음을 나타내는 경우</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object uses to retrieve data from the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 개체에서 내부 데이터베이스의 데이터를 검색하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>An SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> uses to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>에서 데이터를 검색하는 데 사용하는 SQL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 속성 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>It is more secure to use a stored procedure than a SQL statement for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">보다 안전한에 대 한 SQL 문과 저장된 프로시저를 사용 하 여 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The first code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">첫 번째 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트에 표시 하는 Microsoft SQL Server 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The second code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>.</source>
          <target state="translated">두 번째 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트에 표시 하는 SQL Server 데이터베이스에서 데이터를 검색 하는 저장된 프로시저의 이름으로는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트에 표시 하는 SQL Server 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls are provided as a simple interface to update the address for the selected user in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤에서 선택한 사용자에 대 한 주소를 업데이트 하는 간단한 인터페이스로 제공 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 텍스트에 표시 하는 SQL Server 데이터베이스에서 데이터를 검색 하는 저장된 프로시저의 이름으로는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성 수는 SQL 쿼리 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> property is a SQL query or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> 속성의 텍스트가 SQL 쿼리와 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> text to the name of a stored procedure and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> property to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> value to retrieve data from a Microsoft SQL Server database and display it in a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 저장된 프로시저의 이름으로는 텍스트 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure&gt;</ph> 값에 표시 하는 Microsoft SQL Server 데이터베이스에서 데이터를 검색 하는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType">
          <source>The selected value is not one of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated">선택한 값이 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Selected">
          <source>Occurs when a data retrieval operation has completed.</source>
          <target state="translated">데이터 검색 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Selected">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Selected&gt;</ph> event to examine the values of output parameters after a data retrieval operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Selected&gt;</ph> 데이터 검색 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Selected">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Selected">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting">
          <source>Occurs before a data retrieval operation.</source>
          <target state="translated">데이터 검색 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the data retrieval operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터 검색을 수행 하는 컨트롤 작업입니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>Gets the parameters collection containing the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열의 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>Depending on the ADO.NET provider, the order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> collection might be important.</source>
          <target state="translated">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A&gt;</ph> 컬렉션 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리에 표시 되는 매개 변수 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property to an SQL query.</source>
          <target state="translated">설정 하 여 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> SQL 쿼리의 속성입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>The SQL query is parameterized and the placeholder in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> property is matched to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> object that is added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">SQL 쿼리를 매개 변수화 및 자리 표시자에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A&gt;</ph> 속성에 일치는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 개체에 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>In this way, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, to which the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> is bound, acts as a filter for what is displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ListBox&gt;</ph> control.</source>
          <target state="translated">이러한 방식으로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 바인딩된, 기능에 대 한 필터에 표시는 역할을 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ListBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters">
          <source>Because the parameter is used in a WHERE clause, the use of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> property in this code example is functionally equivalent to using both the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> properties.</source>
          <target state="translated">사용 하는 WHERE 절에 매개 변수가 사용 되기 때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A&gt;</ph> 이 코드 예제는 기능적으로 모두 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName">
          <source>Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</source>
          <target state="translated">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName">
          <source>The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</source>
          <target state="translated">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property is evaluated only when the SQL command that is contained by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> property is the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성이 확인 된는 SQL 명령이 포함 된만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A&gt;</ph> 속성은 저장된 프로시저의 이름입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName">
          <source>In this case, if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.</source>
          <target state="translated">이 예제의 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성이 설정 되어 있으면 저장된 프로시저의 결과 정렬 하는 데 사용 되는 매개 변수의 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName">
          <source>If the  <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> property is set, it is prepended to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A&gt;</ph> 속성이 설정 되어 있으면 앞에 추가 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the data source view is marked to save its state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> instance is cast to the <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
          <source>An object that represents the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> state to restore.</source>
          <target state="translated">복원할 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 상태를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> instance is cast to the <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Web.UI.IStateManager.SaveViewState" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Web.UI.IStateManager.SaveViewState" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState">
          <source>The object that contains the changes to the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> view state; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if there is no view state associated with the object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 뷰 상태의 변경 사항이 포함된 개체를 반환하고, 그렇지 않으면 개체와 연결된 뷰 상태가 없는 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> instance is cast to the <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Web.UI.IStateManager.TrackViewState" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Web.UI.IStateManager.TrackViewState" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> instance is cast to the <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.Web.UI.IStateManager&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object to track changes to its view state so that the changes can be stored in the <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph> object for the control and persisted across requests for the same page.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 개체가 해당 뷰 상태의 변경 사항을 추적하게 되어 이러한 변경 사항이 컨트롤의 <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph> 개체에 저장되며 같은 페이지에서 발생하는 여러 요청에 대해 유지됩니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of primary keys to use with the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property to perform the update database operation.</source>
          <target state="translated">업데이트 데이터베이스 작업을 수행하기 위해 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성과 함께 사용할 기본 키의 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If there are no keys associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 키가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of values to use with the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property to perform the update database operation.</source>
          <target state="translated">업데이트 데이터베이스 작업을 수행하기 위해 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 속성과 함께 사용할 값의 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If there are no parameters associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 매개 변수가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> that represents the original values in the database.</source>
          <target state="translated">데이터베이스의 원래 값을 나타내는 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>If there are no parameters associated with the query or if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> is not a parameterized SQL query, pass <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">쿼리에 연결된 매개 변수가 없거나 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 전달합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs an update operation using the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> SQL string, any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /&gt;</ph> collection, and the values that are in the specified <ph id="ph3">&lt;paramref name="keys" /&gt;</ph>, <ph id="ph4">&lt;paramref name="values" /&gt;</ph>, and <ph id="ph5">&lt;paramref name="oldValues" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> SQL 문자열, <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /&gt;</ph> 컬렉션에 지정된 매개 변수, 지정된 <ph id="ph3">&lt;paramref name="keys" /&gt;</ph>, <ph id="ph4">&lt;paramref name="values" /&gt;</ph> 및 <ph id="ph5">&lt;paramref name="oldValues" /&gt;</ph> 컬렉션의 값을 사용하여 업데이트 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>A value that represents the number of rows updated in the underlying database.</source>
          <target state="translated">내부 데이터베이스에서 업데이트되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A&gt;</ph> method, passing the <ph id="ph3">`keys`</ph>, <ph id="ph4">`values`</ph>, and <ph id="ph5">`oldValues`</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A&gt;</ph> 전달 하는 메서드는 <ph id="ph3">`keys`</ph>, <ph id="ph4">`values`</ph>, 및 <ph id="ph5">`oldValues`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to display data in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update data when the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 데이터를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 및 업데이트 데이터 때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property is set with a parameterized SQL statement and two <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> parameters are added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 매개 변수가 있는 SQL 문 및 두 개의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 매개 변수가 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>When the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event is handled to call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> method explicitly.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 하면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이 이벤트는 호출 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> 메서드 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> cannot establish a connection with the underlying data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph>가 내부 데이터 소스와 연결될 수 없는 경우</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>Gets or sets the SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> object uses to update data in the underlying database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> 개체에서 내부 데이터베이스의 데이터를 업데이트하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>A SQL string that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph> uses to update data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /&gt;</ph>에서 데이터를 업데이트하는 데 사용하는 SQL 문자열입니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property.</source>
          <target state="translated">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> 속성으로 식별 가능)에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</source>
          <target state="translated">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>For example, if the provider is the <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, which is the default provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> class, the placeholder of the parameter is <ph id="ph3">`'@parameterName'`</ph>.</source>
          <target state="translated">예를 들어 공급자는 <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph>, 하는 기본 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 클래스 매개 변수의 자리 표시자는 <ph id="ph3">`'@parameterName'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>However, if the provider is set to the <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, the placeholder of the parameter is <ph id="ph3">`'?'`</ph>.</source>
          <target state="translated">그러나 공급자로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph>, 매개 변수의 자리 표시자는 <ph id="ph3">`'?'`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> 속성 수 SQL 문자열 또는 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The first code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and update data in a Microsoft SQL Server database using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">첫 번째 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 사용 하 여 Microsoft SQL Server 데이터베이스의 데이터를 제어 및 업데이트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The second code example demonstrates how to update data in an ODBC database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">두 번째 코드 예제에 사용 하 여 ODBC 데이터베이스에 데이터를 업데이트 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control and update data in a SQL Server database using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 사용 하 여 SQL Server 데이터베이스의 데이터를 제어 및 업데이트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection, inferring the parameters from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> objects, and calls the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> method when the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> link on the editable <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is selected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 유추에서 매개 변수 컬렉션을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체를 호출 하는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A&gt;</ph> 메서드 때는 <bpt id="p1">**</bpt>업데이트<ept id="p1">**</ept> 편집 가능한 에서링크<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>This example also includes some post-processing—after a record is updated, an email message notification is sent.</source>
          <target state="translated">이 예제에도 일부 사후 처리-레코드를 업데이트 한 후 전자 메일 메시지 알림이 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제는 기능적으로 동일 이전 코드 예제를 사용 하 여 ODBC 데이터베이스에서 데이터를 업데이트 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> property is set to the ADO.NET provider for ODBC, the <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> property is set to the name of an ODBC data source name (DSN).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A&gt;</ph> ODBC 용 ADO.NET 공급자 속성이 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A&gt;</ph> 속성은 ODBC 데이터 원본 이름 (DSN)의 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType">
          <source>Gets or sets a value indicating whether the text in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property is a SQL statement or the name of a stored procedure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType">
          <source>The default is the <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> value.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A&gt;</ph> property is stored in view state.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A&gt;</ph> 속성은 뷰 상태에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType">
          <source>The selected value is not one of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> values.</source>
          <target state="translated">선택한 값이 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updated">
          <source>Occurs when an update operation has completed.</source>
          <target state="translated">업데이트 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updated&gt;</ph> event to examine the values of output parameters after an update operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updated&gt;</ph> 업데이트 작업이 완료 된 후의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updated">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updated">
          <source>The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control.</source>
          <target state="translated">ODBC 데이터베이스에서 검색 된 데이터 표시 및 업데이트 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updated">
          <source>After a record is successfully updated, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</source>
          <target state="translated">레코드를 업데이트 한 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph> 알림 전자 메일 메시지를 보내는 위치는 후 처리 단계를 수행 하는 이벤트 처리기 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>Gets the parameters collection containing the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> property contains a parameterized SQL query, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> collection contains any <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects that correspond to the parameter placeholders that are in the SQL string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A&gt;</ph> 매개 변수가 있는 SQL 쿼리를 포함 하는 속성의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> 컬렉션에 포함 되어 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> SQL 문자열에 있는 매개 변수 자리 표시자에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>Parameter names might be affected by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> property; specifically, if the name identifies a primary key, such as a key that is specified using the <ph id="ph2">`DataKeyNames`</ph> property, or in delete and update scenarios where the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, and a set of <ph id="ph5">`oldValues`</ph> are passed to the corresponding data method.</source>
          <target state="translated">매개 변수 이름은 영향을 받을 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성; 구체적으로, 기본 키를 식별 하는 이름을 키와 같은 지정 된 사용 하 여는 <ph id="ph2">`DataKeyNames`</ph> 속성에서 삭제 하 고 업데이트 시나리오 여기서는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값 및 집합이 <ph id="ph5">`oldValues`</ph> 해당 데이터 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>In this case, the format string is applied to each parameter name in the <ph id="ph1">`oldValues`</ph> collection.</source>
          <target state="translated">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 <ph id="ph1">`oldValues`</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>Depending on the ADO.NET provider, the order of the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> collection might be important.</source>
          <target state="translated">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A&gt;</ph> 컬렉션 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Odbc?displayProperty=nameWithType&gt;</ph> 공급자 매개 변수가 있는 SQL 쿼리에 표시 되는 매개 변수 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> provider, which is the default ADO.NET provider for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient?displayProperty=nameWithType&gt;</ph> 는 기본 ADO.NET 공급자는 공급자에 대 한는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 하 고, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>For more information on parameterized SQL queries and commands, see <bpt id="p1">[</bpt>Using Parameters with the SqlDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>.</source>
          <target state="translated">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SqlDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to display data in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update data when the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤에 데이터를 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 및 업데이트 데이터 때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> property is set with a parameterized SQL statement, and two <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> parameters are added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A&gt;</ph> 매개 변수가 있는 SQL 문 및 두 개의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 에 매개 변수가 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters">
          <source>When the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> event is handled to call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> method explicitly.</source>
          <target state="translated">때는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추를 클릭 하면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClick%2A&gt;</ph> 이 이벤트는 호출 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Update%2A&gt;</ph> 메서드 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>Occurs before an update operation.</source>
          <target state="translated">업데이트 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updating&gt;</ph> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control performs the update operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.Updating&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 적용 되는 추가 초기화 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤이 업데이트 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>The connection to the underlying data source is not yet open when the event handler delegate is called.</source>
          <target state="translated">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>Therefore, you cannot cancel the operation directly by calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object that is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> object.</source>
          <target state="translated">직접 호출 하 여 작업을 취소할 수 없습니다 따라서는 <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 의해 노출 되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>You can, however, cancel the database operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">그러나 설정 하 여 데이터베이스 작업을 취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and update the record using a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 하 고 사용 하 여 레코드 업데이트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.SqlDataSourceView.Updating">
          <source>The example shows how you can use a <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> object to add transaction context when using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to update data.</source>
          <target state="translated">예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 업데이트 하는 컨트롤입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>