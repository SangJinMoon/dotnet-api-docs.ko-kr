<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd929c794031e527bcef1ff5b7e66ea5a1ad8cb8" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51896640" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type SqlDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fdac7-101"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤을 지원하고, 관계형 데이터베이스에 대해 SQL 데이터 작업을 수행할 데이터 바인딩된 컨트롤에 대한 인터페이스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-101">Supports the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-102"><xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스는 주로 사용 하려는 데이터 바인딩된 컨트롤에서 페이지 코드에서 프로그래밍 가능한 개체로 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-102">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.</span></span>  
  
 <span data-ttu-id="fdac7-103">ASP.NET 데이터 소스 컨트롤에 하나 이상의 데이터 원본 뷰 개체를 나타내는 데이터 목록을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-103">ASP.NET data source controls contain one or more lists of data, represented by data source view objects.</span></span> <span data-ttu-id="fdac7-104"><xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스를 확장 합니다 <xref:System.Web.UI.DataSourceView> 클래스, 기능을 정의 합니다는 <xref:System.Web.UI.WebControls.SqlDataSource> 있는 연결 이므로 데이터 소스 컨트롤에 대 한 기본 데이터 기능을 구현 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-104">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class extends the <xref:System.Web.UI.DataSourceView> class, defines the capabilities of the <xref:System.Web.UI.WebControls.SqlDataSource> control with which it is associated, and implements the basic data functionality for the data source control.</span></span> <span data-ttu-id="fdac7-105"><xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스에 대 한 데이터 기능을 구현 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 포함 하 여를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 정렬, 필터링 및 설정 보기에 유지 되는 관리 작업 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-105">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the data functionality for the <xref:System.Web.UI.WebControls.SqlDataSource> control, including the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, sorting, filtering, and managing settings that are kept in view state.</span></span>  
  
 <span data-ttu-id="fdac7-106">하지만 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체에서 페이지 개발자에 게 직접 노출 되지를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 속성 중 대부분은입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-106">Although the <xref:System.Web.UI.WebControls.SqlDataSourceView> object is not directly exposed to page developers by the <xref:System.Web.UI.WebControls.SqlDataSource> control, many of its properties are.</span></span> <span data-ttu-id="fdac7-107">데이터 원본 뷰를 수행 하는 가장 기본적인 작업은 사용 하 여 원본 데이터베이스에서 데이터를 검색 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드를 검색 하는 <xref:System.Collections.IEnumerable> 데이터 항목의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-107">The most basic operation that a data source view performs is data retrieval from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, which retrieves an <xref:System.Collections.IEnumerable> collection of data items.</span></span> <span data-ttu-id="fdac7-108"><xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스는 SQL 쿼리를 사용 하 여 관계형 데이터베이스에서 데이터 검색을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-108">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements data retrieval from relational databases using SQL queries.</span></span> <span data-ttu-id="fdac7-109">더 큰 유연성과 보안에 대 한 SQL 쿼리를 매개 변수화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-109">The SQL queries can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="fdac7-110">다음과 같은 데이터 검색 메서드, 속성 및 이벤트에서 구현 되는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.SqlDataSource> 페이지 개발자 및 다른 호출자에 게 제어:</span><span class="sxs-lookup"><span data-stu-id="fdac7-110">The following data retrieval methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="fdac7-111"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-111">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-112"><xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-112">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-113"><xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-113">The <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event</span></span>  
  
-   <span data-ttu-id="fdac7-114"><xref:System.Web.UI.WebControls.SqlDataSource.Selected> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-114">The <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event</span></span>  
  
 <span data-ttu-id="fdac7-115"><xref:System.Web.UI.WebControls.SqlDataSourceView> 개체 SQL 명령을 사용 하 여 관계형 데이터베이스의 데이터 업데이트를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-115">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object supports updating data in a relational database using SQL commands.</span></span> <span data-ttu-id="fdac7-116">SQL 명령이 더 큰 유연성과 보안에 대 한 매개 변수화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-116">The SQL commands can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="fdac7-117">와 같은 데이터 바인딩된 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>를 자동으로 사용 하 여 업데이트를 수행 하도록 구성할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView>다른 컨트롤과 달리, 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-117">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform updates automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="fdac7-118">다음과 같은 업데이트 메서드, 속성 및 이벤트에서 구현 되는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.SqlDataSource> 페이지 개발자 및 다른 호출자에 게 제어:</span><span class="sxs-lookup"><span data-stu-id="fdac7-118">The following update methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="fdac7-119"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-119">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-120"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-120">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-121"><xref:System.Web.UI.WebControls.SqlDataSource.Updating> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-121">The <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event</span></span>  
  
-   <span data-ttu-id="fdac7-122"><xref:System.Web.UI.WebControls.SqlDataSource.Updated> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-122">The <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event</span></span>  
  
 <span data-ttu-id="fdac7-123"><xref:System.Web.UI.WebControls.SqlDataSourceView> 은 관계형 데이터베이스에 새 데이터 행 삽입을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-123">The <xref:System.Web.UI.WebControls.SqlDataSourceView> supports inserting new rows of data into a relational database.</span></span> <span data-ttu-id="fdac7-124">에 지정 된 SQL 명령을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 더 큰 유연성과 보안에 대 한 속성을 매개 변수화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-124">The SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="fdac7-125">와 같은 데이터 바인딩된 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>를 자동으로 사용 하 여 삽입 작업을 수행 하도록 구성할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView>다른 컨트롤과 달리, 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-125">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform inserts automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="fdac7-126">다음 삽입 메서드, 속성 및 이벤트를 구현 하 여는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.SqlDataSource> 페이지 개발자 및 다른 호출자에 게 제어:</span><span class="sxs-lookup"><span data-stu-id="fdac7-126">The following insert methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="fdac7-127"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-127">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-128"><xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-128">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-129"><xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-129">The <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event</span></span>  
  
-   <span data-ttu-id="fdac7-130"><xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-130">The <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event</span></span>  
  
 <span data-ttu-id="fdac7-131"><xref:System.Web.UI.WebControls.SqlDataSourceView> 개체는 관계형 데이터베이스에서 데이터를 삭제 하도록 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-131">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object also supports deleting data from a relational database.</span></span> <span data-ttu-id="fdac7-132">다른 명령의 경우와 마찬가지로 SQL 명령에 지정 된는 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 더 큰 유연성과 보안에 대 한 속성을 매개 변수화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-132">As with other commands, the SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="fdac7-133">와 같은 데이터 바인딩된 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>를 자동으로 사용 하 여 삭제를 수행 하도록 구성할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView>다른 컨트롤과 달리, 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-133">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform deletes automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="fdac7-134">다음 메서드, 속성을 삭제 하 고 이벤트를 구현 하 여는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.SqlDataSource> 페이지 개발자 및 다른 호출자에 게 제어:</span><span class="sxs-lookup"><span data-stu-id="fdac7-134">The following delete methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="fdac7-135"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-135">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-136"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="fdac7-136">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property</span></span>  
  
-   <span data-ttu-id="fdac7-137"><xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-137">The <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event</span></span>  
  
-   <span data-ttu-id="fdac7-138"><xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 이벤트</span><span class="sxs-lookup"><span data-stu-id="fdac7-138">The <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event</span></span>  
  
 <span data-ttu-id="fdac7-139">데이터 검색 더 강력한 경우 데이터를 검색 하는 동안 데이터를 필터링 하는 데 사용 되는 절은 동적입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-139">Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic.</span></span> <span data-ttu-id="fdac7-140">즉, 여기서 절이으로 유연 하 고 SQL 쿼리로 강력한 WHERE 절의 값을 변경할 수 있는, Web Forms 페이지의 컨트롤에 표시 되는 값과 같은 값 바인딩되는 위치에 정적 SQL 쿼리.</span><span class="sxs-lookup"><span data-stu-id="fdac7-140">In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page.</span></span> <span data-ttu-id="fdac7-141">SQL 다시 빌드하는 대신 쿼리 및 설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 모든 페이지 로드 시 속성을 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 데이터 검색에 동적 필터링을 적용 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-141">Instead of rebuilding an SQL query and setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property on every page load, you can use the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> properties to apply dynamic filtering to data retrieval.</span></span> <span data-ttu-id="fdac7-142">이러한 속성으로 구현 됩니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터 바인딩된 컨트롤에서 다른 호출자를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-142">These properties are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to data-bound controls and other callers.</span></span>  
  
 <span data-ttu-id="fdac7-143">사용 하 여 검색 하는 데이터를 정렬할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource> 하면 데이터를 검색 하는 경우를 정렬 하는 데 데이터베이스는 ORDER BY 절을 추가 하거나 검색 된 후 메모리에서 데이터를 정렬 하 여 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-143">You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.SqlDataSource> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved.</span></span> <span data-ttu-id="fdac7-144">에 정렬 식을 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 설정 하 여는 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 의 속성을 <xref:System.Web.UI.DataSourceSelectArguments> 에 전달 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-144">You can supply a sorting expression to the <xref:System.Web.UI.WebControls.SqlDataSourceView> by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method.</span></span> <span data-ttu-id="fdac7-145">구문은 합니다 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 속성의 구문은 동일를 <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-145">The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fdac7-146">저장된 프로시저를 사용 하 여 데이터를 검색 하는 경우 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성을 저장된 프로시저 호출의 결과 정렬 하기 위해 사용 되는 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-146">If you use a stored procedure to retrieve data, you can also use the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property to specify a parameter that is used specifically for sorting the results of a stored procedure call.</span></span>  
  
 <span data-ttu-id="fdac7-147">둘 이상의 사용자 데이터베이스를 동시에 변경할 수 있는, 경우 동시성 충돌에 대 한 가능성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-147">When more than one user can change the database concurrently, there is the potential for concurrency conflict.</span></span> <span data-ttu-id="fdac7-148">합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 통해 컨트롤 동시성에는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-148">The <xref:System.Web.UI.WebControls.SqlDataSource> control has controls concurrency through the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fdac7-149">기능에서 구현 되는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-149">The functionality is implemented in the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="fdac7-150">대부분의 다른 웹 서버 컨트롤 같은 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 구현를 <xref:System.Web.UI.IStateManager> 인터페이스 사용 하 여 뷰 페이지 요청에서 해당 상태를 추적 하는 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-150">Like many other Web server controls, the <xref:System.Web.UI.WebControls.SqlDataSourceView> implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests.</span></span> <span data-ttu-id="fdac7-151">구현 된 <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> 속성과 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> 컨트롤의 뷰 상태 추적을 사용 하도록 설정 방법이 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-151">Implementations of the <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> and property and the <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> methods are provided to enable view state tracking for the control.</span></span> <span data-ttu-id="fdac7-152">자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-152">For more information, see [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceView : System.Web.UI.WebControls.SqlDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="new System.Web.UI.WebControls.SqlDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="fdac7-153"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />가 연결된 데이터 소스 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-153">The data source control with which the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> is associated.</span></span></param>
        <param name="name"><span data-ttu-id="fdac7-154">소유하고 있는 데이터 소스 컨트롤의 범위 내에 있는 데이터 소스 뷰의 고유한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-154">A unique name for the data source view, within the scope of the data source control that owns it.</span></span></param>
        <param name="context"><span data-ttu-id="fdac7-155">현재 <see cref="T:System.Web.HttpContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-155">The current <see cref="T:System.Web.HttpContext" />.</span></span></param>
        <summary><span data-ttu-id="fdac7-156">지정된 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤을 현재 뷰의 소유자로 설정하여 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-156">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> class setting the specified <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control as the owner of the current view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-157">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> 생성자를 호출 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> 지정 된 데이터 원본 뷰의 새 인스턴스를 반환 하는 방법 `name` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-157">The <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> constructor is called by the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to return a new instance of a data source view with the specified `name` parameter.</span></span> <span data-ttu-id="fdac7-158"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 하나만와 연결 되어 <xref:System.Web.UI.WebControls.SqlDataSourceView> 언제 든 한 정보와 개체 이름 보기 `Table`이지만이 명명 제한에 의해 적용 되는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 하지는 <xref:System.Web.UI.WebControls.SqlDataSourceView>합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-158">The <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with only one <xref:System.Web.UI.WebControls.SqlDataSourceView> object at any one time, and always names the view `Table`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.SqlDataSource> control, not the <xref:System.Web.UI.WebControls.SqlDataSourceView>.</span></span> <span data-ttu-id="fdac7-159">재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> 메서드를 다른 명명 규칙을 사용 하 여 뷰를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-159">You can override the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to support views with a different naming convention.</span></span>  
  
 <span data-ttu-id="fdac7-160"><xref:System.Web.HttpContext> 에서 전달 되는 개체를 `context` 매개 변수는 매개 변수 개체에 액세스 하는 데이터 원본 뷰에서 같은 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="fdac7-160">The <xref:System.Web.HttpContext> object that is passed by the `context` parameter is used by the data source view to access parameter objects, such as the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-161"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 컬렉션에 포함된 매개 변수가 <see langword="null" />일 때 데이터 검색 작업이 취소되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-161">Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluates to <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="fdac7-162"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 컬렉션에 포함된 매개 변수가 <see langword="true" />일 때 검색 작업이 취소되는 경우 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-162"><see langword="true" />, if a data retrieval operation is canceled when a parameter contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluated to <see langword="null" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fdac7-163">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-163">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-164">값을 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-164">The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-165">현재 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체가 삭제 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-165">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the delete operation.</span></span></summary>
        <value><span data-ttu-id="fdac7-166">작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-166"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-167"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> 속성이 반환 `true` 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-167">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is set.</span></span> <span data-ttu-id="fdac7-168">모든 데이터 속성이 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 삭제 작업이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-168">A delete operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-169">현재 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체가 삽입 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-169">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the insert operation.</span></span></summary>
        <value><span data-ttu-id="fdac7-170">작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-170"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-171"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> 속성이 반환 `true` 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-171">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is set.</span></span> <span data-ttu-id="fdac7-172">삽입 작업은 모든 데이터 속성이 설정 되지 않은 또는 올바르게 설정 되지 않은 경우에 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-172">An insert operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-173">현재 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체가 검색된 데이터의 페이징 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-173">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the paging of retrieved data.</span></span></summary>
        <value><span data-ttu-id="fdac7-174">모든 경우에 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-174"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-175"><xref:System.Web.UI.WebControls.SqlDataSourceView> 개체가 페이징을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-175">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support paging.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-176">현재 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체가 데이터 집합과 총 데이터 행 수에 대한 검색을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-176">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports retrieving the total number of data rows, in addition to the set of data.</span></span></summary>
        <value><span data-ttu-id="fdac7-177">모든 경우에 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-177"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-178"><xref:System.Web.UI.WebControls.SqlDataSourceView> 개체가 행 개수 검색을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-178">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support retrieving row counts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-179">현재 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체가 검색된 데이터에 대한 정렬된 뷰를 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-179">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports a sorted view on the retrieved data.</span></span></summary>
        <value><span data-ttu-id="fdac7-180">정렬이 지원되는 경우에는 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-180"><see langword="true" />, if sorting is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-181"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> 속성에서 반환 `true`이면 현재 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성이 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-181">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> property returns `true`, if the current <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value and the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-182">현재 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체가 업데이트 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-182">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the update operation.</span></span></summary>
        <value><span data-ttu-id="fdac7-183">작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-183"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-184"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> 속성이 반환 `true` 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-184">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is set.</span></span> <span data-ttu-id="fdac7-185">모든 데이터 속성이 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 삭제 작업이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-185">A delete operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-186">작업 시간 동안 내부 데이터베이스의 행 데이터가 변경된 경우 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 업데이트 및 삭제를 수행하는 방법을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-186">Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</span></span></summary>
        <value><span data-ttu-id="fdac7-187"><see cref="T:System.Web.UI.ConflictOptions" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-187">One of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span> <span data-ttu-id="fdac7-188">기본값은 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-188">The default is the <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-189">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성 이전 및 새 값에 대 한 매개 변수에 적용 되었는지 여부를 결정 합니다 `Update` 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-189">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property determines whether parameters for old and new values are applied to the `Update` method.</span></span> <span data-ttu-id="fdac7-190">예를 들어 명령입니다로 지정 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성에서 반환을 <xref:System.Data.DataSet> 열을 사용 하 여 개체 `Name` 및 `Number`, 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 에 대 한 매개 변수는 생성 값 `Name` 고 `Number` 업데이트 작업에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-190">For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property returns a <xref:System.Data.DataSet> object with the columns `Name` and `Number`, and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> value, parameters are created for `Name` and `Number` for the update operation.</span></span> <span data-ttu-id="fdac7-191">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 에 대 한 매개 변수는 생성 값 `Name`, `Number`, `original_Name`, 및 `original_Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-191">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`.</span></span> <span data-ttu-id="fdac7-192">(원래 값에 대 한 정확한 매개 변수 이름에 따라 달라 집니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) 그런 다음, <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체 인지 여부를 확인 메서드는에 지정 된 된 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 속성이 일치 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-192">(The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Then, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object determines if the method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property has parameters that match.</span></span>  
  
 <span data-ttu-id="fdac7-193">동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어를 사용 하 여 데이터 저장소 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-193">Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="fdac7-194">예를 들어, 하나의 클라이언트 데이터를 읽고 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 하는 동안 사용자에 게 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-194">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="fdac7-195">두 사용자가 데이터를 업데이트 하 데이터 저장소에 제출 하는 경우 두 클라이언트가 모두 동일한 데이터에 대해 다른 값을 업데이트할 수 있으므로 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-195">If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.</span></span> <span data-ttu-id="fdac7-196">이 충돌로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-196">This is considered a conflict.</span></span> <span data-ttu-id="fdac7-197">설정 하 여 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성을는 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 업데이트 작업이 충돌을 감지 하 고 필요에 따라 처리에 원래 데이터 원본에 이전 및 새 값을 비교 다음 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-197">By setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.</span></span>  
  
 <span data-ttu-id="fdac7-198">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-198">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fdac7-199">선택한 값이 <see cref="T:System.Web.UI.ConflictOptions" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-199">The selected value is not one of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span></exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce"><span data-ttu-id="fdac7-200">SqlDataSource 웹 서버 컨트롤 개요</span><span class="sxs-lookup"><span data-stu-id="fdac7-200">SqlDataSource Web Server Control Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="fdac7-201"><see cref="T:System.Collections.IDictionary" /> 작업에서 삭제할 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />의 개체 또는 행 키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-201">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</span></span></param>
        <param name="oldValues"><span data-ttu-id="fdac7-202"><see cref="T:System.Collections.IDictionary" /> 속성이 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 값으로 설정된 경우에만 계산되는 행 값이 포함된 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-202">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</span></span></param>
        <summary><span data-ttu-id="fdac7-203"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 문자열, <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> 컬렉션에 지정된 매개 변수와 지정된 <paramref name="keys" /> 및 <paramref name="oldValues" /> 컬렉션의 값을 사용하여 삭제 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-203">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="fdac7-204">내부 데이터베이스에서 삭제되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-204">A value that represents the number of rows deleted from the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-205"><xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> 메서드를 전달 합니다 `keys` 및 `oldValues` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="fdac7-205">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method, passing the `keys` and `oldValues` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-206"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-206">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
<span data-ttu-id="fdac7-207">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-207">\- or -</span></span> 
<span data-ttu-id="fdac7-208"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 속성이 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 값으로 설정되고 전달된 <paramref name="oldValues" /> 매개 변수가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-208">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-209"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-209">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-210"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />에서 내부 데이터베이스의 데이터를 삭제하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-210">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="fdac7-211"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />에서 데이터를 삭제하는 데 사용하는 SQL 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-211">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-212">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-212">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span>  
  
 <span data-ttu-id="fdac7-213">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-213">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="fdac7-214">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="fdac7-214">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="fdac7-215">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-215">However, if the provider is set to the  <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="fdac7-216">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-216">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="fdac7-217"><xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 기본 데이터베이스에서 저장된 프로시저를 지 원하는 경우는 SQL 문자열 또는 저장된 프로시저의 이름일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-217">The <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.</span></span>  
  
 <span data-ttu-id="fdac7-218">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-218">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-219">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스의 Orders 테이블에서 주문을 삭제 하는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-219">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table.</span></span> <span data-ttu-id="fdac7-220">데이터는 Orders 테이블에서 검색 되어 표시를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-220">Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-221"><xref:System.Web.UI.WebControls.GridView> 렌더링을 **삭제** 자동으로 단추 때를 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이로 설정 되어 `true` 를 자동으로 채우려고를 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션과 호출을 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 메서드 때를 **삭제** 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-221">The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked.</span></span> <span data-ttu-id="fdac7-222">마지막으로,이 예제에서는 데이터를 삭제 하기 때문에 이벤트 처리기 삭제 작업 전에 디스크에 데이터베이스를 백업 하려고 이루어집니다 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-222">Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-223"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-223">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="fdac7-224"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-224">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="fdac7-225">기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-225">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-226">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-226">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fdac7-227">선택한 값이 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-227">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-228">삭제 작업이 완료된 경우 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-228">Occurs when a delete operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-229">처리는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> 삭제 작업이 완료 된 후의 값을 검사 하는 이벤트 매개 변수를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-229">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event to examine the values of output parameters after a delete operation has completed.</span></span> <span data-ttu-id="fdac7-230">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-230">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="fdac7-231">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-231">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-232"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-232">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="fdac7-233"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-233">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-234">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-234">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="fdac7-235">매개 변수 이름은 영향을 받을 수는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> 속성에 특히 이름을 기본 키를 식별 하는 경우 키와 같은 지정 된 사용 하 여는 `DataKeyNames` 삭제 또는 데이터 바인딩된 컨트롤의 속성 및 시나리오에는 업데이트 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 및 집합이 `oldValues` 해당 데이터 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-235">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property of a data-bound control, or in delete and update scenarios in which the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method.</span></span> <span data-ttu-id="fdac7-236">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 `oldValues` 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-236">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="fdac7-237">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> 컬렉션 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-237">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection might be important.</span></span> <span data-ttu-id="fdac7-238">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-238">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="fdac7-239">합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자를 사용 하 여 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-239">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.</span></span> <span data-ttu-id="fdac7-240">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-240">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-241">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스에서 주문을 삭제 하는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-241">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database.</span></span> <span data-ttu-id="fdac7-242">데이터를 Orders 테이블에서 검색 하 고 표시 하는 처음에 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-242">Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-243">명시적으로 선언 해야 합니다는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성과 호출을 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 와 같은 데이터 바인딩된 컨트롤을 사용 하는 경우 메서드는 <xref:System.Web.UI.WebControls.DropDownList> (컨트롤과 달리 같은 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>는 자동으로 채울는 매개 변수 및 호출 된 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 데이터 소스 컨트롤에서 메서드).</span><span class="sxs-lookup"><span data-stu-id="fdac7-243">You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control).</span></span> <span data-ttu-id="fdac7-244">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 이벤트 개인에 게 위임 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> 명시적으로 호출 하는 이벤트 처리기를 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드의 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-244">In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-245">삭제 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-245">Occurs before a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-246">처리를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 삭제 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-246">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.</span></span>  
  
 <span data-ttu-id="fdac7-247">데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-247">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="fdac7-248">따라서 취소할 수 없습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 직접 호출 하 여 작업 합니다 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를를 <xref:System.Data.Common.DbCommand> 개체에서 노출 되는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체.</span><span class="sxs-lookup"><span data-stu-id="fdac7-248">Therefore, you cannot cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="fdac7-249">그러나 설정 하 여 작업을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-249">You can, however, cancel the operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="fdac7-250">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-250">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-251">다음 코드 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 삭제 작업이 발생 하기 전에 발생 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-251">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs.</span></span> <span data-ttu-id="fdac7-252">이 예제에서는 Northwind 데이터베이스에서 데이터를 삭제 하기 때문에 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 삭제 작업을 수행 하기 전에 디스크에 데이터베이스를 백업 하려고 처리기를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-252">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="fdac7-253"><see cref="T:System.Collections.IDictionary" /> 작업에서 삭제할 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />의 개체 또는 행 키 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-253">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</span></span></param>
        <param name="oldValues"><span data-ttu-id="fdac7-254"><see cref="T:System.Collections.IDictionary" /> 속성이 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 값으로 설정된 경우에만 계산되는 행 값이 포함된 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-254">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</span></span></param>
        <summary><span data-ttu-id="fdac7-255"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 문자열, <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> 컬렉션에 지정된 매개 변수와 지정된 <paramref name="keys" /> 및 <paramref name="oldValues" /> 컬렉션의 값을 사용하여 삭제 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-255">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="fdac7-256">내부 데이터베이스에서 삭제되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-256">A value that represents the number of rows deleted from the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-257">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 메서드를 데이터베이스에서 데이터를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-257">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method to delete data from a database.</span></span> <span data-ttu-id="fdac7-258">페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-258">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.</span></span>  
  
 <span data-ttu-id="fdac7-259">에 포함 된 값을 `keys` 컬렉션 평가 되 고 포함 된 모든 값과 병합 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-259">The values that are contained in the `keys` collection are evaluated and merged with any values that are contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="fdac7-260">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값, 값에 포함 된를 `oldValues` 컬렉션으로 서식이 지정 된는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> 속성 고 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-260">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the values that are contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property and are also merged.</span></span>  
  
 <span data-ttu-id="fdac7-261">삭제 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-261">Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event.</span></span> <span data-ttu-id="fdac7-262">매개 변수의 값을 확인 하 고 삭제 하기 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-262">You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.</span></span>  
  
 <span data-ttu-id="fdac7-263">삭제 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드 개체를 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> 속성을 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-263">To perform a delete operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="fdac7-264">삭제 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="fdac7-264">After the delete operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event.</span></span> <span data-ttu-id="fdac7-265">모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-265">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-266"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-266">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
<span data-ttu-id="fdac7-267">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-267">\- or -</span></span> 
<span data-ttu-id="fdac7-268"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 속성이 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 값으로 설정되고 전달된 <paramref name="oldValues" /> 매개 변수가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-268">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="fdac7-269">현재 사용자에게 데이터베이스에 액세스할 수 있는 올바른 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-269">The current user does not have the correct permissions to access to the database.</span></span>  
  
<span data-ttu-id="fdac7-270">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-270">\- or -</span></span> 
<span data-ttu-id="fdac7-271">컨트롤의 인스턴스가 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> 컨트롤이고 <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> 속성에 지정된 경로에 대한 액세스가 거부된 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-271">The instance of the control is an <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control and access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-272"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-272">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.</span></span>  
  
<span data-ttu-id="fdac7-273">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-273">\- or -</span></span> 
<span data-ttu-id="fdac7-274"><see cref="T:System.Web.UI.WebControls.AccessDataSource" /> 컨트롤의 인스턴스를 사용하기 전에 디자이너가 디자인 타임 상대 경로를 올바르게 매핑하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-274">A design-time relative path was not mapped correctly by the designer before using an instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="fdac7-275">삽입 데이터베이스 작업을 수행하기 위해 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용되는 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-275">An <see cref="T:System.Collections.IDictionary" /> of values used with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to perform the insert database operation.</span></span> <span data-ttu-id="fdac7-276">쿼리에 연결된 매개 변수가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 속성이 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-276">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fdac7-277"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 문자열, <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> 컬렉션에 지정된 매개 변수 및 지정된 <paramref name="values" /> 컬렉션의 값을 사용하여 삽입 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-277">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</span></span></summary>
        <returns><span data-ttu-id="fdac7-278">내부 데이터베이스로 삽입되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-278">A value that represents the number of rows inserted into the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-279">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 데이터베이스로 데이터를 삽입 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-279">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database.</span></span> <span data-ttu-id="fdac7-280">페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-280">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="fdac7-281">삽입 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-281">Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event.</span></span> <span data-ttu-id="fdac7-282">매개 변수의 값을 확인 하 고 삽입 하기 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-282">You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.</span></span>  
  
 <span data-ttu-id="fdac7-283">삽입 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드 개체를 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> 속성을 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-283">To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="fdac7-284">삽입 완료 된 후는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-284">After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event.</span></span> <span data-ttu-id="fdac7-285">모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-285">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-286"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-286">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="fdac7-287">현재 사용자에게 데이터베이스에 액세스할 수 있는 올바른 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-287">The current user does not have the correct permissions to gain access to the database.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-288"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-288">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="fdac7-289">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-289">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object used to request operations on the data beyond basic data retrieval.</span></span></param>
        <summary><span data-ttu-id="fdac7-290"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 컬렉션에 있는 매개 변수를 사용하여 내부 데이터베이스에서 데이터를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-290">Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="fdac7-291">데이터 행의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-291">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-292">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 데이터베이스에서 데이터를 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-292">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method to retrieve data from a database.</span></span> <span data-ttu-id="fdac7-293">페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-293">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.</span></span>  
  
 <span data-ttu-id="fdac7-294">데이터 검색을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-294">Before the data retrieval is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event.</span></span> <span data-ttu-id="fdac7-295">매개 변수의 값을 확인 하 고 데이터를 검색 하기 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-295">You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.</span></span>  
  
 <span data-ttu-id="fdac7-296">작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드 개체를 <xref:System.Data.Common.DbCommand> 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, 기본 데이터베이스에 대해 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-296">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, and executes it against the underlying database.</span></span> <span data-ttu-id="fdac7-297">작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Selected> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="fdac7-297">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event.</span></span> <span data-ttu-id="fdac7-298">모든 반환 값과 오류 코드를 검사 하려면이 이벤트를 처리 하 고 후 처리를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-298">You can handle this event to examine any return values, error codes, and perform any post-processing.</span></span>  
  
 <span data-ttu-id="fdac7-299"><xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 메서드가 반환 되는 <xref:System.Data.DataView> 경우 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 로 설정 되어 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, 또는 <xref:System.Data.IDataReader> 하는 경우 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 로 설정 되어 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>.</span><span class="sxs-lookup"><span data-stu-id="fdac7-299">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, or a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>.</span></span> <span data-ttu-id="fdac7-300">닫기는 <xref:System.Data.IDataReader> 데이터 읽기를 마쳤으면 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-300">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 <span data-ttu-id="fdac7-301">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 로 설정 된 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 캐싱이 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 에서 데이터를 검색 하 고 데이터 작업 중 캐시에 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-301">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSourceView> retrieves data from and saves data to the cache during the data operation.</span></span> <span data-ttu-id="fdac7-302">캐시가 만들어지는, 삭제 또는 새로 고침의 조합에 의해 지정 된 캐싱 동작을 기반으로 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-302">The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdac7-303">Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-303">When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="fdac7-304">다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-304">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="fdac7-305">데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-305">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="fdac7-306">데이터에 액세스 하는 여러 사용자가 원하는 경우 각 검색 데이터베이스의 보안 구성으로 확인 하려면 데이터 캐싱을 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="fdac7-306">If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.</span></span>  
  
 <span data-ttu-id="fdac7-307">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 로 설정 된 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 지정 함께 제공 된 평가 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 결과 필터는 데이터 검색 작업 중 데이터 목록에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-307">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> has been specified, it is evaluated along with any supplied <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and the resulting filter is applied to the list of data during the data retrieval operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-308"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 메서드에 전달된 <paramref name="arguments" />는 검색된 데이터를 페이징 또는 정렬할 수 있도록 데이터 검색 중에 데이터 소스가 일부 추가 작업을 수행해야 하지만 데이터 소스 컨트롤이 필요한 기능을 지원하지 않음을 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-308">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</span></span>  
  
<span data-ttu-id="fdac7-309">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-309">\- or -</span></span> 
<span data-ttu-id="fdac7-310">캐싱이 활성화되었지만 데이터 소스의 <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> 속성이 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />으로 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-310">Caching is enabled but the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property of the data source is not set to <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />.</span></span>  
  
<span data-ttu-id="fdac7-311">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-311">\- or -</span></span> 
<span data-ttu-id="fdac7-312"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> 속성이 설정되어 있지만 <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" />이 <see cref="F:System.Data.CommandType.StoredProcedure" />로 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-312">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> property is set but <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> is not set to <see cref="F:System.Data.CommandType.StoredProcedure" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-313">데이터 소스에서 데이터베이스에 연결할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-313">The data source cannot create a database connection.</span></span>  
  
<span data-ttu-id="fdac7-314">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-314">\- or -</span></span> 
<span data-ttu-id="fdac7-315">캐싱이 활성화되었지만 내부 캐시 및 명령 형식이 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-315">Caching is enabled but the internal cache and command types do not match.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="fdac7-316">업데이트 데이터베이스 작업을 수행하기 위해 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용할 기본 키의 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-316">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="fdac7-317">쿼리에 연결된 키가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 속성이 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-317">If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="values"><span data-ttu-id="fdac7-318">업데이트 데이터베이스 작업을 수행하기 위해 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용할 값의 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-318">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="fdac7-319">쿼리에 연결된 매개 변수가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-319">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="oldValues"><span data-ttu-id="fdac7-320">데이터베이스의 원래 값을 나타내는 <see cref="T:System.Collections.IDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-320">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database.</span></span> <span data-ttu-id="fdac7-321">쿼리에 연결된 매개 변수가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 속성이 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-321">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fdac7-322"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 문자열, <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> 컬렉션에 지정된 매개 변수, 지정된 <paramref name="keys" />, <paramref name="values" /> 및 <paramref name="oldValues" /> 컬렉션의 값을 사용하여 업데이트 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-322">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="fdac7-323">내부 데이터베이스에서 업데이트되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-323">A value that represents the number of rows updated in the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-324">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> 데이터베이스의 데이터를 업데이트 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-324">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method to update data in a database.</span></span> <span data-ttu-id="fdac7-325">페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-325">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.</span></span>  
  
 <span data-ttu-id="fdac7-326">에 포함 된 값을 `keys` 및 `values` 컬렉션 평가 되 고 포함 된 모든 값과 병합 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-326">The values contained in the `keys` and `values` collections are evaluated and merged with any values contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="fdac7-327">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성이로 설정 되어 <xref:System.Web.UI.ConflictOptions.CompareAllValues>에 들어 있는 값을 `oldValues` 컬렉션으로 서식이 지정 된는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> 도 병합 및.</span><span class="sxs-lookup"><span data-stu-id="fdac7-327">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to  <xref:System.Web.UI.ConflictOptions.CompareAllValues>, the values contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> and also merged.</span></span>  
  
 <span data-ttu-id="fdac7-328">업데이트 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-328">Before the update operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event.</span></span> <span data-ttu-id="fdac7-329">매개 변수의 값을 검토 하 고 업데이트 하기 전에 전처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-329">You can handle this event to examine the values of the parameters and perform any preprocessing before an update.</span></span>  
  
 <span data-ttu-id="fdac7-330">작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드를 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> 속성을 다음 실행를 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대해 개체.</span><span class="sxs-lookup"><span data-stu-id="fdac7-330">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="fdac7-331">작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> 이벤트.</span><span class="sxs-lookup"><span data-stu-id="fdac7-331">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event.</span></span> <span data-ttu-id="fdac7-332">모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-332">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-333"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-333">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
<span data-ttu-id="fdac7-334">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="fdac7-334">\- or -</span></span> 
<span data-ttu-id="fdac7-335"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 속성이 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 값으로 설정되고 전달된 <paramref name="oldValues" /> 매개 변수가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-335">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="fdac7-336">현재 사용자에게 데이터베이스에 액세스할 수 있는 올바른 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-336">The current user does not have the correct permissions to gain access to the database.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-337"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-337">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-338"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> 메서드가 호출될 때 적용되는 필터링 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-338">Gets or sets a filtering expression that is applied when the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> method is called.</span></span></summary>
        <value><span data-ttu-id="fdac7-339"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드를 사용하여 데이터가 검색될 때 적용되는 필터링 식을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-339">A string that represents a filtering expression applied when data is retrieved using the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-340">에 사용 되는 구문을 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 속성 형식 문자열 스타일 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-340">The syntax that is used for the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is a format string–style syntax.</span></span> <span data-ttu-id="fdac7-341">매개 변수는 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-341">You can include parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property.</span></span> <span data-ttu-id="fdac7-342">매개 변수 형식의 문자열 또는 문자 이면 매개 변수를 작은따옴표로 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-342">If the type of the parameter is string or character, enclose the parameter in single quotation marks.</span></span> <span data-ttu-id="fdac7-343">매개 변수가 숫자 형식인 경우 따옴표가 필요 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-343">Quotation marks are not required, if the parameter is a numeric type.</span></span>  
  
 <span data-ttu-id="fdac7-344">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 컬렉션에 있는 자리 표시자에 대 한 계산 되는 매개 변수를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-344">The <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span>  
  
 <span data-ttu-id="fdac7-345">합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에 데이터를 필터링은 지원의 경우에만 `DataSet` 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-345">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in `DataSet` mode.</span></span>  
  
 <span data-ttu-id="fdac7-346">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-346">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is stored in view state.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdac7-347">클라이언트에서 받은 모든 필터 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-347">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="fdac7-348">매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataView> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-348">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="fdac7-349">사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-349">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-350">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터에 대 한 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-350">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="fdac7-351"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에는 언제 든 지 적용 됩니다를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 데이터를 검색할 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-351">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="fdac7-352">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성에 포함 된 필터 매개 변수에 대 한 자리 표시자를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-352">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="fdac7-353">이 예제에서 filter 매개 변수는를 <xref:System.Web.UI.WebControls.ControlParameter> 바인딩되는 개체를 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 의 속성은 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-353">In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-354">때문에 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에 해당 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 속성이로 설정 `true`, 변경 되는 <xref:System.Web.UI.WebControls.DropDownList> 선택 하면 페이지가 서버에 게시 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 새 필터를 사용 하 여 데이터 소스 컨트롤에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-354">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-355"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />가 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 모드일 때 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> 속성이 설정되어 있는 경우 </span><span class="sxs-lookup"><span data-stu-id="fdac7-355">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property was set when the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in the <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-356">필터 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-356">Occurs before a filter operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-357">처리를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> 하기 전에 필터 매개 변수 값에 대 한 유효성 검사 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체를 필터 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-357">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSourceView> object performs a filter operation.</span></span> <span data-ttu-id="fdac7-358">취소할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 설정 하 여 메서드를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> 개체를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-358">You can cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`.</span></span> <span data-ttu-id="fdac7-359">경우에 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-359">The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdac7-360">클라이언트에서 받은 모든 필터 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-360">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="fdac7-361">매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataView> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-361">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="fdac7-362">사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-362">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
 <span data-ttu-id="fdac7-363">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-363">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-364"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-364">Gets a collection of parameters that are associated with any parameter placeholders in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> string.</span></span></summary>
        <value><span data-ttu-id="fdac7-365"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-365">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-366">매개 변수를 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 컬렉션에 지정 된 매개 변수를 사용 하 여 연결 된 된 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-366">The parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property.</span></span> <span data-ttu-id="fdac7-367">에 지정 된 매개 변수 자리 표시자를 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 의 매개 변수 개체에 일치 하 고 순서 대로 평가 되어를 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 컬렉션 때는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-367">The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> are evaluated by order and matched to parameter objects in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdac7-368">클라이언트에서 받은 모든 필터 매개 변수 값을 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-368">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="fdac7-369">매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataView> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-369">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="fdac7-370">사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-370">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-371">다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터에 대 한 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-371">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="fdac7-372"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에는 언제 든 지 적용 됩니다를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 데이터를 검색할 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-372">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="fdac7-373">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성에 포함 된 필터 매개 변수에 대 한 자리 표시자를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-373">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="fdac7-374">또한 filter 매개 변수는를 <xref:System.Web.UI.WebControls.ControlParameter> 바인딩되는 개체를 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="fdac7-374">In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-375">때문에 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에 해당 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 속성이로 설정 `true`, 변경 사항이 발생 합니다 <xref:System.Web.UI.WebControls.DropDownList> 선택 하면 페이지가 서버에 대 한 정보를 게시 및 <xref:System.Web.UI.WebControls.GridView> 사용 하 여 데이터 소스 컨트롤에 바인딩할 컨트롤은 새 필터입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-375">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="fdac7-376">삽입 데이터베이스 작업을 수행하는 데 사용할 <see cref="T:System.Collections.IDictionary" /> 속성에 대한 매개 변수의 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-376">An <see cref="T:System.Collections.IDictionary" /> of parameters for the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to use to perform the insert database operation.</span></span> <span data-ttu-id="fdac7-377">쿼리에 연결된 매개 변수가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-377">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fdac7-378"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 문자열, <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> 컬렉션에 지정된 매개 변수 및 지정된 <paramref name="values" /> 컬렉션의 값을 사용하여 삽입 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-378">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</span></span></summary>
        <returns><span data-ttu-id="fdac7-379">내부 데이터베이스로 삽입되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-379">A value that represents the number of rows inserted into the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-380"><xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> 전달 하는 메서드를 `values` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-380">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method, passing the `values` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-381"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-381">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-382"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-382">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-383"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 개체에서 내부 데이터베이스로 데이터를 삽입하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-383">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to insert data into the underlying database.</span></span></summary>
        <value><span data-ttu-id="fdac7-384"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />에서 데이터를 삽입하는 데 사용하는 SQL 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-384">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to insert data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-385">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-385">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="fdac7-386">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-386">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="fdac7-387">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="fdac7-387">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="fdac7-388">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-388">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="fdac7-389">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-389">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="fdac7-390"><xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fdac7-390">The <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="fdac7-391">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-391">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-392">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-392">This section contains two code examples.</span></span> <span data-ttu-id="fdac7-393">첫 번째 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-393">The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="fdac7-394">두 번째 코드 예제에서는 Microsoft SQL Server에서 데이터를 검색, 표시 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하 여를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 와 새 레코드를 삽입 하는 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-394">The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="fdac7-395">다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-395">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="fdac7-396">테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-396">The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-397">값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-397">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="fdac7-398">경우는 **삽입** 단추를 클릭 하면, 데이터베이스에 지정된 된 값은 삽입 및 <xref:System.Web.UI.WebControls.DropDownList> 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-398">When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 <span data-ttu-id="fdac7-399">다음 코드 예제에는 SQL Server에서 데이터를 검색, 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하 여를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 와 새 레코드를 삽입 하는 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-399">The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="fdac7-400">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="fdac7-400">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="fdac7-401"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 선택된 된 행을 확인 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-401">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="fdac7-402">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-402">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="fdac7-403">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-403">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="fdac7-404">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-404">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="fdac7-405">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-405">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="fdac7-406">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-406">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="fdac7-407">마지막으로 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 제어 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-407">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-408"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-408">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="fdac7-409"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-409">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="fdac7-410">값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-410">The value is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-411">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-411">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-412">다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색, 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하 여를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 와 새 레코드를 삽입 하는 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-412">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="fdac7-413">합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 데이터 집합이 표시 됩니다 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 특정 행에 대 한 세부 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-413">The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row.</span></span> <span data-ttu-id="fdac7-414">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-414">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="fdac7-415">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-415">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="fdac7-416">저장된 프로시저 이름에 설정 되어는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성을 설정 하 여 저장 프로시저로 확인 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> 값.</span><span class="sxs-lookup"><span data-stu-id="fdac7-416">The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value.</span></span>  
  
 <span data-ttu-id="fdac7-417">마지막으로 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 제어 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-417">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fdac7-418">선택한 값이 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-418">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-419">삽입 작업이 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-419">Occurs when an insert operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-420">처리는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> 삽입 작업이 완료 된 후의 값을 확인 하려면 출력 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-420">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event to examine the values of output parameters after an insert operation has completed.</span></span> <span data-ttu-id="fdac7-421">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-421">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="fdac7-422">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-422">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-423">다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-423">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-424">또한이 예제에서는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 정보를 표시는 <xref:System.Web.UI.WebControls.GridView>와 폼에 새 레코드를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-424">The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="fdac7-425">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행을 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-425">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>.</span></span> <span data-ttu-id="fdac7-426"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 선택된 된 행을 확인 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-426">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="fdac7-427">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-427">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record.</span></span> <span data-ttu-id="fdac7-428">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-428">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="fdac7-429">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-429">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="fdac7-430">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-430">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="fdac7-431">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-431">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="fdac7-432">마지막으로 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 제어 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-432">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-433">삽입 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-433">Occurs before an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-434">처리를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 삽입 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-434">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.</span></span>  
  
 <span data-ttu-id="fdac7-435">데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-435">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="fdac7-436">직접 호출 하 여 데이터베이스 작업을 취소할 수 없습니다. 따라서를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-436">Therefore, you cannot cancel the database operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="fdac7-437">설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-437">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="fdac7-438">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-438">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-439">다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색, 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-439">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-440">또한이 예제에서는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 정보를 표시는 <xref:System.Web.UI.WebControls.GridView>와 폼에 새 레코드를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-440">The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="fdac7-441">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="fdac7-441">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="fdac7-442"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 선택된 된 행을 확인 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-442">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="fdac7-443">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-443">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="fdac7-444">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-444">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="fdac7-445">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-445">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="fdac7-446">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-446">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="fdac7-447">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-447">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="fdac7-448">마지막으로 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 제어 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-448">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-449"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-449">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="fdac7-450"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-450">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-451">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-451">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="fdac7-452">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> 컬렉션 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-452">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection might be important.</span></span> <span data-ttu-id="fdac7-453">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-453">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="fdac7-454"><xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-454">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="fdac7-455">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-455">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-456">다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-456">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="fdac7-457">테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-457">The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-458">값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-458">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="fdac7-459">경우는 **삽입** 단추를 클릭 하면, 데이터베이스에 지정된 된 값은 삽입 및 <xref:System.Web.UI.WebControls.DropDownList> 새로 고쳐집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-459">When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-460"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 개체가 해당 뷰 상태의 변경 내용을 저장하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-460">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object is saving changes to its view state.</span></span></summary>
        <value><span data-ttu-id="fdac7-461">데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-461"><see langword="true" />, if the data source view is marked to save its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="fdac7-462">복원할 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 상태를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-462">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</span></span></param>
        <summary><span data-ttu-id="fdac7-463">데이터 소스 뷰를 이전에 저장된 뷰 상태로 복원합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-463">Restores the previously saved view state for the data source view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-464">이 메서드는 주로 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 인프라 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-464">This method is primarily used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  <span data-ttu-id="fdac7-465">그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-465">However, control developers can override this method to specify how a custom server control restores its view state.</span></span> <span data-ttu-id="fdac7-466">자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-466">For more information, see [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).</span></span>  
  
 <span data-ttu-id="fdac7-467">합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> 에 대 한 뷰 상태 정보를 복원 하는 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 저장 한 이전 페이지 요청에서 개체를 <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-467">The <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> method restores view-state information for the <xref:System.Web.UI.WebControls.SqlDataSourceView> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-468"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> 또는 <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> 메서드에 전달된 모든 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-468">Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> method.</span></span></summary>
        <value><span data-ttu-id="fdac7-469"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> 또는 <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> 메서드에 전달된 모든 <paramref name="oldValues" /> 매개 변수의 이름에 적용된 서식 문자열을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-469">A string that represents a format string applied to the names of any <paramref name="oldValues" /> parameters passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> methods.</span></span> <span data-ttu-id="fdac7-470">기본값은 "{0}"입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-470">The default is "{0}".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-471"><xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> 으로 식별 되는 것과 같은 서식 문자열 기본 키에 적용 됩니다는 `DataKeyNames` 삭제 또는 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치를 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 속성이 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 및 집합이 `oldValues` 해당 데이터 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-471">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> format string is applied to primary keys only, such as those that are identified by the `DataKeyNames` property of the data-bound control or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method.</span></span> <span data-ttu-id="fdac7-472">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 `oldValues` 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-472">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span> <span data-ttu-id="fdac7-473">자세한 내용은 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fdac7-473">For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fdac7-474">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-474">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-475">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-475">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-476"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> 컨트롤이 삭제 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-476">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-477">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-477">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-478">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-478">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-479">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-479">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-480">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-480">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-481">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-481">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-482">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-482">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-483"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> 컨트롤이 삭제 작업을 시도하기 바로 전에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-483">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-484">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-484">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-485">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-485">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-486">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-486">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-487">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-487">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-488">다음 코드 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 하기 전에 발생 하는 경우를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 작업이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-488">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs.</span></span> <span data-ttu-id="fdac7-489">이 예제에서는 Northwind 데이터베이스에서 데이터를 삭제 하기 때문에 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 삭제가 수행 되기 전에 디스크에 데이터베이스를 백업 하려고 처리기를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-489">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-490">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-490">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit" Usage="sqlDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-491">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-491">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-492"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> 컨트롤이 선택 작업의 결과를 필터링하기 전에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-492">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control filters the results of a select operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-493">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-493">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-494">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-494">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-495">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-495">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-496">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-496">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-497">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-497">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-498">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-498">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-499"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> 컨트롤이 삽입 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-499">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-500">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-500">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-501">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-501">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-502">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-502">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-503">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-503">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-504">다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색, 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하 여를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 와 새 레코드를 삽입 하는 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-504">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="fdac7-505">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="fdac7-505">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="fdac7-506"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 선택된 된 행을 확인 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-506">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="fdac7-507">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-507">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="fdac7-508">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-508">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="fdac7-509">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-509">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="fdac7-510">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-510">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="fdac7-511">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-511">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="fdac7-512">마지막으로 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 제어 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-512">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-513">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-513">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-514">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-514">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-515"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> 컨트롤이 삽입 작업을 시도하기 전에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-515">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-516">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-516">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-517">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-517">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-518">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-518">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-519">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-519">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-520">다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색, 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하 여를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 와 새 레코드를 삽입 하는 폼입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-520">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="fdac7-521">에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="fdac7-521">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="fdac7-522"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 선택된 된 행을 확인 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-522">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="fdac7-523">자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-523">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="fdac7-524">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-524">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="fdac7-525">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fdac7-525">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="fdac7-526">합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-526">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="fdac7-527">이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-527">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="fdac7-528">마지막으로 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 제어 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-528">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-529">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-529">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-530">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-530">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-531"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> 컨트롤이 데이터 검색 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-531">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-532">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-532">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-533">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-533">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-534">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-534">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-535">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-535">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-536">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-536">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-537">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-537">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-538"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> 컨트롤이 데이터 검색 작업을 시도하기 전에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-538">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-539">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-539">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-540">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-540">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-541">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-541">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-542">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-542">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-543">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-543">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-544">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-544">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-545"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> 컨트롤이 업데이트 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-545">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-546">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-546">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-547">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-547">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-548">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-548">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-549">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-549">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-550">다음 코드 예제에는 표시의 ODBC 데이터베이스에서 검색 된 데이터를 업데이트 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-550">The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-551">레코드를 성공적으로 업데이트 되 면를 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 알림 전자 메일 메시지가 전송 되는 후 처리 단계를 수행 하는 이벤트 처리기 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-551">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-552">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-552">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdac7-553">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-553">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdac7-554"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> 컨트롤이 업데이트 작업을 시도하기 바로 전에 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-554">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-555">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-555">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fdac7-556">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-556">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fdac7-557">또한 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-557">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fdac7-558">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-558">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-559">다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-559">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="fdac7-560">예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하도록 컨트롤을 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-560">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdac7-561">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> 파생된 클래스에서 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-561">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterPrefix : string" Usage="System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-562">매개 변수가 있는 SQL 쿼리에 있는 매개 변수 자리 표시자의 접두사를 지정하는 데 사용되는 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-562">Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.</span></span></summary>
        <value><span data-ttu-id="fdac7-563">"@" 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-563">The "@" string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-564">SQL 쿼리 및 명령의 매개 변수화 할 수는 런타임에 쿼리에 바인딩되는 값에 대 한 자리 표시자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-564">SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time.</span></span> <span data-ttu-id="fdac7-565">에 대해 설정 된 ADO.NET 공급자에 따라를 <xref:System.Web.UI.WebControls.SqlDataSource> 식별 되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성인 매개 변수는 평가 하 여에서 별칭 또는 순서에 의해는 <xref:System.Web.UI.WebControls.ParameterCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-565">Depending on the ADO.NET provider that is set for the <xref:System.Web.UI.WebControls.SqlDataSource> control, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the parameters are evaluated by alias or by their ordering in the <xref:System.Web.UI.WebControls.ParameterCollection> object.</span></span>  
  
 <span data-ttu-id="fdac7-566">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 설정 되지 않았거나로 설정 되어를 <xref:System.Data.SqlClient?displayProperty=nameWithType>, 매개 변수는 별칭을 기준으로 계산 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> 속성 매개 변수 접두사를 추가 하는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 각 속성 <xref:System.Web.UI.WebControls.Parameter> 개체를 <xref:System.Web.UI.WebControls.ParameterCollection> 데이터 중 검색 또는 데이터 조작 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-566">If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is not set or is set to the <xref:System.Data.SqlClient?displayProperty=nameWithType>, parameters are evaluated by alias and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is used to add a parameter prefix to the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each <xref:System.Web.UI.WebControls.Parameter> object in a <xref:System.Web.UI.WebControls.ParameterCollection> during a data retrieval or data manipulation operation.</span></span> <span data-ttu-id="fdac7-567">경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성을 <xref:System.Data.OleDb?displayProperty=nameWithType> 또는 <xref:System.Data.Odbc?displayProperty=nameWithType>, 매개 변수 순서에 따라 평가 됩니다 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> 및 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-567">If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb?displayProperty=nameWithType> or <xref:System.Data.Odbc?displayProperty=nameWithType>, the parameters are evaluated by order and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> and <xref:System.Web.UI.WebControls.Parameter.Name%2A> properties are ignored.</span></span>  
  
 <span data-ttu-id="fdac7-568">확장 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 재정의할 수 있습니다 클래스는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> 이외의 다른 접두사를 제공 하는 속성을 `"@"` 문자열, 필요한 경우.</span><span class="sxs-lookup"><span data-stu-id="fdac7-568">If you extend the <xref:System.Web.UI.WebControls.SqlDataSourceView> class, you can override the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property to supply a prefix other than the `"@"` string, if required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="sqlDataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability"><span data-ttu-id="fdac7-569">뷰가 지원하는 기능과 비교되는 <see cref="T:System.Web.UI.DataSourceCapabilities" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-569">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values that is compared against the capabilities that the view supports.</span></span></param>
        <summary><span data-ttu-id="fdac7-570"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 작업에 대해 요청된 기능을 뷰에서 지원하고 <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> 메서드에서 호출하는 기능과 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-570">Compares the capabilities that are requested for an <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the view supports and is called by the <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-571"><xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> 메서드는 데이터 원본 뷰에서 각 데이터 바인딩된 컨트롤에 의해 요청 된 기능으로 표현 되는 검사를 사용 합니다 <xref:System.Web.UI.DataSourceSelectArguments> 에 전달 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드를 이러한 기능을 비교 하 기능에서 지 원하는 데이터 원본 뷰.</span><span class="sxs-lookup"><span data-stu-id="fdac7-571">The <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view.</span></span> <span data-ttu-id="fdac7-572">으로 표현 되는 기능에 대 한 합니다 <xref:System.Web.UI.DataSourceSelectArguments> 개체 및 데이터 원본 뷰를 지원 하지 않습니다는 <xref:System.NotSupportedException> 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-572">For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-573">데이터 소스에서 선택된 <paramref name="capability" />를 활성화하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-573">The data source does not have the selected <paramref name="capability" /> enabled.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdac7-574">페이지가 서버에 포스트백된 이후에 발생한 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 대한 뷰 상태의 변경 사항을 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-574">Saves the changes to the view state for the  <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control since the time that the page was posted back to the server.</span></span></summary>
        <returns><span data-ttu-id="fdac7-575"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 뷰 상태의 변경 사항이 포함된 개체를 반환하고, 그렇지 않으면 개체와 연결된 뷰 상태가 없는 경우에는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-575">The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-576"><xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> 메서드는 주로 컨트롤 개발자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-576">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method is primarily used by control developers.</span></span>  
  
 <span data-ttu-id="fdac7-577">뷰 상태는 서버 컨트롤에 대 한 속성 값의 누적 된 것입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-577">View state is the accumulation of the values of the properties for a server control.</span></span> <span data-ttu-id="fdac7-578">이러한 값에 자동으로 배치 되는 <xref:System.Web.UI.Control.ViewState%2A> 인스턴스인 서버 컨트롤에 대 한 속성의는 <xref:System.Web.UI.StateBag> 클래스.</span><span class="sxs-lookup"><span data-stu-id="fdac7-578">These values are automatically placed in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class.</span></span> <span data-ttu-id="fdac7-579"><xref:System.Web.UI.Control.ViewState%2A> 저장 상태를 서버 컨트롤 주기의 단계 후 서버 컨트롤은 문자열 개체로 유지 한 다음에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-579">The <xref:System.Web.UI.Control.ViewState%2A> value for the server control is then persisted to a string object after the save state stage of the server control life cycle.</span></span>  
  
 <span data-ttu-id="fdac7-580">HTML에 저장 된 변수로 저장 상태를 서버 컨트롤 주기의 단계 후에 유지 되는 문자열 개체 클라이언트에 반환 뷰 상태가 저장 되 면 `Hidden` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-580">When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML `Hidden` element.</span></span> <span data-ttu-id="fdac7-581">사용자 지정 서버 컨트롤을 만들 때 재정의 하 여 효율성을 높일 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> 메서드 및 수정 된 `ViewState` 서버 컨트롤에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-581">When you author custom server controls, you can improve efficiency by overriding the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method and modifying the `ViewState` property for your server control.</span></span> <span data-ttu-id="fdac7-582">자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-582">For more information, see [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="fdac7-583">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-583">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> used to request operations on the data beyond basic data retrieval.</span></span></param>
        <summary><span data-ttu-id="fdac7-584"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> 컬렉션에 있는 매개 변수를 사용하여 내부 데이터베이스에서 데이터를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-584">Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="fdac7-585">데이터 행의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-585">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-586"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 전달 하는 메서드를 `selectArgs` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-586">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method, passing the `selectArgs` parameter.</span></span>  
  
 <span data-ttu-id="fdac7-587"><xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 메서드가 반환 되는 <xref:System.Data.DataView> 개체, 경우를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성이 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 하거나 값을 반환 합니다를 <xref:System.Data.IDataReader> 개체, 경우를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성는 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값.</span><span class="sxs-lookup"><span data-stu-id="fdac7-587">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value or it returns a <xref:System.Data.IDataReader> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value.</span></span> <span data-ttu-id="fdac7-588">닫기는 <xref:System.Data.IDataReader> 데이터 읽기를 마쳤으면 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-588">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-589"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드에 전달된 <paramref name="selectArgs" />는 검색된 데이터를 페이징 또는 정렬할 수 있도록 데이터 검색 중에 데이터 소스가 일부 추가 작업을 수행해야 하지만 데이터 소스 컨트롤이 필요한 기능을 지원하지 않음을 나타내는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-589">The <paramref name="selectArgs" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-590"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-590">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-591"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 개체에서 내부 데이터베이스의 데이터를 검색하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-591">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to retrieve data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="fdac7-592"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />에서 데이터를 검색하는 데 사용하는 SQL 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-592">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to retrieve data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-593">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-593">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="fdac7-594">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-594">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="fdac7-595">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="fdac7-595">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="fdac7-596">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-596">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="fdac7-597">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-597">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="fdac7-598"><xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fdac7-598">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdac7-599">보다 안전한 SQL 문 보다 저장된 프로시저를 사용 하는 것은 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-599">It is more secure to use a stored procedure than a SQL statement for the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property.</span></span>  
  
 <span data-ttu-id="fdac7-600">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-600">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-601">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-601">This section contains two code examples.</span></span> <span data-ttu-id="fdac7-602">첫 번째 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Microsoft SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 기본 SQL 쿼리 텍스트를 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="fdac7-602">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-603">두 번째 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트에 표시 하는 SQL Server 데이터베이스에서 데이터를 검색 하는 저장된 프로시저의 이름으로는 <xref:System.Web.UI.WebControls.DropDownList>합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-603">The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 <span data-ttu-id="fdac7-604">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 기본 SQL 쿼리 텍스트를 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-604">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-605">합니다 <xref:System.Web.UI.WebControls.Button> 하 고 <xref:System.Web.UI.WebControls.TextBox> 컨트롤에서 선택한 사용자에 대 한 주소를 업데이트 하기 위한 간단한 인터페이스로 제공 됩니다는 <xref:System.Web.UI.WebControls.DropDownList>합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-605">The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 <span data-ttu-id="fdac7-606">다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트에 표시 하는 SQL Server 데이터베이스에서 데이터를 검색 하는 저장된 프로시저의 이름으로를 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-606">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="fdac7-607"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 수 저장된 프로시저의 이름 또는 SQL 쿼리를 데이터 원본에서 저장된 프로시저를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-607">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-608"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> 속성의 텍스트가 SQL 쿼리와 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-608">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property is a SQL query or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="fdac7-609"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-609">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="fdac7-610">기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-610">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-611">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-611">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-612">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 저장된 프로시저의 이름으로는 텍스트 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 속성을는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Microsoft SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 값을 <xref:System.Web.UI.WebControls.DropDownList>입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-612">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fdac7-613">선택한 값이 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-613">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-614">데이터 검색 작업이 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-614">Occurs when a data retrieval operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-615">처리는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> 의 값을 검사 하는 이벤트 데이터 검색 작업이 완료 된 후 매개 변수를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-615">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> event to examine the values of output parameters after a data retrieval operation has completed.</span></span> <span data-ttu-id="fdac7-616">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-616">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="fdac7-617">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-617">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-618">데이터 검색 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-618">Occurs before a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-619">처리를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 검색 수행 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-619">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the data retrieval operation.</span></span>  
  
 <span data-ttu-id="fdac7-620">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-620">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-621"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-621">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="fdac7-622"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-622">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-623">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-623">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="fdac7-624">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> 컬렉션 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-624">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection might be important.</span></span> <span data-ttu-id="fdac7-625">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-625">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="fdac7-626"><xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-626">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="fdac7-627">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-627">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-628">다음 코드 예제에서는 설정 하 여 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL 쿼리에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-628">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query.</span></span> <span data-ttu-id="fdac7-629">SQL 쿼리가 매개 변수화 된 및의 자리 표시자를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 일치 하는 <xref:System.Web.UI.WebControls.ControlParameter> 에 추가 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-629">The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="fdac7-630">이러한 방식으로 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에는 <xref:System.Web.UI.WebControls.ControlParameter> 바인딩된, 역할에 대 한 필터에 표시 되는 <xref:System.Web.UI.WebControls.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-630">In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdac7-631">매개 변수는 WHERE 절을 사용 하기 때문에 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 이 코드 예제는 속성은 기능적으로 모두 사용 하는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-631">Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-632">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-632">Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></summary>
        <value><span data-ttu-id="fdac7-633">저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-633">The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-634"><xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성이 확인에 포함 된 경우 SQL 명령 즉만 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성은 저장된 프로시저의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-634">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure.</span></span> <span data-ttu-id="fdac7-635">이 경우 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성을 설정 하면 저장된 프로시저의 결과 정렬 하는 데 사용 되는 매개 변수의 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-635">In this case, if the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.</span></span>  
  
 <span data-ttu-id="fdac7-636">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> 속성을 설정 하면 앞에 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-636">If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property.</span></span>  
  
 <span data-ttu-id="fdac7-637">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-637">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-638">이 멤버에 대한 설명은 <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fdac7-638">For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</span></span></summary>
        <value><span data-ttu-id="fdac7-639">데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-639"><see langword="true" />, if the data source view is marked to save its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-640">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fdac7-640">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fdac7-641">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 캐스팅 된는 <xref:System.Web.UI.IStateManager> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-641">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="fdac7-642">복원할 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 상태를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-642">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</span></span></param>
        <summary><span data-ttu-id="fdac7-643">이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fdac7-643">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-644">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fdac7-644">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fdac7-645">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 캐스팅 된는 <xref:System.Web.UI.IStateManager> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-645">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdac7-646">이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IStateManager.SaveViewState" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fdac7-646">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</span></span></summary>
        <returns><span data-ttu-id="fdac7-647"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 뷰 상태의 변경 사항이 포함된 개체를 반환하고, 그렇지 않으면 개체와 연결된 뷰 상태가 없는 경우에는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-647">The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-648">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fdac7-648">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fdac7-649">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 캐스팅 된는 <xref:System.Web.UI.IStateManager> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-649">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdac7-650">이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IStateManager.TrackViewState" />를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fdac7-650">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-651">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="fdac7-651">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="fdac7-652">사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView> 캐스팅 된는 <xref:System.Web.UI.IStateManager> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-652">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdac7-653"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 개체가 해당 뷰 상태의 변경 사항을 추적하게 되어 이러한 변경 사항이 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장되며 같은 페이지에서 발생하는 여러 요청에 대해 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-653">Causes the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object to track changes to its view state so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control and persisted across requests for the same page.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="fdac7-654">업데이트 데이터베이스 작업을 수행하기 위해 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용할 기본 키의 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-654">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="fdac7-655">쿼리에 연결된 키가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-655">If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="values"><span data-ttu-id="fdac7-656">업데이트 데이터베이스 작업을 수행하기 위해 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용할 값의 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-656">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="fdac7-657">쿼리에 연결된 매개 변수가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-657">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="oldValues"><span data-ttu-id="fdac7-658">데이터베이스의 원래 값을 나타내는 <see cref="T:System.Collections.IDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-658">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database.</span></span> <span data-ttu-id="fdac7-659">쿼리에 연결된 매개 변수가 없거나 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />가 매개 변수가 있는 SQL 쿼리가 아닌 경우 <see langword="null" />을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-659">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fdac7-660"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 문자열, <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> 컬렉션에 지정된 매개 변수, 지정된 <paramref name="keys" />, <paramref name="values" /> 및 <paramref name="oldValues" /> 컬렉션의 값을 사용하여 업데이트 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-660">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="fdac7-661">내부 데이터베이스에서 업데이트되는 행 수를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-661">A value that represents the number of rows updated in the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-662"><xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> 전달 하는 메서드는 `keys`, `values`, 및 `oldValues` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="fdac7-662">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method, passing the `keys`, `values`, and `oldValues` parameters.</span></span> <span data-ttu-id="fdac7-663">자세한 내용은 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fdac7-663">For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-664">다음 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-664">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="fdac7-665">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 매개 변수가 있는 SQL 문 및 두 개의 속성은 <xref:System.Web.UI.WebControls.ControlParameter> 매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-665">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="fdac7-666">경우는 **제출** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 호출 하려는 이벤트가 처리 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> 메서드 명시적으로.</span><span class="sxs-lookup"><span data-stu-id="fdac7-666">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdac7-667"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-667">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fdac7-668"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> 속성은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-668">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-669"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 개체에서 내부 데이터베이스의 데이터를 업데이트하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-669">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to update data in the underlying database.</span></span></summary>
        <value><span data-ttu-id="fdac7-670"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />에서 데이터를 업데이트하는 데 사용하는 SQL 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-670">A SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to update data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-671">데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-671">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="fdac7-672">SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-672">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="fdac7-673">예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`.</span><span class="sxs-lookup"><span data-stu-id="fdac7-673">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="fdac7-674">그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-674">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="fdac7-675">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-675">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="fdac7-676"><xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.</span><span class="sxs-lookup"><span data-stu-id="fdac7-676">The <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="fdac7-677">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-677">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-678">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-678">This section contains two code examples.</span></span> <span data-ttu-id="fdac7-679">첫 번째 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 Microsoft SQL Server 데이터베이스에서 데이터를 제어 및 업데이트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="fdac7-679">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-680">두 번째 코드 예제에서는 사용 하 여 ODBC 데이터베이스의 데이터를 업데이트 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-680">The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="fdac7-681">다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 SQL Server 데이터베이스에서 데이터를 제어 및 업데이트를 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-681">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-682"><xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 채웁니다.를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 유추에서 매개 변수 컬렉션을를 <xref:System.Web.UI.WebControls.BoundField> 개체 및 호출 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> 메서드 때를 **업데이트** 링크를 편집할 수 있는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-682">The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected.</span></span> <span data-ttu-id="fdac7-683">이 예제에서는 또한 일부 사후 처리-레코드가 업데이트 될 전자 메일 메시지 알림이 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-683">This example also includes some post-processing—after a record is updated, an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 <span data-ttu-id="fdac7-684">앞의 코드 예제와 기능적으로 동일 인 다음 코드 예제를 사용 하 여 ODBC 데이터베이스의 데이터를 업데이트 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-684">The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-685"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> ODBC 용 ADO.NET 공급자 속성을 <xref:System.Data.Odbc?displayProperty=nameWithType>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성은 ODBC 데이터 원본 이름 (DSN)의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-685">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-686"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-686">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="fdac7-687"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-687">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="fdac7-688">기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-688">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-689">값을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> 속성은 뷰 상태에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-689">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fdac7-690">선택한 값이 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="fdac7-690">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-691">업데이트 작업이 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-691">Occurs when an update operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-692">처리는 <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> 업데이트 작업이 완료 된 후의 값을 확인 하려면 출력 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-692">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event to examine the values of output parameters after an update operation has completed.</span></span> <span data-ttu-id="fdac7-693">출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-693">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="fdac7-694">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-694">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-695">다음 코드 예제에 표시의 ODBC 데이터베이스에서 검색 되는 데이터를 업데이트 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-695">The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="fdac7-696">레코드를 성공적으로 업데이트 되 면를 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 알림 전자 메일 메시지가 전송 되는 후 처리 단계를 수행 하는 이벤트 처리기 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-696">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-697"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-697">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="fdac7-698"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-698">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-699">경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 있는 매개 변수 자리 표시자에 해당 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-699">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders that are in the SQL string.</span></span>  
  
 <span data-ttu-id="fdac7-700">매개 변수 이름은 영향을 받을 수는 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성 특히 이름을 기본 키를 식별 하는 경우 키와 같은 지정 된 사용 하 여는 `DataKeyNames` 속성 또는 삭제에 및 업데이트 시나리오 여기서는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성는 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 및 집합이 `oldValues` 해당 데이터 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-700">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, and a set of `oldValues` are passed to the corresponding data method.</span></span> <span data-ttu-id="fdac7-701">형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 `oldValues` 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-701">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="fdac7-702">ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> 컬렉션 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-702">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection might be important.</span></span> <span data-ttu-id="fdac7-703">합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-703">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="fdac7-704"><xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-704">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="fdac7-705">매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-705">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-706">다음 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-706">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="fdac7-707">합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 매개 변수가 있는 SQL 문 및 두 개의 속성은 <xref:System.Web.UI.WebControls.ControlParameter> 매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-707">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="fdac7-708">경우는 **제출** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 호출 하려는 이벤트가 처리 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 명시적으로.</span><span class="sxs-lookup"><span data-stu-id="fdac7-708">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdac7-709">업데이트 작업 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-709">Occurs before an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdac7-710">처리를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 응용 프로그램에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 업데이트 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-710">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.</span></span>  
  
 <span data-ttu-id="fdac7-711">데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-711">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="fdac7-712">직접 호출 하 여 작업을 취소할 수 없습니다 따라서를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체.</span><span class="sxs-lookup"><span data-stu-id="fdac7-712">Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="fdac7-713">설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-713">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="fdac7-714">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-714">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdac7-715">다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-715">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="fdac7-716">예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하도록 컨트롤을 합니다.</span><span class="sxs-lookup"><span data-stu-id="fdac7-716">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>