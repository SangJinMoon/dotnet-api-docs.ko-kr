<Type Name="ListControl" FullName="System.Web.UI.WebControls.ListControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75a41ccb9fc58b7baacf6767a109feefe6f1a7df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ListControl : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IEditableTextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ListControl extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IEditableTextControl, class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ListControl&#xA;Inherits DataBoundControl&#xA;Implements IEditableTextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListControl abstract : System::Web::UI::WebControls::DataBoundControl, System::Web::UI::IEditableTextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IEditableTextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.WebControls.ListControlDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Items")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>모든 목록 형식 컨트롤의 공용 속성, 메서드 및 이벤트를 정의하는 추상적인 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스는 <xref:System.Web.UI.WebControls.ListControl> 추상 클래스를 직접 만들 수 없습니다. 대신이 클래스는 상속 다른 클래스와 같은 <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.DropDownList>, <xref:System.Web.UI.WebControls.ListBox>, 및 <xref:System.Web.UI.WebControls.RadioButtonList> 클래스, 기본 공통 기능을 제공 합니다.  
  
 속성은 <xref:System.Web.UI.WebControls.ListControl> 클래스 목록 컨트롤을 채우는 데이터의 원본을 지정할 수 있도록 메시지를 표시 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성 목록 컨트롤에 바인딩할 데이터 원본을 지정할 수 있습니다. 데이터 원본에 여러 개의 테이블을 사용 하 여는 <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A> 속성을 통해 사용할 테이블을 지정 합니다. 다른 필드를 데이터 소스에 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 및 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 설정 하 여 목록 컨트롤에서 항목의 속성은 <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> 및 <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> 속성을 각각. 설정 하 여 서식이 지정 하 여 목록 컨트롤의 각 항목 수에 대해 표시 되는 텍스트는 <xref:System.Web.UI.WebControls.ListControl.DataTextFormatString%2A> 속성입니다.  
  
 목록 컨트롤에 표시 된 모든 항목에 저장 됩니다는 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 컬렉션입니다. 프로그래밍 방식으로 지정 하거나 목록 컨트롤에서 선택한 항목의 인덱스를 사용 하 여 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> 속성입니다. 선택한 항목의 속성을 사용 하 여 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.ListControl.SelectedItem%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.ListControl> 클래스를 제공는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> 목록 컨트롤에서 선택한 서버에 게시할 때마다 변경 될 때 발생 하는 이벤트입니다. 이 옵션을 사용 하면이 이벤트에 대 한 사용자 지정 처리기를 제공할 수 있습니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 <xref:System.Web.UI.WebControls.ListControl> 클래스가 구현 하는 <xref:System.Web.UI.IEditableTextControl> 다른 컨트롤의 템플릿 모드에서 사용할 수 있도록 목록 형식 컨트롤을 파생 하는 인터페이스입니다.  
  
   
  
## Examples  
 항목을 선택 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 항목 텍스트 상자에 있으면 항목을 선택 하 고 메시지가 선택된 된 항목의 이름을 나타내는 메시지가 표시 됩니다. 항목이 없는 경우 항목이 선택 되어 있으며는 항목을 찾을 수 없다는 메시지가 표시 됩니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[ListControlSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlSelectedValue/CS/listcontrolselectedvaluecs.aspx#1)]
 [!code-aspx-vb[ListControlSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlSelectedValue/VB/listcontrolselectedvaluevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
    <altmember cref="T:System.Web.UI.WebControls.DropDownList" />
    <altmember cref="T:System.Web.UI.WebControls.ListBox" />
    <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 하는 방법을 프로그래밍 방식으로  
  
 만들기는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 이 예제에서는 사용 된 <xref:System.Web.UI.WebControls.PlaceHolder> 컨트롤에 대 한 컨테이너로 <xref:System.Web.UI.WebControls.ListBox>합니다.  
  
 [!code-aspx-csharp[ListControlctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlctor/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ListControlctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlctor/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 HTML 콘텐츠를 렌더링하기 위한 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</param>
        <summary>렌더링할 HTML 특성 및 스타일을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 적용합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.AddAttributesToRender%2A> 메서드 주로 컨트롤 개발자가 추가 특성을 삽입 하는 데 사용 되 고 스타일을 <xref:System.Web.UI.HtmlTextWriter> 에서 파생 된 컨트롤에 대 한 출력 스트림에 <xref:System.Web.UI.WebControls.ListControl> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.ListControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> 메서드 재정의 <see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> 메서드.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AppendDataBoundItems">
      <MemberSignature Language="C#" Value="public virtual bool AppendDataBoundItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendDataBoundItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.AppendDataBoundItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppendDataBoundItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AppendDataBoundItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 전에 목록 항목이 지워지는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          데이터 바인딩 전에 목록 항목이 지워지지 않으면 <see langword="true" />이고, 데이터 바인딩이 수행되기 전에 항목 컬렉션이 지워지면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.AppendDataBoundItems%2A> 속성 항목을 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.ListControl> 데이터 바인딩이 발생 하기 전에 개체입니다. 데이터 바인딩, 후 items 컬렉션에는 데이터 원본의 항목와 이전에 추가한 항목 모두 포함 되어 있습니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 데이터 바인딩된 항목 및 데이터 바인딩된에 없는 항목을 모두 포함 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 에 <xref:System.Web.UI.Control.Load> 에 대 한 이벤트는 <xref:System.Web.UI.Page>, 한 항목에 추가 됩니다는 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 컬렉션 및 <xref:System.Web.UI.WebControls.ListControl.AppendDataBoundItems%2A> 속성이로 설정 된 `true`합니다. 그런 다음 <xref:System.Web.UI.WebControls.ListBox> 컨트롤이 바인딩되는 <xref:System.Data.DataTable> 제어 합니다. 그 결과 <xref:System.Web.UI.WebControls.ListBox> 컨트롤에 데이터 바인딩된 팀과 개별적으로 추가 된 항목을 모두 포함 되어 있습니다.  
  
 [!code-aspx-csharp[ListControlAppendDataBoundItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlAppendDataBoundItems/CS/AppendItemsCs.aspx#1)]
 [!code-aspx-vb[ListControlAppendDataBoundItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlAppendDataBoundItems/VB/AppendItemsVb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBack">
      <MemberSignature Language="C#" Value="public virtual bool AutoPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.AutoPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoPostBack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 목록 선택을 변경할 때 해당 내용을 서버에 자동으로 게시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          사용자가 목록 선택을 변경할 때마다 해당 내용이 서버에 자동으로 게시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `true` 서버는 선택 영역 캡처하려면 필요 합니다. 예를 들어 웹 페이지에 있는 다른 컨트롤 목록 컨트롤에서 사용자의 선택에 따라 자동으로 채울 수 있습니다.  
  
 목록에서 사용자의 선택에 따라 웹 페이지에 있는 다른 컨트롤의 자동 채우기를 허용 하도록이 속성을 사용할 수 있습니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용할 수 있도록 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 에 대 한는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 [!code-aspx-csharp[ListControlAutoPostBack#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlAutoPostBack/CS/ListControlAutoPostBackcs.aspx#1)]
 [!code-aspx-vb[ListControlAutoPostBack#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlAutoPostBack/VB/ListControlAutoPostBackvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 클래스에서 파생된 컨트롤을 클릭할 때 유효성 검사를 수행할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="true" /> 컨트롤을 클릭할 때 유효성 검사가 수행되면 <see cref="T:System.Web.UI.WebControls.ListControl" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> 속성 유효성 검사를 수행할지 여부를 확인 하는 경우는 <xref:System.Web.UI.WebControls.ListControl> 컨트롤을 클릭 합니다. 페이지 유효성 검사를 모두 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 하는 페이지에서 유효성 검사와 연결 된 입력된 컨트롤을 제어 하는지 여부를 결정 합니다.  
  
 기본적으로에서 파생 된 컨트롤을 클릭 하 여 <xref:System.Web.UI.WebControls.ListControl> 클래스 페이지 유효성 검사가 발생 하지 않습니다. 페이지 유효성 검사를 수행할 때 된 컨트롤을에서 파생 된는 <xref:System.Web.UI.WebControls.ListControl> 설정을 클래스 클릭 하면는 <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> 속성을 `true`합니다.  
  
 때의 값은 <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> 속성이로 설정 되어 `true`, 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> 속성을 유효성 검사 그룹의 이름을 지정 하는 <xref:System.Web.UI.WebControls.ListControl> 이 컨트롤로 유효성 검사 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public virtual void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>목록 선택을 지우고 모든 항목의 <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> 속성을 false로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 선택 된 항목이 되도록 컨트롤을 다시 설정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>목록 항목의 텍스트 내용을 제공하는 데이터 원본 필드를 가져오거나 설정합니다.</summary>
        <value>목록 항목의 텍스트 내용을 제공하는 데이터 원본 필드입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 필드를 지정 하려면이 속성을 사용 하는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성을 목록 컨트롤의 목록 항목으로 표시 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정 하는 방법을 <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> 에 대 한는 <xref:System.Web.UI.WebControls.RadioButtonList> 제어 합니다. <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> 에 표시 되는 텍스트는 <xref:System.Web.UI.WebControls.RadioButtonList>합니다.  
  
 [!code-aspx-csharp[ListControlDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-aspx-vb[ListControlDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>목록 컨트롤에 바인딩된 데이터를 표시하는 방법을 제어하는 데 사용되는 서식 지정 문자열을 가져오거나 설정합니다.</summary>
        <value>컨트롤에 바인딩된 데이터의 서식 지정 문자열입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListControl.DataTextFormatString%2A> 속성을 사용자 지정 표시 형식을 목록 컨트롤에서 항목을 제공 합니다.  
  
 데이터 형식 문자열 형태로 콜론으로 구분 하는 두 부분으로 구성 됩니다 { `A` : `Bxx` }. 예를 들어 형식 문자열은 {0: f2} 소수 자릿수가 두 자리인는 고정된 소수점 숫자를 표시 하도록 셀을 서식을 합니다.  
  
> [!NOTE]
>  전체 문자열 형식 문자열 및 리터럴 문자열이 아니라 임을 나타내기 위해 중괄호로 묶어야 합니다. 중괄호 밖에 모든 텍스트는 리터럴 텍스트로 표시 됩니다.  
  
 값의 콜론 앞 (`A` 예:에서)는 0부터 시작 하는 매개 변수 목록의 매개 변수 인덱스를 지정 합니다.  
  
> [!NOTE]
>  각 셀에 값을 하나만 있기 때문에이 값을 0으로 설정할만 있습니다.  
  
 콜론 문자 (`B` 예:에서)에 값 표시 형식을 지정 합니다. 다음 표에서 일반 형식을 나열합니다.  
  
|형식 문자|설명|  
|----------------------|-----------------|  
|`C`|통화 형식으로 숫자 값을 표시 합니다.|  
|`D`|10 진수 형식의 숫자 값을 표시 합니다.|  
|`E`|Scientific (지 수)의 숫자 값을 표시합니다.|  
|`F`|고정된 형식으로 숫자 값을 표시 합니다.|  
|`G`|숫자 값을 표시 일반적 서식을 지정합니다.|  
|`N`|숫자의 숫자 값을 표시합니다.|  
|`X`|16 진수 형식의 숫자 값을 표시 합니다.|  
  
> [!NOTE]
>  형식 문자를 제외 하 고 구분 하지 않습니다. `X`, 지정 된 경우에서 16 진수 문자를 표시 하는 합니다.  
  
 형식 문자 다음 값 (`xx` 예:에서) 유효 자릿수 또는 소수 자릿수의 수를 지정 합니다.  
  
 다음 표에서 형식 문자열과 결과의 예를 보여 줍니다. 표준 영어 설정 가정합니다.  
  
|숫자 값|형식 문자열|결과|  
|-------------------|-------------------|------------|  
|12345.6789|"{0:C}"|$12,345.68|  
|-12345.6789|"{0:C}"|($12,345.68)|  
|12345|"{0:D}"|12345|  
|12345|"{0:D8}"|00012345|  
|12345.6789|"{0:E}"|1234568E+004|  
|12345.6789|"{0:E10}"|1.2345678900E+004|  
|12345.6789|"{0:F}"|12345.68|  
|12345.6789|"{0:F0}"|12346|  
|12345.6789|"{0:G}"|12345.6789|  
|123456789|"{0:G7}"|1.234568E8|  
|12345.6789|"{0:N}"|12,345.68|  
|123456789|"{0:N4}"|123,456,789.0000|  
|12345.6789|"총: {0: c}"|총 공간: $ 12345.68|  
  
 문자열 형식 지정에 대한 자세한 내용은 [형식 서식 지정](~/docs/standard/base-types/formatting-types.md)을 참조하세요.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public virtual string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.DataValueField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataValueField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataValueField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 목록 항목의 값을 제공하는 데이터 원본 필드를 가져오거나 설정합니다.</summary>
        <value>각 목록 항목의 값을 제공하는 데이터 원본 필드입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 목록 컨트롤에서 각 항목의 값이 포함 된 필드를 지정 하려면이 속성을 사용 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정 하는 방법을 <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> 에 대 한는 <xref:System.Web.UI.WebControls.RadioButtonList> 제어 합니다. <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> 의 각 항목에 대 한 값이 고 <xref:System.Web.UI.WebControls.RadioButtonList>합니다.  
  
 [!code-aspx-csharp[ListControlDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-aspx-vb[ListControlDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListItemCollection ^ Items { System::Web::UI::WebControls::ListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ListItemsCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>목록 컨트롤에 있는 항목의 컬렉션을 가져옵니다.</summary>
        <value>목록 내의 항목입니다. 기본값은 빈 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 목록 컨트롤에서 항목의 속성을 가져올 수 있습니다. 목록 컨트롤에서 선택한 항목을 확인 하려면이 속성을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 속성에서 선택한 항목을 확인 하는 <xref:System.Web.UI.WebControls.CheckBoxList> 제어 합니다.  
  
 [!code-aspx-csharp[ListControlItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlItems/CS/ListControlItemscs.aspx#1)]
 [!code-aspx-vb[ListControlItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlItems/VB/ListControlItemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 파생 컨트롤의 상태를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.LoadViewState%2A> 메서드는 이전에 저장 된 뷰 상태를 로드 하는 데 사용 되는 <xref:System.Web.UI.WebControls.ListControl> -컨트롤을 파생 합니다.  
  
> [!NOTE]
>  확장할 때 주로 컨트롤 개발자가이 메서드는는 <xref:System.Web.UI.WebControls.ListControl> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.DataBinding" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 상태 보기 및 렌더링 콘텐츠를 저장 하기 전에 필요한 모든 사전 렌더링 단계를 수행 하는 서버 컨트롤을 알립니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.ListControl> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.ListControl.OnPreRender%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.ListControl.OnPreRender(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListControl.SelectedIndexChanged" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> 서버에 게시 되는 사이 목록 컨트롤의 선택이 변경 될 때 이벤트가 발생 합니다.  
  
> [!NOTE]
>  목록 컨트롤 제대로 작동 하려면이 이벤트에 대 한 서버에 게시 하는 동안 일부 값을 유지 해야 합니다. 목록 컨트롤에 대 한 뷰 상태는 사용 해야 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 예제에서는 지정 하 고 코딩에 대 한 처리기는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> 사용자가 선택한 항목을 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[ListControlDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-aspx-vb[ListControlDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListControl.SelectedIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListControl.TextChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> 메서드에서 파생 된 컨트롤에서 호출 됩니다는 <xref:System.Web.UI.WebControls.ListControl> 를 발생 시키는 클래스는 <xref:System.Web.UI.WebControls.ListControl.TextChanged> 이벤트입니다. 일반적으로 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> 메서드 컨트롤 개발자가 확장할 때 사용 되는 <xref:System.Web.UI.WebControls.ListControl> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> 파생된 클래스에서 메서드를 호출 해야는 <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListControl.TextChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (dataSource As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" />입니다.</param>
        <summary>지정된 데이터 원본을 <see cref="T:System.Web.UI.WebControls.ListControl" /> 클래스에서 파생된 컨트롤에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.PerformDataBinding%2A> 에서 파생 된 컨트롤에서 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.ListControl> 지정된 된 데이터 소스 컨트롤에 바인딩하는 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.ListControl.SelectedIndex" />의 캐시된 값이 범위를 벗어난 경우</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.WebControls.ListControl.SelectedIndex" /> 및 <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" />의 캐시된 값이 일치하지 않는 경우</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformSelect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결된 데이터 원본에서 데이터를 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.PerformSelect%2A> 메서드 호출에서 <xref:System.Web.UI.WebControls.ListControl.PerformDataBinding%2A> 데이터 바인딩된 컨트롤의 요소에 데이터를 바인딩할 데이터를 검색 한 후 메서드. 자세한 내용은 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">웹 페이지에 콘텐츠를 쓰는 데 사용되는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 컨트롤의 항목을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListControl.RenderContents%2A> 에 항목을 렌더링 하는 메서드는 <xref:System.Web.UI.WebControls.ListControl> 클라이언트를 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 파생 컨트롤의 현재 뷰 상태와 컨트롤에 포함된 항목을 저장합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 컨트롤의 저장된 상태가 들어 있는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.SaveViewState%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.ListControl> 컨트롤을 컨트롤의 상태를 저장 합니다.  
  
> [!NOTE]
>  확장할 때 주로 컨트롤 개발자가이 메서드는는 <xref:System.Web.UI.WebControls.ListControl> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>목록에서 선택한 항목의 최저 서수 인덱스를 가져오거나 설정합니다.</summary>
        <value>목록에서 선택한 항목의 최저 서수 인덱스입니다. 기본값은 -1이며, 이는 선택한 항목이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 목록 컨트롤 선택 하나만 허용 하는 경우 목록에서 현재 선택 된 항목의 인덱스를 확인 하려면이 속성을 사용 합니다. 목록 컨트롤에서 다중 선택의 지 원하는 경우이 속성을 사용 하 여 선택한 항목의 가장 낮은 인덱스를 확인 합니다.  
  
 값은 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> 속성 포스트백에 구체적으로 저장 되지 않습니다. 사용 하 여 포스트백에 복원 되는 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성입니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성은 다시 게시 될 4는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> 의 인덱스에 속성이 설정 되어는 <xref:System.Web.UI.WebControls.ListItem> 있는 개체는 <xref:System.Web.UI.WebControls.ListItem.Value%2A> 4의 속성입니다. 개 이상의 <xref:System.Web.UI.WebControls.ListItem> 개체에는 <xref:System.Web.UI.WebControls.ListItem.Value%2A> 4, 첫 번째 항목의 속성은 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 컬렉션을 선택 합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> 에서 선택한 항목의 가장 낮은 인덱스를 결정 하는 <xref:System.Web.UI.WebControls.CheckBoxList>합니다.  
  
 [!code-aspx-csharp[ListControlSelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlSelectedIndex/CS/ListControlSelectedIndexcs.aspx#1)]
 [!code-aspx-vb[ListControlSelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlSelectedIndex/VB/ListControlSelectedIndexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">목록을 렌더링할 때 인덱스가 -1 미만이거나 목록에 있는 항목의 수보다 크거나 같게 설정된 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListControl.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 게시하는 간격 동안 목록 컨트롤의 선택이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> 서버에 게시 되는 사이 목록 컨트롤의 선택이 변경 될 때 이벤트가 발생 합니다.  
  
> [!NOTE]
>  목록 컨트롤 제대로 작동 하려면이 이벤트에 대 한 서버에 게시 하는 동안 일부 값을 유지 해야 합니다. 목록 컨트롤에 대 한 뷰 상태는 사용 해야 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정 하 고 코딩에 대 한 처리기는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> 사용자가 선택한 항목을 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[ListControlDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-aspx-vb[ListControlDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As ListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListItem ^ SelectedItem { System::Web::UI::WebControls::ListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>목록 컨트롤에서 선택한 최저 인덱스 항목을 가져옵니다.</summary>
        <value>목록 컨트롤에서 선택한 최저 인덱스 항목입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 목록 컨트롤에는 하나의 선택 항목만 허용 하는 경우이 속성을 사용 하 여 선택한 항목의 개별 속성을 가져올 수 있습니다. 목록 컨트롤에서 다중 선택을 허용 하는 경우이 속성을 사용 하 여 목록 컨트롤에서 선택한 최저 인덱스 항목의 속성을 가져올 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.ListControl.SelectedItem%2A> 에서 현재 선택한 항목의 개별 속성을 가져오지는 <xref:System.Web.UI.WebControls.RadioButtonList> 해당 항목 및 해당 값을 표시 하 합니다.  
  
 [!code-aspx-csharp[ListControlDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-aspx-vb[ListControlDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public virtual string SelectedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>목록 컨트롤에서 선택한 항목의 값을 가져오거나, 지정된 값이 포함된 목록 컨트롤에서 항목을 선택합니다.</summary>
        <value>목록 컨트롤에서 선택한 항목의 값입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 반환 된 <xref:System.Web.UI.WebControls.ListItem.Value%2A> 속성이 선택 된 <xref:System.Web.UI.WebControls.ListItem>합니다. <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성은 일반적으로 목록 컨트롤에서 선택한 항목의 값을 결정 하는 데 사용 됩니다. 여러 항목을 선택한 경우 선택한 최저 인덱스 항목의 값이 반환 됩니다. 선택 된 항목이 있는 경우 빈 문자열 ("")이 반환 됩니다.  
  
 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성 목록 컨트롤에서 항목의 값으로 설정 하 여 항목을 선택 하려면 사용할 수도 있습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 선택한 값이 사용 가능한 값의 목록에서 포스트백을 수행 하는 경우는 <xref:System.ArgumentOutOfRangeException> 예외가 throw 됩니다. 다음 예제에서는 포스트백에서 발생 하기 전에 잘못 된 값을 catch 하는 방법을 보여 줍니다.  
  
```vb  
Me.DropDownList1.Items.Add(New ListItem( Text="Hello", Value="1" ))   
If DropDownList1.Items.FindByValue("2") IsNot Nothing Then   
    Response.Write("Found")   
End If  
```  
  
```csharp  
this.DropDownList1.Items.Add(new ListItem{ Text="Hello", Value="1" });  
if(DropDownList1.Items.FindByValue("2") != null) {  
    Response.Write("Found");  
}  
```  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성에서 항목을 선택 하는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 선택한 항목의 값을 검색 하에이 속성 데도 사용할 수 있습니다를 확인 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[ListControlSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlSelectedValue/CS/listcontrolselectedvaluecs.aspx#1)]
 [!code-aspx-vb[ListControlSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlSelectedValue/VB/listcontrolselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 사용 가능한 값의 목록에 있지 않고 보기 상태 또는 다른 상태가 로드되지 않았습니다. 그리고 포스트백은 수행되었습니다.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="SetPostDataSelection">
      <MemberSignature Language="C#" Value="protected void SetPostDataSelection (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPostDataSelection(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.SetPostDataSelection(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPostDataSelection (selectedIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPostDataSelection(int selectedIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">
          <see cref="P:System.Web.UI.WebControls.ListControl.Items" /> 컬렉션에서 선택한 항목의 인덱스입니다.</param>
        <summary>페이지를 게시한 후 <see cref="T:System.Web.UI.WebControls.ListItem" /> 컨트롤의 <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> 속성을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.SetPostDataSelection%2A> 메서드는에서 선택한 항목을 유지 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListControl> 페이지를 게시 한 후 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.ListControl" /> 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 컨트롤에 대한 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.TagKey%2A> 속성을 사용 하면에서 파생 된 컨트롤에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림을 <xref:System.Web.UI.WebControls.ListControl> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의할 수 있습니다는 <see cref="P:System.Web.UI.WebControls.ListControl.TagKey" /> 속성을 지정 합니다. <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 파생 된 컨트롤에 사용할 값입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 컨트롤의 <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" /> 속성을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" />의 <see cref="T:System.Web.UI.WebControls.ListControl" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.Text%2A> 가져오고 동일한 값을 설정는 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성이 없습니다.  
  
 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성에서 선택한 항목의 값을 확인 하는 일반적은 <xref:System.Web.UI.WebControls.ListControl> 제어 합니다. 선택 된 항목이 있는 경우 빈 문자열 ("")이 반환 됩니다.  
  
 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성에서 항목을 선택 하는 <xref:System.Web.UI.WebControls.ListControl> 항목의 값으로 설정 하 여 제어 합니다. 에 항목이 없는 경우는 <xref:System.Web.UI.WebControls.ListControl> 컨트롤에 지정된 된 값을 포함 한 <xref:System.ArgumentOutOfRangeException?displayProperty=nameWithType> 예외가 throw 됩니다.  
  
 컨트롤 개발자는 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 관련 되지 않은 기능을 지 원하는 속성을는 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListControl.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IEditableTextControl.TextChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.ListControl.Text" /> 및 <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" /> 속성이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.TextChanged> 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.ListControl.Text%2A> 및 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 속성 변경 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> 파생된 클래스에서 메서드를 호출 해야는 <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Text" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 파생 컨트롤에 대한 변경 사항의 추적 및 저장을 시작하는 시작 지점을 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 컨트롤의 뷰 상태의 일환으로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 위치를 표시 하도록 재정의 됩니다.  
  
> [!NOTE]
>  확장할 때 주로 컨트롤 개발자가이 메서드는 <xref:System.Web.UI.WebControls.ListControl>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 클래스에서 파생된 컨트롤이 서버에 다시 게시될 때 유효성 검사가 수행되는 컨트롤 그룹을 가져오거나 설정합니다.</summary>
        <value>파생된 <see cref="T:System.Web.UI.WebControls.ListControl" />이 서버에 다시 게시할 때 유효성 검사가 수행되는 컨트롤 그룹입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효성 검사 그룹을 사용 하는 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다. 각 유효성 검사 그룹 페이지에서 다른 유효성 검사 그룹에서 독립적으로 확인할 수 있습니다. 사용 하 여는 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> 를 유효성 검사 그룹 이름을 지정 하려면 속성에서 파생 된 컨트롤의 <xref:System.Web.UI.WebControls.ListControl> 클래스는 서버에 다시 게시 될 때 유효성 검사가 수행 합니다.  
  
 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> 속성은 적용 경우에만의 값은 <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> 속성이 `true`합니다. 에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> 속성을 지정된 된 그룹의 일부인 유효성 검사 컨트롤은 때 유효성을 검사는 <xref:System.Web.UI.WebControls.ListControl> 컨트롤이 서버에 다시 게시 합니다. 에 대 한 값을 지정 하지 않으면는 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> 속성 및 <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> 속성이 `true`, 페이지에서 유효성 검사 그룹에 할당 되지 않은 모든 유효성 검사 컨트롤에는 컨트롤이 서버에 다시 게시 될 때 유효성이 검사 됩니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
    <Member MemberName="VerifyMultiSelect">
      <MemberSignature Language="C#" Value="protected internal virtual void VerifyMultiSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void VerifyMultiSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.VerifyMultiSelect" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub VerifyMultiSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void VerifyMultiSelect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>목록 컨트롤에서 다중 선택 모드를 지원하는지 여부를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListControl.VerifyMultiSelect%2A> 메서드는 아무 작업도 수행 다중 선택을 지원 되는 경우. 그렇지 않으면 throw 된 <xref:System.Web.HttpException> 예외입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.ListBox.SelectionMode" />이 <see cref="F:System.Web.UI.WebControls.ListSelectionMode.Single" />로 설정됩니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>