<Type Name="ListView" FullName="System.Web.UI.WebControls.ListView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="349e3406e5f4b2130e27b8cd359e919fd19f7b64" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34311508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IDataKeysControl, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IDataBoundControl, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IPageableItemContainer, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IWizardSideBarListControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IDataKeysControl, class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IPageableItemContainer, class System.Web.UI.WebControls.IPersistedSelector, class System.Web.UI.WebControls.IWizardSideBarListControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits DataBoundControl&#xA;Implements IDataBoundControl, IDataBoundListControl, IDataKeysControl, INamingContainer, IPageableItemContainer, IPersistedSelector, IWizardSideBarListControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Web::UI::WebControls::DataBoundControl, System::Web::UI::IDataKeysControl, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IDataBoundControl, System::Web::UI::WebControls::IDataBoundListControl, System::Web::UI::WebControls::IPageableItemContainer, System::Web::UI::WebControls::IPersistedSelector, System::Web::UI::WebControls::IWizardSideBarListControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPageableItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IWizardSideBarListControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자 정의 템플릿을 사용하여 데이터 원본의 값을 표시합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤을 사용하여 레코드를 선택, 정렬, 삭제, 편집 및 삽입할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [템플릿](#templates)  
  
-   [데이터 소스에 바인딩](#binding_to_a_data_source)  
  
-   [데이터 작업](#data_operations)  
  
-   [이벤트](#Events)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 데이터 원본에서 값을 표시 하는 데 사용 합니다. 비슷하도록는 <xref:System.Web.UI.WebControls.GridView> 행 필드 대신 사용자 정의 템플릿을 사용 하 여 데이터를 표시 한다는 제어 합니다. 사용자 지정 템플릿을 만들어 더 유연 데이터가 표시 되는 방식을 제어 합니다.  
  
 소스 코드를 Visual Studio 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=199759)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 다음과 같은 기능을 지원 합니다.  
  
-   와 같은 데이터 소스 컨트롤에 바인딩할 수에 대 한 지원 <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.LinqDataSource>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource>합니다.  
  
-   사용자 지정 템플릿 및 스타일을 통해 모양을 사용자 지정할 수 있습니다.  
  
-   기본 제공 정렬 기능입니다.  
  
-   기본 제공 필드를 업데이트 및 삭제 기능입니다.  
  
-   기본 제공 기능을 삽입 합니다.  
  
-   사용 하 여 페이징 기능에 대 한 지원은 <xref:System.Web.UI.WebControls.DataPager> 제어 합니다.  
  
-   기본 제공 항목 선택 기능입니다.  
  
-   에 대 한 프로그래밍 방식의 액세스는 <xref:System.Web.UI.WebControls.ListView> 개체 모델을 동적으로 속성을 설정, 이벤트를 처리 및 등입니다.  
  
-   여러 키 필드입니다.  
  
 ASP.NET에서 사용할 수 있는 다른 데이터 바인딩된 컨트롤에 대 한 자세한 내용은 [데이터 바인딩된 컨트롤을 웹 서버 컨트롤](http://msdn.microsoft.com/library/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96)합니다.  
  
<a name="templates"></a>   
## <a name="templates"></a>템플릿  
 에 대 한 순서 대로 <xref:System.Web.UI.WebControls.ListView> 콘텐츠 표시를 제어 하 고, 해당 컨트롤의 다른 부분에 대 한 템플릿을 만들어야 합니다. <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 필요 합니다. 다른 모든 템플릿은 선택 사항입니다. <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 속성이 필요 하지 않습니다.  
  
 그러나 컨트롤은 구성 모드에 대 한 템플릿을 만들어야 합니다. 예를 들어는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 레코드 삽입을 지원 해야 하는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 템플릿을 정의 합니다. 다음 표에서에 대해 만들 수 있는 서식 파일은 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
|템플릿 유형|설명|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>|와 같은 컨테이너 개체를 정의 하는 루트 템플릿을 `table`, `div`, 또는 `span` 요소에 정의 된 콘텐츠를 포함 될는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 또는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 템플릿. 또한 포함 될 수 있습니다는 <xref:System.Web.UI.WebControls.DataPager> 개체입니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>|개별 항목에 대해 표시할 수 있는 데이터 바인딩된 콘텐츠를 정의 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>|개별 항목 간의 렌더링할 콘텐츠를 정의 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>|테이블 행과 같은 컨테이너 개체 정의 (`tr`), `div`, 또는 `span` 요소에 정의 된 콘텐츠를 포함 될는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 및 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 템플릿. 지정 된 그룹에 표시 되는 항목의 수는 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성입니다.|  
|<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>|콘텐츠 항목의 그룹을 정의 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>|비어 있는 대해 렌더링할 콘텐츠 정의 때 항목는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 템플릿이 사용 됩니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성이 5로 설정 되어 있고 데이터 소스에서 반환 되는 항목의 총 수는 8, 표시 하는 데이터의 마지막 그룹은 <xref:System.Web.UI.WebControls.ListView> 컨트롤에 지정 된 세 가지 항목이 포함 됩니다는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 템플릿과 두 항목 에 지정 된 대로 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 서식 파일입니다.|  
|<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>|데이터 원본의 데이터 반환 하지 않는 경우 렌더링할 콘텐츠를 정의 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>|다른 항목에서 선택한 항목을 구분 하기 위해 선택한 데이터 항목에 대 한 렌더링할 콘텐츠를 정의 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>|연속 된 항목을 구분 하기 위해 쉽게 수행할 수 있도록 하는 대체 항목에 대해 렌더링할 콘텐츠를 정의 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>|항목을 편집할 때 렌더링할 콘텐츠를 정의 합니다. <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 서식 파일 대신에 렌더링 되는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 편집 중인 데이터 항목에 대 한 서식 파일입니다.|  
|<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>|항목을 삽입할 렌더링할 콘텐츠를 정의 합니다. <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일 대신에 렌더링 되는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 템플릿 처음 또는 끝에 표시 되는 항목에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤입니다. 위치를 지정할 수는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 템플릿을 사용 하 여 렌더링 되는 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 속성의는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.|  
  
 와 같은 서식 파일의 필드의 값을 표시 하려면 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>, 데이터 바인딩 식을 사용 합니다. 데이터 바인딩 식에 대 한 자세한 내용은 참조 [데이터 바인딩 식 개요](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
 입력된 컨트롤에 바인딩하는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 및 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일을 데이터 원본의 필드에 양방향 바인딩 식을 사용할 수 있습니다. 이 통해는 <xref:System.Web.UI.WebControls.ListView> 자동으로 업데이트 하기 위해 입력된 컨트롤의 값을 추출 또는 삽입 작업을 제어 합니다. 양방향 바인딩 식이 입력된 컨트롤에 사용 된 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 를 자동으로 필드의 원래 값을 표시 합니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 [데이터베이스에 바인딩](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다.  
  
<a name="binding_to_a_data_source"></a>   
## <a name="binding-to-a-data-source"></a>데이터 소스에 바인딩  
 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 데이터 소스 제어 (같은 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 또는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어) 또는 구현 하는 데이터 원본 컬렉션에는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스와 같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, 또는 기타 컬렉션 형식. 다음 방법 중 하나를 사용 하 여 바인딩할는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 적절 한 데이터 소스 형식:  
  
-   데이터 소스 제어에 바인딩할 설정는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 <xref:System.Web.UI.Control.ID%2A> 데이터 소스 컨트롤의 값입니다. <xref:System.Web.UI.WebControls.ListView> 컨트롤 자동으로 지정 된 데이터 소스 제어에 바인딩하고 활용할 수 데이터 소스 컨트롤의 정렬, 삽입, 업데이트, 삭제 및 페이징 기능을 수행 하는 기능입니다. 이것은 데이터에 바인딩하는 기본 방법입니다.  
  
-   구현 하는 데이터 원본에 바인딩할는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스를 프로그래밍 방식으로 설정 된 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListView> 데이터 소스에 컨트롤을 호출 합니다는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드. 이 방법을 사용 하면는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 기본 제공 정렬, 업데이트, 삭제 및 페이징 기능을 제공 하지 않습니다. 적절 한 이벤트를 사용 하 여이 기능을 제공 해야 합니다.  
  
 데이터 바인딩에 대 한 자세한 내용은 참조 [ASP.NET 데이터 액세스 콘텐츠 맵](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView> 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면 컨트롤을 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 값이 되도록 가능 하면 항상 HTML로 인코딩된이 컨트롤에 표시 되기 전에 것이 좋습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML 도움말에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 또한 사용자 입력을 확인 하려면 유효성 검사 서버 컨트롤을 사용할 수 있습니다. 자세한 내용은 참조 [유효성 검사 컨트롤 소개](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190)합니다.  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>데이터 작업  
 경우는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 바인딩된 데이터 소스 제어에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 수 데이터 소스 컨트롤의 기능을 활용 하 고 자동 정렬, 삽입, 업데이트, 제공 및 삭제 기능입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView> 정렬, 삽입, 업데이트 및 다른 유형의 데이터 원본 삭제에 대 한 지원을 제공할 수 있습니다. 그러나 이러한 작업을 구현 하기 위해 만들어야 코드 적절 한 이벤트 처리기에서 합니다.  
  
 때문에 <xref:System.Web.UI.WebControls.ListView> 컨트롤 템플릿을 사용 하 여, update, delete, insert, 정렬, 수행 하거나 작업을 선택 하는 단추를 자동으로 생성 하는 방법을 제공 하지 않습니다. 적절 한 템플릿에 이러한 단추를 직접 포함 해야 합니다. <xref:System.Web.UI.WebControls.ListView> 단추를 특정 컨트롤이 인식 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 특정 값으로 설정 되어 있습니다. 다음 표에서 단추를 보여 줍니다. 하는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 인식와 해당 기능입니다.  
  
|단추|CommandName 값|설명|  
|------------|-----------------------|-----------------|  
|취소|"취소"|편집 또는 삽입 작업을 취소합니다. <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 이벤트를 발생시킵니다.|  
|삭제|"Delete"|데이터 소스에서 현재 레코드를 삭제합니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 및 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 이벤트입니다.|  
|선택|"Select"|설정의 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 속성을는 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> 항목에 대 한 속성 값입니다. 렌더링 된 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 항목에 있습니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 및 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 이벤트입니다.|  
|편집|"Edit"|항목이 편집 모드로 전환 합니다. 렌더링 된 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 항목에 있습니다. <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트를 발생시킵니다.|  
|Insert|"삽입"|바인딩된 값을 삽입 하는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 템플릿을 데이터 원본으로 합니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 및 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다.|  
|업데이트|"업데이트"|바인딩된 값으로 데이터 소스에서 현재 레코드를 업데이트는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 서식 파일입니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 및 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 이벤트입니다.|  
|정렬|"Sort"|에 나열 된 열을 정렬 된 `CommandArgument` 단추의 속성입니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.Sorting> 및 <xref:System.Web.UI.WebControls.ListView.Sorted> 이벤트입니다.|  
  
 삭제 (즉시 삭제 단추는 현재 데이터 항목)와 달리 편집 단추를 클릭 하면는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 편집 모드에서 현재 항목을 표시 합니다. 에 포함 된 콘텐츠 편집 모드에는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 현재 데이터 항목에 대 한 속성이 표시 됩니다. 일반적으로 편집 항목 템플릿을 편집 단추 업데이트 및 취소 단추 대체 됩니다. 입력 필드의 데이터 형식에 대 한 적절 한 컨트롤 (예:는 <xref:System.Web.UI.WebControls.TextBox> 또는 <xref:System.Web.UI.WebControls.CheckBox> 컨트롤) 일반적으로 수정 하는 사용자에 대 한 필드의 값을 표시 합니다. 데이터 원본에서 레코드 업데이트 [업데이트] 단추를 클릭 하 고 편집 작업을 취소 취소 단추를 클릭 합니다.  
  
 삽입 기능을 사용할 수는 경우는 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 속성이 <xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem> 또는 <xref:System.Web.UI.WebControls.InsertItemPosition.LastItem>합니다. 이 속성은 위치를 정의 고 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 삽입 항목에 대 한 렌더링 됩니다. 삽입 항목 템플릿을 일반적으로 삽입 및 취소 단추를 포함 하 고 새 레코드에 대 한 값을 입력 하는 사용자에 대 한 빈 입력된 컨트롤이 표시 됩니다. 데이터 원본에서 레코드를 삽입 삽입 단추를 클릭 하 고 모든 필드를 지우고 취소 단추를 클릭 합니다.  
  
### <a name="sorting"></a>정렬  
 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 사용 하면 사용자가 정렬 단추를 클릭 하 여 항목을 정렬할 수 있습니다. 정렬 기능에 정의 된는 `CommandArgument` 정렬 될 열이 포함 된 단추의 속성입니다.  
  
### <a name="paging"></a>페이징  
 같은 시간에 데이터 원본의 모든 레코드를 표시 하는 대신는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 페이지로 레코드 나눌 수 있습니다. 페이징을 사용 하도록 설정 하려면 연결는 <xref:System.Web.UI.WebControls.DataPager> 보호로 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 다음 삽입 한 <xref:System.Web.UI.WebControls.DataPager> 컨트롤 내부는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 서식 파일입니다. 또는 경우는 <xref:System.Web.UI.WebControls.DataPager> 외부에 있으면는 <xref:System.Web.UI.WebControls.ListView> 제어, 설정는 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> 속성을는 <xref:System.Web.UI.Control.ID%2A> 의 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
<a name="Events"></a>   
## <a name="events"></a>이벤트  
 지원 되는 이벤트를 나열 하는 다음 표에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
|이벤트(event)|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.ListView.ItemCanceling>|발생 경우 "취소" 단추가 (단추 해당 `CommandName` 속성이 "Cancel"로 설정)를 클릭 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤 삽입 또는 편집 작업을 취소 합니다. 이 이벤트는 자주 취소 작업을 중지 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemCommand>|<xref:System.Web.UI.WebControls.ListView> 컨트롤에서 단추를 클릭하면 이 이벤트가 발생합니다. 이 이벤트는 종종 컨트롤에서 단추를 클릭 하면 사용자 지정 작업을 수행 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemCreated>|새 항목을 만들 때 발생는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 이벤트는 대개 항목을 만들 때 항목의 내용을 수정 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemDataBound>|데이터 항목의 데이터에 바인딩되면 발생는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 이벤트는 대개 항목을 데이터 바인딩할 때 항목의 콘텐츠를 수정 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleted>|삭제 단추 발생 (단추 해당 `CommandName` 속성이 "Delete"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 데이터 원본에서 레코드를 삭제 합니다. 이 이벤트는 대개 삭제 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleting>|삭제 단추 발생 (단추 해당 `CommandName` 속성이 "Delete"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 데이터 원본에서 레코드를 삭제 합니다. 이 이벤트는 대개 확인 또는 삭제 작업을 취소 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemEditing>|편집 단추를 사용 하는 경우에 발생 (단추와 해당 `CommandName` 속성이 "Edit"로 설정)를 클릭 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 편집 모드로 전환 합니다. 이 이벤트는 종종 편집 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserted>|삽입 단추 발생 (단추 해당 `CommandName` 속성이 "Insert"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 데이터 원본에서 새 레코드를 삽입 합니다. 이 이벤트는 종종 삽입 작업의 결과 확인 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserting>|삽입 단추 발생 (단추 해당 `CommandName` 속성이 "Insert"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 레코드를 삽입 합니다. 이 이벤트는 삽입 작업을 취소 하거나 변경 하거나 새 항목의 값의 유효성 검사를 자주 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdated>|업데이트 단추를 사용 하는 경우에 발생 (단추와 해당 `CommandName` 속성이 "업데이트"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 레코드를 업데이트 합니다. 이 이벤트는 대개 업데이트 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdating>|업데이트 단추를 사용 하는 경우에 발생 (단추와 해당 `CommandName` 속성이 "업데이트"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 레코드를 업데이트 합니다. 이 이벤트는 대개 업데이트 작업을 취소 하거나 변경 하거나 값 편집된 된 항목의 유효성을 검사 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.LayoutCreated>|<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 컨트롤에서 <xref:System.Web.UI.WebControls.ListView> 템플릿을 만들 때 발생합니다. 이 이벤트는 자주 템플릿을 만든 후 작업을 수행 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>|페이지 속성이 변경될 때 <xref:System.Web.UI.WebControls.ListView> 컨트롤에서 새 값을 설정한 후 발생합니다.|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>|앞의 데이터 페이지 속성이 변경 될 때 발생 합니다.는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 새 값을 설정 합니다.|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>|발생 선택 단추 (된 단추 해당 `CommandName` 속성이 "Select"로 설정)를 클릭 하면 후는 <xref:System.Web.UI.WebControls.ListView> select 작업을 처리 합니다. 이 이벤트는 자주 컨트롤에서 항목을 선택한 후 사용자 지정 작업을 수행 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>|발생 선택 단추 (된 단추 해당 `CommandName` 속성이 "Select"로 설정)를 클릭 하기 전에 <xref:System.Web.UI.WebControls.ListView> select 작업을 처리 합니다. 이 이벤트는 종종 선택 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.Sorted>|경우에 정렬 단추 (단추 해당 `CommandName` 속성이 "Sort"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 정렬 작업을 처리 합니다. 이 이벤트는 일반적으로 사용자가 정렬 단추를 클릭 하 고 데이터 정렬 된 후 사용자 지정 작업을 수행 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ListView.Sorting>|경우에 정렬 단추 (단추 해당 `CommandName` 속성이 "Sort"로 설정)를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 정렬 작업을 처리 합니다. 이 이벤트는 정렬 작업을 취소 하거나 사용자 지정 정렬 루틴을 수행 하기 위해 종종 사용 됩니다.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:ListView  
    ConvertEmptyStringToNull="True|False"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    GroupPlaceholderID="string"  
    GroupItemCount="integer"  
    ID="string"  
    InsertItemPosition="None|FirstItem|LastItem"  
    ItemPlaceholderID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCanceling="ItemCanceling event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemEditing="ItemEditing event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLayoutCreated="LayoutCreated event handler"  
    OnLoad="Load event handler"  
    OnPagePropertiesChanged="PagePropertiesChanged event handler"  
    OnPagePropertiesChanging="PagePropertiesChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SelectedIndex="integer"  
    SkinID="string"  
    Style="string"  
    Visible="True|False"  
>  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <EmptyItemTemplate>  
            <!-- child controls -->  
        </EmptyItemTemplate>  
        <GroupSeparatorTemplate>  
            <!-- child controls -->  
        </GroupSeparatorTemplate>  
        <GroupTemplate>  
            <!-- child controls -->  
        </GroupTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <ItemSeparatorTemplate>  
            <!-- child controls -->  
        </ItemSeparatorTemplate>  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <LayoutTemplate>  
                <!-- child controls -->  
        </LayoutTemplate>  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
</asp:ListView>  
```  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 HTML 테이블을 사용 하 여 데이터베이스 레코드를에서 표시 합니다. 에 값이 사용 하 여 검색 한 <xref:System.Web.UI.WebControls.LinqDataSource> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/CS/ListViewSimpleCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/VB/ListViewSimpleVB.aspx#1)]
  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView> 제어를 사용 하 여 선형 레이아웃의 값을 표시 하는 `div` 요소입니다. 에 값이 사용 하 여 검색 한 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/CS/ListViewFlowLayoutCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_FlowLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/VB/ListViewFlowLayoutVB.aspx#1)]
  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 삽입, 삭제 및 레코드를 업데이트 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/CS/ListViewEditCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView_Edit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/VB/ListViewEditVB.aspx#1)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.UI.WebControls.ListView> 클래스입니다. 동적으로 추가 하는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 페이지, 새 <xref:System.Web.UI.WebControls.ListView> 개체입니다. 속성을 설정 하 고 다음에 추가 된 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 등의 컬렉션 컨테이너 컨트롤는 <xref:System.Web.UI.WebControls.PlaceHolder> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public override string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.AccessKey%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.AccessKey" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddControlToContainer">
      <MemberSignature Language="C#" Value="protected virtual void AddControlToContainer (System.Web.UI.Control control, System.Web.UI.Control container, int addLocation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddControlToContainer(class System.Web.UI.Control control, class System.Web.UI.Control container, int32 addLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddControlToContainer(System::Web::UI::Control ^ control, System::Web::UI::Control ^ container, int addLocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="addLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">컨테이너에 추가할 컨트롤이 들어 있는 개체입니다.</param>
        <param name="container">자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <param name="addLocation">컨트롤 컬렉션에서 자식 컨트롤을 추가할 위치입니다.</param>
        <summary>지정된 컨트롤을 지정된 컨테이너에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.AddControlToContainer%2A> 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListView> 지정된 된 컨테이너에 컨트롤을 추가 하는 컨트롤입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 대체 데이터 항목에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 대체 데이터 항목에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 속성을 대체 데이터 항목에 대 한 사용자 지정 사용자 인터페이스 (UI)를 정의 합니다. <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 서식 파일에는 일반적으로 동일한 컨트롤과 내용이 포함 된 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 서식 파일을 구분 하기 위해 서로 다른 모양을 이지만 항목.  
  
 추가 사용자 지정 서식 파일을 선언적으로 지정 하는 `AlternatingItemTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 그런 다음 컨트롤 간의 및 콘텐츠 열기 및 닫기 추가 `<AlternatingItemTemplate>` 태그입니다. 데이터 원본의 필드 값을 표시 하려면 데이터 바인딩 식을 사용 합니다. 자세한 내용은 참조 [데이터 바인딩 식 개요](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
 단추를 자동으로 선택, 삭제 및 편집 작업을 만들려면 서식 파일을 단추 컨트롤을 추가 합니다. 설정의 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 다음 표에 나열 된 속성을 값 중 하나입니다.  
  
|단추 종류|CommandName 값|  
|-----------------|-----------------------|  
|삭제|"Delete"|  
|편집|"Edit"|  
|선택|"Select"|  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 템플릿 스타일에서 대체 데이터 항목을 정의 하는 <xref:System.Web.UI.WebControls.ListView> 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/CS/ListViewAlternatingItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.AlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/VB/ListViewAlternatingItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.BackColor%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.BackColor" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.BorderColor%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.BorderColor" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.BorderStyle%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.BorderWidth%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDRowSuffix As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 속성을 <see cref="P:System.Web.UI.Control.ClientIDMode" />로 설정한 경우에는 값을 <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> 컨트롤의 각 데이터 행을 고유하게 식별하는 데 사용할 데이터 필드의 이름을 가져오거나 설정합니다.</summary>
        <value>ASP.NET이 <see cref="T:System.Web.UI.WebControls.ListView" /> 값을 생성할 경우 값을 <see cref="P:System.Web.UI.Control.ClientID" /> 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용할 데이터 필드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 방지 하기 위해 컨트롤의 여러 인스턴스가의 여러 행에서 렌더링 될 때 이름 충돌을 <xref:System.Web.UI.WebControls.ListView> 컨트롤, ASP.NET <xref:System.Web.UI.Control.ClientID%2A> 컨트롤의 각 인스턴스에 대 한 값입니다. 지정 하는 방법을 <xref:System.Web.UI.Control.ClientID%2A> 값을 설정 하 여 생성 됩니다는 <xref:System.Web.UI.Control.ClientIDMode%2A> 속성입니다. 설정 하는 경우는 <xref:System.Web.UI.Control.ClientIDMode%2A> 속성을 <xref:System.Web.UI.ClientIDMode.Predictable>, ASP.NET에서는 오류가 발생 하는 <xref:System.Web.UI.Control.ClientID%2A> 에 지정 된 데이터 필드에서 파생 된 접미사를 추가 하 여 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>합니다. 경우 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A> 접미사는 일련 번호를 설정 하지 않으면 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataKeyArray ^ ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용되는 데이터 값을 가져옵니다.</summary>
        <value>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용되는 데이터 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlCollection" /> 컨트롤의 자식 컨트롤을 나타내는 <see cref="T:System.Web.UI.WebControls.ListView" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 자식 컨트롤 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Controls%2A> 속성 기본 구현을 재정의 합니다. 이렇게 하면 모든 자식 컨트롤의 속성에서 반환 하기 전에 만들어졌는지는 <xref:System.Web.UI.ControlCollection> 개체입니다.  
  
 <xref:System.Web.UI.Control.Controls%2A> 속성의 인스턴스를 프로그래밍 방식으로 액세스할 수 있습니다는 <xref:System.Web.UI.ControlCollection> 에 대 한 클래스는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 컨트롤 컬렉션을 추가할 컬렉션에서 컨트롤을 제거 하거나 컬렉션에 서버 컨트롤을 반복할 수 있습니다.  
  
 특정 자식 컨트롤에 액세스 하는 <xref:System.Web.UI.WebControls.ListView> 컨트롤, 있습니다 사용할 수 있습니다는 <xref:System.Web.UI.Control.FindControl%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 데이터 필드가 업데이트되는 경우 빈 문자열 값("")이 자동으로 null 값으로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>빈 문자열 값이 자동으로 null 값으로 변환되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> 데이터 소스의 개체를 제어 하는 <xref:System.Web.UI.WebControls.ListView> 라는 속성이 컨트롤이 바인딩된 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>합니다. 이 속성에 동일한 기능을 수행 합니다. 두 속성 모두 적절 하 게 설정 되어 있는지 확인 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChildControls">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤을 렌더링하는 데 사용되는 컨트롤 계층 구조를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>뷰 상태에 저장된 값에 따라 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤을 렌더링하는 데 사용할 컨트롤 계층 구조를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls> 에서 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 계층 구조를 만드는 클래스입니다. 메서드의이 오버 로드는 값을 기반으로 뷰 상태에서 대신 데이터 원본에서 직접 컨트롤 계층 구조를 만듭니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected virtual int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터 소스가 들어 있는 개체입니다.</param>
        <param name="dataBinding">자식 컨트롤이 데이터에 바인딩됨을 나타내려면 <see langword="true" />이고, 다시 게시하는 동안 뷰 상태에서 컨트롤 자신이 다시 만들어짐을 나타내려면 <see langword="false" />입니다.</param>
        <summary>지정된 데이터 소스를 사용하여 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤을 렌더링하는 데 사용할 컨트롤 계층 구조를 만듭니다.</summary>
        <returns>만들어지는 항목 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls%2A> 메서드의 컨트롤 계층 구조를 만드는 데 사용 되는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="dataSource" />가 <see cref="T:System.Web.UI.DataSourceView" />에 대해 <see langword="null" />을 반환한 경우  -또는-  <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않고 <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" /> 값을 반환할 수 없습니다.  -또는-  <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않고 <paramref name="dataBinding" />이 <see langword="false" />로 설정되었습니다.  -또는-  <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 그룹 자리 표시자가 지정되지 않습니다.  -또는-  <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 항목 자리 표시자가 지정되지 않았습니다.</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤의 기본 스타일을 만듭니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 스타일입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 호출 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.CreateControlStyle%2A> 메서드를 한 <xref:System.NotSupportedException> 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" /> 메서드를 호출하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewDataItem CreateDataItem (int dataItemIndex, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewDataItem CreateDataItem(int32 dataItemIndex, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataItem (dataItemIndex As Integer, displayIndex As Integer) As ListViewDataItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewDataItem ^ CreateDataItem(int dataItemIndex, int displayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewDataItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItemIndex" Type="System.Int32" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataItemIndex">내부 데이터 소스 개체에 있는 데이터 항목의 인덱스입니다.</param>
        <param name="displayIndex">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 데이터 항목의 표시 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터 항목을 만듭니다.</summary>
        <returns>지정된 매개 변수를 사용하여 만든 데이터 항목입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에 전달되는 인수를 포함하는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체를 만듭니다.</summary>
        <returns>데이터 소스에 전달되는 인수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments%2A> 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 구현에서는 <xref:System.Web.UI.DataSourceSelectArguments> 페이징 작업에 대 한 인수를 포함 하는 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.ListView" /> 클래스,이 메서드를 재정의 하 고 데이터 원본에 전달 되는 사용자 지정 값을 지정할 수 있습니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyDataItem">
      <MemberSignature Language="C#" Value="protected virtual void CreateEmptyDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateEmptyDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateEmptyDataItem ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateEmptyDataItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 컨트롤에서 <see cref="T:System.Web.UI.WebControls.ListView" /> 템플릿을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyDataItem%2A> 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListView> 만들 컨트롤을는 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 서식 파일입니다. 데이터 소스에서 레코드가 반환 하는 경우 빈 데이터 템플릿이 표시 됩니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateEmptyItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateEmptyItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyItem" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateEmptyItem () As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewItem ^ CreateEmptyItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 빈 항목을 만듭니다.</summary>
        <returns>작성된 빈 항목입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyItem%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.ListView> 빈 항목을 만들 수 있습니다. 빈 항목이 표시 됩니다 때의 데이터 페이지의 마지막 그룹은 <xref:System.Web.UI.WebControls.ListView> 컨트롤에는 레코드가 더 이상 표시 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInsertItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateInsertItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateInsertItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateInsertItem" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInsertItem () As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewItem ^ CreateInsertItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 삽입 항목을 만듭니다.</summary>
        <returns>만든 삽입 항목입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateInsertItem%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.ListView> 삽입 항목을 만들 수 있습니다. 삽입 항목은 한 <xref:System.Web.UI.WebControls.ListViewItem> 개체 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 같으면 <xref:System.Web.UI.WebControls.ListViewItemType.InsertItem?displayProperty=nameWithType>합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 템플릿이 지정되지 않은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateItem (System.Web.UI.WebControls.ListViewItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateItem(valuetype System.Web.UI.WebControls.ListViewItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemType As ListViewItemType) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::ListViewItem ^ CreateItem(System::Web::UI::WebControls::ListViewItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListViewItemType" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 값 중 하나입니다.</param>
        <summary>지정된 형식을 사용하여 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 개체를 만듭니다.</summary>
        <returns>지정된 형식의 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateItem%2A> 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListView> 만들 컨트롤을는 <xref:System.Web.UI.WebControls.ListViewItem> 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
      </Docs>
    </Member>
    <Member MemberName="CreateItemsInGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItemsInGroups (dataSource As ListViewPagedDataSource, dataBinding As Boolean, insertPosition As InsertItemPosition, keyArray As ArrayList) As IList(Of ListViewDataItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ CreateItemsInGroups(System::Web::UI::WebControls::ListViewPagedDataSource ^ dataSource, bool dataBinding, System::Web::UI::WebControls::InsertItemPosition insertPosition, System::Collections::ArrayList ^ keyArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">데이터 원본입니다.</param>
        <param name="dataBinding">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 데이터에 바인딩되어 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="insertPosition">
          <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 값 중 하나입니다.</param>
        <param name="keyArray">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 각 항목의 데이터 키 값을 나타내는 배열입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤 계층 구조를 그룹으로 만듭니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 현재 데이터 페이지의 데이터 항목이 모두 포함되어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateItemsInGroups%2A> 메서드의 컨트롤 계층 구조를 만드는 데 사용 되는 <xref:System.Web.UI.WebControls.ListView> 그룹 컨트롤입니다. 이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.ListView> 제어할 경우에만 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 및 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성이 정의 됩니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 항목 자리 표시자가 지정되지 않은 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateItemsWithoutGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItemsWithoutGroups (dataSource As ListViewPagedDataSource, dataBinding As Boolean, insertPosition As InsertItemPosition, keyArray As ArrayList) As IList(Of ListViewDataItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ CreateItemsWithoutGroups(System::Web::UI::WebControls::ListViewPagedDataSource ^ dataSource, bool dataBinding, System::Web::UI::WebControls::InsertItemPosition insertPosition, System::Collections::ArrayList ^ keyArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">데이터 원본입니다.</param>
        <param name="dataBinding">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 데이터에 바인딩되어 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="insertPosition">
          <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 값 중 하나입니다.</param>
        <param name="keyArray">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 각 항목의 데이터 키 값을 나타내는 배열입니다.</param>
        <summary>그룹 없이 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤 계층 구조를 만듭니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 현재 데이터 페이지의 데이터 항목이 모두 포함되어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups%2A> 메서드의 컨트롤 계층 구조를 만드는 데 사용 되는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.ListView> 제어할 경우에만 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 속성이 정의 되지 않았습니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void CreateLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateLayoutTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateLayoutTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 루트 컨테이너를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.CreateLayoutTemplate%2A> 의 루트 컨테이너를 만드는 데 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 컨테이너의 내용을 정의한는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 속성입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateSuffixArrayList">
      <MemberSignature Language="C#" Value="protected virtual void CreateSuffixArrayList (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, System.Collections.ArrayList suffixArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateSuffixArrayList(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, class System.Collections.ArrayList suffixArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateSuffixArrayList(System.Web.UI.WebControls.ListViewPagedDataSource,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateSuffixArrayList (dataSource As ListViewPagedDataSource, suffixArray As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateSuffixArrayList(System::Web::UI::WebControls::ListViewPagedDataSource ^ dataSource, System::Collections::ArrayList ^ suffixArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="suffixArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">접미사에 대한 값을 제공할 데이터 소스입니다.</param>
        <param name="suffixArray">접미사 배열입니다.</param>
        <summary>
          <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 사용할 ASP.NET에 대한 접미사의 배열을 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public override string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.CssClass%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.CssClass" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 표시된 항목에 대한 기본 키 필드의 이름이 들어 있는 배열을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 표시된 항목의 기본 키 필드 이름이 들어 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 속성을 통해 하나 이상의 데이터 원본의 기본 키를 나타내는 필드를 지정 합니다. 이 속성을 선언적으로 설정 하려면 필드 이름 쉼표로 구분 된 목록을 사용 하 여 합니다.  
  
 때는 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 속성이 설정 되어는 <xref:System.Web.UI.WebControls.ListView> 제어를 자동으로 채우려고 해당 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 지정 된 필드 또는 필드의 값을 사용 하 여 컬렉션입니다. 이 각 항목의 기본 키에 액세스 하는 편리한 방법을 제공 합니다.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.ListView> 컨트롤 컨트롤 상태 필드에 키 필드 값을 저장 합니다. 이러한 값이 중요 한 정보가 들어 있으면 설정 하 여 상태 보기 암호화를 사용 하는 것이 좋습니다는 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 속성을 `ViewStateEncryptionMode.Always`합니다.  
  
 설정 해야 합니다는 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 자동 업데이트 및 삭제의 기능에 대 한 속성은 <xref:System.Web.UI.WebControls.ListView> 컨트롤에서 실행 되도록 합니다. 이러한 키 필드의 값을 업데이트 하거나 삭제할 항목을 일치 시키기 위해 데이터 소스 제어에 전달 됩니다.  
  
 데이터로 지정 된 필드를 사용 하 여 키의 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 속성 업데이트 중에 데이터 소스 제어에 전달 되 고 삭제 작업을 사용 하 여는 `Keys` 컬렉션입니다. 서식 파일의 컨트롤에 바인딩되지 않은 경우에 데이터 키 필드의 데이터 소스 제어에 전달 됩니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 속성을 통해 데이터 원본의 키 필드를 지정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#3)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKeyArray ^ DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataKey" /> 컨트롤에 있는 각 항목의 데이터 키 값을 나타내는 <see cref="T:System.Web.UI.WebControls.ListView" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 각 항목의 데이터 키가 들어 있는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 속성이 설정 되어는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey> 컨트롤의 각 항목에 대 한 개체입니다. <xref:System.Web.UI.WebControls.DataKey> 에 지정 된 필드의 값을 포함 하는 개체는 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 속성입니다. <xref:System.Web.UI.WebControls.DataKey> 개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 컬렉션입니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 검색할 속성의 <xref:System.Web.UI.WebControls.DataKey> 의 특정 데이터 항목에 대 한 개체는 <xref:System.Web.UI.WebControls.ListView> 컨트롤입니다.  
  
 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 검색할 속성의 <xref:System.Web.UI.WebControls.DataKey> 현재 선택 된 항목에 대 한 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 현재 선택 된 항목에 대 한 데이터 키 값을 직접 검색 하는 속성입니다.  
  
 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A?displayProperty=nameWithType> 검색할 속성의 <xref:System.Web.UI.WebControls.DataKey> 명령 단추가 클릭 되었습니다 항목에 대 한 개체입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 속성 항목에 대 한 데이터 키 값을 결정 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 또한 사용자가 선택한 인덱스를 사용 하는 기본 동작 대신 데이터 항목에 따라 유지 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem(int itemIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">삭제할 항목의 인덱스입니다.</param>
        <summary>데이터 소스에서 지정된 인덱스에 있는 레코드를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 메서드를 프로그래밍 방식으로 데이터 소스에서 지정 된 인덱스에 있는 레코드를 삭제 합니다. 외부에서 레코드를 삭제 하려면이 메서드는 일반적으로 <xref:System.Web.UI.WebControls.ListView> 페이지 내의 다른 컨트롤 처럼 제어 합니다. 이 메서드는 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 및 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 이벤트입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 프로그래밍 방식으로에서 선택한 항목을 삭제 하는 메서드는 <xref:System.Web.UI.WebControls.ListView> 데이터 소스에서 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" />가 0보다 작습니다.  -또는-  <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.DataSourceView" /> 개체가 <see langword="null" />입니다.</exception>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_DeleteMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터를 삭제하기 위해 호출할 메서드의 이름을 가져오거나 설정합니다.</summary>
        <value>메서드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 방법으로 사용할 모델 바인딩을 사용 하면이 속성을 설정 합니다.  
  
 Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집하고 있는 항목의 인덱스를 가져오거나 설정합니다.</summary>
        <value>편집 중인 항목의 0부터 시작하는 인덱스입니다. 기본값은 -1로, 편집하고 있는 항목이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 속성을 프로그래밍 방식으로 지정 하거나에서 한 항목을 확인할는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 편집 합니다. 이 속성을 컨트롤에 있는 항목의 인덱스를 설정 하는 경우 해당 항목은 편집 모드에 표시 됩니다. 편집 모드에서를 사용 하 여 해당 항목은 렌더링 된 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 템플릿 대신는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 서식 파일입니다. 채울 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 데이터 바인딩된 컨트롤 사용자가 항목에 대 한 값을 수정할 수 있도록 합니다. 편집 모드를 표시 하는 모드를 전환 하려면이 속성을-1로 설정 합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 속성은 편집 되 고 있는 항목 또는에 편집 기능을 사용자 지정을 추가할 때 프로그래밍 방식으로 확인 해야 할 경우 일반적으로 사용 됩니다는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. <xref:System.Web.UI.WebControls.ListView> 컨트롤에 자동으로 단추 항목 템플릿을 추가 하면 항목이 편집 모드로 전환 하는 기본 제공 편집 기능이 있는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성이로 설정 되어 `Edit`합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 속성에서 편집 모드에는 항목 인지를 확인 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListViewDataItem> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/CS/ListViewDataItemDataItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListViewDataItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/VB/ListViewDataItemDataItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.ListView.EditIndex" /> 속성이 -1보다 작은 값으로 설정된 경우입니다.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem EditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem EditItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListViewItem ^ EditItem { System::Web::UI::WebControls::ListViewItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 편집 모드에 있는 항목을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 편집 모드에 있는 항목입니다. 편집 모드에 항목이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> 속성에서 편집 모드에 있는 항목에 액세스 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 편집 항목의 내용은에 의해 정의 되는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 속성입니다.  
  
   
  
## Examples  
 사용 하 여 편집 모드에 있는 항목을 검색 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> 속성에 포함 된 컨트롤에 액세스 하는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 서식 파일입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditIndex" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 모드에 있는 항목에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value>편집 모드에 있는 항목에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 편집 모드에 있는 항목에 대 한 사용자 지정 사용자 인터페이스 (UI)를 정의 하는 속성입니다. <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 서식 파일은 일반적으로 기존 레코드의 값을 업데이트 하는 사용자에 대 한 입력된 컨트롤을 포함 합니다. 또한 레코드를 업데이트 하 고 작업을 업데이트 작업을 취소 단추 들어 있습니다.  
  
 추가 사용자 지정 서식 파일을 선언적으로 지정 하는 `EditItemTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 그런 다음 내용 및 템플릿을 사용 하 여 컨트롤을 추가 `EditItemTemplate` 요소입니다. 양방향 바인딩 식을 사용 하 여 필드를 입력 컨트롤과 연결할 수 있습니다. 이 통해는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 편집 모드에 있는 항목에 대 한 연결된 된 입력된 컨트롤에 자동으로 원래 필드 값을 표시 합니다. 기록이 업데이트 될 때는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 연결된 된 입력된 컨트롤에서 업데이트 된 필드 값을 자동으로 추출 합니다. 자세한 내용은 참조 [데이터 바인딩 식 개요](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
 기본 제공 취소 및 업데이트 작업을 수행 하는 단추를 만들려면 서식 파일을 단추 컨트롤을 추가 합니다. 설정의 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 다음 표에 나열 된 속성을 값 중 하나입니다.  
  
|단추 종류|CommandName 값|  
|-----------------|-----------------------|  
|취소|"취소"|  
|업데이트|"업데이트"|  
  
   
  
## Examples  
 다음 예제에서는 편집 모드에는 항목에 대 한 사용자 지정 서식 파일을 정의 하는 방법을 보여 줍니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItem" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 바인딩될 때 렌더링되는 빈 템플릿에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 템플릿에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 템플릿은에 표시 됩니다는 <xref:System.Web.UI.WebControls.ListView> 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않는 제어 및 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 속성이 <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType>합니다. 서식 파일 대신 렌더링 되는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 서식 파일입니다. 경우는 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 속성 이외의 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 서식 파일은 렌더링 되지 않습니다.  
  
 사용 하 여 빈 템플릿에 대해 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 속성입니다. 선언적으로 빈 템플릿에 대해 사용자 지정 서식 파일을 지정 하려면 추가 및 `EmptyDataTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `EmptyDataTemplate` 요소입니다.  
  
   
  
## Examples  
 다음 예제에는 빈 템플릿에 대해 사용자 지정 템플릿을 정의 하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/CS/ListViewEmptyDataTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/VB/ListViewEmptyDataTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
      </Docs>
    </Member>
    <Member MemberName="EmptyItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 데이터 페이지의 마지막 행에 표시할 데이터 항목이 더 이상 없으면 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 렌더링되는 빈 항목에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 항목에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 항목이 표시 되는 <xref:System.Web.UI.WebControls.ListView> 현재 페이지의 마지막 그룹에 표시할 데이터 항목이 더 이상 없는 경우 제어 합니다. 이 경우에 발생할 수 있습니다 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 1 보다 큰 값으로 설정 됩니다. 예를 들어, 한 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성을 5로 설정 되어 있고 데이터 소스에서 반환 되는 항목의 총 수는 8입니다. 데이터의 마지막 행은에 정의 된 세 가지 항목을 포함 하는 경우는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 템플릿과에 정의 된 두 항목은 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 서식 파일입니다.  
  
 사용 하 여 빈 항목에 대 한 사용자 지정 사용자 인터페이스 (UI)를 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 속성입니다. 빈 항목에 대 한 선언적으로 사용자 지정 서식 파일을 지정 하려면 추가 `EmptyItemTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `EmptyItemTemplate` 요소입니다.  
  
   
  
## Examples  
 다음 예에서는 빈 항목에 대 한 사용자 지정 서식 파일을 정의 하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/CS/ListViewEmptyItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EmptyItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/VB/ListViewEmptyItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>유효성 검사 컨트롤이 삽입 또는 업데이트 작업 도중 발생하는 예외를 처리하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>유효성 검사 컨트롤이 삽입 또는 업데이트 작업 도중 발생하는 예외를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnablePersistedSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 컨트롤에서 데이터를 통해 페이지를 지정할 때 행 선택이 유지되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행 선택을 유지할 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 방법 선택 된 행을 지정할 수 있습니다 때 유지 됩니다는 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 페이징 모드에 있습니다. 기본적으로 행 선택은 행 인덱스를 기반으로 합니다. 같은 행 (예를 들어 셋째 행)는 각 페이지에서 선택 됩니다. 또는 선택한 행의 데이터 키에 따라 지 속성을 사용할 수 있습니다. 이 경우 3 페이지 1에 행을 선택 하는 경우 2 페이지로 이동 하면 행이 2 페이지에서 선택 됩니다. 1 페이지로 다시 이동 하면 행 3이 여전히 선택 합니다. 이 기능을 설정 하려면이 속성을 설정 `true`합니다.  
  
> [!NOTE]
>  버전 2.0, 3.0 및 3.5의 ASP.NET에서는 행 선택 된 행 인덱스에 대해서만 기반으로 합니다. 기본적으로 ASP.NET 4의 행 선택은 이전 버전과 호환성에 대 한 인덱스를 기반으로 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void EnsureLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureLayoutTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureLayoutTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> 내용이 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 올바르게 만들어졌는지 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.ListView> 제어 되도록 하는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 콘텐츠 컨트롤에 한 번만 추가 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractItemValues">
      <MemberSignature Language="C#" Value="public virtual void ExtractItemValues (System.Collections.Specialized.IOrderedDictionary itemValues, System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractItemValues(class System.Collections.Specialized.IOrderedDictionary itemValues, class System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExtractItemValues (itemValues As IOrderedDictionary, item As ListViewItem, includePrimaryKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExtractItemValues(System::Collections::Specialized::IOrderedDictionary ^ itemValues, System::Web::UI::WebControls::ListViewItem ^ item, bool includePrimaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.ListViewItem" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemValues">필드 값을 저장하는 데 사용되는 사전 개체입니다.</param>
        <param name="item">필드 값을 검색할 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 개체입니다.</param>
        <param name="includePrimaryKey">기본 키 필드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 항목 내에서 선언된 각 필드의 값을 검색하여 지정된 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 개체에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ExtractItemValues%2A> 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListView> 에 선언 된 각 필드의 값을 검색 하는 컨트롤 `item`합니다. 추출 된 값 사용 하 여 키 필드를 포함 하는지 여부를 지정할 수는 `includePrimaryKey` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="itemValues" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="item" />이 <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 개체가 아닙니다.</exception>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="FindPlaceholder">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindPlaceholder (string containerID, System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindPlaceholder(string containerID, class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindPlaceholder (containerID As String, container As Control) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ FindPlaceholder(System::String ^ containerID, System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerID" Type="System.String" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="containerID">찾을 컨트롤의 식별자입니다.</param>
        <param name="container">검색할 컨테이너입니다.</param>
        <summary>지정된 식별자를 가지고 있는 컨트롤의 지정된 컨테이너를 검색합니다.</summary>
        <returns>지정된 컨트롤입니다. 지정된 컨트롤을 찾을 수 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.Font" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 지원하지 않습니다.</summary>
        <value>이 속성은 지원되지 않으며 <see cref="T:System.NotSupportedException" /> 오류가 throw됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 액세스 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.Font%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.Font" /> 속성에 액세스하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.ForeColor%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다.  속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.ForeColor" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupItemCount">
      <MemberSignature Language="C#" Value="public virtual int GroupItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GroupItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GroupItemCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 그룹 당 표시할 항목의 수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 그룹 당 표시할 항목의 수입니다. 기본값은 1로, 이는 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 그룹 당 하나의 항목을 표시함을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성에서 함께 그룹화 하는 항목의 수를 지정 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. (즉,이 지정 된 컨트롤의 각 그룹에 대해 표시할 항목의 합니다.) 각 그룹에 대 한는 <xref:System.Web.UI.WebControls.ListView> 컨트롤의 내용을 렌더링는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 템플릿을 실제 항목 내용을 사용 하 여 항목 자리 표시자를 바꿉니다. 에 정의 된 항목 수 만큼이 작업을 수행는 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성입니다.  
  
 사용할 수 있습니다 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 와 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 서식 파일에 바둑판식으로 배열 된 레이아웃을 만들 수는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 바둑판식된 테이블 레이아웃 항목 행에 가로로 반복 됩니다. 지정 된 항목에 반복 되는 횟수는 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서 타일 식된 레이아웃을 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.ListView> 사용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성입니다. 또한이 속성을 프로그래밍 방식으로 변경 하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/CS/ListViewGroupItemCountCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupItemCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/VB/ListViewGroupItemCountVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" /> 속성이 1보다 작은 값으로 설정된 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GroupPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string GroupPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupPlaceholderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GroupPlaceholderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("groupPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 그룹 자리 표시자에 대한 ID를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 그룹 자리 표시자에 대한 ID입니다. 기본값은 "groupPlaceholder"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> 속성을 그룹 자리 표시자에 대 한 ID를 지정 합니다. 에 추가 하는 컨트롤 그룹 자리 표시자는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 그룹 렌더링 될 나타내는 그룹을 사용 하는 경우 서식 파일입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> 속성의 그룹 자리 표시자에 대 한 다른 ID를 지정 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 ID가 <see langword="null" />이거나 빈 문자열인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupSeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ GroupSeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 그룹 간 구분 기호에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>그룹 구분 기호에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구분 기호를 사용 하면 각 그룹 사이 사용자 지정 내용이 있는 요소를 넣을 수 있습니다. <xref:System.Web.UI.WebControls.ListView> 제어 그러면 또는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 콘텐츠 및 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 콘텐츠입니다. <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 콘텐츠는 항상 마지막 렌더링 됩니다.  
  
 전체 행에 대 한 콘텐츠를 정의 해야는 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 서식 파일을 하기 때문에 <xref:System.Web.UI.WebControls.ListView> 렌더링는 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 내부 콘텐츠는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 서식 파일입니다. 예를 들어 그룹에는 <xref:System.Web.UI.WebControls.ListView> 테이블 행을 사용 하 여 컨트롤을 만들 수 있습니다 (`tr`) 요소입니다. 경우는 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 3, 속성이 `colspan` 속성을 3으로 설정 되어야 합니다는 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 서식 파일입니다.  
  
 구분 기호에 선언적으로 서식 파일을 지정 하려면 추가 `GroupSeparatorTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `GroupSeparatorTemplate` 요소입니다.  
  
   
  
## Examples  
 다음 예제에 그룹 구분 기호를 만드는 방법을 <xref:System.Web.UI.WebControls.ListView> 사용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 속성입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GroupTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GroupTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ GroupTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 그룹 컨테이너에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 그룹 컨테이너에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 속성에 바둑판식으로 배열 된 레이아웃을 만들 수는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 바둑판식된 테이블 레이아웃 항목 행에 가로로 반복 됩니다. 지정 된 항목에 반복 되는 횟수는 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> 속성입니다.  
  
 서식 파일 그룹 컨테이너에 대 한 선언적으로 지정 하려면는 `GroupTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `GroupTemplate` 요소입니다.  
  
 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 속성 표 셀 등의 데이터 항목에 대 한 자리 표시자를 포함 해야 합니다 (`td`), `div`, 또는 `span` 요소입니다. 이 자리 표시자 있어야는 `runat` 특성이 "server"로 설정 및 `ID` 특성의 값으로 설정 된 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 속성. 런타임에 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 각 항목에 대해 정의 된 내용을 사용 하 여 자리 표시자를 대체는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 및 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 템플릿.  
  
   
  
## Examples  
 다음 예제에서 타일 식된 레이아웃을 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.ListView> 사용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 속성입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.Height" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.Height%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.Height" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem InsertItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem InsertItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InsertItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListViewItem ^ InsertItem { System::Web::UI::WebControls::ListViewItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 삽입 항목을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 삽입 항목을 나타내는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> 속성의 insert 항목에 액세스 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 삽입 항목은 한 <xref:System.Web.UI.WebControls.ListViewItem> 개체 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 같으면 <xref:System.Web.UI.WebControls.ListViewItemType.InsertItem?displayProperty=nameWithType>합니다. 삽입 항목의 내용은에 의해 정의 되는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에 사용 하 여 삽입 항목을 가져오는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> 속성에 포함 된 컨트롤에 액세스 하는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 보안 문제가 발생할는 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/CS/ListViewInsertItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/VB/ListViewInsertItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemPosition">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.InsertItemPosition InsertItemPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.InsertItemPosition InsertItemPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemPosition As InsertItemPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::InsertItemPosition InsertItemPosition { System::Web::UI::WebControls::InsertItemPosition get(); void set(System::Web::UI::WebControls::InsertItemPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.InsertItemPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 템플릿이 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 일부로 렌더링될 때 템플릿의 위치를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />으로, 이는 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 내용이 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 의해 렌더링되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 사용 가능한 항목 위치 값을 나열합니다.  
  
|행 형식|설명|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem?displayProperty=nameWithType>|렌더링 된 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일의 첫 번째 항목으로는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.InsertItemPosition.LastItem?displayProperty=nameWithType>|렌더링 된 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일의 마지막 항목으로는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType>|렌더링 하지 않습니다는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일입니다.|  
  
   
  
## Examples  
 구성 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView> 표시할 컨트롤을는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 삽입 항목에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 삽입 항목에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 속성 삽입 항목에 대 한 사용자 지정 사용자 인터페이스 (UI)를 정의 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 UI는 시작 시 또는 표시 된 항목의 끝에 렌더링 됩니다. 사용 하 여 UI를 렌더링 하는 지정 된 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일은 일반적으로 새 레코드에 대 한 값을 입력 하려면 사용자에 대 한 입력된 컨트롤을 포함 합니다. 단추 또는 하이퍼링크 레코드를 삽입 하 고 삽입 작업을 취소 하는 데에 일반적으로 포함 되어 있습니다.  
  
 추가 사용자 지정 서식 파일을 선언적으로 지정 하는 `InsertItemTemplate` 요소 안에 `ListView` 요소입니다. 서식 파일의 내용을 추가할 수 있습니다는 `InsertItemTemplate` 요소입니다. 양방향 바인딩 식을 사용 하 여 필드를 입력 컨트롤과 연결할 수 있습니다. 레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 자동으로 연결된 된 입력된 컨트롤에서 필드 값을 추출 합니다. 자세한 내용은 참조 [데이터 바인딩 식 개요](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
 삽입 작업 및 기본 제공 취소를 수행 하는 단추를 만들려면 서식 파일을 단추 컨트롤을 추가 합니다. 설정의 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 다음 표에 나열 된 속성을 값 중 하나입니다.  
  
|단추 종류|CommandName 값|  
|-----------------|-----------------------|  
|취소|"취소"|  
|Insert|"삽입"|  
  
 삽입 항목의 위치를 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView> 사용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 속성입니다.  
  
   
  
## Examples  
 삽입 항목에 대 한 사용자 지정 템플릿을 정의 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_InsertMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터를 삽입하기 위해 호출할 메서드의 이름을 가져오거나 설정합니다.</summary>
        <value>메서드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 방법으로 사용할 모델 바인딩을 사용 하면이 속성을 설정 합니다.  
  
 Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNewItem">
      <MemberSignature Language="C#" Value="public virtual void InsertNewItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNewItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertNewItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertNewItem(bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">이 메서드가 호출될 때 페이지 유효성 검사를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>데이터 소스에 현재 레코드를 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 메서드를 프로그래밍 방식으로 데이터 소스에서 항목을 삽입 합니다. 외부에서 항목을 삽입 하려면이 메서드는 일반적으로 <xref:System.Web.UI.WebControls.ListView> 페이지 내의 다른 컨트롤 처럼 제어 합니다.  
  
 사용 하는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 정의 해야 합니다는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 에서 서식 파일은 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 해야는 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> 속성와 다른 값을 <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=nameWithType>합니다. 삽입 작업 전에 페이지의 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다.  
  
 이 메서드는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 및 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 이벤트입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 의 삽입 항목의 내용을 프로그래밍 방식으로 삽입 하는 메서드는 <xref:System.Web.UI.WebControls.ListView> 데이터 소스에 컨트롤입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/CS/ListViewInsertNewItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.InsertNewItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/VB/ListViewInsertNewItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 삽입 항목이 없는 경우  -또는-  <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.DataSourceView" /> 개체가 <see langword="null" />입니다.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
        <altmember cref="T:System.Web.UI.WebControls.InsertItemPosition" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyDataTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyDataTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyDataTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateEmptyDataTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateEmptyDataTemplate(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 템플릿에 있는 자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.Control" /> 템플릿에 들어 있는 자식 컨트롤을 사용하여 지정된 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지정 된를 채우는 데 <xref:System.Web.UI.Control> 에 포함 된 자식 컨트롤을 사용 하 여 개체는 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> 서식 파일입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateEmptyItemTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateEmptyItemTemplate(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> 템플릿에 있는 자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.Control" /> 템플릿에 들어 있는 자식 컨트롤을 사용하여 지정된 <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 채우는 데는 <xref:System.Web.UI.Control> 에 포함 된 자식 컨트롤을 사용 하 여 개체는 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> 서식 파일입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateGroupSeparatorTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateGroupSeparatorTemplate(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> 템플릿에 있는 자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.Control" /> 템플릿에 들어 있는 자식 컨트롤을 사용하여 지정된 <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateGroupTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateGroupTemplate(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> 템플릿에 있는 자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.Control" /> 템플릿에 들어 있는 자식 컨트롤을 사용하여 지정된 <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateInsertItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateInsertItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateInsertItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateInsertItemTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateInsertItemTemplate(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 템플릿에 있는 자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.Control" /> 템플릿에 들어 있는 자식 컨트롤을 사용하여 지정된 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateItemSeparatorTemplate (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateItemSeparatorTemplate(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> 템플릿에 있는 자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.Control" /> 템플릿에 들어 있는 자식 컨트롤을 사용하여 지정된 <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemTemplate (System.Web.UI.Control container, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemTemplate(class System.Web.UI.Control container, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InstantiateItemTemplate (container As Control, displayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InstantiateItemTemplate(System::Web::UI::Control ^ container, int displayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="container">자식 컨트롤을 저장하는 데 사용되는 컨테이너입니다.</param>
        <param name="displayIndex">인스턴스화 중인 항목의 표시 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.Control" /> 컨트롤 템플릿 중 하나에 들어 있는 자식 컨트롤을 사용하여 지정된 <see cref="T:System.Web.UI.WebControls.ListView" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스화 중인 항목의 모드와의 설정에 따라 다른 서식 파일을 사용 하 여이 메서드는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. <xref:System.Web.UI.WebControls.ListView.InstantiateItemTemplate%2A> 메서드 다음 템플릿 중 하나를 사용 하 여 컨테이너를 채웁니다.  
  
-   <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>  
  
    > [!NOTE]
    >  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 <see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" /> 템플릿이 지정되지 않은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="IsUsingModelBinders">
      <MemberSignature Language="C#" Value="protected override bool IsUsingModelBinders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsingModelBinders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.IsUsingModelBinders" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsUsingModelBinders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsUsingModelBinders { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모델 바인딩을 사용하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>모델 바인딩이 사용 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCanceling">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCanceling As EventHandler(Of ListViewCancelEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewCancelEventArgs ^&gt; ^ ItemCanceling;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>취소 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 삽입 또는 편집 작업을 취소하기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView> 발생는 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 때의 취소 단추 이벤트는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 또는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 서식 파일을 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤 삽입 또는 편집 작업을 취소 합니다. ("취소" 단추가 단추 컨트롤은 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Cancel"로 설정 합니다.) 그러면 항목 원치 않는 상태가 될 경우 취소 작업을 중지 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewCancelEventArgs> 개체 항목의 인덱스를 확인할 수 있습니다. 이벤트 처리기에 전달 됩니다. 또한 취소 작업을 중지 해야 함을 지정할 수 있습니다. 작업을 중지 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewCancelEventArgs> 개체를 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 이벤트 처리기입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 보안 문제가 발생할는 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/CS/ListViewItemCancelingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemCanceling#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/VB/ListViewItemCancelingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As EventHandler(Of ListViewCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewCommandEventArgs ^&gt; ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 단추를 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 이벤트는에 있는 단추는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 클릭 합니다. 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 단추는 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 컨트롤의 기본 제공 기능을 호출할 수도 있습니다. 다음 표에서 함께 사용할 수 있는 값을 나열는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 기본 제공 기능을 호출 하기 위해 단추의 속성입니다.  
  
|CommandName 값|설명|  
|-----------------------|-----------------|  
|"취소"|편집 또는 삽입 작업을 취소합니다. <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 이벤트를 발생시킵니다.|  
|"Delete"|데이터 소스에서 현재 레코드를 삭제합니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 및 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 이벤트입니다.|  
|"Select"|설정의 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 속성을는 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> 항목에 대 한 속성 값입니다. 렌더링 된 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 항목에 있습니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 및 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 이벤트입니다.|  
|"Edit"|항목이 편집 모드로 전환 합니다. 렌더링 된 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 항목에 있습니다. <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트를 발생시킵니다.|  
|"삽입"|바인딩된 값을 삽입 하는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 템플릿을 데이터 원본으로 합니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 및 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다.|  
|"업데이트"|바인딩된 값으로 데이터 소스에서 현재 레코드를 업데이트는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 서식 파일입니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 및 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 이벤트입니다.|  
|"Sort"|에 나열 된 열을 정렬 된 `CommandArgument` 단추의 속성입니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.Sorting> 및 <xref:System.Web.UI.WebControls.ListView.Sorted> 이벤트입니다.|  
  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 이벤트는 위의 표에 나와 있는 단추를 클릭할 때입니다. 그러나 테이블에 나열 된 이벤트를 사용 하는 것이 좋습니다. <xref:System.Web.UI.WebControls.ListView.ItemCommand> 이벤트는 일반적으로 사용자 지정 작업을 처리 하는 데 사용 됩니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewCommandEventArgs> 명령 이름과 클릭 된 단추의 명령 인수를 확인할 수 있도록 하는 이벤트 처리기에 전달 되는 개체입니다. 명령 이름을 확인 하려면는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A?displayProperty=nameWithType> 속성입니다. 명령 인수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A?displayProperty=nameWithType> 속성입니다. 이벤트를 발생 하는 컨트롤에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource%2A?displayProperty=nameWithType> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 이벤트 처리기입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler(Of ListViewItemEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewItemEventArgs ^&gt; ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 항목을 만들 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 렌더링 한 <xref:System.Web.UI.WebControls.ListViewItem> 컨트롤의 각 항목에 대 한 개체를 생성 해야 합니다. <xref:System.Web.UI.WebControls.ListView.ItemCreated> 이벤트는 각 항목은 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 만들어집니다. 이 항목에 사용자 지정 콘텐츠를 추가 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewItemEventArgs> 개체 생성 중인 항목의 속성에 액세스할 수 있도록 하는 이벤트 처리기에 전달 됩니다. 항목에서 특정 컨트롤에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.ListViewItem> 에 포함 된 개체는 <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> 속성의는 <xref:System.Web.UI.WebControls.ListViewItemEventArgs> 개체입니다. 어떤 항목을 확인할 수 있습니다 형식 (데이터 항목을 삽입 항목 빈 항목)를 사용 하 여 만들어집니다는 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As EventHandler(Of ListViewItemEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewItemEventArgs ^&gt; ^ ItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 항목이 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터에 바인딩될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 렌더링 될 수, 각 항목 컨트롤에 데이터 원본에서 레코드를 연결 해야 합니다. <xref:System.Web.UI.WebControls.ListView.ItemDataBound> 이벤트가 발생 하는 데이터 항목의 데이터에 바인딩될 때는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. (데이터 항목으로 표시 됩니다 <xref:System.Web.UI.WebControls.ListViewDataItem> 개체입니다.) 이 항목에 바인딩되는 데이터의 값을 수정 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewItemEventArgs> 개체에 바인딩되는 항목의 속성에 액세스할 수 있는 이벤트 처리기에 전달 됩니다. 항목에서 특정 컨트롤에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.ListViewItem> 에 포함 된 개체는 <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> 속성의는 <xref:System.Web.UI.WebControls.ListViewItemEventArgs> 개체입니다. 어떤 항목을 확인할 수 있습니다 형식 (데이터 항목을 삽입 항목 빈 항목)를 사용 하 여 바인딩되는 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.UI.WebControls.ListView.ItemDataBound> 이벤트를 사용하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/CS/ListViewItemDataBoundCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/VB/ListViewItemDataBoundVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As EventHandler(Of ListViewDeletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewDeletedEventArgs ^&gt; ^ ItemDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 항목을 삭제한 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 발생 항목의 삭제 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 항목을 삭제 합니다. 삭제 단추는 해당 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성이 "Delete"로 설정되어 있는 단추 컨트롤입니다. 그러면 삭제 작업의 결과 확인 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs> 개체 데이터 소스에 영향을 받는 행 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다. 또한 예외 발생 했을 수를 확인할 수도 있습니다. 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여 나타낼 수 있습니다는 <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs> 개체를 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 에 대 한 이벤트 처리기를 추가 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 이벤트입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/CS/ListViewDeletedEventArgsCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/VB/ListViewDeletedEventArgsVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As EventHandler(Of ListViewDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewDeleteEventArgs ^&gt; ^ ItemDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 항목을 삭제하기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 발생 항목의 삭제 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 항목을 삭제 합니다. 삭제 단추는 해당 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성이 "Delete"로 설정되어 있는 단추 컨트롤입니다. 그러면 삭제 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs> 현재 항목의 인덱스를 확인할 수 있도록 하는 이벤트 처리기에 전달 되는 개체입니다. 또한 삭제 작업을 취소 해야 함을 지정할 수 있습니다. 삭제 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs> 개체 `true`합니다. 또한 작업할 수는 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A> 및 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values%2A> 값이 데이터 원본에 전달 되기 전에 컬렉션입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리기를 선언적으로 추가 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 이벤트입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
      </Docs>
    </Member>
    <Member MemberName="ItemEditing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemEditing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemEditing As EventHandler(Of ListViewEditEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewEditEventArgs ^&gt; ^ ItemEditing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 항목이 편집 모드로 전환되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트는 항목의 편집 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.ListView> 항목이 편집 모드로 전환 됩니다. 편집 단추는 해당 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성이 "Edit"로 설정되어 있는 단추 컨트롤입니다. 그러면 편집 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewEditEventArgs> 현재 항목의 인덱스를 확인할 수 있도록 하는 이벤트 처리기에 전달 되는 개체입니다. 또한 편집 작업을 취소 해야 함을 지정할 수 있습니다. 편집 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewEditEventArgs> 개체 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 에 대 한 이벤트 처리기를 추가 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As EventHandler(Of ListViewInsertedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewInsertedEventArgs ^&gt; ^ ItemInserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 항목을 데이터 소스에 삽입한 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView> 발생는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트에 있는 삽입 단추는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일을 클릭할 또는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 데이터 원본에는 항목을 삽입 합니다. (삽입 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "삽입"로 설정 합니다.) 그러면 삽입 작업의 결과 확인 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 영향을 받는 레코드 수를 확인할 수 있는 이벤트 처리기에 전달 되는 개체입니다. 또한 예외 발생 했을 수를 확인할 수도 있습니다. 삽입 작업에 의해 영향을 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 속성입니다. 예외가 발생 한 것인지 확인을 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> 속성입니다. 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 속성입니다. 사용 하 여 삽입된 된 레코드의 값에 액세스 하려는 경우는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 속성입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 속성 삽입 된 항목이 없음을, 삽입 값을 다시 바인딩할 수를 보고는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 설정 하 여 서식 파일은 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 속성을 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 에 대 한 이벤트 처리기를 추가 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As EventHandler(Of ListViewInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewInsertEventArgs ^&gt; ^ ItemInserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 삽입을 수행하기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView> 발생는 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 이벤트에 있는 삽입 단추는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 템플릿을 클릭 또는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 레코드를 삽입 합니다. (삽입 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "삽입"로 설정 합니다.) 이렇게 하면이 이벤트가 발생할 때마다 HTML 인코딩 같은 레코드의 값 데이터 원본에 삽입 하기 전에 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewInsertEventArgs> 개체에 전송 하는 선택적 명령 인수 값을 확인할 수 있습니다는 이벤트 처리기에 전달 되는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 또한 삽입 작업을 취소 해야 함을 지정할 수 있습니다. 삽입 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`합니다. 읽거나를 사용 하 여 새 레코드에 대 한 필드 값을 수정할 수는 <xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 에 대 한 이벤트 처리기를 추가 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 잠재적인 보안 문제가 사용자 입력을 허용 하는 컨트롤이 포함 됩니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/CS/ListViewItemInsertingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/VB/ListViewItemInsertingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
      </Docs>
    </Member>
    <Member MemberName="ItemPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string ItemPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemPlaceholderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemPlaceholderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("itemPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 항목 자리 표시자에 대한 ID를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 항목 자리 표시자에 대한 ID입니다. 기본값은 "itemPlaceholder"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 항목 자리 표시자에 대 한 ID를 지정 하는 속성입니다. 항목 자리 표시자에 추가 하는 컨트롤은는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> (그룹을 사용 하지 않는) 하는 경우 서식 파일 또는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 서식 파일 (그룹을 사용 하는 경우) 하는 경우를 나타내는 항목이 렌더링 될 합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 속성의 항목 자리 표시자에 대 한 ID를 지정 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemContainerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 ID가 <see langword="null" />이거나 빈 문자열인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IList(Of ListViewDataItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ Items { System::Collections::Generic::IList&lt;System::Web::UI::WebControls::ListViewDataItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 컨트롤에 있는 현재 데이터 페이지의 데이터 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.ListView" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 현재 데이터 페이지의 데이터 항목이 모두 포함되어 있는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Items%2A> 속성 저장소에서 데이터 항목을 사용 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. <xref:System.Web.UI.WebControls.ListView> 제어를 자동으로 채우려고는 <xref:System.Web.UI.WebControls.ListView.Items%2A> 하나를 만들어 컬렉션 <xref:System.Web.UI.WebControls.ListViewDataItem> 데이터 원본의 데이터의 현재 페이지의 각 레코드에 대 한 개체입니다. 그런 다음 각 개체를 컬렉션에 추가합니다. 이 속성은 컨트롤의 특정 항목에 액세스 하거나 항목의 전체 컬렉션을 반복에 주로 사용 됩니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.Items%2A> 컬렉션에서 편집 중인 항목에 액세스 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="T:System.Web.UI.WebControls.DataPager" />
      </Docs>
    </Member>
    <Member MemberName="ItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemSeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemSeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 항목 사이에 있는 구분 기호에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 항목 사이에 있는 구분 기호에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> 속성의 단일 항목 간의 구분 기호가 내용을 정의 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> 마지막을 제외한 모든 항목 다음에 표시 됩니다.  
  
 추가 사용자 지정 서식 파일을 선언적으로 지정 하는 `ItemSeparatorTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `ItemSeparatorTemplate` 요소입니다.  
  
   
  
## Examples  
 다음 예제에는 항목 구분 기호에를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.ListView> 사용 하 여 컨트롤의 <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> 속성입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.GroupTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터 항목에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터 항목에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 데이터 항목을 표시 하는 사용자 지정 사용자 인터페이스 (UI)를 정의 하는 속성입니다. <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 서식 파일에 필요한는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 일반적으로 레코드의 필드 값을 표시 하는 컨트롤을 포함 합니다. 단추를 사용자가 데이터를 수정할 수 있도록 하려는 경우 일반적으로 추가 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 서식 파일을 사용자가 레코드를 선택, 편집 모드로 전환 하거나 레코드를 삭제할 수 있습니다.  
  
 추가 사용자 지정 서식 파일을 선언적으로 지정 하는 `ItemTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `ItemTemplate` 요소입니다. 컨트롤에 바인딩되는 데이터 원본의 필드 값을 표시 하려면 데이터 바인딩 식을 사용 합니다. 자세한 내용은 참조 [데이터 바인딩 식 개요](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
 기본 제공 select를 수행 하는 단추를 만들려면 삭제 및 편집 작업 서식 파일을 단추 컨트롤을 추가 합니다. 설정의 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 다음 표에 나열 된 속성을 값 중 하나입니다.  
  
|단추 종류|CommandName 값|  
|-----------------|-----------------------|  
|삭제|"Delete"|  
|편집|"Edit"|  
|선택|"Select"|  
  
   
  
## Examples  
 다음 예제에서는 데이터 항목에 대해 사용자 지정 템플릿을 정의 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.Items" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As EventHandler(Of ListViewUpdatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewUpdatedEventArgs ^&gt; ^ ItemUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 항목을 업데이트한 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 발생 항목의 [업데이트] 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 항목을 업데이트 합니다. (업데이트 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "업데이트"로 설정 합니다.) 그러면 업데이트 작업의 결과 확인 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> 개체에 영향을 받는 행 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다. 또한 예외 발생 했을 수를 확인할 수도 있습니다. 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여 나타낼 수 있습니다는 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 에 대 한 이벤트 처리기를 추가 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As EventHandler(Of ListViewUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewUpdateEventArgs ^&gt; ^ ItemUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 항목을 업데이트하기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 발생 항목의 [업데이트] 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 항목을 업데이트 합니다. (업데이트 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "업데이트"로 설정 합니다.) 그러면 업데이트 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> 현재 항목의 인덱스를 확인할 수 있도록 하는 이벤트 처리기에 전달 되는 개체입니다. 또한 업데이트 작업을 취소 해야 함을 지정할 수 있습니다. 업데이트 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> 개체 `true`합니다.  
  
 작업할 수는 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A>, 및 <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> 값이 데이터 원본에 전달 되기 전에 컬렉션입니다. 이러한 컬렉션을 사용 하는 일반적인 방법은 데이터 원본에 저장 되기 전에 사용자가 제공 하는 값을 HTML 인코딩하려면입니다. 이렇게 하면 스크립트 삽입 공격을 방지할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 에 대 한 이벤트 처리기를 추가 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/CS/ListViewItemUpdatingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/VB/ListViewItemUpdatingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LayoutCreated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> 컨트롤에서 <see cref="T:System.Web.UI.WebControls.ListView" /> 템플릿을 만들 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 렌더링 된 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 템플릿 컨트롤에 대 한 루트 컨테이너 역할을 만들어야 합니다. <xref:System.Web.UI.WebControls.ListView.LayoutCreated> 이벤트는 때의 레이아웃 템플릿을 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 만들어집니다. 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LayoutTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 루트 컨테이너에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 루트 컨테이너에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 속성의 루트 컨테이너에 대 한 사용자 지정 사용자 인터페이스 (UI)를 정의 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 레이아웃 서식 파일을 지정 하려면 추가 `LayoutTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `LayoutTemplate` 요소입니다.  
  
 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 콘텐츠에 테이블 행과 같은 자리 표시자 컨트롤을 포함 해야 합니다 (`tr`)으로 정의 된 항목에 대 한 요소는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 서식 파일 또는에 정의 된 그룹에 대 한는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 서식 파일입니다. 자리 표시자 컨트롤에서 있어야는 `runat` 특성이 "server"로 설정 및 `ID` 특성의 값으로 설정는 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> 또는 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> 여부에 따라 속성에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 그룹을 사용 하 합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 서식 파일에 필요 하지 않은 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 사용할 수는 <xref:System.Web.UI.WebControls.ListView> 하지 않고 제어는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 알려진 id 자리 표시자 서버 컨트롤 없이  
  
   
  
## Examples  
 루트 컨테이너에 대 한 사용자 지정 템플릿을 정의 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.EditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]
  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView> 정의 하지 않고 제어는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 컨트롤에서 서식 파일입니다. 서버 컨트롤 알려진된 ID로도 지정 하지 않았습니다.  
  
```  
<asp:ListView ID="ListView1" runat="server">  
  <ItemTemplate>  
    <% Eval("LastName")%>  
  </ItemTemplate>  
</asp:ListView>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">해당 컨트롤에 대해 저장된 컨트롤 상태 값이 들어 있는 개체입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤의 속성 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 개체입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 인프라 하며 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="protected virtual int MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.MaximumRows" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MaximumRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int MaximumRows { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 단일 페이지에 표시할 최대 항목 수를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 단일 페이지에 표시할 최대 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.DataPager> 개체에 연결 된는 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> 속성 값에 의해 제어 됩니다는 <xref:System.Web.UI.WebControls.DataPager> 개체 되며 동일는 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> 속성 값입니다. 그렇지 않으면 값은-1입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 대한 이벤트를 처리해야 하는지 여부를 확인합니다.</summary>
        <returns>이벤트를 처리해야 하는 경우 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.OnBubbleEvent%2A> 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 선택적으로 컨트롤 계층 구조를 통해 전달 되는 이벤트를 처리 합니다. 속성을 검사 하 여 이벤트를 처리할 것인지를 결정은 <xref:System.EventArgs> 에 포함 된 개체는 `e` 매개 변수입니다. 이벤트를 처리 해야 하는 경우 메서드는 적절 한 조치를 수행 합니다. 다른 이벤트는 무시 되 고 컨트롤 계층 구조로 전달 됩니다. 이 메서드의 반환 값에는 이벤트를 처리 또는 컨트롤 계층 구조로 전달할지 여부를 나타냅니다.  
  
 <xref:System.Web.UI.WebControls.ListView> 컨트롤에서 인식 되는 단추 중 하나를 클릭할 때 적절 한 조치를 수행 하기 위해이 메서드의 기본 구현을 재정의 합니다. 다음 표에서 단추를 보여 줍니다. 하는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 인식 합니다.  
  
|CommandName 값|설명|  
|-----------------------|-----------------|  
|"취소"|편집 또는 삽입 작업을 취소합니다. <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 이벤트를 발생시킵니다.|  
|"Delete"|데이터 소스에서 현재 레코드를 삭제합니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 및 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 이벤트입니다.|  
|"Select"|설정의 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 속성을는 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> 항목에 대 한 속성 값입니다. 렌더링 된 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 항목에 있습니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 및 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 이벤트입니다.|  
|"Edit"|항목이 편집 모드로 전환 합니다. 렌더링 된 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 항목에 있습니다. <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트를 발생시킵니다.|  
|"삽입"|바인딩된 값을 삽입 하는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 템플릿을 데이터 원본으로 합니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 및 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다.|  
|"업데이트"|바인딩된 값으로 데이터 소스에서 현재 레코드를 업데이트는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 서식 파일입니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 및 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 이벤트입니다.|  
|"Sort"|에 나열 된 열을 정렬 된 `CommandArgument` 단추의 속성입니다. 발생 된 <xref:System.Web.UI.WebControls.ListView.Sorting> 및 <xref:System.Web.UI.WebControls.ListView.Sorted> 이벤트입니다.|  
  
 이 버전의 메서드 반환 `true` 컨트롤에서 처리 하는 이벤트를 발생 시키면 이러한 단추 중 하나입니다. 이벤트 버블링 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 방법으로 알림을 웹 서버 컨트롤을 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 해야 합니다. 이 서버 컨트롤의 수명 주기이 단계에서 컨트롤의 뷰 상태 아직 채워지지 않았습니다. 또한이 컨트롤의 부모 또는 자식 인지 관계 없이이 메서드를 호출할 때 다른 서버 컨트롤을 액세스할 수 없습니다. 다른 서버 컨트롤 생성 하 고 액세스할 준비가 되도록 보장 되지 않습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnInit%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCanceling">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCanceling (System.Web.UI.WebControls.ListViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCanceling(class System.Web.UI.WebControls.ListViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCanceling (e As ListViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCanceling(System::Web::UI::WebControls::ListViewCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView> 발생는 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 이벤트 컨트롤에 있는 취소 단추를 클릭 하면 되지만 종료 하기 전에 삽입 또는 편집 모드입니다. ("취소" 단추가 단추 컨트롤은 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Cancel"로 설정 합니다.) 그러면 항목 원치 않는 상태가 될 경우 취소 작업을 중지 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A> 메서드는 <xref:System.Web.UI.WebControls.ListView> 를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> 이벤트입니다. 확장할 때 컨트롤 개발자가 사용 일반적으로는 <xref:System.Web.UI.WebControls.ListView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.ListViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.ListViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As ListViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::ListViewCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 항목 템플릿의 단추를 클릭할 때 있지만 명령이 실행 되기 전에 이벤트가 발생 합니다. 이렇게 하면에 대 한 응답을 제공 된 사용자 정의 루틴을 수행할 수 있습니다 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 또는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 이 이벤트가 발생할 때마다 값입니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A> 메서드는 <xref:System.Web.UI.WebControls.ListView> 를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 이벤트입니다. 확장할 때 컨트롤 개발자가 사용 일반적으로는 <xref:System.Web.UI.WebControls.ListView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As ListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::ListViewItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 렌더링 한 <xref:System.Web.UI.WebControls.ListViewItem> 컨트롤의 각 항목에 대 한 개체를 생성 해야 합니다. <xref:System.Web.UI.WebControls.ListView.ItemCreated> 이벤트는 각 항목은 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 만들어집니다. 이 콘텐츠 항목에 추가 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A> 메서드는 <xref:System.Web.UI.WebControls.ListView> 를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.ListView.ItemCreated> 이벤트입니다. 확장할 때 컨트롤 개발자가 사용 일반적으로는 <xref:System.Web.UI.WebControls.ListView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As ListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::ListViewItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 렌더링 될 수, 각 항목 컨트롤에 데이터 원본에서 레코드를 연결 해야 합니다. <xref:System.Web.UI.WebControls.ListView.ItemDataBound> 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.ListViewItem> 개체는 데이터 항목에 바인딩됩니다. 그러면 바인딩 프로세스 중 데이터 항목의 값을 수정 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDataBound%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 파생된 클래스에서 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.ListViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.ListViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As ListViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::ListViewDeletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> 발생 항목의 삭제 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 항목을 삭제 합니다. 삭제 단추는 해당 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성이 "Delete"로 설정되어 있는 단추 컨트롤입니다. 그러면 삭제 작업의 결과 확인 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDeleted%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.ListViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.ListViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As ListViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::ListViewDeleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> 발생 항목의 삭제 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 항목을 삭제 합니다. 삭제 단추는 해당 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성이 "Delete"로 설정되어 있는 단추 컨트롤입니다. 그러면 삭제 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDeleting%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 속성을 사용하여 데이터 소스 컨트롤에 바인딩되지 않은 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnItemEditing (System.Web.UI.WebControls.ListViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemEditing(class System.Web.UI.WebControls.ListViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemEditing (e As ListViewEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemEditing(System::Web::UI::WebControls::ListViewEditEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트는 항목의 편집 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 편집 모드로 전환 합니다. 편집 단추는 해당 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성이 "Edit"로 설정되어 있는 단추 컨트롤입니다. 그러면 편집 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemEditing%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 속성을 사용하여 데이터 소스 컨트롤에 바인딩되지 않은 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.ListViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.ListViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As ListViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::ListViewInsertedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 발생 항목의 삽입 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 컨트롤에서 항목을 삽입 합니다. (삽입 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "삽입"로 설정 합니다.) 그러면 삽입된 된 항목에 대 한 데이터베이스에서 자동 생성 된 값을 검색 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A> 메서드는 <xref:System.Web.UI.WebControls.ListView> 를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다. 확장할 때 컨트롤 개발자가 사용 일반적으로는 <xref:System.Web.UI.WebControls.ListView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.ListViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.ListViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As ListViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::ListViewInsertEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView> 발생는 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 있는 삽입 단추 컨트롤에서 이벤트를 클릭 또는 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 레코드를 삽입 합니다. (삽입 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "삽입"로 설정 합니다.) 그러면 HTML 인코딩 또는 레코드의 값을 데이터 원본에 삽입 하기 전에 유효성 검사 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A> 메서드는 <xref:System.Web.UI.WebControls.ListView> 를 발생 시키는 컨트롤의 <xref:System.Web.UI.WebControls.ListView.ItemInserting> 이벤트입니다. 확장할 때 컨트롤 개발자가 사용 일반적으로는 <xref:System.Web.UI.WebControls.ListView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 속성을 사용하여 데이터 소스 컨트롤에 바인딩되지 않은 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.ListViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.ListViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As ListViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::ListViewUpdatedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 발생 항목의 [업데이트] 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 항목을 업데이트 합니다. (업데이트 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "업데이트"로 설정 합니다.) 그러면 업데이트 작업의 결과 확인 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemUpdated%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.ListViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.ListViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As ListViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::ListViewUpdateEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 발생 항목의 [업데이트] 단추를 클릭할 때 또는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 항목을 업데이트 합니다. (업데이트 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "업데이트"로 설정 합니다.) 그러면 업데이트 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemUpdating%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 속성을 사용하여 데이터 소스 컨트롤에 바인딩되지 않은 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLayoutCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayoutCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayoutCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 렌더링 한 <xref:System.Web.UI.WebControls.ListViewItem> 개체를 컨트롤에 대 한 컨테이너 역할을 만들어야 합니다. <xref:System.Web.UI.WebControls.ListView.LayoutCreated> 에서 레이아웃 서식 파일을 만들 때 이벤트가 발생 된 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이렇게 하면 내에 있는 컨트롤의 표시 유형을 변경 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> 서식 파일입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnLayoutCreated%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPagePropertiesChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPagePropertiesChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged> 후의 페이지 속성이 변경 될 때 이벤트가 발생 된 <xref:System.Web.UI.WebControls.ListView> 제어를 사용 하 여 새 값을 설정는 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 메서드. 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 페이징 작업 등의 사용자 정의 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanging (System.Web.UI.WebControls.PagePropertiesChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanging(class System.Web.UI.WebControls.PagePropertiesChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPagePropertiesChanging (e As PagePropertiesChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPagePropertiesChanging(System::Web::UI::WebControls::PagePropertiesChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PagePropertiesChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> 이벤트가 발생 하기 전에 페이지 속성이 변경 될 때는 <xref:System.Web.UI.WebControls.ListView> 제어를 사용 하 여 새 값을 설정 합니다.는 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 메서드. 이렇게 하면 사용자 지정 루틴을 지우는 등이 이벤트가 발생할 때마다 수행할 수는 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 또는 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 속성입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 항목의 선택 단추를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.ListView> select 작업을 처리 합니다. (선택 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Select"로 설정 합니다.) 그러면 현재 선택 된 항목으로 상태 레이블을 업데이트 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.ListViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.ListViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanging (e As ListViewSelectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanging(System::Web::UI::WebControls::ListViewSelectEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 이벤트는 항목의 선택 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.ListView> select 작업을 처리 합니다. (선택 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Select"로 설정 합니다.) 그러면 선택 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.Sorted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorted> 정렬 단추를 클릭할 때 이벤트가 발생 또는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 정렬 작업을 처리 합니다. (정렬 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Sort"로 설정 합니다.) 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnSorted%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.ListViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.ListViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorting (e As ListViewSortEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorting(System::Web::UI::WebControls::ListViewSortEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorting> 정렬 단추를 클릭할 때 이벤트가 발생 또는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 정렬 작업을 처리 합니다. (정렬 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Sort"로 설정 합니다.) 그러면 정렬 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnSorting%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 속성을 사용하여 데이터 소스 컨트롤에 바인딩되지 않은 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTotalRowCountAvailable">
      <MemberSignature Language="C#" Value="protected virtual void OnTotalRowCountAvailable (System.Web.UI.WebControls.PageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTotalRowCountAvailable(class System.Web.UI.WebControls.PageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTotalRowCountAvailable (e As PageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTotalRowCountAvailable(System::Web::UI::WebControls::PageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23TotalRowCountAvailable> 이벤트는 데이터를 사용할 수는 <xref:System.Web.UI.WebControls.DataPager> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.PageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PagePropertiesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PagePropertiesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PagePropertiesChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PagePropertiesChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 속성이 변경될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 새 값을 설정한 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged> 후의 페이지 속성이 변경 될 때 이벤트가 발생 된 <xref:System.Web.UI.WebControls.ListView> 제어를 사용 하 여 새 값을 설정는 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 메서드. 그러면 선택한 항목을 지우거 나 사용자 지정 페이징 작업을 수행 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PagePropertiesChanging As EventHandler(Of PagePropertiesChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::PagePropertiesChangingEventArgs ^&gt; ^ PagePropertiesChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 속성이 변경될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 새 값을 설정하기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> 이벤트가 발생 하기 전에 페이지 속성이 변경 될 때는 <xref:System.Web.UI.WebControls.ListView> 제어를 사용 하 여 새 값을 설정 합니다.는 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 메서드. 이렇게 하면 사용자 지정 루틴을 지우는 등이 이벤트가 발생할 때마다 수행할 수는 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 또는 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> 속성입니다.  
  
 A <xref:System.Web.UI.WebControls.PagePropertiesChangingEventArgs> 개체 페이지에 표시 되는 첫 번째 레코드의 인덱스를 확인할 수 있도록 하는 이벤트 처리기에 전달 됩니다. 또한 단일 페이지에 표시할 항목의 최대 수를 확인할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리기를 만드는 방법의 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> 이벤트입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.DeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IEnumerable" /> 인터페이스를 구현하며 데이터가 들어 있는 개체입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤을 지정된 데이터 소스에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A> 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListView> 지정된 된 데이터 소스에 컨트롤을 바인딩할 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>때문에 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 메서드는 봉인 되어 재정의 해야 합니다는 <see cref="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" /> 메서드 데이터를 바인딩할 때 추가 작업을 수행 하려는 경우.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformSelect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결된 데이터 원본에서 데이터를 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A> 메서드 데이터를 데이터 바인딩된 컨트롤을 바인딩하는 데 데이터를 검색 한 후 호출 됩니다. 자세한 내용은 <xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.RemoveItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 항목 또는 그룹 컨테이너에 있는 모든 자식 컨트롤을 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 또는 그룹 컨테이너의 모든 자식 컨트롤을 삭제 하려면이 메서드는는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 있는 경우는 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> 에 정의 된 서식 파일은 <xref:System.Web.UI.WebControls.ListView> 컨트롤은 <xref:System.Web.UI.WebControls.ListView.RemoveItems%2A> 메서드 그룹 컨테이너의 모든 자식 컨트롤을 제거 합니다. 그렇지 않은 경우 항목 컨테이너에 있는 모든 자식 컨트롤을 제거 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트의 브라우저에서 서버 컨트롤 내용을 렌더링하는 데 사용되는 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 사용하여 웹 서버 컨트롤 내용을 클라이언트 브라우저에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Render%2A> 메서드는 지정 된를 사용 하 여 클라이언트의 브라우저에 서버 컨트롤 콘텐츠를 렌더링 하는 데 <xref:System.Web.UI.HtmlTextWriter> 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤의 속성 상태를 저장합니다.</summary>
        <returns>서버 컨트롤의 현재 뷰 상태를 반환합니다. 컨트롤과 연결된 뷰 상태가 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 속성의 상태를 저장 하려면이 메서드는는 <xref:System.Web.UI.WebControls.ListView> 제어를 유지 해야 하는 경우에는 <xref:System.Web.UI.Control.EnableViewState%2A> 속성이로 설정 된 `false`합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 하 고 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 현재 뷰 상태를 저장합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 대한 저장된 뷰 상태 값이 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SaveViewState%2A> 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.ListView> 컨트롤의 상태를 저장 하는 컨트롤입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택한 항목의 데이터 키 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택한 항목의 데이터 키 값입니다. 기본값은 <see langword="null" />로, 현재 선택된 항목이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 속성이 설정 되어는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 만듭니다는 <xref:System.Web.UI.WebControls.DataKey> 값 또는 지정 된 필드 또는 필드의 값을 사용 하 여 컨트롤의 각 항목에 대 한 개체입니다. <xref:System.Web.UI.WebControls.DataKey> 개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 컬렉션입니다. 일반적으로 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 속성 검색을 사용 하는 <xref:System.Web.UI.WebControls.DataKey> 의 특정 데이터 항목에 대 한 개체는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 그러나 자식만 검색 하려는 경우는 <xref:System.Web.UI.WebControls.DataKey> 개체의 현재 선택 된 항목, 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 가기로 속성입니다.  
  
 사용 하는 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 속성을 검색 하는 것과 같습니다는 <xref:System.Web.UI.WebControls.DataKey> 에서 개체는 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 컬렉션 내의 지정 된 인덱스에는 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 속성입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 현재 선택 된 항목에 대 한 데이터 키 값을 직접 검색 하는 속성입니다.  
  
 만들려는 경우 한 <xref:System.Web.UI.WebControls.ControlParameter> 개체 하려면 첫 번째 필드 이외의 키 필드에 액세스를 사용 하 여 인덱싱된 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 속성에는 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 속성의는 <xref:System.Web.UI.WebControls.ControlParameter> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 번째 키 필드는 마스터/세부 시나리오에서 매개 변수로 사용 하는 방법을 보여 줍니다. A <xref:System.Web.UI.WebControls.ListView> 컨트롤을 사용 하 여 AdventureWorks 데이터베이스의 제품 재고 테이블에서 레코드를 표시 합니다. 항목을 선택 하는 경우는 <xref:System.Web.UI.WebControls.ListView> 컨트롤, 제품의 세부 다른에 표시 되는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. ProductID은 첫 번째 범위에서 두 번째 키 이름 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 두 번째 키에 액세스 하려면 코드의 값을 사용 `ProductInventoryListView.SelectedDataKey[1]` (`ProductInventoryListView.SelectedDataKey(1)` Visual basic에서)으로 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 에 대 한는 <xref:System.Web.UI.WebControls.ControlParameter> 개체입니다. 이 매개 변수 개체가에서 다시 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource> 하는 컨트롤을 두 번째 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 바인딩된 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/CS/ListViewSelectedDataKeyCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/VB/ListViewSelectedDataKeyVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" /> 속성에 데이터 키가 지정되어 있지 않은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택한 항목의 인덱스를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택한 항목의 0부터 시작하는 인덱스입니다. 기본값은 -1로, 현재 선택된 항목이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 속성에서 현재 선택 된 항목의 인덱스를 확인 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 또한 프로그래밍 방식으로 컨트롤에서 항목을 선택 하려면이 속성을 사용할 수 있습니다. 그러나 (하는 경우 수동으로 데이터에 바인딩할 있습니다는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 읽거나도 수동으로이 속성을 설정를 처리 해야 할 수 있습니다.)  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 속성에서 항목을 선택 하는지 여부를 확인 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 메서드.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.DeleteItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" /> 속성이 -1보다 작은 값으로 설정된 경우입니다.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 선택 단추를 클릭할 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택 작업을 처리한 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 항목의 선택 단추를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.ListView> select 작업을 처리 합니다. (선택 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Select"로 설정 합니다.) 그러면 상태 레이블을 현재 선택 된 항목에 대 한 정보로 업데이트 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리기를 만드는 방법의 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 이벤트입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanging As EventHandler(Of ListViewSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewSelectEventArgs ^&gt; ^ SelectedIndexChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 선택 단추를 클릭할 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택 작업을 처리하기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 이벤트는 항목의 선택 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.ListView> select 작업을 처리 합니다. (선택 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Select"로 설정 합니다.) 그러면 선택 작업을 취소 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> 속성입니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewSelectEventArgs> 개체는 사용자가 선택 된 항목의 인덱스를 확인할 수 있도록 하는 이벤트 처리기에 전달 됩니다. 또한 선택 작업을 취소 해야 함을 지정할 수 있습니다. 선택 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewSelectEventArgs> 개체 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리기를 만드는 방법의 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 이벤트입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/CS/ListViewItemSelectedIndexChangingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/VB/ListViewItemSelectedIndexChangingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 선택한 항목에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 선택한 항목에 대한 사용자 지정 내용이 들어 있는 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 속성에서 선택한 항목에 대 한 사용자 지정 사용자 인터페이스 (UI)를 정의 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 일반적으로 표시 된 다른 항목에서 선택한 항목을 구분 하는 데 사용 됩니다. <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 대신 렌더링 되는 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 선택한 항목에 대 한 서식 파일입니다.  
  
 추가 사용자 지정 서식 파일을 선언적으로 지정 하는 `SelectedItemTemplate` 요소 안에 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 서식 파일의 내용을 추가할 수 있습니다는 `SelectedItemTemplate` 요소입니다. 컨트롤에 바인딩되는 데이터 원본의 필드 값을 표시 하려면 데이터 바인딩 식을 사용 합니다. 자세한 내용은 참조 [데이터 바인딩 식 개요](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
 단추를 추가할 수도 있습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>합니다. 기본 제공 삭제를 수행 하거나 작업을 편집 하는 단추를 만들려면을 설정 하 고는 서식 파일에는 단추 컨트롤을 추가 해당 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 다음 표에 나열 된 속성을 값 중 하나입니다.  
  
|단추 종류|CommandName 값|  
|-----------------|-----------------------|  
|삭제|"Delete"|  
|편집|"Edit"|  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 속성에서 선택한 항목의 내용을 정의 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedPersistedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedPersistedDataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 컨트롤에서 유지되는 선택한 항목의 데이터 키 값을 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩 컨트롤에서 유지되는 선택한 항목의 데이터 키입니다. 기본값은 <see langword="null" />로, 현재 선택된 항목이 없음을 나타냅니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택한 항목의 데이터 키 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 선택한 항목의 데이터 키 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 데이터 소스의 기본 키를 나타내는 필드 이름 쉼표로 구분 된 목록에 속성을 설정할 수 있습니다. 이 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey> 값 또는 지정 된 필드 또는 필드의 값을 사용 하 여 컨트롤의 각 항목에 대 한 개체입니다. <xref:System.Web.UI.WebControls.DataKey> 개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 컬렉션입니다.  
  
 일반적으로 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 속성 가져오는 데 사용 되는 <xref:System.Web.UI.WebControls.DataKey> 의 특정 데이터 항목에 대 한 개체는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 그러나만 확인 하고자 하는 경우는 <xref:System.Web.UI.WebControls.DataKey> 개체의 현재 선택 된 항목, 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 가기로 속성입니다. 사용 하 여 선택한 항목의 첫 번째 키 필드의 데이터 키 값을 직접 수도 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 속성입니다.  
  
 만들려는 경우 한 <xref:System.Web.UI.WebControls.ControlParameter> 개체를 첫 번째 필드를 사용 하 여 이외의 키 필드에 액세스 하는 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 속성입니다. 예를 들어 참조는 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 키 필드는 마스터/세부 시나리오에서 매개 변수로 사용 하는 방법을 보여 줍니다. 항목을 선택 하는 경우는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을는 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 속성으로 사용 되는 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 에 대 한는 <xref:System.Web.UI.WebControls.ControlParameter> 개체입니다. 이 매개 변수 개체가에서 다시 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource> 하는 컨트롤을 두 번째 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 바인딩된 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]
  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 키 필드의 값을 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/CS/ListViewSelectedValueCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/VB/ListViewSelectedValueVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      </Docs>
    </Member>
    <Member MemberName="SelectItem">
      <MemberSignature Language="C#" Value="public void SelectItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SelectItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectItem (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectItem(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">편집 모드에 있는 항목의 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 편집 모드에 있는 항목을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">항목 인덱스가 음수입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEditItem">
      <MemberSignature Language="C#" Value="public void SetEditItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetEditItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEditItem (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEditItem(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">편집 모드로 설정할 항목의 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 지정된 항목을 편집 모드로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> 속성에서 편집 모드에 있는 항목에 액세스 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 편집 항목의 내용은에 의해 정의 되는 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 속성입니다.  
  
 이 메서드는 <xref:System.Web.UI.WebControls.ListView.ItemEditing> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperties">
      <MemberSignature Language="C#" Value="protected virtual void SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetPageProperties (startRowIndex As Integer, maximumRows As Integer, databind As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetPageProperties(int startRowIndex, int maximumRows, bool databind);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">페이지의 첫 번째 레코드 인덱스입니다.</param>
        <param name="maximumRows">단일 페이지의 최대 항목 수입니다.</param>
        <param name="databind">속성을 설정한 후 컨트롤을 다시 바인딩하도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에 있는 데이터 페이지의 속성을 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumRows" />가 1보다 작습니다.  -또는-  <paramref name="startRowIndex" />가 0보다 작습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::String ^ sortExpression, System::Web::UI::WebControls::SortDirection sortDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤을 정렬하는 데 사용할 정렬 식입니다.</param>
        <param name="sortDirection">
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 값 중 하나입니다.</param>
        <summary>지정된 정렬 식과 방향에 따라 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤을 정렬합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 에 표시 되는 데이터를 프로그래밍 방식으로 정렬 하는 메서드는 <xref:System.Web.UI.WebControls.ListView> 지정 된 정렬 식 및 방향을 사용 하 여 제어 합니다. 정렬 식을로 정렬 하는 열을 지정 합니다. 여러 열을 정렬 하려면 필드 이름의 쉼표로 구분 된 목록을 포함 하는 정렬 식을 만듭니다. 정렬 방향을 오름차순 또는 내림차순 정렬 수행 되는지 여부를 나타냅니다.  
  
 내용을 정렬 하려는 경우 일반적으로이 메서드를 사용는 <xref:System.Web.UI.WebControls.ListView> 제어에서 같은 페이지에서 다른 컨트롤에서입니다. 이 메서드는 또한 프로그래밍 방식으로 설정에 대 한 기본 정렬 순서는 <xref:System.Web.UI.WebControls.ListView> 를 처음 렌더링할 때 제어 합니다.  
  
 이 메서드는 <xref:System.Web.UI.WebControls.ListView.Sorted> 및 <xref:System.Web.UI.WebControls.ListView.Sorting> 이벤트입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 프로그래밍 방식으로 정렬 하는 메서드는 <xref:System.Web.UI.WebControls.ListView> 여러 데이터 필드에 의해 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되어 있지만 데이터 소스와 연결된 <see cref="T:System.Web.UI.DataSourceView" /> 개체가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::SortDirection SortDirection { System::Web::UI::WebControls::SortDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬하고 있는 필드의 정렬 방향을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 값 중 하나입니다. 기본값은 <see langword="SortDirection.Ascending" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> 속성을 정렬 하 고 필드를 오름차순 또는 내림차순 정렬 되는지 여부를 확인 합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> 속성의 정렬 방향을 프로그래밍 방식으로 확인 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 정렬 작업을 처리한 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorted> 정렬 단추를 클릭할 때 이벤트가 발생 또는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 후 메서드가 호출 되는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 정렬 작업을 처리 합니다. (정렬 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Sort"로 설정 합니다.) 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬하고 있는 필드와 관련된 정렬 식을 가져옵니다.</summary>
        <value>정렬하고 있는 필드와 관련된 정렬 식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 열을 정렬 하는 경우이 속성의 기준으로 정렬 하려면 필드 쉼표로 구분 된 목록이 들어 있습니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.SortExpression%2A> 속성에 정렬 되 고 열을 프로그래밍 방식으로 확인 하는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.SortDirection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortDirection" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorting As EventHandler(Of ListViewSortEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::ListViewSortEventArgs ^&gt; ^ Sorting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬 작업이 요청될 때 <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서 정렬 작업을 처리하기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.Sorting> 정렬 단추를 클릭할 때 이벤트가 발생 또는 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 메서드를 호출 하기 전에 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 정렬 작업을 처리 합니다. (정렬 단추는 단추 컨트롤 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 "Sort"로 설정 합니다.) 그러면 같은 정렬 식을 사용자 지정이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewSortEventArgs> 개체 열에 대 한 정렬 식을 확인할 수 있도록 하는 이벤트 처리기에 전달 됩니다. 또한 정렬 작업을 취소 해야 함을 지정할 수 있습니다. 정렬 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.ListViewSortEventArgs> 개체 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리기를 만드는 방법의 <xref:System.Web.UI.WebControls.ListView.Sorting> 이벤트입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/CS/ListViewSortingCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.Sorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/VB/ListViewSortingVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="protected virtual int StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StartRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int StartRowIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터 페이지에 표시된 첫 번째 레코드의 인덱스를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터 페이지에 표시된 첫 번째 레코드의 인덱스입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray Implements IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용되는 데이터 값의 컬렉션을 가져옵니다.</summary>
        <value>데이터 필드 값의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.IDataKeysControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 컨트롤에 표시된 항목에 대한 기본 키 필드의 이름이 들어 있는 배열을 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에 표시되는 항목에 대한 기본 키 필드의 이름이 포함된 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 여러 개의 데이터 항목의 고유 목록이 들어 있는 경우 데이터 바인딩 컨트롤에 바인딩되는 데이터 목록의 이름을 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩 컨트롤에 바인딩되는 데이터 목록의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 소스 개체를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩 컨트롤에서 검색하는 데이터 목록이 포함된 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 컨트롤에서 데이터 항목의 목록을 검색할 데이터 소스 컨트롤의 ID를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 데이터를 검색할 데이터 소스를 나타내는 컨트롤의 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.IDataSource" /> 인터페이스를 구현하는 개체를 가져옵니다. 개체의 데이터 콘텐츠에 대한 액세스를 제공합니다.</summary>
        <value>데이터 바인딩 컨트롤에서 검색하는 데이터 항목 목록이 포함된 데이터 소스 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value=" Property ClientIDRowSuffix As String() Implements IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 속성을 <see cref="P:System.Web.UI.Control.ClientIDMode" />로 설정한 경우에는 값을 <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> 컨트롤의 각 데이터 행을 고유하게 식별하는 데 사용할 데이터 필드의 이름을 가져옵니다.</summary>
        <value>ASP.NET이 <see cref="T:System.Web.UI.WebControls.ListView" /> 값을 생성할 경우 값을 <see cref="P:System.Web.UI.Control.ClientID" /> 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용할 데이터 필드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.IDataKeysControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKeys As DataKeyArray Implements IDataBoundListControl.DataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System.Web.UI.WebControls.IDataBoundListControl.DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 컨트롤에 있는 각 행을 나타내는 데이터 키 값의 컬렉션을 가져옵니다.</summary>
        <value>데이터 바인딩 컨트롤에서 각 행의 데이터 키 값이 포함된 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value=" Property EnablePersistedSelection As Boolean Implements IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 컨트롤에서 데이터를 통해 페이지를 지정할 때 선택된 행이 유지되는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 키를 기준으로 선택되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SelectedDataKey As DataKey Implements IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 컨트롤에서 선택한 행의 데이터 키 값이 들어 있는 데이터 키 개체를 가져옵니다.</summary>
        <value>데이터 바인딩 컨트롤에서 선택한 행의 데이터 키 값이 들어 있는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberSignature Language="VB.NET" Value=" Property SelectedIndex As Integer Implements IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 선택한 행의 인덱스를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 선택한 행의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MaximumRows As Integer Implements IPageableItemContainer.MaximumRows" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IPageableItemContainer.MaximumRows { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />를 참조하세요.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 단일 페이지에 표시할 최대 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23MaximumRows%2A> 속성의 값을 사용 하 여는 <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> 단일 페이지에 표시할 항목의 최대 수를 가져올 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties">
      <MemberSignature Language="C#" Value="void IPageableItemContainer.SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetPageProperties (startRowIndex As Integer, maximumRows As Integer, databind As Boolean) Implements IPageableItemContainer.SetPageProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(int startRowIndex, int maximumRows, bool databind) = System::Web::UI::WebControls::IPageableItemContainer::SetPageProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">페이지의 첫 번째 레코드 인덱스입니다.</param>
        <param name="maximumRows">단일 페이지의 최대 항목 수입니다.</param>
        <param name="databind">속성을 설정한 후 컨트롤을 다시 바인딩하도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23SetPageProperties%2A> 메서드가 호출 하는 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> 의 메서드는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 페이지 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property StartRowIndex As Integer Implements IPageableItemContainer.StartRowIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />를 참조하세요.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤의 데이터 페이지에 표시된 첫 번째 레코드의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23StartRowIndex%2A> 속성 값을 사용 하는 <xref:System.Web.UI.WebControls.ListView.StartRowIndex%2A> 속성 페이지에 표시 되는 첫 번째 레코드의 인덱스를 가져옵니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.UI.WebControls.PageEventArgs&gt; System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.PageEventArgs&gt; System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" />
      <MemberSignature Language="VB.NET" Value="Custom Event TotalRowCountAvailable As EventHandler(Of PageEventArgs) Implements System.Web.UI.WebControls.IPageableItemContainer" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.PageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberSignature Language="VB.NET" Value=" Property DataKey As DataKey Implements IPersistedSelector.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IPersistedSelector.DataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 선택한 레코드의 데이터 키 값을 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 선택한 레코드의 데이터 키 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ListView> 인스턴스가 <xref:System.Web.UI.WebControls.IPersistedSelector> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IWizardSideBarListControl.Items">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerable System.Web.UI.WebControls.IWizardSideBarListControl.Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable System.Web.UI.WebControls.IWizardSideBarListControl.Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IWizardSideBarListControl#Items" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Items As IEnumerable Implements IWizardSideBarListControl.Items" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::IEnumerable ^ System.Web.UI.WebControls.IWizardSideBarListControl.Items { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public override short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see langword="0" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.TabIndex%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.TabIndex" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public override string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.ToolTip%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.ToolTip" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (int itemIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(int32 itemIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (itemIndex As Integer, causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(int itemIndex, bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemIndex">업데이트할 항목의 인덱스입니다.</param>
        <param name="causesValidation">이 메서드가 호출될 때 페이지 유효성 검사를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>데이터 소스에서 지정된 인덱스 위치에 있는 레코드를 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 메서드 프로그래밍 방식으로 데이터 원본에 지정 된 인덱스에 있는 레코드를 업데이트 합니다. 일반적으로이 방법을 사용 하면 외부에서 레코드를 업데이트 하려는 경우는 <xref:System.Web.UI.WebControls.ListView> 페이지 내의 다른 컨트롤와 같은 제어 합니다.  
  
> [!NOTE]
>  이 메서드는 양방향 데이터 바인딩된 입력된 컨트롤을 포함 하는 항목에 대해서만 호출할 수 있습니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 [데이터베이스에 바인딩](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다.  
  
 업데이트 작업 전의 페이지 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다.  
  
 이 메서드는 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> 및 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> 이벤트입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 프로그래밍 방식으로 업데이트 하는 메서드는 <xref:System.Web.UI.WebControls.ListView> 데이터 소스의 항목입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/CS/ListViewUpdateItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.UpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/VB/ListViewUpdateItemVB.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" />가 0보다 작습니다.  -또는-  <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.DataSourceView" /> 개체가 <see langword="null" />입니다.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_UpdateMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터를 업데이트하기 위해 호출할 메서드의 이름을 가져오거나 설정합니다.</summary>
        <value>메서드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 방법으로 사용할 모델 바인딩을 사용 하면이 속성을 설정 합니다.  
  
 Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.WebControl.Width" /> 속성을 재정의합니다. <see cref="T:System.Web.UI.WebControls.ListView" /> 컨트롤에서는 이 속성을 설정할 수 없습니다.</summary>
        <value>이 속성이 설정되지 않았음을 나타내는 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스타일 속성에서 지원 되지 않는 <xref:System.Web.UI.WebControls.ListView> 제어 합니다. 설정 하려는 경우는 <xref:System.Web.UI.WebControls.ListView.Width%2A> 속성에는 <xref:System.NotSupportedException> 예외가 throw 됩니다. 속성을 가져오려면 하는 경우 기본 클래스의 해당 속성의 기본값을 반환 합니다.  
  
 스타일에는 <xref:System.Web.UI.WebControls.ListView> 컨트롤 스타일을 적용 해야 안에 있는 컨트롤의 <xref:System.Web.UI.WebControls.ListView> 템플릿을 사용 하 여 스타일 시트 (CSS) 클래스 또는 인라인 스타일 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ListView.Width" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>