<Type Name="DataGridColumnCollection" FullName="System.Web.UI.WebControls.DataGridColumnCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cb99a1c64e53cfbe791e62f4c1c3fb2712e2c8b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599567" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataGridColumnCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataGridColumnCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataGridColumnCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataGridColumnCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridColumnCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.DataGrid" /> 제어의 열을 나타내는 <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 파생 열 개체의 컬렉션입니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 프로그래밍 방식으로의 컬렉션을 관리할 컬렉션을 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체입니다. 이러한 개체의 열을 나타내는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 추가, 제거 또는 삽입에 열 수는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
> [!NOTE]
>  때는 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> 속성이로 설정 되어 `true,` 에서 만든 열에서 <xref:System.Web.UI.WebControls.DataGrid> 제어에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다.  
  
 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 뷰 상태에 대 한 컬렉션입니다. 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 상태가 다시 로드 되 고 컨트롤을 다시 작성 됩니다. 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid> 표시 될 때 제어 합니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid> 는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> 각 열을 표시 하거나 숨기려면 속성입니다.  
  
 열에 표시 되는 순서를 결정 하는 컬렉션의 열 순서는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 다음 표에서 다른 열에서 파생 된 클래스는 <xref:System.Web.UI.WebControls.DataGridColumn> 클래스입니다.  
  
|열 클래스|설명|  
|------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|데이터 원본의 필드에 바인딩되는 열입니다. 필드의 각 항목 텍스트로 표시합니다. 이 기본 열 형식에 대 한는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|열에서 각 항목에 대 한 명령 단추를 표시 하는 열입니다. 이 옵션을 사용 하면 추가 / 제거 단추와 같이 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다.|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|열에서 각 항목에 대 한 편집 명령을 포함 하는 열입니다.|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|하이퍼링크 열에서 각 항목을 표시 하는 열입니다. 열 내용의 정적 텍스트 또는 데이터 원본의 필드에 바인딩할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|지정된 된 서식 파일에 따라 열에 각 항목을 표시 하는 열입니다. 이 옵션을 사용 하면 예를 들어 이미지를 표시 하는 열의 내용을 제어할 수 있습니다.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGridColumn> 클래스는 나열 된 열 클래스에 대 한 기본 클래스입니다. 직접 사용 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 동적으로 열을 추가 하는 컬렉션의 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 속성은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤은의 인스턴스는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 클래스.  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridColumnCollection (System.Web.UI.WebControls.DataGrid owner, System.Collections.ArrayList columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.DataGrid owner, class System.Collections.ArrayList columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.#ctor(System.Web.UI.WebControls.DataGrid,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As DataGrid, columns As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridColumnCollection(System::Web::UI::WebControls::DataGrid ^ owner, System::Collections::ArrayList ^ columns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.DataGrid" />
        <Parameter Name="columns" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="owner">이 컬렉션에 해당하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤입니다.</param>
        <param name="columns">열의 컬렉션을 저장하는 <see cref="T:System.Collections.ArrayList" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고의 새 인스턴스를 초기화 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 클래스입니다.  
  
 [!code-csharp[Classic DataGridColumnCollection.DataGridColumnCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.DataGridColumnCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DataGridColumnCollection.DataGridColumnCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.DataGridColumnCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Collections.ArrayList" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (column As DataGridColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::DataGridColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" />에 추가할 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 파생 열 개체를 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 컬렉션의 끝에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 추가 하는 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체의 끝에는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 뷰 상태에 대 한 컬렉션입니다. 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수입니다. 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid> 표시 될 때 제어 합니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid> 는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> 각 열을 표시 하거나 숨기려면 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.Add%2A> 동적으로 열을 추가 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 속성은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤은의 인스턴스는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 클래스.  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, column As DataGridColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::DataGridColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="index">
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열을 삽입할 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />의 인덱스 위치입니다.</param>
        <param name="column">
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" />에 삽입할 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 파생 열 개체를 지정된 인덱스에 해당하는 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 컬렉션에 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 삽입 한 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체의 지정 된 인덱스 위치에는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 뷰 상태에 대 한 컬렉션입니다. 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수입니다. 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid> 표시 될 때 제어 합니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid> 는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> 각 열을 표시 하거나 숨기려면 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.AddAt%2A> 동적으로 열을 추가 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 속성은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤은의 인스턴스는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.AddAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.AddAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.AddAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.AddAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 컬렉션에서 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열 개체를 모두 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 제거 하려면이 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TableRowCollection.Count%2A> 자동으로 속성이 `0` 후이 메서드를 사용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.Clear%2A> 비어 있는 것으로 메서드는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션에 새 열을 추가 하기 전에 컬렉션입니다.  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />에서 복사된 항목을 수신하는 0부터 시작하는 <see cref="T:System.Array" />입니다.</param>
        <param name="index">복사한 내용을 받도록 지정된 <see cref="T:System.Array" />의 첫째 위치입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />의 지정된 인덱스에서 시작하여 <see cref="T:System.Array" /> 컬렉션에서 지정된 <see cref="T:System.Array" />로 항목을 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내용을 복사 하려면이 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 에 지정 된 컬렉션 <xref:System.Array?displayProperty=nameWithType>지정된 된 인덱스부터 시작 합니다.  
  
> [!NOTE]
>  `array` 매개 변수는 0부터 시작 해야 합니다. <xref:System.Array?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.CopyTo%2A> 의 내용을 복사 하는 메서드는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 배열에 컬렉션 <xref:System.Web.UI.WebControls.DataGridColumn> 개체입니다.  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.CopyTo Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.CopyTo Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 컬렉션에 있는 열의 수를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" />에 있는 열의 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열 수를 확인 하려면이 속성을 사용 하 여 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다. <xref:System.Web.UI.WebControls.DataGridColumnCollection.Count%2A> 속성은 컬렉션의 상위 결정 하기 위해 컬렉션을 반복할 때 주로 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.Count%2A> 속성의 상한을 결정 하는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다. 이 값은 다음 컬렉션을 반복 하는 데 사용 됩니다.  
  
 [!code-aspx-csharp[classic datagridcolumncollection.this example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagridcolumncollection.this example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Collections.IEnumerator" /> 컬렉션에 있는 모든 <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 파생 열 개체가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 인터페이스를 반환합니다.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" />에 있는 모든 <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 파생 열 개체가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 인터페이스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 만드는 데는 <xref:System.Collections.IEnumerator?displayProperty=nameWithType> 각 항목 얻으려고 쉽게 반복할 수 있는 인터페이스는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 사용 하 여는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 컬렉션에서 가리키는 현재 항목을 가져올 속성입니다.  
  
 사용 하 여는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 메서드를 컬렉션의 다음 항목으로 이동 합니다.  
  
 사용 하 여는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 초기 위치에 열거자를 이동 하는 메서드.  
  
> [!NOTE]
>  <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 만든 후에 메서드를 호출 해야는 <xref:System.Collections.IEnumerator?displayProperty=nameWithType> 또는 개체를 사용 하 여 후는 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 열거자는 컬렉션의 첫 번째 항목을 이동 하는 메서드. 그렇지 않으면으로 표시 되는 항목은 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 속성이 정의 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator%2A> 만드는 메서드를 한 <xref:System.Collections.IEnumerator?displayProperty=nameWithType> 의 내용을 표시 하기 위해 반복할 수 있는 인터페이스는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.GetEnumerator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.GetEnumerator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.IndexOf(System.Web.UI.WebControls.DataGridColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (column As DataGridColumn) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::DataGridColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" />에서 검색할 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 컬렉션에서 지정된 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열 개체의 인덱스를 반환합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" />에 있는 지정된 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열의 인덱스 위치입니다. 기본값은 <see langword="-1" />로, 지정된 <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 파생 개체가 없음을 나타냅니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 인덱스 번호를 확인 하려면이 메서드를 사용 하 여 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체의 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다. 하는 경우 지정 된 <xref:System.Web.UI.WebControls.DataGridColumn>-개체가 파생된 열이 발견 되지 않으면 인덱스는 `-1` 반환 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.IndexOf%2A> 의 인덱스를 결정 하는 메서드는 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 개체를 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.IndexOf Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.IndexOf Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 컬렉션에 있는 열을 수정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          모든 경우에 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 항상 반환 `false` 임을 나타내는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 모든 경우에에서 컬렉션에 쓸 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 컬렉션에 대한 액세스가 동기화되는지 즉, 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          모든 경우에 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=nameWithType> 클래스 및 항상 반환 하도록 재정의 `false`합니다.  
  
 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized%2A> 속성 참조는 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataGridColumn this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridColumn Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataGridColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataGridColumn ^ default[int] { System::Web::UI::WebControls::DataGridColumn ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">검색할 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />에 있는 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열의 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 컬렉션에서 지정된 인덱스에 해당하는 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열 개체를 가져옵니다.</summary>
        <value>지정된 인덱스에 해당하는 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />의 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인덱서를 사용 하 여 한 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체를는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 배열 표기법을 사용 하 여 지정된 된 인덱스에 컬렉션입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 인덱서를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체를는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다. 제목 텍스트는 <xref:System.Web.UI.WebControls.DataGridColumn>-파생된 열 개체를 컬렉션의 각 항목에 대 한 웹 페이지에 표시 됩니다.  
  
 [!code-aspx-csharp[classic datagridcolumncollection.this example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagridcolumncollection.this example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.this Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
        <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.DataGridColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.DataGridColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (column As DataGridColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::DataGridColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.UI.WebControls.DataGridColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" />에서 제거할 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 컬렉션에서 지정된 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 지정 된 제거 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체를 한 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 뷰 상태에 대 한 컬렉션입니다. 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수입니다. 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid> 표시 될 때 제어 합니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid> 는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> 각 열을 표시 하거나 숨기려면 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.Remove%2A> 열을 제거 하는 메서드는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다. <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 속성은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤은는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 <see cref="T:System.Web.UI.WebControls.DataGridColumn" />에 있는 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열의 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 컬렉션에서 지정된 인덱스에 해당하는 <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 파생 열 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 제거 하는 <xref:System.Web.UI.WebControls.DataGridColumn>-파생 열 개체를 한 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션 내의 지정한 인덱스에 합니다.  
  
 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 내용을 저장 하지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 뷰 상태에 대 한 컬렉션입니다. 를 추가 하거나 열을 동적으로 제거 하려면 하면 프로그래밍 방식으로 추가 하거나 제거 해야 열 페이지를 새로 고칠 때마다 합니다. 제공 된 `Page_Init` 함수를 추가 하거나 제거 하기 전에 열은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 상태가 다시 로드 하 고 다시 빌드되기 수입니다. 그렇지 않으면 변경 내용이 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션에 반영 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid> 표시 될 때 제어 합니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 열을 추가 하거나 열을 제거 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.DataGrid> 는 정적으로 열이 나열을 사용 하 여 보다 쉽게 제어가 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> 각 열을 표시 하거나 숨기려면 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt%2A> 열을 제거 하는 메서드는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다. <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 의 속성은 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤은는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 컬렉션입니다.  
  
 [!code-aspx-csharp[Classic DataGridColumnCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGridColumnCollection.RemoveAt Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGridColumnCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGridColumnCollection.RemoveAt Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />가 <see langword="0" />보다 작거나 <see cref="P:System.Web.UI.WebControls.DataGridColumnCollection.Count" />보다 큽니다.</exception>
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Add(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.AddAt(System.Int32,System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Remove(System.Web.UI.WebControls.DataGridColumn)" />
        <altmember cref="M:System.Web.UI.WebControls.DataGridColumnCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
        <value>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 개체입니다.  
  
 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> 속성 참조는 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션에서 뷰 상태 변경 내용을 추적하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 개체에서 해당 개체의 뷰 상태 변경 내용을 추적하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGridColumnCollection.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A> 멤버는 명시적 인터페이스 멤버 구현 합니다. 사용할 수 있습니다 경우에만 한 <xref:System.Web.UI.WebControls.DataGridColumnCollection> 인스턴스로 캐스팅 되는 <xref:System.Web.UI.IStateManager> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 <see cref="T:System.Object" />입니다.</param>
        <summary>이전에 저장된 상태를 로드합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>상태 변경 사항이 포함된 개체를 반환합니다.</summary>
        <returns>해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>상태 변경 사항 추적을 시작합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>