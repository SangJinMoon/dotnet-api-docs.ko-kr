<Type Name="LoginView" FullName="System.Web.UI.WebControls.LoginView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1240eec889eaa251a6de975e3e2475daf8a5adb5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginView extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginView" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginView&#xA;Inherits Control&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginView : System::Web::UI::Control, System::Web::UI::INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ViewChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("CurrentView")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자의 인증 상태 및 역할 멤버 자격에 따라 지정된 사용자에 대한 적절한 콘텐츠 템플릿을 표시합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.LoginView> 다른 웹 사이트 콘텐츠 서식 파일 (또는 "보기") 다른 사용자에 대해 사용자가 인증 되는지 여부에 따라 컨트롤 표시 하 고, 웹 사이트 역할 자신이에 속하게 됩니다.  
  
> [!NOTE]
>  ASP.NET에서 사용할 수 있는 login 컨트롤 집합에 익숙하지 않은 경우 참조 [ASP.NET Login 컨트롤 개요](http://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d) 계속 하기 전에. Login 컨트롤 및 멤버 자격과 관련 된 기타 항목 목록을 참조 하십시오. [멤버 자격을 사용 하 여 사용자 관리](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)합니다.  
  
 서식 파일에 저장 된 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성은 모든 방문자가 로그인 하지 않은 웹 사이트에 게 표시 됩니다. 사용자가 로그인 하 고, 사이트에서 사용자의 역할 중 하나가 지정 된 연결 된 템플릿을 표시 됩니다는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 속성 또는에 지정 된 기본 서식 파일은 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 템플릿을의 세 가지 템플릿 속성 중 하나에 할당 하면 다양 한 서식 파일 간의 전환을 관리는 <xref:System.Web.UI.WebControls.LoginView> 클래스:  
  
-   <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> -웹 사이트에 로그인 하지 않은 사용자에 게 표시할 템플릿을 지정 합니다. 로그인은 사용자가이 템플릿을 볼 수 없습니다.  
  
-   <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> -웹 사이트에 로그인 했지만 정의 된 템플릿이 있는 역할 그룹에 속하지 않는 사용자에 게 표시할 기본 서식 파일을 지정 합니다.  
  
-   <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> -정의 된 역할 그룹 템플릿 포함 하는 역할의 구성원 인 로그인 사용자에 게 표시할 템플릿을 지정 합니다. 서식 파일에는 역할의 특정 집합이 연관 된 콘텐츠 <xref:System.Web.UI.WebControls.RoleGroup> 인스턴스.  
  
 역할 그룹 템플릿은 소스에 정의 된 순서로 검색 됩니다. 첫 번째 일치 하는 역할 그룹 템플릿이 사용자에 게 표시 됩니다. 사용자가 여러 역할의 멤버, 사용자의 역할 중 하 나와 일치 하는 첫 번째 역할 그룹 템플릿이 사용 됩니다. 둘 이상의 템플릿을 단일 역할에 연결 된 경우에 정의 된 첫 번째 템플릿만 사용 됩니다.  
  
 동작을 설명 하는 다음 표에서 <xref:System.Web.UI.WebControls.LoginView> 서식 파일의 다양 한 조합을 사용 되는 시기를 제어 합니다.  
  
|LoggedIn 템플릿 속성|익명 템플릿이 속성|RoleGroups 속성|LoginView 동작|  
|--------------------------------|---------------------------------|-------------------------|------------------------|  
|설정 안 함|설정 안 함|설정 안 함|콘텐츠를 표시합니다.|  
|Set|설정 안 함|설정 안 함|사용자가 로그인 하는 경우에 콘텐츠를 표시 합니다.|  
|설정 안 함|Set|설정 안 함|사용자가 로그인 하지 않은 경우에 콘텐츠를 표시 합니다.|  
|설정 안 함|설정 안 함|Set|첫 번째 템플릿을 표시는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 사용자의 역할 중 하 나와 일치 하는 컬렉션입니다. 일치 항목이 없는 경우 콘텐츠를 표시 합니다.|  
|Set|Set|설정 안 함|사용자가 로그인 하는 경우에 지정 된 템플릿을 표시 하는 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성입니다. 사용자에 로그인 하지 않은 경우에 지정 된 템플릿을 표시 하는 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성입니다.|  
|Set|Set|Set|사용자가 로그인 하는 경우에 첫 번째 템플릿을 표시는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 사용자의 역할 중 하 나와 일치 하는 컬렉션입니다. 일치 항목이 없는 경우에 지정 된 서식 파일에 표시 된 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성입니다. 사용자가 로그인 하지 않은 경우에 지정 된 템플릿을 표시 하는 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성입니다.|  
|Set|설정 안 함|Set|사용자가 로그인 하는 경우에 첫 번째 템플릿을 표시는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 사용자의 역할 중 하 나와 일치 하는 컬렉션입니다. 일치 항목이 없는 경우에 지정 된 서식 파일에 표시 된 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성입니다. 사용자가 로그인 하지 않은 경우 아무 것도 표시 됩니다.|  
|설정 안 함|Set|Set|사용자가 로그인 하는 경우에 첫 번째 템플릿을 표시는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 사용자의 역할 중 하 나와 일치 하는 컬렉션입니다. 일치 하는 항목이 아무 내용도 표시 됩니다. 사용자가 로그인 하지 않은 경우에 지정 된 템플릿을 표시 하는 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성입니다.|  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 및 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 설정 하는 인증 스키마에 사용할 수는 <xref:System.Security.Principal.IIdentity.Name%2A> 의 속성은 <xref:System.Web.UI.Page> 개체의 <xref:System.Web.UI.Page.User%2A> 속성입니다. 역할 관리를 사용 하도록 구성 해야는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 웹 사이트에서 사용자의 역할에 기본 템플릿 정의 하는 속성입니다. 자세한 내용은 참조 [역할 관리 이해](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)합니다.  
  
 <xref:System.Web.UI.Control.Focus%2A> 메서드를 웹 페이지의 초기 포커스를 설정 하지 않습니다는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 또는 컨트롤은 자식 컨트롤 중 하나입니다. 에 포함 된 컨트롤의 <xref:System.Web.UI.WebControls.LoginView> 후에 생성 된 컨트롤의 <xref:System.Web.UI.Control.PreRender> 이벤트입니다. 에 포함 된 자식 컨트롤에 포커스를 설정 하려면는 <xref:System.Web.UI.WebControls.LoginView>, 처리는 `On_PreRender` 호출 하 고 해당 <xref:System.Web.UI.Control.Focus%2A> 메서드.  사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 및 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 에서 컨트롤을 프로그래밍 방식으로 액세스 하는 이벤트는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 템플릿.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:LoginView  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    OnViewChanged="ViewChanged event handler"  
    OnViewChanging="ViewChanging event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <AnonymousTemplate>  
            <!-- child controls -->  
        </AnonymousTemplate>  
        <LoggedInTemplate>  
            <!-- child controls -->  
        </LoggedInTemplate>  
        <RoleGroups>  
                <asp:RoleGroup  
                    Roles="string"  
                >  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                </asp:RoleGroup>  
        </RoleGroups>  
</asp:LoginView>  
```  
  
   
  
## Examples  
 다음 코드 예제에서는 각에서 지 원하는 세 가지 서식 파일 형식에 대 한 템플릿을 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다.  
  
 [!code-aspx-csharp[LoginViewClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewClass/CS/loginviewclasscs.aspx#1)]
 [!code-aspx-vb[LoginViewClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewClass/VB/loginviewclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Roles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AnonymousTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AnonymousTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnonymousTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AnonymousTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 사이트에 로그인하지 않은 사용자에게 표시할 템플릿을 가져오거나 설정합니다.</summary>
        <value>표시할 <see cref="T:System.Web.UI.ITemplate" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성은은 웹 사이트에 로그인 하지 않은 경우 웹 사이트 사용자에 게 표시할 콘텐츠 템플릿을 지정 합니다. 이 템플릿은 표시 됩니다 때는 <xref:System.Security.Principal.IIdentity.Name%2A> 의 속성은 <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> 속성은 `null`합니다.  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 인증 된 사용자에 게 템플릿이 표시 되지 않습니다. 경우는 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성이 비어 있으면 아무 내용도 로그인 하지 않은 사용자에 게 표시 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 지정 된 템플릿을 사용 하 여는 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 에 등록 하 라는 초대장이 표시할 템플릿을 개인 서비스를 설정 합니다.  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlCollection" /> 컨트롤의 자식 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.LoginView" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤의 자식 컨트롤 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤을 구성하는 자식 컨트롤을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.CreateChildControls%2A> 메서드를 구성 하는 개별 컨트롤을 만듭니다는 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다. 만든 컨트롤의 집합은 사용자에 게 표시 되는 내용 템플릿에 따라 다릅니다. 에 서식 파일에 포함 된 컨트롤에만 지정 된 사용자가 웹 사이트에 로그인 하지 않은 경우 예를 들어는 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성 생성 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginView" />와 그 자식 컨트롤 모두에 데이터 소스를 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.LoginView.DataBind%2A> 에 대 한 원본에서 데이터를 바인딩할 메서드는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 및 자식 함수입니다. 이 방법의 모든 데이터 바인딩 식 해결 되 고 <xref:System.Web.UI.WebControls.LoginView> 컨트롤과 모든 자식 컨트롤의 현재 서식 파일입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤에 테마를 적용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          테마를 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 속성에 대 한 테마를 사용할 수 있는지 여부를 나타냅니다.는 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다. <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 속성도 영향을 줍니다에 포함 된 컨트롤에 대 한 테마를 사용할 수 있는지 여부를 해당 <xref:System.Web.UI.WebControls.LoginView.Controls%2A> 컬렉션입니다. 경우는 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 속성은 `true`을 적용할 컨트롤 스킨에 대 한 응용 프로그램의 테마 디렉터리를 검색 합니다. 테마 디렉터리에 특정 컨트롤에 대 한 스킨이 스킨 적용 되지 않습니다. 경우는 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 속성은 `false`, 테마 디렉터리 검색 되지 않고의 내용과 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> 속성은 사용 되지 않습니다.  
  
 컨트롤을 재정의할 수는 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 해당 부모 컨트롤 또는 포함 하는 페이지에서 설정한 값입니다. 예를 들어, 부모 컨트롤에 있는 경우 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 로 설정 `false`, 선택적으로 설정 하 여 부모 내에 포함 된 자식 컨트롤에 테마를 적용할 수 있습니다는 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 속성을 `true` 개별 자식 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤에 입력 포커스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.Focus%2A> 메서드를 웹 페이지의 초기 포커스를 설정 하지 않습니다는 <xref:System.Web.UI.WebControls.LoginView> 제어 하거나 해당 자식 컨트롤 중 하나에 있습니다. 에 포함 된 컨트롤의 <xref:System.Web.UI.WebControls.LoginView> 제어 후에 생성 된는 <xref:System.Web.UI.Control.PreRender> 이벤트입니다. 에 포함 된 자식 컨트롤에 포커스를 설정 하려면는 <xref:System.Web.UI.WebControls.LoginView>, 처리는 `On_PreRender` 호출 하 고 해당 <xref:System.Web.UI.Control.Focus%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.WebControls.LoginView.Focus" /> 메서드를 호출한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 컨트롤 상태를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>이 메서드는 <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />를 구현합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggedInTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LoggedInTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LoggedInTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoggedInTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LoggedInTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 사이트에 로그인했지만 <see cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" /> 속성에 지정된 역할 그룹의 멤버가 아닌 웹 사이트 사용자에게 표시할 템플릿을 가져오거나 설정합니다.</summary>
        <value>표시할 <see cref="T:System.Web.UI.ITemplate" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성은 다음 조건이 모두 충족 되 면 웹 사이트 사용자에 게 표시 됩니다.  
  
-   <xref:System.Security.Principal.IIdentity.Name%2A> 의 속성은 <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> 속성이 아닙니다 `null`  
  
-   사용자에 정의 된 역할 그룹에 속하지 않은 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성 인증된 웹 사이트 사용자에 대 한 기본 서식 파일을 지정 합니다. 역할 관리를 구성 하지 않은 경우는 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 유일한 서식 파일에 인증 된 사용자가 사용할 수 있는입니다. 역할 관리를 구성 하는 방법에 대 한 자세한 내용은 참조 [역할 관리 이해](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 서식 파일을 개인 설정 된 정보에 대 한 로그인 한 사용자 링크를 표시 합니다.  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> 에 대 한 초기화를 수행 하는 메서드는 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>로그인한 사용자의 역할을 기준으로 표시할 역할 그룹 템플릿을 결정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> 메서드 동안 호출 됩니다는 <xref:System.Web.UI.Control.PreRender> 사용자에 게 표시할 콘텐츠 템플릿을 결정 하는 이벤트입니다. 경우는 <xref:System.Security.Principal.IIdentity.Name%2A> 의 속성은 <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> 속성은 `null`에 지정 된 템플릿이 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성이 표시 됩니다; 그렇지 않으면 사용자의 역할에 연결 된 서식 파일에 표시 됩니다. 역할 관리를 구성 하지 않은 경우 또는 사용자 정의 된 역할 그룹에 속하지 않는 경우는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤에 지정 된 템플릿을 표시는 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성입니다. 역할 관리를 구성 하는 방법에 대 한 자세한 내용은 참조 [역할 관리 공급자](http://msdn.microsoft.com/library/71ddd651-5f91-471b-ad9f-61249b0bf0d5)합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" /> 컨트롤이 뷰를 전환한 다음 <see cref="T:System.Web.UI.WebControls.LoginView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 뷰를 전환할 이전 서식 파일에서 컨트롤을 제거 하 고 새 서식 파일을 새 자식 컨트롤을 만듭니다. <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> 새 자식 컨트롤이 만들어진 후 메서드를 호출 합니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> 메서드를 같은 데이터 바인딩, 새 뷰에서 컨트롤을 초기화 하는 데 필요한 모든 처리를 수행 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnViewChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanging (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanging(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanging (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanging(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" /> 컨트롤이 뷰를 전환하기 전에 <see cref="T:System.Web.UI.WebControls.LoginView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 뷰를 전환할 이전 서식 파일에서 컨트롤을 제거 하 고 새 서식 파일을 새 자식 컨트롤을 만듭니다. <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 메서드 이전 컨트롤이 제거 되기 전에 호출 됩니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 메서드를 컨트롤이 제거 되기 전에 제어 정보를 저장 하는 등의 필요한 처리를 수행 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트의 브라우저에서 서버 컨트롤 내용을 렌더링하는 데 사용되는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 사용하여 웹 서버 컨트롤 내용을 클라이언트 브라우저에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.Render%2A> 메서드를 사용 하 여 지정 된 클라이언트의 브라우저에 서버 컨트롤 콘텐츠를 렌더링 하는 <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> 개체입니다.  
  
 **참고** 이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RoleGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RoleGroupCollection RoleGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RoleGroups As RoleGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RoleGroupCollection ^ RoleGroups { System::Web::UI::WebControls::RoleGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RoleGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내용 템플릿과 특정 역할을 연결하는 역할 그룹의 컬렉션을 가져옵니다.</summary>
        <value>정의된 역할 그룹 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 속성 웹 사이트에서 다양 한 역할과 연결 된 콘텐츠 서식 파일을 포함 합니다. 컬렉션에는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 속성 원본에 정의 되어 있는 템플릿 순서 대로 검색 됩니다. 첫 번째 일치 하는 역할 그룹 템플릿이 사용자에 게 표시 됩니다. 사용자가 여러 역할의 멤버, 사용자의 역할 중 하 나와 일치 하는 첫 번째 역할 그룹 템플릿이 사용 됩니다. 둘 이상의 템플릿이 있으면 단일 역할에 연결 된 정의 된 첫 번째 템플릿만 사용 됩니다.  
  
 사이트에 지정 된 콘텐츠 템플릿을 표시 로그인 한 사용자 역할 그룹 컬렉션에 포함 된 모든 역할에 속하지 않으면는 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성입니다. 익명 사용자에 들어 있는 템플릿이 표시 되지 됩니다는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 컬렉션입니다.  
  
 역할 관리를 사용 하도록 구성 해야는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 웹 사이트에서 사용자의 역할을 기반으로 하는 템플릿을 정의 하는 속성입니다. 자세한 내용은 참조 [역할 관리 이해](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 컬렉션입니다. 때문에 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 및 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 속성이 설정 되지 않은, 콘텐츠 정의 된 템플릿 사용 하 여 역할에 속한 사용자 에게만 표시 됩니다.  
  
 [!code-aspx-csharp[LoginViewRoleGroups#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewRoleGroups/CS/loginviewrolegroupscs.aspx#1)]
 [!code-aspx-vb[LoginViewRoleGroups#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewRoleGroups/VB/loginviewrolegroupsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 다시 게시된 후 발생한 서버 컨트롤 상태의 변경을 저장합니다.</summary>
        <returns>서버 컨트롤의 현재 상태를 반환합니다. 컨트롤과 연결된 상태가 없으면 이 메서드가 <see langword="null" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">컨트롤의 디자인 타임 데이터가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>컨트롤에 대한 디자인 타임 데이터를 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤에 적용할 스킨을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤에 적용할 스킨의 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤에 사용할 수 있는 스킨 테마 디렉터리에서 하나 이상의 스킨 파일에 포함 됩니다. <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> 이러한 스킨 중 컨트롤에 적용할 속성을 지정 합니다. 특정 컨트롤로; 특정 스킨은 다른 유형의 컨트롤 간의 스킨 설정을 공유할 수 없습니다.  
  
 설정 하지 않은 경우는 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> 속성, 컨트롤을 사용 하 여 기본 스킨 정의 된 경우. 예를 들어 없는 스킨이 ID는에 대 한 정의 <xref:System.Web.UI.WebControls.Image> 모든 스킨이 적용 됩니다. 제어 <xref:System.Web.UI.WebControls.Image> 컨트롤 ID로 스킨을 명시적으로 참조 하지 않는 및 테마를 사용 하지 않도록 설정으로 설정 되지 않은 합니다. Id는 스킨에 대 한 정의 된 경우는 <xref:System.Web.UI.WebControls.Image> 제어 스킨이만 적용 됩니다 <xref:System.Web.UI.WebControls.Image> 컨트롤 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> ID로 설정 되어  
  
 지정 된 스킨 스킨 파일 테마 디렉터리에 포함 되어 있지 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A>, <xref:System.ArgumentException> 런타임 시 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.WebControls.LoginView.SkinID" /> 속성에 지정된 스킨이 테마에 없는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>뷰가 변경된 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 뷰를 전환할 이전 서식 파일에서 컨트롤을 제거 하 고 새 서식 파일을 새 자식 컨트롤을 만듭니다. <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 이벤트는 새 자식 컨트롤이 만들어진 후 발생 합니다.  
  
 사용 된 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 같은 데이터 바인딩, 새 뷰에서 컨트롤을 초기화 하는 데 필요한 모든 처리를 수행 하는 이벤트입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 이벤트는 사용자에 대 한 로그인 상태 페이지에 다시 게시 하는 동안 변경 된 경우에 발생 합니다. <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 사용자가 사용 하 여 로그인 하는 경우 이벤트를 발생 하지 것입니다는 <xref:System.Web.UI.WebControls.Login> 컨트롤을 사용 하 여 사용자 로그 아웃 하는 경우 또는 <xref:System.Web.UI.WebControls.LoginStatus> 제어 합니다. <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 도 이벤트는 사용자 로그인 또는 리디렉션을 아웃 하는 경우. 예는 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 이벤트가 발생 하는 호출 하 여 사용자가 로그 아웃 하는 경우는 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> 리디렉션된 다른 페이지를 사용 하지 않고 메서드. 페이지에 다시 게시는 <xref:System.Web.UI.WebControls.LoginView> 제어에서는 사용자에 대 한 로그인 상태에 변경을 검색 하 고 발생 한 다음는 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>뷰가 변경되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 뷰를 전환할 이전 서식 파일에서 컨트롤을 제거 하 고 새 서식 파일을 새 자식 컨트롤을 만듭니다. <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 이벤트는 이전 컨트롤이 제거 되기 전에 발생 합니다.  
  
 사용 하 여 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 컨트롤이 제거 하기 전에 필요한 제어 정보를 저장 하는 등의 모든 처리를 수행 하는 이벤트입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 이벤트는 사용자에 대 한 로그인 상태 페이지에 다시 게시 하는 동안 변경 된 경우에 발생 합니다. <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 사용자가 사용 하 여 로그인 하는 경우 이벤트를 발생 하지 것입니다는 <xref:System.Web.UI.WebControls.Login> 컨트롤을 사용 하 여 사용자 로그 아웃 하는 경우 또는 <xref:System.Web.UI.WebControls.LoginStatus> 제어 합니다. <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 도 이벤트는 사용자 로그인 또는 리디렉션을 아웃 하는 경우. 예는 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 이벤트가 발생 하는 호출 하 여 사용자가 로그 아웃 하는 경우는 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> 리디렉션된 다른 페이지를 사용 하지 않고 메서드. 페이지에 다시 게시는 <xref:System.Web.UI.WebControls.LoginView> 제어에서는 사용자에 대 한 로그인 상태에 변경을 검색 하 고 발생 한 다음는 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      </Docs>
    </Member>
  </Members>
</Type>