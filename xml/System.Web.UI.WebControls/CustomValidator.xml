<Type Name="CustomValidator" FullName="System.Web.UI.WebControls.CustomValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e970c58e13b65afa1cf2b5c81336c55f0172031" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36383612" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CustomValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomValidator : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type CustomValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerValidate")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CustomValidator runat="server" ErrorMessage="CustomValidator"&gt;&lt;/{0}:CustomValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>입력 컨트롤에서 사용자 정의 유효성 검사를 수행합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.CustomValidator> 입력된 컨트롤에 대 한 유효성 검사 사용자 정의 함수를 제공 하는 컨트롤입니다. <xref:System.Web.UI.WebControls.CustomValidator> 컨트롤 수 있는 컨트롤에 유효성 검사 메시지가 표시 되 고 있는지 확인 입력된 컨트롤에서 별도 컨트롤입니다.  
  
 유효성 검사 컨트롤은 항상 서버에서 유효성 검사를 수행 합니다. 클라이언트에서 유효성 검사를 수행 하려면 스크립트 기반 브라우저 (Internet Explorer 4.0 같은 이상)를 허용 하는 전체 클라이언트 구현을 갖습니다. 클라이언트 쪽 유효성 검사 서버에 전송 하기 전에 사용자 입력을 확인 하 여 유효성 검사 프로세스를 향상 시킵니다. 이렇게 하면 오류를 서버 쪽 유효성 검사에 필요한 정보의 왕복 시간이 필요 없도록 폼을 제출 하기 전에 클라이언트에서 감지할 수 있습니다.  
  
 서버 쪽 유효성 검사 함수를 만들려면 제공에 대 한 처리기는 <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> 유효성 검사를 수행 하는 이벤트입니다. 유효성을 검사 하는 입력된 컨트롤에서 문자열을 사용 하 여 액세스할 수는 <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> 의 속성은 <xref:System.Web.UI.WebControls.ServerValidateEventArgs> 개체를 매개 변수로 이벤트 처리기에 전달 합니다. 유효성 검사의 결과에 저장 됩니다는 <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> 의 속성은 <xref:System.Web.UI.WebControls.ServerValidateEventArgs> 개체입니다.  
  
 클라이언트 쪽 유효성 검사 함수를 만들려면 먼저 앞에서 설명한 서버 쪽 유효성 검사 함수를 추가 합니다. 다음으로, ASP.NET (.aspx) 페이지로 클라이언트 쪽 유효성 검사 스크립트 함수를 추가 합니다.  
  
 Visual Basic Scripting Edition (VBScript)를 사용 하는 경우 함수는이 양식 이어야 합니다.  
  
```  
Sub ValidationFunctionName(source, arguments)  
```  
  
 JScript를 사용 하는 경우 함수는이 양식 이어야 합니다.  
  
```  
function ValidationFunctionName(source, arguments)  
```  
  
 `source` 매개 변수는에 대 한 참조는 \<걸쳐 > 요소에 대해 렌더링는 <xref:System.Web.UI.WebControls.CustomValidator> 제어 합니다. 프로그래밍 방식으로 제어를 수 있습니다는 \<걸쳐 > 태그를 수정 하는 등의 <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> 특성입니다. `arguments` 매개 변수는 두 개의 속성이 있는 개체: 값과 IsValid 합니다. 이 매개 변수를 사용 하면 컨트롤의 유효성을 검사 하 고 사용자 지정 유효성 검사 루틴에 따라 값이 유효한 지를 나타내는 값을 가져올 수 있습니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A> 와 연결 된 속성을 통해 클라이언트 쪽 유효성 검사 스크립트 함수의 이름을 지정는 <xref:System.Web.UI.WebControls.CustomValidator> 제어 합니다. 스크립트 함수를 클라이언트에서 실행 되므로 함수는 VBScript 또는 JScript와 같은 대상 브라우저 지원 되는 언어로 이어야 합니다.  
  
> [!NOTE]
>  사용 하는 경우는 <xref:System.Web.UI.WebControls.CustomValidator> 컨트롤 내부는 <xref:System.Web.UI.UpdatePanel> 검사기 컨트롤과 연결 된 컨트롤은 동일한 패널에 있어야 합니다. 사용 하는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.UpdatePanel> 부분 페이지 업데이트를 제어, 참조 [부분 페이지 렌더링 개요](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.  
  
 서버 쪽 유효성 검사 마찬가지로 유효성을 검사할 입력된 컨트롤에서 문자열은 사용 하 여 액세스는 <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> 의 속성은 `arguments` 매개 변수입니다. 설정 하 여 유효성 검사의 결과 반환 합니다.는 <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> 의 속성은 `arguments` 매개 변수입니다.  
  
> [!CAUTION]
>  유효성 검사 컨트롤을 사용할 경우 처리를 수행 하기 전에 서버 쪽 유효성 검사의 결과 항상 확인 해야 합니다. 에서는 다시 게시 후 이벤트 메서드를 호출 하기 전에 페이지의 유효성 검사 컨트롤을 호출 하 고 고 결과에 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 속성입니다. (또한 유효성 검사기 컨트롤을 사용 하 여 명시적으로 호출할 수 있습니다는 `Validate` 메서드.) 사용자 코드에서 확인 해야 하는 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 속성에서 반환 `true` 입력을 처리 하기 전에. 스크립트 기반 브라우저 유효성 검사가 실패 했는지, 항상 확인 해야 하는 경우 클라이언트에서 발생 한 다시 게시 되지 못할 수도 <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> 유효성 검사 데이터를 처리 하기 전에 서버 코드에서.  
  
 여러 유효성 검사 컨트롤 다양 한 조건 유효성을 검사 하는 개별 입력 컨트롤과 사용할 수 있습니다. 예를 들어 여러 유효성 검사 컨트롤에 적용할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 사용자가 장바구니에 추가할 항목의 수량을 입력할 수 있게 하는 컨트롤입니다. 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.CustomValidator> 되도록 지정 된 값에 인벤토리 된 값 보다 적으면 컨트롤 및 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 컨트롤에 값을 입력할 수 있도록는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤입니다.  
  
> [!NOTE]
>  입력된 컨트롤을 선택 하지 않으면 없습니다 유효성 검사 함수는 호출 하 고 유효성 검사는 성공 합니다. 사용 하 여 한 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 컨트롤을 사용자가 입력된 컨트롤에 데이터를 입력 합니다.  
  
 사용 하는 것이 불가능 한 <xref:System.Web.UI.WebControls.CustomValidator> 설정 하지 않고 제어는 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 속성입니다. 일반적으로 이렇게 여러 입력된 컨트롤의 유효성 검사 하거나 같은 유효성 검사 컨트롤과 함께 사용할 수 없는 입력된 컨트롤 유효성을 검사 하는 경우에 <xref:System.Web.UI.WebControls.CheckBox> 제어 합니다. 이 경우는 <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> 의 속성은 `arguments` 에 대 한 이벤트 처리기에 전달 된 매개 변수는 <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> 이벤트 클라이언트 쪽 유효성 검사에 함수 항상 빈 문자열을 포함 하 고 (""). 그러나 이러한 유효성 검사 함수는 호출, 적절 한 경우 서버와 클라이언트 모두에 대 한 유효성을 확인할 수 있습니다. 유효성을 검사할 값에 액세스 하려면 프로그래밍 방식으로 입력된 컨트롤의 유효성을 검사 한 다음 해당 속성에서 값을 검색 하려면를 참조 해야 합니다. 예를 들어 유효성을 검사 하는 <xref:System.Web.UI.WebControls.CheckBox> 서버에서 컨트롤을 설정 하지 않으면는 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 속성에 대 한 처리기에 대 한 다음 코드를 사용 하 여 유효성 검사 컨트롤의 <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> 이벤트입니다.  
  
```vb  
Sub ServerValidation (source As object, args As ServerValidateEventArgs)  
    args.IsValid = (CheckBox1.Checked = True)  
 End Sub  
```  
  
```csharp  
void ServerValidation (object source, ServerValidateEventArgs args)  
 {  
    args.IsValid = (CheckBox1.Checked == true);  
 }  
```  
  
 유효성 검사 컨트롤에 대 한 자세한 내용은 참조 하십시오. <xref:System.Web.UI.WebControls.BaseValidator>합니다.  
  
## <a name="accessibility"></a>액세스 가능성  
 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하십시오. [Visual Studio 및 ASP.NET의 내게 필요한 옵션](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤 및내게필요한옵션](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 다음 코드 예제에는 서버 쪽을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.CustomValidator> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 다음 코드 예제에는 클라이언트를 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.CustomValidator> 제어 합니다.  
  
 [!code-aspx-csharp[CustomValidatorClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorClient/CS/customvalidatorclientcs.aspx#1)]
 [!code-aspx-vb[CustomValidatorClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorClient/VB/customvalidatorclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
    <altmember cref="P:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction" />
    <altmember cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
    <altmember cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
    <altmember cref="T:System.Web.UI.WebControls.ServerValidateEventArgs" />
    <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
    <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.CustomValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <altmember cref="P:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction" />
        <altmember cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
        <altmember cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.ServerValidateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="customValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에 렌더링할 출력 스트림이 들어 있는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>클라이언트에서 렌더링할 출력 스트림에 <see cref="T:System.Web.UI.WebControls.CustomValidator" /> 컨트롤의 속성을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CustomValidator.AddAttributesToRender%2A> 사용자 지정 서버 컨트롤에서 있도록는 <xref:System.Web.UI.WebControls.CustomValidator> 오류 메시지가 항상 굵게 표시 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomCustomValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/CS/custom_customvalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCustomValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/VB/custom_customvalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomCustomValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/CS/custom_customvalidator_addattributestorender.cs#2)]
[!code-vb[CustomCustomValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/VB/custom_customvalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientValidationFunction">
      <MemberSignature Language="C#" Value="public string ClientValidationFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientValidationFunction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientValidationFunction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientValidationFunction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientValidationFunction : string with get, set" Usage="System.Web.UI.WebControls.CustomValidator.ClientValidationFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>유효성 검사에 사용되는 사용자 지정 클라이언트쪽 스크립트 함수의 이름을 가져오거나 설정합니다.</summary>
        <value>유효성 검사에 사용되는 사용자 지정 클라이언트 스크립트 함수의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />로, 이 속성이 설정되지 않았음을 나타냅니다.  
  
 <block subset="none" type="note"><para> 함수 이름에 괄호 또는 매개 변수가 포함 되지 않습니다.  </para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 쪽 유효성 검사를 수행 하는 함수 이름에이 속성을 설정 합니다.  
  
 클라이언트 유효성 검사 함수에서는 대상 브라우저에서 실행 되므로 JScript 또는 VBScript 같은 브라우저에서 지 원하는 스크립트 언어를 사용 하 여 함수를 작성 되어야 합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A> 속성을 통해 클라이언트 쪽 유효성 검사를 수행 하는 함수 이름을 지정 합니다. 유효성 검사 함수 짝수 번호를 확인 합니다. 함수 매개 변수 설명은의 설명 섹션을 참조 하십시오. <xref:System.Web.UI.WebControls.CustomValidator>합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomValidatorClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorClient/CS/customvalidatorclientcs.aspx#1)]
 [!code-aspx-vb[CustomValidatorClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorClient/VB/customvalidatorclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="customValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤 속성의 값이 올바른지 확인합니다.</summary>
        <returns>컨트롤 속성이 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid%2A> 길이 만큼 visible 속성의 값을 항상 반환 되도록 컨트롤을 사용자 지정 서버에서 메서드는 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 의 속성은 <xref:System.Web.UI.WebControls.CustomValidator> 제어 페이지에 및 포함 유효성 검사 속성입니다.  
  
 [!code-aspx-csharp[CustomCustomValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/CS/custom_customvalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCustomValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/VB/custom_customvalidator_controlpropertiesvalidvb.aspx#1)]  
[!code-csharp[CustomCustomValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/CS/custom_customvalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCustomValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/VB/custom_customvalidator_controlpropertiesvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="customValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid" /> 메서드를 재정의합니다.</summary>
        <returns>입력 컨트롤의 값이 유효하면 <see langword="true" />이고, 유효하지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CustomValidator.EvaluateIsValid%2A> 사용자 지정 서버 컨트롤에서 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomCustomValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/CS/custom_customvalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCustomValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/VB/custom_customvalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomCustomValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/CS/custom_customvalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCustomValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/VB/custom_customvalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerValidate">
      <MemberSignature Language="C#" Value="protected virtual bool OnServerValidate (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnServerValidate(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnServerValidate (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnServerValidate(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnServerValidate : string -&gt; bool&#xA;override this.OnServerValidate : string -&gt; bool" Usage="customValidator.OnServerValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">유효성을 검사할 값입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" /> 컨트롤에 대해 <see cref="T:System.Web.UI.WebControls.CustomValidator" /> 이벤트를 발생시킵니다.</summary>
        <returns>
          <paramref name="value" /> 매개 변수에 지정된 값이 유효성 검사를 통과하면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> 유효성 검사 서버에서 수행 될 때 이벤트가 발생 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.CustomValidator.OnServerValidate%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에 지정 하 고 서버 쪽에 대 한 처리기를 코딩 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.CustomValidator> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
      </Docs>
    </Member>
    <Member MemberName="ServerValidate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ServerValidateEventHandler ServerValidate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ServerValidateEventHandler ServerValidate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerValidate As ServerValidateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ServerValidateEventHandler ^ ServerValidate;" />
      <MemberSignature Language="F#" Value="member this.ServerValidate : System.Web.UI.WebControls.ServerValidateEventHandler " Usage="member this.ServerValidate : System.Web.UI.WebControls.ServerValidateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ServerValidateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>유효성 검사가 서버에서 수행되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> 유효성 검사 서버에서 수행 될 때 이벤트가 발생 합니다. 이 이벤트는 같은 입력된 컨트롤에 대 한 사용자 지정 유효성 검사 루틴을 제공 하는 데 사용 된 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 지정 하 고 서버 쪽에 대 한 처리기를 코딩 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.CustomValidator> 제어 합니다. 사용자 지정 유효성 검사 루틴을 만들고, 값의 유효성을 검사할는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 수는 짝수에 대 한 다음 유효성 검사의 결과 표시 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.ServerValidateEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEmptyText">
      <MemberSignature Language="C#" Value="public bool ValidateEmptyText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateEmptyText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateEmptyText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateEmptyText { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateEmptyText : bool with get, set" Usage="System.Web.UI.WebControls.CustomValidator.ValidateEmptyText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>빈 텍스트의 유효성을 검사할지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
        <value>빈 텍스트의 유효성을 검사해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 유효성 검사기는 대상된 컨트롤에 연결할 수 있습니다. 이전 버전의.NET Framework의 대상된 컨트롤에는 빈 문자열 값이 같은 경우에 <xref:System.Web.UI.WebControls.TextBox.Text%2A> 속성의 값을 갖는 <xref:System.String.Empty?displayProperty=nameWithType>, 유효성 검사기 (제외 하 고는 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 유효성 검사기) 대상으로 지정 된 제어를 평가 하지 및 유효성 검사를 통과 했음을 반환 하기만 하면 됩니다.  
  
 <xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A> 속성은.NET Framework 버전 2.0에 새로 도입 합니다.  경우 <xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A> 로 설정 된 `true`, 컨트롤의 값을 평가 하는 유효성 검사기 (에 지정 된 조건을 사용 하는 <xref:System.Web.UI.WebControls.CustomValidator> 컨트롤) 유효성 검사 결과 반환 합니다. 이 속성을 사용 하면 개발자가 결과를 평가 하는 <xref:System.Web.UI.WebControls.CustomValidator> 대상된 컨트롤의 값에 관계 없이 제어 합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>