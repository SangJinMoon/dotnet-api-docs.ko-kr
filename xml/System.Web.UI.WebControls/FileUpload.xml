<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02a586beab9cc945dca557c7936289fbf4afd670" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51889711" /></Metadata><TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type FileUpload = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c91de-101">사용자가 서버에 업로드할 파일을 선택하는 데 사용할 수 있는 TextBox 컨트롤과 찾아보기 단추를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-101">Displays a text box control and a browse button that enable users to select a file to upload to the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="c91de-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="c91de-103">소개</span><span class="sxs-lookup"><span data-stu-id="c91de-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="c91de-104">업로드 한 파일을 저장 하는 중</span><span class="sxs-lookup"><span data-stu-id="c91de-104">Saving Uploaded Files</span></span>](#saving_uploaded_files)  
  
-   [<span data-ttu-id="c91de-105">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="c91de-105">Security Considerations</span></span>](#security_considerations)  
  
-   [<span data-ttu-id="c91de-106">메모리 제한 사항</span><span class="sxs-lookup"><span data-stu-id="c91de-106">Memory Limitations</span></span>](#memory_limitations)  
  
-   [<span data-ttu-id="c91de-107">UpdatePanel 컨트롤을 사용 하 여 FileUpload 컨트롤 사용</span><span class="sxs-lookup"><span data-stu-id="c91de-107">Using the FileUpload Control with the UpdatePanel Control</span></span>](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [<span data-ttu-id="c91de-108">선언 구문</span><span class="sxs-lookup"><span data-stu-id="c91de-108">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="c91de-109">소개</span><span class="sxs-lookup"><span data-stu-id="c91de-109">Introduction</span></span>  
 <span data-ttu-id="c91de-110"><xref:System.Web.UI.WebControls.FileUpload> 클래스 텍스트 상자 컨트롤 및 클라이언트에서 파일을 선택 하 고 웹 서버에 업로드 하는 데 사용할 수 있는 찾아보기 단추를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-110">The <xref:System.Web.UI.WebControls.FileUpload> class displays a text box control and a browse button that enable users to select a file on the client and upload it to the Web server.</span></span> <span data-ttu-id="c91de-111">사용자가 로컬 컴퓨터에 있는 파일의 전체 경로 입력 하 여 업로드할 파일 지정 (예를 들어 **C:\MyFiles\TestFile.txt**) 컨트롤의 텍스트 상자에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-111">The user specifies the file to upload by entering the full path of the file on the local computer (for example, **C:\MyFiles\TestFile.txt**) in the text box of the control.</span></span> <span data-ttu-id="c91de-112">사용자가 클릭 하 여 파일을 선택할 수는 또는 **찾아보기** 단추를 클릭 한 다음에 배치 합니다 **파일 선택** 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="c91de-112">Alternately, the user can select the file by clicking the **Browse** button, and then locating it in the **Choose File** dialog box.</span></span>  
  
 <span data-ttu-id="c91de-113">사용 된 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> 속성을 사용 하 여 업로드할 클라이언트의 파일의 이름을 가져옵니다는 <xref:System.Web.UI.WebControls.FileUpload> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-113">Use the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property to get the name of a file on a client to upload by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-114">이 속성을 반환 하는 파일 이름에는 클라이언트에서 파일의 경로 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-114">The file name that this property returns does not include the path of the file on the client.</span></span>  
  
 <span data-ttu-id="c91de-115">합니다 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 속성을 <xref:System.IO.Stream> 업로드할 파일을 가리키는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-115">The <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property gets a <xref:System.IO.Stream> object that points to a file to upload.</span></span> <span data-ttu-id="c91de-116">바이트 형식으로 파일의 내용에 액세스 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-116">Use this property to access the contents of the file as bytes.</span></span> <span data-ttu-id="c91de-117">예를 들어 사용할 수 있습니다 합니다 <xref:System.IO.Stream> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 바이트로 파일의 내용의 읽을 바이트 배열에 저장 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-117">For example, you can use the <xref:System.IO.Stream> object that is returned by the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property to read the contents of the file as bytes and store them in a byte array.</span></span> <span data-ttu-id="c91de-118">사용할 수 있습니다는 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> 파일의 모든 바이트를 검색할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-118">Alternatively, you can use the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property to retrieve all the bytes in the file.</span></span>  
  
 <span data-ttu-id="c91de-119">합니다 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 기본 속성을 가져옵니다 <xref:System.Web.HttpPostedFile> 업로드할 파일에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-119">The <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property gets the underlying <xref:System.Web.HttpPostedFile> object for the file to upload.</span></span> <span data-ttu-id="c91de-120">파일에서 추가 속성에 액세스 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-120">You can use this property to access additional properties on the file.</span></span> <span data-ttu-id="c91de-121"><xref:System.Web.HttpPostedFile.ContentLength%2A> 속성 파일의 길이 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-121">The <xref:System.Web.HttpPostedFile.ContentLength%2A> property gets the length of the file.</span></span> <span data-ttu-id="c91de-122"><xref:System.Web.HttpPostedFile.ContentType%2A> 속성 파일의 MIME 콘텐츠 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-122">The <xref:System.Web.HttpPostedFile.ContentType%2A> property gets the MIME content type of the file.</span></span> <span data-ttu-id="c91de-123">또한 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 속성에 액세스를 <xref:System.Web.HttpPostedFile.FileName%2A> 속성을 <xref:System.Web.HttpPostedFile.InputStream%2A> 속성 및 <xref:System.Web.HttpPostedFile.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-123">In addition, you can use the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to access the <xref:System.Web.HttpPostedFile.FileName%2A> property, the <xref:System.Web.HttpPostedFile.InputStream%2A> property, and the <xref:System.Web.HttpPostedFile.SaveAs%2A> method.</span></span> <span data-ttu-id="c91de-124">하지만 동일한 기능을 제공를 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> 속성을 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 속성 및 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-124">However, the same functionality is provided by the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property, the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property, and the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span>  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a><span data-ttu-id="c91de-125">업로드 한 파일을 저장 하는 중</span><span class="sxs-lookup"><span data-stu-id="c91de-125">Saving Uploaded Files</span></span>  
 <span data-ttu-id="c91de-126"><xref:System.Web.UI.WebControls.FileUpload> 컨트롤이 자동으로를 저장 하지 않습니다 파일 서버 사용자가 업로드할 파일을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-126">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically save a file to the server after the user selects the file to upload.</span></span> <span data-ttu-id="c91de-127">명시적으로 제어 또는 사용자가 지정된 된 파일을 제출 하도록 허용 하는 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-127">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="c91de-128">예를 들어 사용자가 파일을 업로드 하는 단추를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-128">For example, you can provide a button that the user clicks to upload the file.</span></span> <span data-ttu-id="c91de-129">지정된 된 파일을 저장 하려면 작성 하는 코드를 호출 해야 합니다 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 서버에서 파일의 내용이 지정된 된 경로에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-129">The code that you write to save the specified file should call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, which saves the contents of a file to a specified path on the server.</span></span> <span data-ttu-id="c91de-130">일반적으로 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 서버에 다시 게시를 발생 시키는 이벤트에 대 한 이벤트 처리 메서드에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-130">Typically, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called in an event-handling method for an event that raises a post back to the server.</span></span> <span data-ttu-id="c91de-131">예를 들어 파일을 전송 하는 단추를 제공 하는 경우에 클릭 이벤트에 대 한 이벤트 처리 메서드 내에서 파일을 저장 하는 코드를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-131">For example, if you provide a button to submit a file, you could include the code to save the file inside the event-handling method for the click event.</span></span>  
  
 <span data-ttu-id="c91de-132">호출 하기 전에 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 사용 하 여 서버에 파일을 저장 합니다 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> ; 속성을 확인 하는 <xref:System.Web.UI.WebControls.FileUpload> 파일을 포함 하는 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="c91de-132">Before calling the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method to save the file to the server, use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the <xref:System.Web.UI.WebControls.FileUpload> control contains a file.</span></span> <span data-ttu-id="c91de-133">경우는 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 반환 `true`를 호출 합니다 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-133">If the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span> <span data-ttu-id="c91de-134">반환 하는 경우 `false`를 나타내는 사용자 컨트롤 파일 없습니다 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-134">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span> <span data-ttu-id="c91de-135">검사 안 함은 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 업로드할 파일을 여부를 확인 하려면 속성이 존재 하므로 기본적으로이 속성에 0 바이트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-135">Do not check the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to determine whether a file to upload exists because, by default, this property contains 0 bytes.</span></span> <span data-ttu-id="c91de-136">결과적으로, 경우에 합니다 <xref:System.Web.UI.WebControls.FileUpload> 컨트롤은 빈는 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 속성이 null이 아닌 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-136">As a result, even when the <xref:System.Web.UI.WebControls.FileUpload> control is blank, the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property returns a non-null value.</span></span>  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a><span data-ttu-id="c91de-137">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="c91de-137">Security Considerations</span></span>  
 <span data-ttu-id="c91de-138">호출 하는 경우는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 업로드 한 파일을 저장 하는 디렉터리의 전체 경로 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-138">When you call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, you must specify the full path of the directory in which to save the uploaded file.</span></span> <span data-ttu-id="c91de-139">애플리케이션 코드에서 경로 명시적으로 지정 하지 않는 경우 사용자가 파일을 업로드 하려고 할 때 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-139">If you do not explicitly specify a path in your application code, an exception is thrown when a user attempts to upload a file.</span></span> <span data-ttu-id="c91de-140">이 동작 덕분에 인해 중요 한 루트 디렉터리에 액세스할 수 있을 뿐만 아니라 애플리케이션의 디렉터리 구조 내에서 임의의 위치에 쓸 수 없도록 방지 하 여 서버에서 파일을 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-140">This behavior helps keep the files on the server secure by preventing users from being able to write to arbitrary locations in your application's directory structure, as well as preventing access to sensitive root directories.</span></span>  
  
 <span data-ttu-id="c91de-141"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드는 지정된 된 디렉터리에 업로드 된 파일을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-141">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method writes the uploaded file to the specified directory.</span></span> <span data-ttu-id="c91de-142">따라서 ASP.NET 애플리케이션 서버의 디렉터리에 대 한 쓰기 액세스 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-142">Therefore, the ASP.NET application must have write access to the directory on the server.</span></span> <span data-ttu-id="c91de-143">두 가지 방법으로 애플리케이션 쓰기 액세스를 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-143">There are two ways that the application can get write access.</span></span> <span data-ttu-id="c91de-144">명시적으로 애플리케이션이 실행 되 고 있는, 업로드 된 파일을 저장할 디렉터리의 계정에 대 한 쓰기 액세스를 부여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-144">You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</span></span> <span data-ttu-id="c91de-145">또는 ASP.NET 애플리케이션에 부여 되는 신뢰 수준을 늘릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-145">Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</span></span> <span data-ttu-id="c91de-146">애플리케이션에 대 한 실행 디렉터리에 대 한 쓰기 액세스를 가져오려는 애플리케이션을 부여 해야 합니다는 <xref:System.Web.AspNetHostingPermission> 신뢰 수준이 설정 하는 개체는 <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-146">To get write access to the executing directory for the application, the application must be granted the <xref:System.Web.AspNetHostingPermission> object with the trust level set to the <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="c91de-147">신뢰 수준을 증가 서버의 리소스에 대 한 애플리케이션의 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-147">Increasing the level of trust increases the application's access to resources on the server.</span></span> <span data-ttu-id="c91de-148">않음을 유의이 방법은 보안상 악의적인 사용자가 애플리케이션에 대 한 제어도 되므로이 더 높은 수준의 신뢰에서 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-148">Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</span></span> <span data-ttu-id="c91de-149">애플리케이션 실행에 필요한 최소 권한 가진 사용자의 컨텍스트에서 ASP.NET 애플리케이션을 실행 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-149">It is a best practice to run an ASP.NET application in the context of a user with the minimum privileges that are required for the application to run.</span></span> <span data-ttu-id="c91de-150">ASP.NET 애플리케이션의 보안에 대 한 자세한 내용은 참조 하세요. [웹 애플리케이션에 대 한 기본 보안 사례](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) 하 고 [ASP.NET 신뢰 수준과 정책 파일](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-150">For more information about security in ASP.NET applications, see [Basic Security Practices for Web Applications](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) and [ASP.NET Trust Levels and Policy Files](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).</span></span>  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a><span data-ttu-id="c91de-151">메모리 제한 사항</span><span class="sxs-lookup"><span data-stu-id="c91de-151">Memory Limitations</span></span>  
 <span data-ttu-id="c91de-152">첫 번째 보호 서비스 거부에 대 한 공격 방법은 사용 하 여 업로드할 수 있는 파일의 크기를 제한 하는 <xref:System.Web.UI.WebControls.FileUpload> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-152">One way to guard against denial of service attacks is to limit the size of the files that can be uploaded by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-153">업로드 하려는 파일의 형식에 대 한 적절 한 크기 제한을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-153">You should set a size limit that is appropriate for the types of files that you expect to be uploaded.</span></span> <span data-ttu-id="c91de-154">기본 크기 제한은 4096 킬로바이트 (KB) 또는 4 메가바이트 (MB)입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-154">The default size limit is 4096 kilobytes (KB), or 4 megabytes (MB).</span></span> <span data-ttu-id="c91de-155">더 큰 파일을 설정 하 여 업로드할 수는 `maxRequestLength` 요소의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-155">You can allow larger files to be uploaded by setting the `maxRequestLength` attribute of the  element.</span></span> <span data-ttu-id="c91de-156">전체 애플리케이션에 대 한 최대 허용 파일 크기를 늘리려면 설정 된 `maxRequestLength` Web.config 파일에는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-156">To increase the maximum allowable file size for the entire application, set the `maxRequestLength` attribute in the Web.config file.</span></span> <span data-ttu-id="c91de-157">지정된 된 페이지에 대 한 최대 허용 파일 크기를 늘리려면 설정 합니다 `maxRequestLength` 내에서 특성을 `location` Web.config의 요소. 예를 들어 참조 [location 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-157">To increase the maximum allowable file size for a specified page, set the `maxRequestLength` attribute inside the `location` element in Web.config. For an example, see [location Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5).</span></span>  
  
 <span data-ttu-id="c91de-158">큰 파일을 업로드 하는 경우 사용자에도 다음과 같은 오류 메시지가 나타날:</span><span class="sxs-lookup"><span data-stu-id="c91de-158">When uploading large files, a user might also receive the following error message:</span></span>  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 <span data-ttu-id="c91de-159">사용자에 게이 오류 메시지에 발생 하는 경우의 가치를 높였습니다는 `memoryLimit` 특성에 요소는 Web.config 애플리케이션에 대 한 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-159">If your users encounter this error message, increase the value of the `memoryLimit` attribute in the  of element the Web.config file for the application.</span></span> <span data-ttu-id="c91de-160">`memoryLimit` 특성 최대 작업자 프로세스를 사용할 수 있는 메모리 양을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-160">The `memoryLimit` attribute specifies the maximum amount of memory that a worker process can use.</span></span> <span data-ttu-id="c91de-161">작업자 프로세스를 초과 하는 경우는 `memoryLimit` amount를 대체할 새 프로세스가 만들어질 및 모든 현재 요청이 새 프로세스에 다시 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-161">If the worker process exceeds the `memoryLimit` amount, a new process is created to replace it, and all current requests are reassigned to the new process.</span></span>  
  
 <span data-ttu-id="c91de-162">제어 하려면 설정 요청을 처리 하는 동안 메모리에 또는 서버에 저장 된 업로드할 파일을 일시적으로 인지는 `requestLengthDiskThreshold` 요소의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-162">To control whether the file to upload is temporarily stored in memory or on the server while the request is being processed, set the `requestLengthDiskThreshold` attribute of the  element.</span></span> <span data-ttu-id="c91de-163">이 특성을 사용 하면 입력된 스트림 버퍼의 크기를 관리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-163">This attribute enables you to manage the size of the input stream buffer.</span></span> <span data-ttu-id="c91de-164">기본값은 256 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-164">The default is 256 bytes.</span></span> <span data-ttu-id="c91de-165">에 대해 지정 하는 값을 지정 하는 값을 초과할 수 없습니다는 `maxRequestLength` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-165">The value that you specify should not exceed the value that you specify for the `maxRequestLength` attribute.</span></span>  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a><span data-ttu-id="c91de-166">UpdatePanel 컨트롤을 사용 하 여 FileUpload 컨트롤 사용</span><span class="sxs-lookup"><span data-stu-id="c91de-166">Using the FileUpload Control with the UpdatePanel Control</span></span>  
 <span data-ttu-id="c91de-167"><xref:System.Web.UI.WebControls.FileUpload> 컨트롤은 부분 페이지 렌더링 하는 동안 비동기 포스트백 시나리오 및 포스트백 시나리오 에서만에서 사용 되도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-167">The <xref:System.Web.UI.WebControls.FileUpload> control is designed to be used only in postback scenarios and not in asynchronous postback scenarios during partial-page rendering.</span></span> <span data-ttu-id="c91de-168">사용 하는 경우는 <xref:System.Web.UI.WebControls.FileUpload> 컨트롤 내부를 <xref:System.Web.UI.UpdatePanel> 컨트롤에 있는 컨트롤을 사용 하 여 파일을 업로드 해야 합니다는 <xref:System.Web.UI.PostBackTrigger> 패널에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-168">When you use a <xref:System.Web.UI.WebControls.FileUpload> control inside an <xref:System.Web.UI.UpdatePanel> control, the file must be uploaded by using a control that is a <xref:System.Web.UI.PostBackTrigger> object for the panel.</span></span> <span data-ttu-id="c91de-169"><xref:System.Web.UI.UpdatePanel> 컨트롤에서 포스트백을 사용 하 여 전체 페이지를 업데이트 하는 대신 페이지의 선택된 영역을 업데이트 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-169"><xref:System.Web.UI.UpdatePanel> controls are used to update selected regions of a page instead of updating the whole page with a postback.</span></span> <span data-ttu-id="c91de-170">자세한 내용은 [UpdatePanel 컨트롤 개요](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) 하 고 [부분 페이지 렌더링 개요](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-170">For more information, see [UpdatePanel Control Overview](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="c91de-171">선언 구문</span><span class="sxs-lookup"><span data-stu-id="c91de-171">Declarative Syntax</span></span>  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c91de-172">소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 사용할 수 있습니다: [다운로드](https://go.microsoft.com/fwlink/?LinkId=191897)합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-172">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkId=191897).</span></span>  
  
 <span data-ttu-id="c91de-173">이 섹션에 다음 네 가지 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-173">This section contains the following four examples:</span></span>  
  
-   <span data-ttu-id="c91de-174">첫 번째 예제를 만드는 방법을 보여는 <xref:System.Web.UI.WebControls.FileUpload> 코드에 지정 된 경로에 파일을 저장 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-174">The first example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in code.</span></span>  
  
-   <span data-ttu-id="c91de-175">두 번째 예제를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 애플리케이션에 대 한 파일 시스템에서 지정된 된 디렉터리에 파일을 저장 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-175">The second example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified directory in the file system for the application.</span></span>  
  
-   <span data-ttu-id="c91de-176">세 번째 예제를 만드는 방법을 보여는 <xref:System.Web.UI.WebControls.FileUpload> 지정된 된 경로에 파일을 저장 하 고 업로드할 수 있는 파일의 크기를 제한 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-176">The third example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified path and limits the size of the file that can be uploaded.</span></span>  
  
-   <span data-ttu-id="c91de-177">네 번째 예제를 만드는 방법을 보여는 <xref:System.Web.UI.WebControls.FileUpload> 지정된 된 경로에 파일을 저장 하 고 업로드할.xls 또는.doc 파일 이름 확장명을 가진 파일만 허용 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-177">The fourth example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified path and allows only files that have the .doc or .xls file name extensions to be uploaded.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c91de-178">이러한 예제에 대 한 기본 구문을 보여 주기는 <xref:System.Web.UI.WebControls.FileUpload> 제어 하지만 보여주지 않습니다 모든 필요한 오류 검사 파일을 저장 하기 전에 완료 해야 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-178">These examples demonstrate the basic syntax for the <xref:System.Web.UI.WebControls.FileUpload> control, but they do not demonstrate all the necessary error checking that should be completed before to saving the file.</span></span> <span data-ttu-id="c91de-179">자세한 예제는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="c91de-179">For a more complete example, see <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.</span></span>  
  
 <span data-ttu-id="c91de-180">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 코드에 지정 된 경로에 파일을 저장 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-180">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in code.</span></span> <span data-ttu-id="c91de-181"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-181">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 <span data-ttu-id="c91de-182">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 애플리케이션에 대 한 파일 시스템에서 지정된 된 디렉터리에 파일을 저장 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-182">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified directory in the file system for the application.</span></span> <span data-ttu-id="c91de-183"><xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType> 속성은 현재 실행 중인 서버 응용 프로그램에 대 한 루트 디렉터리의 실제 파일 시스템 경로 가져오는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-183">The <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType> property is used to get the physical file system path of the root directory for the currently executing server application.</span></span> <span data-ttu-id="c91de-184"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-184">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 <span data-ttu-id="c91de-185">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 코드에 지정 된 경로에 파일을 저장 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-185">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in the code.</span></span> <span data-ttu-id="c91de-186">컨트롤은 5MB로 업로드할 수 있는 파일의 크기를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-186">The control limits the size of the file that can be uploaded to 5 MB.</span></span> <span data-ttu-id="c91de-187">합니다 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 속성은 기본 액세스 데 <xref:System.Web.HttpPostedFile.ContentLength%2A> 속성과 파일의 크기를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-187">The <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property is used to access the underlying <xref:System.Web.HttpPostedFile.ContentLength%2A> property and return the size of the file.</span></span> <span data-ttu-id="c91de-188">업로드할 파일의 크기가 2MB 보다 작은 경우는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-188">If the size of the file to upload is less than 2 MB, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span> <span data-ttu-id="c91de-189">애플리케이션 코드에서 최대 파일 크기 설정을 검사 하는 것 외에도 설정할 수 있습니다는 `maxRequestLength` 애플리케이션에 대 한 구성 파일에 허용 되는 최대 크기를 요소의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-189">In addition to checking for the maximum file size setting in your application code, you can set the `maxRequestLength` attribute of the  element to a maximum allowable size in the configuration file for your application.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 <span data-ttu-id="c91de-190">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 코드에 지정 된 경로에 파일을 저장 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-190">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in the code.</span></span> <span data-ttu-id="c91de-191">이 예제는 업로드할.xls 또는.doc 파일 이름 확장명을 가진 파일만이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-191">This example allows only files that have the .doc or .xls file name extensions to be uploaded.</span></span> <span data-ttu-id="c91de-192"><xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType> 메서드는 업로드할 파일의 확장명을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-192">The <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType> method is called to return the extension of the file to upload.</span></span> <span data-ttu-id="c91de-193">파일에는.xls 또는.doc 파일 이름 확장명을 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-193">If the file has a .doc or .xls file name extension, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c91de-194"><see cref="T:System.Web.UI.WebControls.FileUpload" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-194">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.FileUpload" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-195">사용 된 <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> 의 새 인스턴스를 초기화 하는 생성자를 <xref:System.Web.UI.WebControls.FileUpload> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-195">Use the <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FileUpload> class.</span></span> <span data-ttu-id="c91de-196"><xref:System.Web.UI.WebControls.FileUpload> 컨트롤이 자동으로를 저장 하지 않습니다 파일 서버 사용자가 업로드할 파일을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-196">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically save a file to the server after the user selects the file to upload.</span></span> <span data-ttu-id="c91de-197">명시적으로 제어 또는 사용자가 지정된 된 파일을 제출 하도록 허용 하는 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-197">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="c91de-198">예를 들어 사용자가 파일을 업로드 하는 단추를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-198">For example, you can provide a button that the user clicks to upload the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c91de-199">다음 예제에서는의 새 인스턴스를 초기화 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FileUpload> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-199">The following example demonstrates how to initialize a new instance of the <xref:System.Web.UI.WebControls.FileUpload> class.</span></span> <span data-ttu-id="c91de-200">참고 생성자 구문을 보여 줍니다 하지만이 예제를 만든 후 컨트롤에 기능을 추가 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-200">Note that this example demonstrates the constructor syntax but does not add functionality to the control after it is created.</span></span>  
  
 <span data-ttu-id="c91de-201">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.FileUpload> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-201">This example is part of a larger example provided for the <xref:System.Web.UI.WebControls.FileUpload> class.</span></span>  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="c91de-202">클라이언트에서 HTML 콘텐츠를 렌더링하는 데 사용되는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-202">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</span></span></param>
        <summary><span data-ttu-id="c91de-203">지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링할 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 컨트롤의 HTML 특성 및 스타일을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-203">Adds the HTML attributes and styles of a <see cref="T:System.Web.UI.WebControls.FileUpload" /> control to render to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-204"><xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> 메서드는 주로 컨트롤 개발자가 적절 한 특성을 삽입 하 고 스타일을 합니다 <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> 출력 스트림에 <xref:System.Web.UI.WebControls.FileUpload> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-204">The <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> method is primarily used by control developers to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> output stream for a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-205">합니다 <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> 메서드 재정의 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-205">The <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> method overrides the <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-206">업로드 시 여러 파일을 선택할 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-206">Gets or sets a value that specifies whether multiple files can be selected for upload.</span></span></summary>
        <value><span data-ttu-id="c91de-207">여러 파일을 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-207"><see langword="true" /> if multiple files can be selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBytes : byte[]" Usage="System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-208"><see cref="T:System.Web.UI.WebControls.FileUpload" /> 컨트롤을 사용하여 지정된 파일의 바이트 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-208">Gets an array of the bytes in a file that is specified by using a <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span></span></summary>
        <value><span data-ttu-id="c91de-209">지정된 파일의 내용이 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-209">A <see cref="T:System.Byte" /> array that contains the contents of the specified file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-210"><xref:System.Web.UI.WebControls.FileUpload> 컨트롤은 자동으로 파일을 읽을 클라이언트에서.</span><span class="sxs-lookup"><span data-stu-id="c91de-210">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically read the file from the client.</span></span> <span data-ttu-id="c91de-211">명시적으로 제어 또는 사용자가 지정된 된 파일을 제출 하도록 허용 하는 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-211">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="c91de-212">예를 들어 사용자가 클릭 하 여 파일 업로드 수 있는 단추를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-212">For example, you can provide a button that the user can click to upload the file.</span></span> <span data-ttu-id="c91de-213">지정된 된 파일을 저장 하려면 작성 하는 코드를 호출할 수는 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> 파일의 내용을 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-213">The code that you write to save the specified file could call the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property, which returns the contents of the file.</span></span>  
  
 <span data-ttu-id="c91de-214">호출 하기 전에 합니다 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> 속성을 사용할지를 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> ; 속성을 확인 하는 <xref:System.Web.UI.WebControls.FileUpload> 업로드할 파일을 포함 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-214">Before calling the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property, you should use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the <xref:System.Web.UI.WebControls.FileUpload> control contains a file to upload.</span></span> <span data-ttu-id="c91de-215">경우는 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 반환 `true`를 호출 합니다 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-215">If the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property.</span></span> <span data-ttu-id="c91de-216">반환 하는 경우 `false`를 나타내는 사용자 컨트롤 파일 없습니다 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-216">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span> <span data-ttu-id="c91de-217">존재 하지 않는 파일을 저장 하려고 throw 파일이 있는지 확인 하는 오류 처리 코드를 제공 하지 않으면 경우는 <xref:System.Web.HttpException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-217">If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <xref:System.Web.HttpException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c91de-218">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-218">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-219">클릭할 때 합니다 **파일 업로드** 단추는 파일 내용의 바이트 페이지의 텍스트 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-219">When the user clicks the **Upload file** button, the contents of the file are displayed as bytes in a text box on the page.</span></span> <span data-ttu-id="c91de-220">이 예제에서는 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> 전체 파일을 업로드 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-220">This example uses the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property to upload the entire file.</span></span>  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="c91de-221">전체 파일을 읽지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="c91de-221">The entire file was not read.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileContent : System.IO.Stream" Usage="System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-222"><see cref="T:System.IO.Stream" /> 컨트롤을 사용하여 업로드할 파일을 가리키는 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-222">Gets a <see cref="T:System.IO.Stream" /> object that points to a file to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span></span></summary>
        <value><span data-ttu-id="c91de-223"><see cref="T:System.Web.UI.WebControls.FileUpload" />를 사용하여 업로드할 파일을 가리키는 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-223">A <see cref="T:System.IO.Stream" /> that points to a file to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-224"><xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 속성을 <xref:System.IO.Stream> 를 사용 하 여 업로드할 파일을 가리키는 개체를 <xref:System.Web.UI.WebControls.FileUpload> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-224">The <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property gets a <xref:System.IO.Stream> object that points to a file to upload by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-225">사용 된 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 파일의 내용에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-225">Use the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property to access the contents of the file.</span></span> <span data-ttu-id="c91de-226">예를 들어 사용할 수 있습니다는 <xref:System.IO.Stream> 바이트로 파일의 내용을 읽고 바이트 배열에 저장 하려면이 속성에서 반환 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-226">For example, you can use the <xref:System.IO.Stream> object that is returned by this property to read the contents of the file as bytes and store them in a byte array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c91de-227">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-227">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-228"><xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 속성 파일의 내용을 바이트 배열로 읽을을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-228">The <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property is used to read the contents of the file into a byte array.</span></span> <span data-ttu-id="c91de-229">클릭할 때 합니다 **파일 업로드** 단추는 파일 내용의 바이트 페이지의 텍스트 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-229">When the user clicks the **Upload file** button, the contents of the file are displayed as bytes in a text box on the page.</span></span>  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-230"><see cref="T:System.Web.UI.WebControls.FileUpload" /> 컨트롤을 사용하여 업로드할 클라이언트의 파일 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-230">Gets the name of a file on a client to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span></span></summary>
        <value><span data-ttu-id="c91de-231"><see cref="T:System.Web.UI.WebControls.FileUpload" />를 사용하여 업로드할 클라이언트의 파일 이름을 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-231">A string that specifies the name of a file on a client to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-232"><xref:System.Web.UI.WebControls.FileUpload> 컨트롤을 사용하여 업로드할 클라이언트의 파일 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-232">Gets the name of a file on a client to upload using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-233">파일 이름을 지정 하는 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> 속성 반환 클라이언트에 있는 파일의 경로 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-233">The file name that the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property returns does not include the path of the file on the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c91de-234">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 코드에 지정 된 경로에 파일을 저장 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-234">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in code.</span></span> <span data-ttu-id="c91de-235"><xref:System.Web.UI.WebControls.FileUpload.FileName%2A> 업로드할 파일의 이름을 가져올 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-235">The <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property is used to get the name of the file to upload.</span></span> <span data-ttu-id="c91de-236"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장, 클라이언트에서 파일에 동일한 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-236">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server, using the same name the file has on the client.</span></span> <span data-ttu-id="c91de-237">이 컨트롤에 대 한 기본 구문을 보여 줍니다 하지만이 예제 파일을 저장 하기 전에 수행 해야 하는 모든 필요한 오류 검사 하는 것을 보여 주지 않지만 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-237">Note that this example demonstrates the basic syntax for this control, but does not demonstrate all the necessary error checking that should be done before saving the file.</span></span> <span data-ttu-id="c91de-238">자세한 예제는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="c91de-238">For a more complete example, see <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFile : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-239"><see cref="T:System.Web.UI.WebControls.FileUpload" /> 컨트롤에 파일이 들어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-239">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control contains a file.</span></span></summary>
        <value><span data-ttu-id="c91de-240"><see cref="T:System.Web.UI.WebControls.FileUpload" />에 파일이 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-240"><see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.FileUpload" /> contains a file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-241">합니다 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 속성이 나타내는 값을 가져옵니다 여부를 <xref:System.Web.UI.WebControls.FileUpload> 업로드할 파일을 포함 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-241">The <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property gets a value indicating whether the <xref:System.Web.UI.WebControls.FileUpload> control contains a file to upload.</span></span> <span data-ttu-id="c91de-242">업로드할 파일을 파일에 대 한 작업을 수행 하기 전에 있는지 확인 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-242">Use this property to verify that a file to upload exists before performing operations on the file.</span></span> <span data-ttu-id="c91de-243">예를 들어를 호출 하기 전에 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 디스크를 사용 하 여 파일을 저장 하는 방법을 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 속성을 통해 파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-243">For example, before calling the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method to save the file to disk, use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the file exists.</span></span> <span data-ttu-id="c91de-244">하는 경우 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 반환 `true`를 호출 합니다 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-244">If <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span> <span data-ttu-id="c91de-245">반환 하는 경우 `false`를 나타내는 사용자 컨트롤 파일 없습니다 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-245">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c91de-246">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 오류 검사를 수행 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-246">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that performs error checking.</span></span> <span data-ttu-id="c91de-247">파일을 저장 하기 전에 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 메서드를 호출 하 여 업로드할 파일을 컨트롤에 포함 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-247">Before saving the file, the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> method is called to verify that the control contains a file to upload.</span></span> <span data-ttu-id="c91de-248">또한는 <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> 메서드는 경로에 동일한 이름의 파일이 이미 발생 하는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-248">In addition, the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method is called to check whether a file with the same name already occurs in the path.</span></span> <span data-ttu-id="c91de-249">업로드할 파일의 이름 앞에 밑줄 문자를 접두사로 경우는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-249">If it does, the name of the file to upload is prefixed with an underscore character before the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called.</span></span> <span data-ttu-id="c91de-250">이 기존 파일 덮어쓰지 못하도록 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-250">This prevents the existing file from being overwritten.</span></span>  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFiles : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-251">임의의 파일이 업로드되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-251">Gets a value that indicates whether any files have been uploaded.</span></span></summary>
        <value><span data-ttu-id="c91de-252">파일이 업로드되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-252"><see langword="true" /> if any files have been uploaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-253">또한이 메서드 반환 `false` (0 바이트) 빈 파일을 업로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-253">This method also returns `false` if an empty file (zero bytes) is uploaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="fileUpload.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c91de-254">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-254">An <see cref="T:System.EventArgs" /> object that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c91de-255"><see cref="E:System.Web.UI.Control.PreRender" /> 컨트롤에 대해 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-255">Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event for the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-256">합니다 <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A> 메서드를 알립니다는 <xref:System.Web.UI.WebControls.FileUpload> 렌더링 콘텐츠와 뷰 상태를 저장 하기 전에 필요한 미리 렌더링 단계를 수행 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-256">The <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A> method notifies the <xref:System.Web.UI.WebControls.FileUpload> control to perform any necessary pre-rendering steps before saving view state and rendering content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFile : System.Web.HttpPostedFile" Usage="System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-257"><see cref="T:System.Web.UI.WebControls.FileUpload" /> 컨트롤을 사용하여 업로드된 파일의 내부 <see cref="T:System.Web.HttpPostedFile" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-257">Gets the underlying <see cref="T:System.Web.HttpPostedFile" /> object for a file that is uploaded by using the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span></span></summary>
        <value><span data-ttu-id="c91de-258"><see cref="T:System.Web.UI.WebControls.FileUpload" />를 사용하여 업로드된 파일의 <see cref="T:System.Web.HttpPostedFile" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-258">An <see cref="T:System.Web.HttpPostedFile" /> for a file uploaded by using the <see cref="T:System.Web.UI.WebControls.FileUpload" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-259"><xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 기본 속성을 가져옵니다 <xref:System.Web.HttpPostedFile> 사용 하 여 업로드 된 파일에 대 한 개체는 <xref:System.Web.UI.WebControls.FileUpload> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-259">The <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property gets the underlying <xref:System.Web.HttpPostedFile> object for a file that is uploaded by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-260">업로드 된 파일에서 추가 속성에 액세스 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-260">Use this property to access additional properties on the uploaded file.</span></span>  
  
 <span data-ttu-id="c91de-261">사용할 수는 <xref:System.Web.HttpPostedFile.ContentLength%2A> 파일의 길이 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-261">You can use the <xref:System.Web.HttpPostedFile.ContentLength%2A> property to get the length of the file.</span></span> <span data-ttu-id="c91de-262">사용할 수는 <xref:System.Web.HttpPostedFile.ContentType%2A> MIME 가져올 속성을 콘텐츠 형식 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-262">You can use the <xref:System.Web.HttpPostedFile.ContentType%2A> property to get the MIME content type of the file.</span></span> <span data-ttu-id="c91de-263">또한 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 속성에 액세스를 <xref:System.Web.HttpPostedFile.FileName%2A> 속성을 <xref:System.Web.HttpPostedFile.InputStream%2A> 속성 및 <xref:System.Web.HttpPostedFile.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-263">In addition, you can use the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to access the <xref:System.Web.HttpPostedFile.FileName%2A> property, the <xref:System.Web.HttpPostedFile.InputStream%2A> property, and the <xref:System.Web.HttpPostedFile.SaveAs%2A> method.</span></span> <span data-ttu-id="c91de-264">하지만 동일한 기능을 제공를 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> 속성을 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 속성 및 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-264">However, the same functionality is provided by the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property, the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property, and the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c91de-265">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-265">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="c91de-266">클릭할 때 합니다 **파일 업로드** 단추는 파일 내용의 바이트 페이지의 텍스트 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-266">When the user clicks the **Upload file** button, the contents of the file are displayed as bytes in a text box on the page.</span></span> <span data-ttu-id="c91de-267">이 예제에서는 합니다 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 속성에 액세스 합니다 <xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-267">This example uses the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to access the <xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c91de-268"><xref:System.Web.HttpPostedFile.ContentLength%2A> 속성 파일 내용을 바이트 배열로 복사 하기 전에 파일의 길이 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-268">The <xref:System.Web.HttpPostedFile.ContentLength%2A> property is used to determine the length of the file before copying the file contents to a byte array.</span></span>  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFiles : System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;" Usage="System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c91de-269">업로드된 파일의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-269">Gets the collection of uploaded files.</span></span></summary>
        <value><span data-ttu-id="c91de-270">업로드된 파일의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-270">The collection of uploaded files.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="c91de-271"><see cref="T:System.Web.UI.WebControls.FileUpload" /> 컨트롤 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-271">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control content.</span></span></param>
        <summary><span data-ttu-id="c91de-272">클라이언트에서 렌더링할 콘텐츠를 쓰는 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 <see cref="T:System.Web.UI.WebControls.FileUpload" /> 컨트롤 콘텐츠를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-272">Sends the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to render on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-273"><xref:System.Web.UI.WebControls.FileUpload.Render%2A> 메서드 보냅니다 합니다 <xref:System.Web.UI.WebControls.FileUpload> 내용을 지정 된 제어 <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> 클라이언트에서 렌더링할 콘텐츠를 기록 하는 개체.</span><span class="sxs-lookup"><span data-stu-id="c91de-273">The <xref:System.Web.UI.WebControls.FileUpload.Render%2A> method sends the <xref:System.Web.UI.WebControls.FileUpload> control content to the specified <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> object, which writes the content to render on the client.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="fileUpload.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="c91de-274">업로드된 파일을 저장할 서버의 위치에 대한 전체 경로를 지정하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-274">A string that specifies the full path of the location of the server on which to save the uploaded file.</span></span></param>
        <summary><span data-ttu-id="c91de-275">업로드된 파일의 내용을 웹 서버의 지정된 경로에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-275">Saves the contents of an uploaded file to a specified path on the Web server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91de-276"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드 웹 서버에 업로드 된 파일의 내용이 지정된 된 경로에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-276">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method saves the contents of an uploaded file to a specified path on the Web server.</span></span>  
  
 <span data-ttu-id="c91de-277"><xref:System.Web.UI.WebControls.FileUpload> 컨트롤이 자동으로를 저장 하지 않습니다 파일 서버 사용자가 업로드할 파일을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-277">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically save a file to the server after the user selects the file to upload.</span></span> <span data-ttu-id="c91de-278">명시적으로 제어 또는 사용자가 지정된 된 파일을 제출 하도록 허용 하는 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-278">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="c91de-279">예를 들어 사용자가 파일을 업로드 하는 단추를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-279">For example, you can provide a button that the user clicks to upload the file.</span></span> <span data-ttu-id="c91de-280">지정된 된 파일을 저장 하려면 작성 하는 코드를 호출 해야 합니다 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 서버에서 파일의 내용이 지정된 된 경로에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-280">The code that you write to save the specified file should call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, which saves the contents of a file to a specified path on the server.</span></span> <span data-ttu-id="c91de-281">일반적으로 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 서버에 다시 게시를 발생 시키는 이벤트에 대 한 이벤트 처리 메서드에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-281">Typically, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called in an event-handling method for an event that raises a post back to the server.</span></span> <span data-ttu-id="c91de-282">예를 들어 파일을 전송 하는 단추를 제공 하는 경우 서버에 파일을 저장 하는 코드 click 이벤트에 대 한 이벤트 처리 메서드 내부에 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-282">For example, if you provide a button to submit a file, the code to save the file to the server could then be included inside the event-handling method for the click event.</span></span>  
  
 <span data-ttu-id="c91de-283">호출 하는 경우는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 서버에서 업로드 된 파일을 저장할 디렉터리의 전체 경로 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-283">When you call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, you must specify the full path of the directory on the server in which to save the uploaded file.</span></span> <span data-ttu-id="c91de-284">애플리케이션 코드에서 경로 명시적으로 지정 하지 않으면 경우는 <xref:System.Web.HttpException> 사용자가 파일을 업로드 하려고 할 때 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-284">If you do not explicitly specify a path in your application code, an <xref:System.Web.HttpException> exception is thrown when a user attempts to upload a file.</span></span> <span data-ttu-id="c91de-285">이 문제는 서버에서 파일을 업로드 하는 파일을 저장할 경로 지정 하는 사용자를 허용 하지 않도록 보안을 유지 하기 하는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-285">This behavior helps keep the files on the server secure, by not allowing users to specify a path in which to save the files that they upload.</span></span>  
  
 <span data-ttu-id="c91de-286">호출 하기 전에 합니다 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드를 사용할지를 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> ; 속성을 확인 하는 <xref:System.Web.UI.WebControls.FileUpload> 업로드할 파일을 포함 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-286">Before calling the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, you should use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the <xref:System.Web.UI.WebControls.FileUpload> control contains a file to upload.</span></span> <span data-ttu-id="c91de-287">경우는 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 반환 `true`를 호출 합니다 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c91de-287">If the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span> <span data-ttu-id="c91de-288">반환 하는 경우 `false`를 나타내는 사용자 컨트롤 파일 없습니다 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-288">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span> <span data-ttu-id="c91de-289">존재 하지 않는 파일을 저장 하려고 throw 파일이 있는지 확인 하는 오류 처리 코드를 제공 하지 않으면 경우는 <xref:System.Web.HttpException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-289">If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <xref:System.Web.HttpException> exception.</span></span>  
  
 <span data-ttu-id="c91de-290">에 대 한 호출에 대 한는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 하려면 ASP.NET 애플리케이션 디렉터리에 대 한 쓰기 액세스에 있어야 서버.</span><span class="sxs-lookup"><span data-stu-id="c91de-290">For a call to the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> to work, the ASP.NET application must have write access to the directory on the server.</span></span> <span data-ttu-id="c91de-291">두 가지 방법으로 애플리케이션 쓰기 액세스를 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-291">There are two ways that the application can get write access.</span></span> <span data-ttu-id="c91de-292">명시적으로 애플리케이션이 실행 되 고 있는, 업로드 된 파일을 저장할 디렉터리의 계정에 대 한 쓰기 액세스를 부여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-292">You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</span></span> <span data-ttu-id="c91de-293">또는 ASP.NET 애플리케이션에 부여 되는 신뢰 수준을 늘릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-293">Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</span></span> <span data-ttu-id="c91de-294">애플리케이션에 대 한 실행 디렉터리에 대 한 쓰기 액세스를 가져오려는 애플리케이션을 부여 해야 합니다는 <xref:System.Web.AspNetHostingPermission> 신뢰 수준이 설정 하는 개체는 <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-294">To get write access to the executing directory for the application, the application must be granted the <xref:System.Web.AspNetHostingPermission> object with the trust level set to the <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="c91de-295">신뢰 수준을 증가 서버의 리소스에 대 한 애플리케이션의 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-295">Increasing the level of trust increases the application's access to resources on the server.</span></span> <span data-ttu-id="c91de-296">않음을 유의이 방법은 보안상 악의적인 사용자가 애플리케이션에 대 한 제어도 되므로이 더 높은 수준의 신뢰에서 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-296">Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</span></span> <span data-ttu-id="c91de-297">애플리케이션 실행에 필요한 최소 권한을 가진 사용자의 컨텍스트에서 ASP.NET 애플리케이션을 실행 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-297">It is a best practice to run an ASP.NET application in the context of a user who has the minimum privileges that are required for the application to run.</span></span> <span data-ttu-id="c91de-298">ASP.NET 애플리케이션의 보안에 대 한 자세한 내용은 참조 하세요. [웹 애플리케이션에 대 한 기본 보안 사례](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) 하 고 [ASP.NET 신뢰 수준과 정책 파일](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-298">For more information about security in ASP.NET applications, see [Basic Security Practices for Web Applications](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) and [ASP.NET Trust Levels and Policy Files](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c91de-299">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FileUpload> 오류 검사를 수행 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-299">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that performs error checking.</span></span> <span data-ttu-id="c91de-300">파일을 저장 하기 전에 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 메서드는 업로드할 파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-300">Before the file is saved, the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> method is called to verify that a file to upload exists.</span></span> <span data-ttu-id="c91de-301">또한는 <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> 메서드를 호출 하는 경로에 이미 동일한 이름을 가진 파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-301">In addition, the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method is called to check whether a file that has the same name already exists in the path.</span></span> <span data-ttu-id="c91de-302">앞에 있는 번호 업로드할 파일의 이름 앞에 경우는 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-302">If it does, the name of the file to upload is prefixed with a number before the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called.</span></span> <span data-ttu-id="c91de-303">이 기존 파일 덮어쓰지 못하도록 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="c91de-303">This prevents the existing file from being overwritten.</span></span>  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="c91de-304"><paramref name="filename" />이 전체 경로가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c91de-304"><paramref name="filename" /> is not a full path.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
        <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad"><span data-ttu-id="c91de-305">웹 애플리케이션에 대 한 기본 보안 사례</span><span class="sxs-lookup"><span data-stu-id="c91de-305">Basic Security Practices for Web Applications</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>