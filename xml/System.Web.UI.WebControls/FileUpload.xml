<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileUpload.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5baae0ccc49431af72520ecf979643419d693c7e7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">baae0ccc49431af72520ecf979643419d693c7e7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Displays a text box control and a browse button that enable users to select a file to upload to the server.</source>
          <target state="translated">사용자가 서버에 업로드할 파일을 선택하는 데 사용할 수 있는 TextBox 컨트롤과 찾아보기 단추를 표시합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>In this topic:</source>
          <target state="translated">항목 내용:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>소개<ept id="p1">](#introduction)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source><bpt id="p1">[</bpt>Saving Uploaded Files<ept id="p1">](#saving_uploaded_files)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>업로드 된 파일 저장<ept id="p1">](#saving_uploaded_files)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source><bpt id="p1">[</bpt>Security Considerations<ept id="p1">](#security_considerations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>보안 고려 사항<ept id="p1">](#security_considerations)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source><bpt id="p1">[</bpt>Memory Limitations<ept id="p1">](#memory_limitations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>메모리 제한 사항<ept id="p1">](#memory_limitations)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source><bpt id="p1">[</bpt>Using the FileUpload Control with the UpdatePanel Control<ept id="p1">](#using_the_FileUpload_Control_with_the_UpdatePanel_control)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>UpdatePanel 컨트롤에 파일 업로드 컨트롤 사용<ept id="p1">](#using_the_FileUpload_Control_with_the_UpdatePanel_control)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#DeclarativeSyntax)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>선언 구문<ept id="p1">](#DeclarativeSyntax)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Introduction</source>
          <target state="translated">소개</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> class displays a text box control and a browse button that enable users to select a file on the client and upload it to the Web server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 클래스 텍스트 상자 컨트롤 및 클라이언트에서 파일을 선택 하 고 웹 서버에 업로드 하는 데 사용할 수 있는 찾아보기 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The user specifies the file to upload by entering the full path of the file on the local computer (for example, <bpt id="p1">**</bpt>C:\MyFiles\TestFile.txt<ept id="p1">**</ept>) in the text box of the control.</source>
          <target state="translated">사용자가 로컬 컴퓨터에서 파일의 전체 경로 입력 하 여 업로드할 파일 지정 (예를 들어 <bpt id="p1">**</bpt>C:\MyFiles\TestFile.txt<ept id="p1">**</ept>) 컨트롤의 텍스트 상자에 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Alternately, the user can select the file by clicking the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> button, and then locating it in the <bpt id="p2">**</bpt>Choose File<ept id="p2">**</ept> dialog box.</source>
          <target state="translated">사용자가 클릭 하 여 파일을 선택할 수는 또한는 <bpt id="p1">**</bpt>찾아보기<ept id="p1">**</ept> 단추를 클릭 한 다음 해당 위치를 찾는에 <bpt id="p2">**</bpt>파일 선택<ept id="p2">**</ept> 대화 상자.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property to get the name of a file on a client to upload by using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> 속성을 사용 하 여 업로드할 클라이언트의 파일의 이름을 가져오려면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The file name that this property returns does not include the path of the file on the client.</source>
          <target state="translated">이 속성을 반환 하는 파일 이름에는 클라이언트에서 파일의 경로 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object that points to a file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> 속성 get는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 업로드할 파일을 가리키는 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Use this property to access the contents of the file as bytes.</source>
          <target state="translated">이 속성을 사용 하 여 바이트 형식으로 파일의 내용에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property to read the contents of the file as bytes and store them in a byte array.</source>
          <target state="translated">예를 들어, 사용할 수는 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 에서 반환 되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> 바이트 형식으로 파일의 내용을 읽고 바이트 배열에 저장할 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property to retrieve all the bytes in the file.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> 파일의 모든 바이트를 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property gets the underlying <ph id="ph2">&lt;xref:System.Web.HttpPostedFile&gt;</ph> object for the file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 속성의 내부 가져옵니다 <ph id="ph2">&lt;xref:System.Web.HttpPostedFile&gt;</ph> 업로드할 파일에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>You can use this property to access additional properties on the file.</source>
          <target state="translated">파일에서 추가 속성에 액세스 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> property gets the length of the file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> 속성 파일의 길이 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentType%2A&gt;</ph> property gets the MIME content type of the file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentType%2A&gt;</ph> 속성 파일의 MIME 콘텐츠 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>In addition, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.FileName%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.HttpPostedFile.InputStream%2A&gt;</ph> property, and the <ph id="ph4">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">또한 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 속성에 액세스는 <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.FileName%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.HttpPostedFile.InputStream%2A&gt;</ph> 속성 및 <ph id="ph4">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>However, the same functionality is provided by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">하지만 동일한 기능을 제공는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Saving Uploaded Files</source>
          <target state="translated">업로드 된 파일 저장</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically save a file to the server after the user selects the file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤이 자동으로 저장 하지는 파일 서버에 업로드할 파일을 선택한 후 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
          <target state="translated">명시적으로 컨트롤이 나 사용자 지정된 된 파일을 전송 하도록 허용 하는 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>For example, you can provide a button that the user clicks to upload the file.</source>
          <target state="translated">예를 들어 파일을 업로드 하는 사용자가 클릭 하는 단추를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The code that you write to save the specified file should call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, which saves the contents of a file to a specified path on the server.</source>
          <target state="translated">지정된 된 파일을 저장 하기 위해 작성 하는 코드를 호출 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 서버에서 파일의 내용이 지정된 된 경로에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called in an event-handling method for an event that raises a post back to the server.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드는 서버에 다시 게시를 발생 시키는 이벤트에 대 한 이벤트 처리 메서드에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>For example, if you provide a button to submit a file, you could include the code to save the file inside the event-handling method for the click event.</source>
          <target state="translated">예를 들어 파일을 전송 하는 단추를 제공 하는 경우에 click 이벤트에 대 한 이벤트 처리 메서드에 포함 된 파일을 저장 하는 코드를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method to save the file to the server, use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 사용 하 여 서버에 파일을 저장는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 속성을 확인 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤 파일을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph>, 호출 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
          <target state="translated">반환 하는 경우 <ph id="ph1">`false`</ph>를 사용자에 게 컨트롤 파일이 없습니다 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Do not check the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property to determine whether a file to upload exists because, by default, this property contains 0 bytes.</source>
          <target state="translated">확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 업로드할 파일을 여부를 확인 하려면 속성 기본적으로이 속성에 0 바이트 포함 이기 때문에 존재 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>As a result, even when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control is blank, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property returns a non-null value.</source>
          <target state="translated">결과적으로, 경우에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤 비어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 속성이 null이 아닌 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Security Considerations</source>
          <target state="translated">보안 고려 사항</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>When you call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, you must specify the full path of the directory in which to save the uploaded file.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 업로드 한 파일을 저장 하는 디렉터리의 전체 경로 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>If you do not explicitly specify a path in your application code, an exception is thrown when a user attempts to upload a file.</source>
          <target state="translated">응용 프로그램 코드에서 경로 명시적으로 지정 하지 않으면 사용자가 파일을 업로드 하려고 할 때 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>This behavior helps keep the files on the server secure by preventing users from being able to write to arbitrary locations in your application's directory structure, as well as preventing access to sensitive root directories.</source>
          <target state="translated">이 문제는 사용자가 응용 프로그램의 디렉터리 구조에서 임의의 위치에 쓸 수 뿐만 아니라 중요 한 루트 디렉터리에 대 한 액세스를 방지 하지 못하도록 하 여 서버에서 파일을 안전 하는 데 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method writes the uploaded file to the specified directory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드는 지정된 된 디렉터리를 업로드 한 파일을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Therefore, the ASP.NET application must have write access to the directory on the server.</source>
          <target state="translated">따라서 ASP.NET 응용 프로그램 서버에서 디렉터리에 쓰기 권한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>There are two ways that the application can get write access.</source>
          <target state="translated">두 가지 방법으로 응용 프로그램 쓰기 액세스를 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</source>
          <target state="translated">명시적으로 응용 프로그램이 실행 되 고 있는, 업로드 한 파일을 저장할 디렉터리에서 계정에 대 한 쓰기 액세스를 부여할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</source>
          <target state="translated">또는 ASP.NET 응용 프로그램에 부여 되는 신뢰 수준을 높일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>To get write access to the executing directory for the application, the application must be granted the <ph id="ph1">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> object with the trust level set to the <ph id="ph2">&lt;xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">응용 프로그램에 대 한 실행 디렉터리에 대 한 쓰기를 가져오려는 응용 프로그램을 부여 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> 신뢰 수준을 설정 하는 개체는 <ph id="ph2">&lt;xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Increasing the level of trust increases the application's access to resources on the server.</source>
          <target state="translated">신뢰 수준의 늘리면 서버에서 리소스에 대 한 응용 프로그램의 액세스를 증가 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</source>
          <target state="translated">참고가 아닌지 안전한 방법은 응용 프로그램의 제어권을 얻은 악의적인 사용자도 되므로이 더 높은 신뢰 수준에서 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>It is a best practice to run an ASP.NET application in the context of a user with the minimum privileges that are required for the application to run.</source>
          <target state="translated">실행할 응용 프로그램에 필요한 최소 권한 가진 사용자의 컨텍스트에서 ASP.NET 응용 프로그램을 실행 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>For more information about security in ASP.NET applications, see <bpt id="p1">[</bpt>Basic Security Practices for Web Applications<ept id="p1">](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)</ept> and <bpt id="p2">[</bpt>ASP.NET Trust Levels and Policy Files<ept id="p2">](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)</ept>.</source>
          <target state="translated">ASP.NET 응용 프로그램의 보안에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>웹 응용 프로그램에 대 한 기본 보안 사례<ept id="p1">](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)</ept> 및 <bpt id="p2">[</bpt>ASP.NET 신뢰 수준과 정책 파일<ept id="p2">](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Memory Limitations</source>
          <target state="translated">메모리 제한 사항</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>One way to guard against denial of service attacks is to limit the size of the files that can be uploaded by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated">보호 하는 한 가지 방법은 서비스 거부 공격이 사용 하 여 업로드할 수 있는 파일의 크기를 제한 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>You should set a size limit that is appropriate for the types of files that you expect to be uploaded.</source>
          <target state="translated">업로드할 수 있어야 하는 파일의 형식에 대 한 적절 한 크기 제한을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The default size limit is 4096 kilobytes (KB), or 4 megabytes (MB).</source>
          <target state="translated">기본 크기 제한은 4096 킬로바이트 (KB) 또는 4 메가바이트 (MB)입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>You can allow larger files to be uploaded by setting the <ph id="ph1">`maxRequestLength`</ph> attribute of the  element.</source>
          <target state="translated">더 큰 파일을 설정 하 여 업로드 하도록 허용할 수 있습니다는 <ph id="ph1">`maxRequestLength`</ph> 요소의 특성입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>To increase the maximum allowable file size for the entire application, set the <ph id="ph1">`maxRequestLength`</ph> attribute in the Web.config file.</source>
          <target state="translated">전체 응용 프로그램에 대 한 최대 허용 파일 크기를 늘리려면 설정의 <ph id="ph1">`maxRequestLength`</ph> Web.config 파일에는 특성입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>To increase the maximum allowable file size for a specified page, set the <ph id="ph1">`maxRequestLength`</ph> attribute inside the <ph id="ph2">`location`</ph> element in Web.config. For an example, see <bpt id="p1">[</bpt>location Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)</ept>.</source>
          <target state="translated">지정된 된 페이지에 대 한 최대 허용 파일 크기를 늘리려면 설정는 <ph id="ph1">`maxRequestLength`</ph> 내 특성의 <ph id="ph2">`location`</ph> Web.config의 요소입니다. 예를 들어 참조 <bpt id="p1">[</bpt>위치 요소 (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>When uploading large files, a user might also receive the following error message:</source>
          <target state="translated">큰 파일을 업로드할 때 사용자 수 또한는 다음과 같은 오류 메시지가 나타납니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>If your users encounter this error message, increase the value of the <ph id="ph1">`memoryLimit`</ph> attribute in the  of element the Web.config file for the application.</source>
          <target state="translated">사용자가이 오류 메시지를 발생의 값 늘리기는 <ph id="ph1">`memoryLimit`</ph> 특성에 요소는 Web.config 응용 프로그램에 대 한 파일입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">`memoryLimit`</ph> attribute specifies the maximum amount of memory that a worker process can use.</source>
          <target state="translated"><ph id="ph1">`memoryLimit`</ph> 특성 작업자 프로세스에서 사용할 수 있는 메모리의 최대 크기를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>If the worker process exceeds the <ph id="ph1">`memoryLimit`</ph> amount, a new process is created to replace it, and all current requests are reassigned to the new process.</source>
          <target state="translated">작업자 프로세스를 초과 하는 경우는 <ph id="ph1">`memoryLimit`</ph> amount를 대체할 새 프로세스가 만들어짐 및 모든 현재 요청은 새 프로세스에 다시 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>To control whether the file to upload is temporarily stored in memory or on the server while the request is being processed, set the <ph id="ph1">`requestLengthDiskThreshold`</ph> attribute of the  element.</source>
          <target state="translated">제어 하려면 설정 요청 처리 되는 동안 메모리에 또는 서버에 저장 된 업로드할 파일을 일시적으로 인지는 <ph id="ph1">`requestLengthDiskThreshold`</ph> 요소의 특성입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>This attribute enables you to manage the size of the input stream buffer.</source>
          <target state="translated">이 특성을 사용 하면 입력된 스트림 버퍼의 크기를 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The default is 256 bytes.</source>
          <target state="translated">기본값은 256 바이트입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The value that you specify should not exceed the value that you specify for the <ph id="ph1">`maxRequestLength`</ph> attribute.</source>
          <target state="translated">에 지정 하는 값을 지정한 값을 초과할 수 없습니다는 <ph id="ph1">`maxRequestLength`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Using the FileUpload Control with the UpdatePanel Control</source>
          <target state="translated">UpdatePanel 컨트롤에 파일 업로드 컨트롤 사용</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control is designed to be used only in postback scenarios and not in asynchronous postback scenarios during partial-page rendering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤 부분 페이지 렌더링 하는 동안 비동기 포스트백 시나리오 아니라 포스트백 시나리오에만 사용할 수 있도록 설계 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>When you use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control inside an <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, the file must be uploaded by using a control that is a <ph id="ph3">&lt;xref:System.Web.UI.PostBackTrigger&gt;</ph> object for the panel.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤 내부는 <ph id="ph2">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> 컨트롤에 있는 컨트롤을 사용 하 여 파일을 업로드 해야 합니다는 <ph id="ph3">&lt;xref:System.Web.UI.PostBackTrigger&gt;</ph> 패널에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source><ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls are used to update selected regions of a page instead of updating the whole page with a postback.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> 컨트롤이는 포스트백을 통해 전체 페이지를 업데이트 하는 대신 페이지의 선택한 영역을 업데이트 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>For more information, see <bpt id="p1">[</bpt>UpdatePanel Control Overview<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> and <bpt id="p2">[</bpt>Partial-Page Rendering Overview<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>UpdatePanel 컨트롤 개요<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> 및 <bpt id="p2">[</bpt>부분 페이지 렌더링 개요<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>Declarative Syntax</source>
          <target state="translated">선언 구문</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>A Visual Studio Web site project with source code is available to accompany this topic: <bpt id="p1">[</bpt>Download<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=191897)</ept>.</source>
          <target state="translated">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: <bpt id="p1">[</bpt>다운로드<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=191897)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>This section contains the following four examples:</source>
          <target state="translated">이 섹션에는 다음 4 개의 예제에서는 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The first example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a path that is specified in code.</source>
          <target state="translated">첫 번째 예제를 만드는 방법을 보여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 코드에 지정 된 경로에 파일을 저장 하 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The second example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a specified directory in the file system for the application.</source>
          <target state="translated">두 번째 예제를 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 응용 프로그램에 대 한 파일 시스템에서 지정된 된 디렉터리에 파일을 저장 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The third example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a specified path and limits the size of the file that can be uploaded.</source>
          <target state="translated">세 번째 예제를 만드는 방법을 보여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤 지정 된 경로에 파일을 저장 하 고 업로드할 수 있는 파일의 크기를 제한 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The fourth example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a specified path and allows only files that have the .doc or .xls file name extensions to be uploaded.</source>
          <target state="translated">네 번째 예제를 만드는 방법을 보여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 지정된 된 경로에 파일을 저장 하 고 업로드할.xls 또는.doc 파일 이름 확장명을 가진 파일만 허용 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>These examples demonstrate the basic syntax for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control, but they do not demonstrate all the necessary error checking that should be completed before to saving the file.</source>
          <target state="translated">이러한 예제에는 기본 구문을 보여 주는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤 있지만 보여 모든 필수 오류 검사 파일을 저장 하기 전에 완료 해야 하는 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>For a more complete example, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph>.</source>
          <target state="translated">자세한 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a path that is specified in code.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 코드에 지정 된 경로에 파일을 저장 하 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called to save the file to the specified path on the server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a specified directory in the file system for the application.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 응용 프로그램에 대 한 파일 시스템에서 지정된 된 디렉터리에 파일을 저장 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType&gt;</ph> property is used to get the physical file system path of the root directory for the currently executing server application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType&gt;</ph> 속성은 현재 실행 중인 서버 응용 프로그램에 대 한 루트 디렉터리의 실제 파일 시스템 경로 가져오는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called to save the file to the specified path on the server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a path that is specified in the code.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 코드에 지정 된 경로에 파일을 저장 하 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The control limits the size of the file that can be uploaded to 5 MB.</source>
          <target state="translated">컨트롤을 5로 업로드할 수 있는 파일의 크기를 제한 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property is used to access the underlying <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> property and return the size of the file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 속성을 사용 하는 기본 액세스 <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> 속성 및 파일의 크기를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>If the size of the file to upload is less than 2 MB, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called to save the file to the specified path on the server.</source>
          <target state="translated">업로드할 파일의 크기는 2MB 보다 작은 경우의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>In addition to checking for the maximum file size setting in your application code, you can set the <ph id="ph1">`maxRequestLength`</ph> attribute of the  element to a maximum allowable size in the configuration file for your application.</source>
          <target state="translated">응용 프로그램 코드에서 최대 파일 크기 설정을 검사 하는 것 외에도 설정할 수 있습니다는 <ph id="ph1">`maxRequestLength`</ph> 응용 프로그램에 대 한 구성 파일에 허용 되는 최대 크기를 요소의 특성입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a path that is specified in the code.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 코드에 지정 된 경로에 파일을 저장 하 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>This example allows only files that have the .doc or .xls file name extensions to be uploaded.</source>
          <target state="translated">이 예제에 업로드할.xls 또는.doc 파일 이름 확장명을 가진 파일만이 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>The <ph id="ph1">&lt;xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType&gt;</ph> method is called to return the extension of the file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType&gt;</ph> 메서드는 업로드할 파일의 확장명을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.FileUpload">
          <source>If the file has a .doc or .xls file name extension, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called to save the file to the specified path on the server.</source>
          <target state="translated">파일에 있는 경우.xls 또는.doc 파일 이름 확장명는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A&gt;</ph> constructor to initialize a new instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> class.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A&gt;</ph> 의 새 인스턴스를 초기화 하는 생성자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically save a file to the server after the user selects the file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤이 자동으로 저장 하지는 파일 서버에 업로드할 파일을 선택한 후 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
          <target state="translated">명시적으로 컨트롤이 나 사용자 지정된 된 파일을 전송 하도록 허용 하는 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>For example, you can provide a button that the user clicks to upload the file.</source>
          <target state="translated">예를 들어 파일을 업로드 하는 사용자가 클릭 하는 단추를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>The following example demonstrates how to initialize a new instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는의 새 인스턴스를 초기화 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>Note that this example demonstrates the constructor syntax but does not add functionality to the control after it is created.</source>
          <target state="translated">참고가 예제이에서는 생성자 구문을 보여 주는 하지만 만든 후 컨트롤에 기능을 추가 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.#ctor">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> that represents the output stream to render HTML content on the client.</source>
          <target state="translated">클라이언트에서 HTML 콘텐츠를 렌더링하는 데 사용되는 출력 스트림을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>Adds the HTML attributes and styles of a <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control to render to the specified <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체에 렌더링할 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 컨트롤의 HTML 특성 및 스타일을 추가합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A&gt;</ph> method is primarily used by control developers to insert the appropriate attributes and styles to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph> output stream for a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A&gt;</ph> 메서드는 주로 컨트롤 개발자가 적절 한 특성을 삽입 하 고 스타일을 <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph> 에 대 한 출력 스트림에 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A&gt;</ph> method overrides the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A&gt;</ph> 메서드 재정의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.AllowMultiple">
          <source>Gets or sets a value that specifies whether multiple files can be selected for upload.</source>
          <target state="translated">업로드 시 여러 파일을 선택할 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.AllowMultiple">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if multiple files can be selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">여러 파일을 선택할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>Gets an array of the bytes in a file that is specified by using a <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 컨트롤을 사용하여 지정된 파일의 바이트 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the contents of the specified file.</source>
          <target state="translated">지정된 파일의 내용이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically read the file from the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤에 자동으로 파일을 읽을 클라이언트에서.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
          <target state="translated">명시적으로 컨트롤이 나 사용자 지정된 된 파일을 전송 하도록 허용 하는 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>For example, you can provide a button that the user can click to upload the file.</source>
          <target state="translated">예를 들어 사용자는 해당 파일을 업로드 하기 위해 클릭할 수 있는 단추를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>The code that you write to save the specified file could call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property, which returns the contents of the file.</source>
          <target state="translated">지정된 된 파일을 저장 하기 위해 작성 하는 코드에서 호출할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> 속성 파일의 내용을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>Before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property, you should use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file to upload.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> 속성을 사용할지는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 되었는지 확인 하는 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤에 업로드할 파일을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph>, 호출 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
          <target state="translated">반환 하는 경우 <ph id="ph1">`false`</ph>를 사용자에 게 컨트롤 파일이 없습니다 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
          <target state="translated">파일이 있는지 확인 하려면 오류 처리 코드를 제공 하지 않으면 존재 하지 않는 파일을 저장 하려는 시도가 발생 한 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>When the user clicks the <bpt id="p1">**</bpt>Upload file<ept id="p1">**</ept> button, the contents of the file are displayed as bytes in a text box on the page.</source>
          <target state="translated">사용자가 클릭할 때는 <bpt id="p1">**</bpt>업로드 파일<ept id="p1">**</ept> 단추는 파일의 내용을 페이지에서 텍스트 상자에 바이트 형식으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> property to upload the entire file.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A&gt;</ph> 속성 전체 파일을 업로드 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.FileBytes">
          <source>The entire file was not read.</source>
          <target state="translated">전체 파일을 읽지 못한 경우</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that points to a file to upload using the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 컨트롤을 사용하여 업로드할 파일을 가리키는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that points to a file to upload using the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph>를 사용하여 업로드할 파일을 가리키는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object that points to a file to upload by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> 속성 get는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 를 사용 하 여 업로드할 파일을 가리키는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property to access the contents of the file.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> 파일의 내용에 액세스 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object that is returned by this property to read the contents of the file as bytes and store them in a byte array.</source>
          <target state="translated">예를 들어, 사용할 수는 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 바이트 형식으로 파일의 내용을 읽고 바이트 배열에 저장 하려면이 속성에서 반환 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property is used to read the contents of the file into a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> 속성 파일의 내용을 바이트 배열로 읽을을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileContent">
          <source>When the user clicks the <bpt id="p1">**</bpt>Upload file<ept id="p1">**</ept> button, the contents of the file are displayed as bytes in a text box on the page.</source>
          <target state="translated">사용자가 클릭할 때는 <bpt id="p1">**</bpt>업로드 파일<ept id="p1">**</ept> 단추는 파일의 내용을 페이지에서 텍스트 상자에 바이트 형식으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>Gets the name of a file on a client to upload using the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 컨트롤을 사용하여 업로드할 클라이언트의 파일 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>A string that specifies the name of a file on a client to upload using the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph>를 사용하여 업로드할 클라이언트의 파일 이름을 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>Gets the name of a file on a client to upload using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤을 사용하여 업로드할 클라이언트의 파일 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>The file name that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property returns does not include the path of the file on the client.</source>
          <target state="translated">파일 이름을 지정 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> 클라이언트에 있는 파일의 경로 포함 하지 않는 속성을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that saves files to a path that is specified in code.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 코드에 지정 된 경로에 파일을 저장 하 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property is used to get the name of the file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> 업로드할 파일의 이름을 가져올 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called to save the file to the specified path on the server, using the same name the file has on the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 클라이언트에서 파일에 동일한 이름을 사용 하 여, 메서드를 호출 하는 서버에서 지정된 된 경로에 파일을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>Note that this example demonstrates the basic syntax for this control, but does not demonstrate all the necessary error checking that should be done before saving the file.</source>
          <target state="translated">Note이 예제에서는이 컨트롤의 기본 구문을 보여 주는 하지만 파일을 저장 하기 전에 수행 해야 하는 모든 필수 오류 검사를 보여 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.FileName">
          <source>For a more complete example, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph>.</source>
          <target state="translated">자세한 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control contains a file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 컨트롤에 파일이 들어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> contains a file; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph>에 파일이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property gets a value indicating whether the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 속성 나타내는 값을 가져옵니다 여부는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤에 업로드할 파일을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>Use this property to verify that a file to upload exists before performing operations on the file.</source>
          <target state="translated">이 속성을 사용 하 여 업로드할 파일을 파일에 대 한 작업을 수행 하기 전에 존재 하는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>For example, before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method to save the file to disk, use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the file exists.</source>
          <target state="translated">예를 들어 호출 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 는 디스크에 사용 하 여 파일을 저장 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 파일이 있는지 확인 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph>, 호출 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
          <target state="translated">반환 하는 경우 <ph id="ph1">`false`</ph>를 사용자에 게 컨트롤 파일이 없습니다 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that performs error checking.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 오류 검사를 수행 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>Before saving the file, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> method is called to verify that the control contains a file to upload.</source>
          <target state="translated">파일을 저장 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 메서드를 호출 하는 컨트롤에 업로드할 파일을 포함 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>In addition, the <ph id="ph1">&lt;xref:System.IO.File.Exists%2A?displayProperty=nameWithType&gt;</ph> method is called to check whether a file with the same name already occurs in the path.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.IO.File.Exists%2A?displayProperty=nameWithType&gt;</ph> 메서드는 경로 있는 동일한 이름의 파일이 이미 발생 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>If it does, the name of the file to upload is prefixed with an underscore character before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called.</source>
          <target state="translated">업로드할 파일의 이름 앞에 밑줄 문자 앞에 그렇지 않으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFile">
          <source>This prevents the existing file from being overwritten.</source>
          <target state="translated">이렇게 하면 기존 파일을을 덮어쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.HasFiles">
          <source>Gets a value that indicates whether any files have been uploaded.</source>
          <target state="translated">임의의 파일이 업로드되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFiles">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any files have been uploaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">파일이 업로드되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.HasFiles">
          <source>This method also returns <ph id="ph1">`false`</ph> if an empty file (zero bytes) is uploaded.</source>
          <target state="translated">또한이 메서드 반환 <ph id="ph1">`false`</ph> (0 바이트) 하는 빈 파일을 업로드 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">이벤트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.Control.PreRender" /&gt;</ph> event for the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.Control.PreRender" /&gt;</ph> 컨트롤에 대해 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A&gt;</ph> method notifies the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control to perform any necessary pre-rendering steps before saving view state and rendering content.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A&gt;</ph> 메서드 알립니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤을 렌더링 콘텐츠와 뷰 상태를 저장 하기 전에 필요한 모든 사전 렌더링 단계를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>Gets the underlying <ph id="ph1">&lt;see cref="T:System.Web.HttpPostedFile" /&gt;</ph> object for a file that is uploaded by using the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 컨트롤을 사용하여 업로드된 파일의 내부 <ph id="ph1">&lt;see cref="T:System.Web.HttpPostedFile" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpPostedFile" /&gt;</ph> for a file uploaded by using the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph>를 사용하여 업로드된 파일의 <ph id="ph1">&lt;see cref="T:System.Web.HttpPostedFile" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property gets the underlying <ph id="ph2">&lt;xref:System.Web.HttpPostedFile&gt;</ph> object for a file that is uploaded by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 속성의 내부 가져옵니다 <ph id="ph2">&lt;xref:System.Web.HttpPostedFile&gt;</ph> 를 사용 하 여 업로드 된 파일에 대 한 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>Use this property to access additional properties on the uploaded file.</source>
          <target state="translated">업로드 된 파일에서 추가 속성에 액세스 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> property to get the length of the file.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> 파일의 길이 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentType%2A&gt;</ph> property to get the MIME content type of the file.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentType%2A&gt;</ph> MIME 가져올 속성을 콘텐츠 형식 파일입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>In addition, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.FileName%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.HttpPostedFile.InputStream%2A&gt;</ph> property, and the <ph id="ph4">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">또한 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 속성에 액세스는 <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.FileName%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.HttpPostedFile.InputStream%2A&gt;</ph> 속성 및 <ph id="ph4">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>However, the same functionality is provided by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">하지만 동일한 기능을 제공는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.FileName%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.FileContent%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>When the user clicks the <bpt id="p1">**</bpt>Upload file<ept id="p1">**</ept> button, the contents of the file are displayed as bytes in a text box on the page.</source>
          <target state="translated">사용자가 클릭할 때는 <bpt id="p1">**</bpt>업로드 파일<ept id="p1">**</ept> 단추는 파일의 내용을 페이지에서 텍스트 상자에 바이트 형식으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A&gt;</ph> 속성에 액세스는 <ph id="ph2">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> property is used to determine the length of the file before copying the file contents to a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpPostedFile.ContentLength%2A&gt;</ph> 속성 파일 내용을 바이트 배열로 복사 하기 전에 파일의 길이 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.FileUpload.PostedFiles">
          <source>Gets the collection of uploaded files.</source>
          <target state="translated">업로드된 파일의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.FileUpload.PostedFiles">
          <source>The collection of uploaded files.</source>
          <target state="translated">업로드된 파일의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object that receives the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control content.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 컨트롤 콘텐츠를 받는 <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)">
          <source>Sends the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> control content to the specified <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, which writes the content to render on the client.</source>
          <target state="translated">클라이언트에서 렌더링할 콘텐츠를 쓰는 지정된 <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> 개체에 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.FileUpload" /&gt;</ph> 컨트롤 콘텐츠를 보냅니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.Render%2A&gt;</ph> method sends the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control content to the specified <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph> object, which writes the content to render on the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.Render%2A&gt;</ph> 메서드 보냅니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤 콘텐츠를 지정 된 <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph> 개체는 클라이언트에서 렌더링할 콘텐츠를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>A string that specifies the full path of the location of the server on which to save the uploaded file.</source>
          <target state="translated">업로드된 파일을 저장할 서버의 위치에 대한 전체 경로를 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>Saves the contents of an uploaded file to a specified path on the Web server.</source>
          <target state="translated">업로드된 파일의 내용을 웹 서버의 지정된 경로에 저장합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method saves the contents of an uploaded file to a specified path on the Web server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드 웹 서버에 업로드 된 파일의 내용이 지정된 된 경로에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control does not automatically save a file to the server after the user selects the file to upload.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤이 자동으로 저장 하지는 파일 서버에 업로드할 파일을 선택한 후 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>You must explicitly provide a control or mechanism to allow the user to submit the specified file.</source>
          <target state="translated">명시적으로 컨트롤이 나 사용자 지정된 된 파일을 전송 하도록 허용 하는 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>For example, you can provide a button that the user clicks to upload the file.</source>
          <target state="translated">예를 들어 파일을 업로드 하는 사용자가 클릭 하는 단추를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>The code that you write to save the specified file should call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, which saves the contents of a file to a specified path on the server.</source>
          <target state="translated">지정된 된 파일을 저장 하기 위해 작성 하는 코드를 호출 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 서버에서 파일의 내용이 지정된 된 경로에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called in an event-handling method for an event that raises a post back to the server.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드는 서버에 다시 게시를 발생 시키는 이벤트에 대 한 이벤트 처리 메서드에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>For example, if you provide a button to submit a file, the code to save the file to the server could then be included inside the event-handling method for the click event.</source>
          <target state="translated">예를 들어 파일을 전송 하는 단추를 제공 하는 경우 서버에 파일을 저장 하는 코드 click 이벤트에 대 한 이벤트 처리 메서드 내에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, you must specify the full path of the directory on the server in which to save the uploaded file.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 업로드 한 파일을 저장 하는 서버에서 디렉터리의 전체 경로 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>If you do not explicitly specify a path in your application code, an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception is thrown when a user attempts to upload a file.</source>
          <target state="translated">응용 프로그램 코드에서 경로 명시적으로 지정 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 사용자가 파일을 업로드 하는 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>This behavior helps keep the files on the server secure, by not allowing users to specify a path in which to save the files that they upload.</source>
          <target state="translated">이 문제는 서버에서 파일을 업로드 하는 파일을 저장할 경로 지정 하려면 사용자가 허용 하지 않도록 보안을 유지 하기 하는 데 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>Before calling the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method, you should use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> property to verify that the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control contains a file to upload.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 사용할지는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 되었는지 확인 하는 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 컨트롤에 업로드할 파일을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 반환 <ph id="ph2">`true`</ph>, 호출 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>If it returns <ph id="ph1">`false`</ph>, display a message to the user indicating that the control does not contain a file.</source>
          <target state="translated">반환 하는 경우 <ph id="ph1">`false`</ph>를 사용자에 게 컨트롤 파일이 없습니다 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
          <target state="translated">파일이 있는지 확인 하려면 오류 처리 코드를 제공 하지 않으면 존재 하지 않는 파일을 저장 하려는 시도가 발생 한 <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>For a call to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> to work, the ASP.NET application must have write access to the directory on the server.</source>
          <target state="translated">에 대 한 호출에 대 한는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 작동 하도록 하는 ASP.NET 응용 프로그램 디렉터리에 대 한 쓰기 액세스 서버에 있어야는 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>There are two ways that the application can get write access.</source>
          <target state="translated">두 가지 방법으로 응용 프로그램 쓰기 액세스를 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</source>
          <target state="translated">명시적으로 응용 프로그램이 실행 되 고 있는, 업로드 한 파일을 저장할 디렉터리에서 계정에 대 한 쓰기 액세스를 부여할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</source>
          <target state="translated">또는 ASP.NET 응용 프로그램에 부여 되는 신뢰 수준을 높일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>To get write access to the executing directory for the application, the application must be granted the <ph id="ph1">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> object with the trust level set to the <ph id="ph2">&lt;xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">응용 프로그램에 대 한 실행 디렉터리에 대 한 쓰기를 가져오려는 응용 프로그램을 부여 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.AspNetHostingPermission&gt;</ph> 신뢰 수준을 설정 하는 개체는 <ph id="ph2">&lt;xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>Increasing the level of trust increases the application's access to resources on the server.</source>
          <target state="translated">신뢰 수준의 늘리면 서버에서 리소스에 대 한 응용 프로그램의 액세스를 증가 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</source>
          <target state="translated">참고가 아닌지 안전한 방법은 응용 프로그램의 제어권을 얻은 악의적인 사용자도 되므로이 더 높은 신뢰 수준에서 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>It is a best practice to run an ASP.NET application in the context of a user who has the minimum privileges that are required for the application to run.</source>
          <target state="translated">실행할 응용 프로그램에 필요한 최소 권한을 가진 사용자의 컨텍스트에서 ASP.NET 응용 프로그램을 실행 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>For more information about security in ASP.NET applications, see <bpt id="p1">[</bpt>Basic Security Practices for Web Applications<ept id="p1">](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)</ept> and <bpt id="p2">[</bpt>ASP.NET Trust Levels and Policy Files<ept id="p2">](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)</ept>.</source>
          <target state="translated">ASP.NET 응용 프로그램의 보안에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>웹 응용 프로그램에 대 한 기본 보안 사례<ept id="p1">](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)</ept> 및 <bpt id="p2">[</bpt>ASP.NET 신뢰 수준과 정책 파일<ept id="p2">](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> control that performs error checking.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload&gt;</ph> 오류 검사를 수행 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>Before the file is saved, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> method is called to verify that a file to upload exists.</source>
          <target state="translated">파일 저장 되기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.HasFile%2A&gt;</ph> 메서드는 업로드할 파일이 있는지 확인 하십시오.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>In addition, the <ph id="ph1">&lt;xref:System.IO.File.Exists%2A?displayProperty=nameWithType&gt;</ph> method is called to check whether a file that has the same name already exists in the path.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.IO.File.Exists%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 하는 파일이 이미 이름이 같은 경로에 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>If it does, the name of the file to upload is prefixed with a number before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> method is called.</source>
          <target state="translated">업로드할 파일의 이름 앞에 있는 번호 접두사로 헤더가 있으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source>This prevents the existing file from being overwritten.</source>
          <target state="translated">이렇게 하면 기존 파일을을 덮어쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)">
          <source><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> is not a full path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph>이 전체 경로가 아닌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>