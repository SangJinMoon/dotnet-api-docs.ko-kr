<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSourceValidationException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58ae2ee400046dd5174c6de772663b3c4824cc3c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ae2ee400046dd5174c6de772663b3c4824cc3c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤에서 값을 삽입, 업데이트 또는 삭제하기 전에 새 값 또는 수정된 값의 유효성을 검사하는 중에 발생한 예외를 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class contains type conversion and property setter exceptions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> 클래스 형식 변환 및 속성 setter 예외 오류를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>All of the exceptions that are thrown during validation are contained in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> collection.</source>
          <target state="translated">에 포함 된 모든 유효성 검사 중에 throw 된 예외는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>You can retrieve each validation exception by iterating through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> collection.</source>
          <target state="translated">반복 하 여 각 유효성 검사 예외를 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>You typically handle exceptions in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> events.</source>
          <target state="translated">일반적으로에서 예외를 처리 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>If a validation exception is thrown, the <ph id="ph1">`Exception`</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains a <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> object.</source>
          <target state="translated">유효성 검사 예외가 throw 되 면는 <ph id="ph1">`Exception`</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> 개체에 포함 되어는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>If no exception is thrown, the <ph id="ph1">`Exception`</ph> property contains <ph id="ph2">`null`</ph>.</source>
          <target state="translated">예외가 throw 되는 <ph id="ph1">`Exception`</ph> 속성 포함 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>To handle validation exceptions, create a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">유효성 검사 예외를 처리 하려면 만들기에 대 한 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>In the event handler, check whether the <ph id="ph1">`Exception`</ph> property of the event argument class contains a value other than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">이벤트 처리기에서 확인 여부는 <ph id="ph1">`Exception`</ph> 이벤트 인수 클래스의 속성 값이 아닌 다른 포함 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>If the <ph id="ph1">`Exception`</ph> property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">`Exception`</ph> 속성이 null이 아닌 하나 이상의 유효성 검사 예외가 발생 하 고에서 각 유효성 검사 예외를 검색할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>A validation exception can occur if a value does not match the type of the property.</source>
          <target state="translated">값 속성의 형식과 일치 하지 않는 경우 유효성 검사 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>For example, trying to update an integer property by using non-numeric characters causes a validation exception.</source>
          <target state="translated">예를 들어 숫자가 아닌 문자를 사용 하 여 정수 속성을 업데이트 하려는 유효성 검사 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</source>
          <target state="translated">LINQ to SQL 클래스 예상된 범위 또는 패턴 내에 있는 값이 속성에 포함 되도록 하는 사용자 지정된 유효성 검사 조건을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">사용 하 여 유효성 검사 예외 메시지를 표시 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">오류를 설명하는 시스템 제공 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
          <source>The system-supplied message that describes the error takes into account the current system culture.</source>
          <target state="translated">오류를 설명 하는 시스템 제공 메시지는 현재 시스템 문화권을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
          <source>The following table shows the initial property values for an instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
          <source>A system-supplied localized description.</source>
          <target state="translated">시스템이 제공하는 지역화된 설명입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">@FSHO2@오류를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>에 지정된 오류 메시지 문자열입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Context information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</source>
          <target state="translated">이 생성자는 역직렬화 스트림을 통해 전송 되는 예외 개체를 다시 구성 하는 동안 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})">
          <source>The message that describes the error.</source>
          <target state="translated">@FSHO2@오류를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})">
          <source>The collection of validation exceptions.</source>
          <target state="translated">유효성 검사 예외의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> class with a specified message that describes the error, and a collection of references to inner exceptions.</source>
          <target state="translated">오류를 설명하는 지정된 메시지와 내부 예외에 대한 참조 컬렉션을 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)">
          <source>The message that describes the error.</source>
          <target state="translated">@FSHO2@오류를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> class with a specified error message and a reference to the inner exception.</source>
          <target state="translated">지정된 오류 메시지 및 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)">
          <source>You typically will not use this constructor because validation exceptions are stored in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property, not the <ph id="ph2">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">일반적으로 사용 하지 것입니다이 생성자에 저장 되므로 유효성 검사 예외는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> 속성 하지는 <ph id="ph2">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data for the exception that is being thrown.</source>
          <target state="translated">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Context information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Gets information about the exception and adds it to the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object.</source>
          <target state="translated">예외에 대한 정보를 가져와 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체에 추가합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A&gt;</ph> method adds information about the exception to the <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object that is targeted for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A&gt;</ph> 에 대 한 예외에 대 한 정보를 추가 하는 메서드는 <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> 개체 serialization에 대 한 대상입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the exception is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> that is transmitted over the stream.</source>
          <target state="translated">deserialization을 수행 하는 동안 예외가 재구성 됩니다는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> 스트림을 통해 전송 되는 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>Gets one or more exceptions that occurred when new or modified data was being validated.</source>
          <target state="translated">새 데이터 또는 수정된 데이터의 유효성을 검사하는 중에 발생한 하나 이상의 예외를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>A collection that contains the exceptions.</source>
          <target state="translated">예외를 포함하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> 업데이트 하기 전에 데이터 유효성 검사 하는 동안 발생 하는 모든 유효성 검사 예외를 포함 하는 컬렉션, 삽입 또는 삭제 작업입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>A validation exception can occur if a value does not match the type of the property.</source>
          <target state="translated">값 속성의 형식과 일치 하지 않는 경우 유효성 검사 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.</source>
          <target state="translated">예를 들어 숫자가 아닌 문자를 사용 하 여 정수 속성을 업데이트 하려고 하면 유효성 검사 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</source>
          <target state="translated">LINQ to SQL 클래스 예상된 범위 또는 패턴 내에 있는 값이 속성에 포함 되도록 하는 사용자 지정된 유효성 검사 조건을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">사용 하 여 유효성 검사 예외 메시지를 표시 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> 제어 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>