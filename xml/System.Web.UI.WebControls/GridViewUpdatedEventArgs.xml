<Type Name="GridViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.GridViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1da9df7e115230ca4c18ae7618c3544f81915115" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GridViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class GridViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridViewUpdatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f443b-101">
        <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f443b-101">Provides data for the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-102"><xref:System.Web.UI.WebControls.GridView> 발생는 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 이벤트 때 컨트롤에서 업데이트 단추를 클릭 하면 후는 <xref:System.Web.UI.WebControls.GridView> 레코드를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-102">The <xref:System.Web.UI.WebControls.GridView> control raises the <xref:System.Web.UI.WebControls.GridView.RowUpdated> event when an Update button in the control is clicked, but after the <xref:System.Web.UI.WebControls.GridView> control updates the record.</span></span> <span data-ttu-id="f443b-103">(업데이트 단추는 단추 컨트롤 `CommandName` 속성을 "업데이트"로 설정 합니다.) 업데이트 작업의 결과 확인 하는 등이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-103">(An Update button is a button control whose `CommandName` property is set to "Update".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation.</span></span>  
  
 <span data-ttu-id="f443b-104">A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 영향을 받는 레코드와 발생할 수 있는 모든 예외 수를 확인할 수 있는 이벤트 처리기에 전달 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-104">A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred.</span></span> <span data-ttu-id="f443b-105">업데이트 작업에 의해 영향을 받는 레코드 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-105">To determine the number of records that were affected by the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property.</span></span> <span data-ttu-id="f443b-106">예외가 발생 한 것인지 확인을 사용 하 여는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-106">To determine whether any exceptions occurred, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="f443b-107">예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-107">You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property.</span></span>  
  
 <span data-ttu-id="f443b-108">업데이트 된 레코드에 대 한 키 필드 값에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-108">To access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property.</span></span> <span data-ttu-id="f443b-109">키가 아닌 필드의 원래 값을 사용 하 여 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-109">You can access the original non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property.</span></span> <span data-ttu-id="f443b-110">사용 하 여 업데이트 된 키가 아닌 필드 값에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-110">You can access the updated non-key field values by using the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> properties.</span></span>  
  
 <span data-ttu-id="f443b-111">기본적으로는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 업데이트 작업 후 읽기 전용 모드로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-111">By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation.</span></span> <span data-ttu-id="f443b-112">업데이트 작업 중 발생 한 예외를 처리 하는 경우를 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 설정 하 여 편집 모드에는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-112">When you handle an exception that occurred during the update operation, you can keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode by setting the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="f443b-113">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-113">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="f443b-114"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> 생성자를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="f443b-114">For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-115">다음 예제에서는 업데이트 작업 중에 예외가 발생 했는지 여부를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-115">The following example shows how to determine whether an exception occurred during an update operation.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">
          <span data-ttu-id="f443b-116">업데이트 작업의 영향을 받는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-116">The number of rows that were affected by the update operation.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="f443b-117">업데이트 작업을 수행할 때 발생한 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-117">The exception that was raised when the update operation was performed.</span>
          </span>
          <span data-ttu-id="f443b-118">발생한 예외가 없으면 이 매개 변수에 대해 <see langword="null" />을 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-118">If no exception was raised, use <see langword="null" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f443b-119">
            <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-119">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-120">다음 표에서는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-120">The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> class.</span></span>  
  
|<span data-ttu-id="f443b-121">속성</span><span class="sxs-lookup"><span data-stu-id="f443b-121">Property</span></span>|<span data-ttu-id="f443b-122">초기 값</span><span class="sxs-lookup"><span data-stu-id="f443b-122">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A>|<span data-ttu-id="f443b-123">`affectedRows` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-123">The value of the `affectedRows` parameter.</span></span>|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A>|<span data-ttu-id="f443b-124"><xref:System.Exception?displayProperty=nameWithType> 에 포함 된 개체는 `e` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-124">The <xref:System.Exception?displayProperty=nameWithType> object that is contained in the `e` parameter.</span></span>|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A>|<span data-ttu-id="f443b-125">로 초기화 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-125">Initialized to `false`.</span></span>|  
|<xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A>|<span data-ttu-id="f443b-126">로 초기화 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-126">Initialized to `false`.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="f443b-127">이벤트를 발생 시킬 때이 생성자는 주로 컨트롤 개발자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-127">This constructor is primarily used by control developers when they raise events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f443b-128">업데이트 작업의 영향을 받는 행의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-128">Gets the number of rows that were affected by the update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f443b-129">업데이트 작업의 영향을 받는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-129">The number of rows that were affected by the update operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-130">하나의 레코드가 업데이트 될 일반적으로이 속성 값은 0 또는 1 일반적으로 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-130">Because only one record is typically updated, this property usually contains a value of 0 or 1.</span></span>  
  
 <span data-ttu-id="f443b-131">예외가 발생 하지 않으므로 업데이트 작업 중 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-131">An error can occur during the update operation that does not raise an exception.</span></span> <span data-ttu-id="f443b-132">사용할 수는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> 속성을 레코드가 업데이트 되었는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-132">You can use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to make sure that a record was updated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-133">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> 레코드가 업데이트 되었는지 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-133">The following example shows how to use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows%2A> property to verify that a record was updated.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f443b-134">업데이트 작업 중에 발생한 예외(있을 경우)를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-134">Gets the exception (if any) that was raised during the update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f443b-135">업데이트 작업 중에 발생한 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-135">The exception that was raised during the update operation.</span>
          </span>
          <span data-ttu-id="f443b-136">발생한 예외가 없으면 이 속성은 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-136">If no exceptions were raised, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-137">예외가 발생 하 고 이벤트 처리기를 설정에 예외를 처리 하도록 결정 한 경우는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-137">If an exception was raised and you decide to handle the exception in the event handler, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="f443b-138">그렇지 않으면 예외를 다시 throw는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-138">Otherwise, the exception is thrown again by the <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-139">다음 예제에서는 업데이트 작업 중에 예외가 발생 했는지 여부를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-139">The following example shows how to determine whether an exception occurred during an update operation.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f443b-140">업데이트 작업 중에 발생한 예외가 이벤트 처리기에서 처리되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-140">Gets or sets a value that indicates whether an exception that was raised during the update operation was handled in the event handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f443b-141">예외가 이벤트 처리기에서 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-141">
              <see langword="true" /> if the exception was handled in the event handler; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f443b-142">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-142">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-143">업데이트 작업 중에 예외가 발생 하는 경우 사용 된 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> 이벤트 처리기에서 예외 처리 여부를 나타내는 속성을 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-143">When an exception is raised during the update operation, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate whether you handled the exception in the event handler.</span></span> <span data-ttu-id="f443b-144">이 속성이로 설정 된 경우 `true`, 예외 처리 된 것으로 간주 되어 의해 다시 throw 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-144">When this property is set to `true`, the exception is considered handled and is not thrown again by the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="f443b-145">이 속성은로 설정 하는 경우 `false`, 예외가 다시 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-145">If this property is set to `false`, the exception is thrown again.</span></span> <span data-ttu-id="f443b-146">발생 한 예외를 확인 하려면는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-146">To determine which exception was raised, use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-147">다음 예제에서는 하 여 예외가 처리 이벤트 처리기를 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-147">The following example shows how to indicate that the exception was handled in the event handler.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f443b-148">업데이트 작업 후 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤을 편집 모드로 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-148">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.GridView" /> control should remain in edit mode after an update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f443b-149">업데이트 작업 후 컨트롤이 편집 모드로 유지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-149">
              <see langword="true" /> if the control will remain in edit mode after an update operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f443b-150">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-150">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-151">기본적으로는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 업데이트 작업 후 읽기 전용 모드로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-151">By default, the <xref:System.Web.UI.WebControls.GridView> control returns to read-only mode after an update operation.</span></span> <span data-ttu-id="f443b-152">계속 하려면는 <xref:System.Web.UI.WebControls.GridView> 편집 모드에 컨트롤을 설정는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-152">To keep the <xref:System.Web.UI.WebControls.GridView> control in edit mode, set the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-153">다음 예제에서는 유지 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 편집 모드로 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-153">The following example shows how to keep a <xref:System.Web.UI.WebControls.GridView> control in edit mode when an exception occurs.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f443b-154">업데이트된 레코드에 대한 키 필드의 이름/값 쌍이 들어 있는 사전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-154">Gets a dictionary that contains the key field name/value pairs for the updated record.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f443b-155">업데이트된 레코드에 대한 키 필드의 이름/값 쌍이 들어 있는 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-155">A dictionary of key field name/value pairs for the updated record.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-156">사용 하 여는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> 속성을 업데이트 된 레코드에 대 한 키 필드의 값에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-156">Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record.</span></span> <span data-ttu-id="f443b-157">예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-157">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="f443b-158"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> 구현 하는 개체를 반환 하는 속성은 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-158">The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="f443b-159">개체에 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-159">The object contains <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objects that represent the fields of the updated record.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f443b-160">사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.IOrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-160">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-161">다음 예제에서는 업데이트 된 레코드에 대 한 키 필드의 값에 액세스 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-161">The following example shows how to access the values of the key field for an updated record.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f443b-162">업데이트된 레코드의 새 필드 이름/값 쌍이 들어 있는 사전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-162">Gets a dictionary that contains the new field name/value pairs for the updated record.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f443b-163">업데이트된 레코드에 대한 새 필드 이름/값 쌍이 들어 있는 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-163">A dictionary of the new field name/value pairs for the updated record.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-164">사용 하 여는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> 속성을 업데이트 된 레코드에 대 한 새 필드 값에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-164">Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record.</span></span> <span data-ttu-id="f443b-165">예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-165">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="f443b-166"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> 구현 하는 개체를 반환 하는 속성은 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-166">The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="f443b-167">개체에 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-167">The object contains <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objects that represent the fields of the updated record.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f443b-168">사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.IOrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-168">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-169">다음 예제에서는 업데이트 된 레코드의 키가 아닌 필드에 대 한 사용자가 입력 한 새 값에 액세스 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-169">The following example shows how to access the new values entered by the user for the non-key fields of the updated record.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f443b-170">업데이트된 레코드의 원래 필드 이름/값 쌍이 들어 있는 사전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-170">Gets a dictionary that contains the original field name/value pairs for the updated record.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f443b-171">업데이트된 레코드의 원래 필드 이름/값 쌍이 들어 있는 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f443b-171">A dictionary of the original field name/value pairs for the updated record.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f443b-172">사용 하 여는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> 속성을 업데이트 된 레코드에 대 한 원래 필드 값에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-172">Use the <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record.</span></span> <span data-ttu-id="f443b-173">예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-173">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="f443b-174"><xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> 구현 하는 개체를 반환 하는 속성은 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-174">The <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="f443b-175">개체에 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 원래 값으로 업데이트 된 레코드의 필드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-175">The object contains <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objects that represent the fields of the updated record with their original values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f443b-176">사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.IOrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-176">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f443b-177">다음 예제에서는 업데이트 된 레코드에 대 한 키가 아닌 필드의 원래 값을 액세스 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f443b-177">The following example shows how to access the original values of the non-key fields for the updated record.</span></span>  
  
 [!code-aspx-csharp[GridViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdatedEventArgs/CS/gridviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[GridViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdatedEventArgs/VB/gridviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>