<Type Name="FormViewUpdateEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdateEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2dea28976752b03fba66aa168623d55e59eacca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598717" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 발생는 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 이벤트 업데이트 단추 (단추 해당 `CommandName` 속성이 "업데이트"로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView> 레코드를 업데이트 합니다. 이 옵션을 사용 하면 HTML 인코딩 또는 레코드 값이이 이벤트가 발생할 때마다 데이터 원본에서 업데이트 하기 전에 유효성을 검사 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 개체에 전송 하는 선택적 명령 인수의 값을 확인할 수 있는 이벤트 처리 메서드에 전달 되는 <xref:System.Web.UI.WebControls.FormView> 제어 하 고 업데이트 작업을 취소 해야 하는지 여부를 나타내는입니다. 사용 하 여 명령 인수의 값을 확인 하려면는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> 속성입니다. 업데이트 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`합니다. 업데이트 되는 레코드에 대 한 원래 키 필드 값에 액세스를 사용 해야 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성입니다. 키가 아닌 필드의 원래 값을 사용 하 여 액세스할 수는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 속성입니다. 업데이트 된 값 (키 필드를 편집 하려면 사용자를 허용 하는 경우 업데이트 된 키 필드 값을 포함)를 사용 하 여 액세스는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 클래스의 인스턴스에 대한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> 생성자를 참조하십시오.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 에 대 한 이벤트 처리 메서드에 전달 된 개체는 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 을 사용자가 입력 한 값을 검사 합니다.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
    <altmember cref="T:System.ComponentModel.CancelEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdateEventArgs (object commandArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandArgument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdateEventArgs(System::Object ^ commandArgument);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandArgument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandArgument">
          <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 전달된 선택적 명령 인수입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 클래스입니다.  
  
 다음 표에의 인스턴스에 대 한 초기 속성 값은 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 클래스입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>|`commandArgument` 매개 변수의 값입니다.|  
  
> [!NOTE]
>  이 생성자는 이벤트를 발생 시킬 때 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 전달된 업데이트 작업에 대한 명령 인수를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 전달된 업데이트 작업에 대한 명령 인수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 템플릿 중 하나에 대 한 업데이트 단추를 만들 때는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 사용 하 여 필요에 따라 단추에 대 한 명령 인수를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=nameWithType> 속성입니다. 명령 인수는 일반적으로 키 필드에 대 한 값과 같은 update 명령에 표시할의 선택적 정보를 포함 합니다. <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> 속성은 업데이트 단추 명령 인수의 값을 결정 하는 편리한 방법을 제공 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트할 레코드에 대한 키 필드의 원래 이름/값 쌍이 들어 있는 사전을 가져옵니다.</summary>
        <value>업데이트할 레코드에 대한 키 필드의 원래 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성에 나열 된 키 필드의 원래 값이 포함 된 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 의 속성은 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성을 업데이트할 레코드에 대 한 키 필드의 원래 값에 액세스 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.  
  
> [!NOTE]
>  키 필드의 값을 업데이트 하는 사용자를 허용 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성 키 필드의 원래 값을 포함 합니다. 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary> 구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다. <xref:System.Collections.Specialized.OrderedDictionary> 개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다. 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 의 속성은 <xref:System.Collections.Specialized.OrderedDictionary> 개체입니다. 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 업데이트 되는 레코드에 대 한 키 필드의 값에 액세스 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트할 레코드에 대한 필드의 새 이름/값 쌍이 들어 있는 사전을 가져옵니다.</summary>
        <value>업데이트할 레코드에 대한 필드의 새 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성을 업데이트할 레코드에 대 한 새 필드 값에 액세스 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.  
  
> [!NOTE]
>  키 필드의 값을 업데이트 하는 사용자를 허용 하는 경우는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성 키 필드의 원래 값을 포함 합니다. 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary> 구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다. <xref:System.Collections.Specialized.OrderedDictionary> 개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다. 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 의 속성은 <xref:System.Collections.Specialized.OrderedDictionary> 개체입니다. 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성을 업데이트 하 고 레코드의 키가 아닌 필드에 대 한 사용자가 입력 한 새 값에 액세스 합니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트할 레코드에 대한 키가 아닌 필드의 원래 이름/값 쌍이 들어 있는 사전을 가져옵니다.</summary>
        <value>업데이트할 레코드에 대한 키가 아닌 필드의 원래 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 속성을 업데이트 된 레코드에 대 한 키가 아닌 필드의 원래 값에 액세스 합니다. 예를 들어 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다. 일부 데이터 소스와 같은 컨트롤는 <xref:System.Web.UI.WebControls.SqlDataSource> 및 <xref:System.Web.UI.WebControls.ObjectDataSource> 지원 충돌 감지 (낙관적 동시성 검사)를 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 이러한 컨트롤 중 하나의 속성이로 설정 되어 `ConflictOptions.CompareAllValues`, 레코드의 원래 값이 업데이트 작업을 수행 하기 전에 데이터 원본에 있는 값에 대해 비교 됩니다. 레코드가 수정 된 경우 다른 사용자가 동시에, 레코드 업데이트 되지 않습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 속성 키 필드가 포함 되지 않습니다. 키 필드의 값을 업데이트 하려는 사용자를 허용 하는 경우 키 필드의 원래 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성입니다. 업데이트 된 값에 저장 됩니다는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary> 구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> 인터페이스입니다. <xref:System.Collections.Specialized.OrderedDictionary> 개체에 포함 되어 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 업데이트 된 레코드의 필드를 나타내는 개체입니다. 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> 의 속성은 <xref:System.Collections.Specialized.OrderedDictionary> 개체입니다. 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 속성을 업데이트 하 고 레코드에 대 한 키가 아닌 필드의 원래 값에 액세스 합니다.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
  </Members>
</Type>