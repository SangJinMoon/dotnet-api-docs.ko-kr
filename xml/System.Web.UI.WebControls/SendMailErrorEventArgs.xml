<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71540fca903b9568b09aa47c0ad13790c2047d5e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599117" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 컨트롤, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> 컨트롤 및 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> 컨트롤 같은 컨트롤의 <see langword="SendMailError" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 하 여 전자 메일 메시지를 보낼 수 없는 경우 SMTP 메일 공급자에 의해 발생 하는 오류 메시지를 포함 하는 개체는 <xref:System.Web.UI.WebControls.ChangePassword> 컨트롤 또는 <xref:System.Web.UI.WebControls.CreateUserWizard> 제어 합니다. 이러한 경우는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 개체 보내집니다는 <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>합니다.  
  
 만들기는 <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> 이벤트를 처리 하는 대리자입니다. 이벤트를 처리 하면 예외가 발생 하더라도 실행을 계속 웹 응용 프로그램입니다. 전자 메일 메시지를 보내려면 중요 하지 않은 경우에 유용 합니다. 예를 들어 multi-step 마법사를 통해 사용자가 작업 하는 경우 예외가 발생 하는 경우 오류를 기록 하 고, 사용자에 게 정보가 들어 있는 메시지를 표시 한 다음 마법사를 완료 하는 데 사용할 수을 수 있습니다.  
  
 검사는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> 예외에 대 한 실제 원인을 확인 하는 속성입니다. 예외에 대 한 가장 일반적인 이유는에 구성 오류가 [ &lt;smtp&gt; 요소 (네트워크 설정)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) 컴퓨터 구성 파일의 합니다. 하지만 같은 오류는 일반적으로 개발 하는 동안 검색 된 및 응용 프로그램의 디버깅을 메일 서버 실패할 수 예기치 않게 프로덕션 환경에서 있으며이 경우 실패 하는 전체 응용 프로그램 사용할지를 결정 해야 합니다. 파일이 없으면 계속 하려면 응용 프로그램을 사용 하면 이벤트를 처리 합니다.  
  
 설정 해야 합니다는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 속성을 `true` 신호를 보내 예외 처리, 그렇지 않으면 되었습니다, 예외가 다시 throw 되 고 원래 호출 스택 및 오류 메시지가 포함 됩니다.  
  
 에 대 한 이벤트 처리기를 만들지 않으면는 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> 이벤트를 저장 하지만 이벤트 처리기를 만드는 경우 또는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 속성이로 설정 `false`, 웹 응용 프로그램의 전자 메일 메시지를 보낼 때 오류가 발생 하면 실행이 중지 됩니다 및 ASP.NET 됩니다 오류 메시지를 표시 합니다.  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> 방법을 사용 하는 대신 이벤트를 처리 하려면 파생 된 클래스 수는 <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>합니다. 이 기본 방법에서 파생 된 클래스에서 이벤트를 처리 하기 위한 <xref:System.Web.UI.WebControls.ChangePassword> 또는 <xref:System.Web.UI.WebControls.CreateUserWizard>합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지에서 서버 이벤트 처리](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 ASP.NET 페이지를 보여 줍니다.는 <xref:System.Web.UI.WebControls.ChangePassword> 웹 컨트롤 및 이벤트 처리기에 대 한 포함는 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> SendMailError 라는 이벤트입니다. 코드 예제에서는 ASP.NET 멤버 자격 및 폼 인증 및 사용자 이름과 암호가 알려진 생성 된 사용 하 여 ASP.NET 웹 사이트를 구성한 가정 합니다. 자세한 내용은 참조 [하는 방법: 간단한 폼 인증 구현](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)합니다.  
  
 암호 변경에 성공 하면 코드에는 `SendingMail` 이벤트 처리기 변경 확인을 위해 사용자에 게 전자 메일 메시지를 보내려고 시도 합니다. SMTP 서버에서 실행 되도록이 코드 예제에 대 한 순서에 이미 구성 되어 있어야 합니다. SMTP 서버를 구성 하는 방법에 대 한 정보를 참조 하십시오. [NIB: 방법: 설치 및 SMTP 가상 서버 구성에서 IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)합니다. 이 예제에서는 필요는 없습니다; SMTP 서버를 구성 하려면 이 예제에서는 전자 메일 메시지를 보내는 실패를 테스트 하려면 생성 됩니다.  
  
 메일 서버가 올바르게 구성 되지 않았습니다. 또는 다른 오류가 발생 하 고 전자 메일 메시지를 보낼 수 없는 경우는 `SendMailError` 함수를 호출 합니다. 사용자에 게 메시지가 표시 됩니다. 또한 이미 MySamplesSite 라는 이벤트 소스 있는지 가정 하는 Windows 응용 프로그램 이벤트 로그에 이벤트가 기록 됩니다. 지정 된 이벤트 소스를 만들려면 아래 코드 예제를 참조 하십시오. 이벤트 소스를 만드는 방법에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지에서 서버 이벤트 처리](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)합니다. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 속성의는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 개체가으로 설정 되 `true` 오류가 처리 된 것을 나타냅니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 다음 코드 예제를 사용 하 여 프로그래밍 방식으로 응용 프로그램 로그에 MySamplesSite 라는 이벤트 소스를 추가 하려는 경우. 이 이벤트 소스는 첫 번째 코드 예제가 제대로 작동 하려면에 있어야 합니다. 다음 코드 예제에서는 관리자 권한이 필요합니다.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> 파생된 클래스에서 호출 해야는 <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> 등록 된 대리자가 이벤트를 받도록를 사용할 수 있도록 기본 클래스의 메서드.</para>
    </block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">예외가 포함된 <see cref="T:System.Exception" /> 개체입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이메일 메시지를 보낼 수 없을 때 SMTP 메일 서비스에서 throw된 예외를 반환합니다.</summary>
        <value>예외가 들어 있는 <see cref="T:System.Exception" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> 속성 포함 하 여 전자 메일 메시지를 보낼 수 없는 경우 SMTP 메일 공급자에 의해 throw 되는 예외는 <xref:System.Web.UI.WebControls.ChangePassword> 컨트롤 또는 <xref:System.Web.UI.WebControls.CreateUserWizard>합니다. 이 예외에 대 한 가장 일반적인 이유는에 구성 오류가 [ &lt;smtp&gt; 요소 (네트워크 설정)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) 다음 예외 메시지를 생성 하는 컴퓨터 구성 파일의: `The transport failed to connect to the server.`  
  
 사용 하 여 파일을 포함할 때 전자 메일 메시지에 오류가 발생 하는 경우 예외가 throw 되지 않습니다 <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>합니다. 대신, 포함 된 파일은 메일 메시지를 볼 때 끊어진 표시 됩니다.  
  
 설정 해야 합니다는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 변수로 전달 된 개체는 `e` 의 매개 변수 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>을 `true` 신호를 보내 예외 처리, 그렇지 않으면 되었습니다, 예외가 다시 throw 되 고 원래 호출 스택 및 오류 메시지가 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 ASP.NET 페이지를 보여 줍니다.는 <xref:System.Web.UI.WebControls.ChangePassword> 웹 컨트롤 및 이벤트 처리기에 대 한 포함 된 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> 라는 이벤트 `SendMailError`합니다. 코드 예제에서는 ASP.NET 멤버 자격 및 폼 인증 및 사용자 이름과 암호가 알려진 생성 된 사용 하 여 ASP.NET 웹 사이트를 구성한 가정 합니다. 자세한 내용은 참조 [하는 방법: 간단한 폼 인증 구현](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)합니다.  
  
 암호 변경에 성공 하면 코드에는 `SendingMail` 이벤트 처리기 변경 확인을 위해 사용자에 게 전자 메일 메시지를 보내려고 시도 합니다. SMTP 서버에서 실행 되도록이 코드 예제에 대 한 순서에 이미 구성 되어 있어야 합니다. SMTP 서버를 구성 하는 방법에 대 한 정보를 참조 하십시오. [NIB: 방법: 설치 및 SMTP 가상 서버 구성에서 IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)합니다. 이 예제에서는 필요는 없습니다; SMTP 서버를 구성 하려면 이 예제에서는 전자 메일 메시지를 보내는 실패를 테스트 하려면 생성 됩니다.  
  
 메일 서버가 올바르게 구성 되지 않았습니다. 또는 다른 오류가 발생 하 고 전자 메일 메시지를 보낼 수 없는 경우는 `SendMailError` 함수를 호출 합니다. 사용자에 게 메시지가 표시 됩니다. 또한 이미 MySamplesSite 라는 이벤트 소스 있는지 가정 하는 Windows 응용 프로그램 이벤트 로그에 이벤트가 기록 됩니다. 지정 된 이벤트 소스를 만들려면 아래 코드 예제를 참조 하십시오. 이벤트 소스를 만드는 방법에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지에서 서버 이벤트 처리](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)합니다. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 속성의는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 개체가으로 설정 되 `true` 오류가 처리 된 것을 나타냅니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 다음 코드 예제를 사용 하 여 프로그래밍 방식으로 응용 프로그램 로그에 MySamplesSite 라는 이벤트 소스를 추가 하려는 경우. 이 이벤트 소스는 첫 번째 코드 예제가 제대로 작동 하려면에 있어야 합니다. 다음 코드 예제에서는 관리자 권한이 필요합니다.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" /> 속성에 포함된 SMTP 예외가 처리되었는지 여부를 나타냅니다.</summary>
        <value>
          <see langword="true" />이면 <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" /> 대리자가 예외를 처리합니다. <see langword="false" />이면 원래 호출 스택과 오류 메시지를 포함하여 예외가 다시 throw됩니다.  
  
 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 속성 표시 하는 경우는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> 를 처리 합니다. 예외는 SMTP 메일 공급자에 의해 발생 하 여 전자 메일 메시지를 보낼 수 없는 경우는 <xref:System.Web.UI.WebControls.ChangePassword> 컨트롤 또는 <xref:System.Web.UI.WebControls.CreateUserWizard>합니다. 예외에 대 한 가장 일반적인 이유는에 구성 오류가 [ &lt;smtp&gt; 요소 (네트워크 설정)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md) 컴퓨터 구성 파일의 합니다. 하지만 같은 오류는 일반적으로 개발 하는 동안 검색 된 및 응용 프로그램의 디버깅을 메일 서버 실패할 수 예기치 않게 프로덕션 환경에서 있으며이 경우 실패 하는 전체 응용 프로그램 사용할지를 결정 해야 합니다. 파일이 없으면 계속 하려면 응용 프로그램을 사용 하면 이벤트를 처리 합니다.  
  
 에 대 한 이벤트 처리기를 만들지 않으면는 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> 이벤트를 저장 하지만 이벤트 처리기를 만드는 경우 또는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 속성이로 설정 `false`, 웹 응용 프로그램의 전자 메일 메시지를 보낼 때 오류가 발생 하면 실행이 중지 됩니다 및 ASP.NET 됩니다 오류 메시지를 표시 합니다. 이벤트를 처리 하면 예외가 발생 하더라도 실행을 계속 웹 응용 프로그램입니다. 전자 메일 메시지를 보내려면 중요 하지 않은 경우에 유용 합니다. 예를 들어 multi-step 마법사를 통해 사용자가 작업 하는 경우 예외가 발생 하는 경우 오류를 기록 하 고, 사용자에 게 정보가 들어 있는 메시지를 표시 한 다음 마법사를 완료 하는 데 사용할 수을 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 ASP.NET 페이지를 보여 줍니다.는 <xref:System.Web.UI.WebControls.ChangePassword> 웹 컨트롤 및 이벤트 처리기에 대 한 포함 된 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> 라는 이벤트 `SendMailError`합니다. 코드 예제에서는 ASP.NET 멤버 자격 및 폼 인증 및 사용자 이름과 암호가 알려진 생성 된 사용 하 여 ASP.NET 웹 사이트를 구성한 가정 합니다. 자세한 내용은 참조 [하는 방법: 간단한 폼 인증 구현](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)합니다.  
  
 암호 변경에 성공 하면 코드에는 `SendingMail` 이벤트 처리기 변경 확인을 위해 사용자에 게 전자 메일 메시지를 보내려고 시도 합니다. SMTP 서버에서 실행 되도록이 코드 예제에 대 한 순서에 이미 구성 되어 있어야 합니다. SMTP 서버를 구성 하는 방법에 대 한 정보를 참조 하십시오. [NIB: 방법: 설치 및 SMTP 가상 서버 구성에서 IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)합니다. 이 예제에서는 필요는 없습니다; SMTP 서버를 구성 하려면 이 예제에서는 전자 메일 메시지를 보내는 실패를 테스트 하려면 생성 됩니다.  
  
 메일 서버가 올바르게 구성 되지 않았습니다. 또는 다른 오류가 발생 하 고 전자 메일 메시지를 보낼 수 없는 경우는 `SendMailError` 함수를 호출 합니다. 사용자에 게 메시지가 표시 됩니다. 또한 이미 MySamplesSite 라는 이벤트 소스 있는지 가정 하는 Windows 응용 프로그램 이벤트 로그에 이벤트가 기록 됩니다. 지정 된 이벤트 소스를 만들려면 아래 코드 예제를 참조 하십시오. 이벤트 소스를 만드는 방법에 대 한 자세한 내용은 참조 [ASP.NET Web Forms 페이지에서 서버 이벤트 처리](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)합니다. <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> 속성의는 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> 개체가으로 설정 되 `true` 오류가 처리 된 것을 나타냅니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 다음 코드 예제를 사용 하 여 프로그래밍 방식으로 응용 프로그램 로그에 MySamplesSite 라는 이벤트 소스를 추가 하려는 경우. 이 이벤트 소스는 첫 번째 코드 예제가 제대로 작동 하려면에 있어야 합니다. 다음 코드 예제에서는 관리자 권한이 필요합니다.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
      </Docs>
    </Member>
  </Members>
</Type>