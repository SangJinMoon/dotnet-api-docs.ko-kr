<Type Name="GridView" FullName="System.Web.UI.WebControls.GridView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb27078773f65e7ea101062de6ade34d5bea6e1f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36383774" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataKeysControl, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IFieldControl, class System.Web.UI.WebControls.IPersistedSelector, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridView" />
  <TypeSignature Language="VB.NET" Value="Public Class GridView&#xA;Inherits CompositeDataBoundControl&#xA;Implements ICallbackContainer, ICallbackEventHandler, IDataBoundListControl, IDataKeysControl, IFieldControl, IPersistedSelector, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IDataKeysControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::ICallbackContainer, System::Web::UI::WebControls::IDataBoundListControl, System::Web::UI::WebControls::IFieldControl, System::Web::UI::WebControls::IPersistedSelector, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type GridView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IPostBackContainer&#xA;    interface IPostBackEventHandler&#xA;    interface ICallbackContainer&#xA;    interface ICallbackEventHandler&#xA;    interface IPersistedSelector&#xA;    interface IDataKeysControl&#xA;    interface IDataBoundListControl&#xA;    interface IDataBoundControl&#xA;    interface IFieldControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IFieldControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>각 열이 필드를 나타내고 각 행이 레코드를 나타내는 테이블에 데이터 원본의 값을 표시합니다. <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤을 사용하면 이러한 항목을 선택, 정렬 및 편집할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [열 필드](#column_fields)  
  
-   [데이터 바인딩](#binding_to_data)  
  
-   [데이터 작업](#data_operations)  
  
-   [사용자 인터페이스 사용자 지정](#customizing_the_user_interface)  
  
-   [이벤트](#events)  
  
-   [액세스 가능성](#accessibility)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하는 테이블의 데이터 원본의 값을 표시 합니다. 각 열 필드를 나타내고 레코드를 나타냅니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤은 다음과 같은 기능을 지원 합니다.  
  
-   데이터 소스 컨트롤과 같은 바인딩을 <xref:System.Web.UI.WebControls.SqlDataSource>합니다.  
  
-   기본 제공 정렬 기능입니다.  
  
-   기본 제공 필드를 업데이트 및 삭제 기능입니다.  
  
-   기본 제공 페이징 기능입니다.  
  
-   기본 제공 행 선택 기능입니다.  
  
-   에 대 한 프로그래밍 방식의 액세스는 <xref:System.Web.UI.WebControls.GridView> 개체 모델을 동적으로 속성을 설정, 이벤트를 처리 및 등입니다.  
  
-   여러 키 필드입니다.  
  
-   하이퍼링크 열에 대 한 여러 데이터 필드입니다.  
  
-   테마 및 스타일을 통해 모양을 사용자 지정할 수 있습니다.  
  
-   ASP.NET에서 사용할 수 있는 다른 데이터 바인딩된 컨트롤에 대 한 자세한 내용은 [데이터 바인딩된 컨트롤을 웹 서버 컨트롤](http://msdn.microsoft.com/library/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96)합니다.  
  
> [!NOTE]
>  에 익숙한 경우는 <xref:System.Web.UI.WebControls.DataGrid> .NET Framework 버전 1.0에서에서 컨트롤의 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 후속 기능에 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
<a name="column_fields"></a>   
## <a name="column-fields"></a>열 필드  
 각 열에는 <xref:System.Web.UI.WebControls.GridView> 제어로 표시 됩니다는 <xref:System.Web.UI.WebControls.DataControlField> 개체입니다. 기본적으로는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성이 `true`, 만듦는 <xref:System.Web.UI.WebControls.AutoGeneratedField> 데이터 원본에 있는 각 필드에 대 한 개체입니다. 각 필드에 열으로 렌더링할는 <xref:System.Web.UI.WebControls.GridView> 각 필드는 데이터 소스에 표시 된 순서 대로 제어 합니다.  
  
 필드에 표시 되는 열을 직접 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView> 설정 하 여 컨트롤의 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성을 `false` 다음 고유한 열 필드 컬렉션을 정의 합니다. 열 필드 형식에 따라 컨트롤의 열의 동작을 결정 합니다. 다음 표에서 사용할 수 있는 여러 열 필드 형식을 나열 합니다.  
  
|열 필드 형식|설명|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|데이터 원본에서 필드의 값을 표시 합니다. 기본 열 형식는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.ButtonField>|명령 단추에 있는 각 항목에 대 한 표시는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 추가 / 제거 단추 등의 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|각 항목에 대 한 확인란을 표시는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 열 필드 형식은이 부울 값을 사용 하는 필드를 표시 하려면 일반적으로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.CommandField>|미리 정의 된 select를 수행 하는 명령 단추 표시, 편집 또는 삭제 작업입니다.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|데이터 원본의 필드의 값을 하이퍼링크로 표시 됩니다. 이 열 필드 형식에는 두 번째 필드 하이퍼링크의 URL에 바인딩할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.ImageField>|각 항목에 대 한 이미지를 표시는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.TemplateField>|각 항목에 대 한 사용자 정의 콘텐츠가 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 지정한 템플릿에 따라 제어 합니다. 이 열 필드 형식에는 사용자 지정 열 필드를 만들 수 있습니다.|  
  
 열 필드 컬렉션을 선언적으로 정의 하려면 먼저 추가 중괄호와 닫는 `<Columns>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 다음에 여는 태그와 닫는 간의 포함 시킬 열 필드를 나열 `<Columns>` 태그입니다. 지정 된 열에 추가 되는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 순서 대로 나열 합니다. <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션을 저장 하는 모든 열 컨트롤의 필드 및 프로그래밍 방식으로의 열 필드를 관리할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 명시적으로 선언 된 열 필드를 자동으로 생성 된 열 필드와 함께에서 표시할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 열 필드 뒤에 자동으로 생성 된 열 필드를 먼저 렌더링 됩니다.  
  
> [!NOTE]
>  자동으로 생성 된 열 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션입니다.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>데이터 바인딩  
 <xref:System.Web.UI.WebControls.GridView> 데이터 소스 컨트롤에 컨트롤을 바인딩할 수 있습니다 (같은 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 또는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어) 또는 구현 하는 데이터 원본 컬렉션에는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스와 같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, 또는 기타 컬렉션 형식. 다음 방법 중 하나를 사용 하 여 바인딩할는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 적절 한 데이터 소스 형식:  
  
-   데이터 소스 제어에 바인딩할 설정는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 <xref:System.Web.UI.Control.ID%2A> 데이터 소스 컨트롤의 값입니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤 자동으로 지정 된 데이터 소스 제어에 바인딩하고 활용할 수 데이터 소스 컨트롤의 정렬, 업데이트, 삭제 및 페이징을 수행 하는 기능입니다. 이것은 데이터에 바인딩하는 기본 방법입니다.  
  
-   구현 하는 데이터 원본에 바인딩할는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스를 프로그래밍 방식으로 설정는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성의는 <xref:System.Web.UI.WebControls.GridView> 데이터 소스를 제어 하 고 호출 하는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드. 이 메서드를 사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 기본 제공 정렬, update, delete 및 페이징 기능을 제공 하지 않습니다. 적절 한 이벤트를 사용 하 여이 기능을 제공 해야 합니다.  
  
 데이터 바인딩에 대 한 자세한 내용은 참조 [ASP.NET 데이터 액세스 콘텐츠 맵](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.  
  
> [!NOTE]
>  이 컨트롤 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 가능한 경우 항상이 가장 좋습니다 값이이 컨트롤에 표시 되기 전에 HTML로 인코딩된이 지 (의 <xref:System.Web.UI.WebControls.BoundField> 기본적으로 값을 HTML로 인코딩하고 클래스). ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 참조 [유효성 검사 컨트롤 소개](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190)합니다.  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>데이터 작업  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤 사용자가 정렬, 업데이트, 삭제, 선택, 및 컨트롤의 항목을 페이징할 수 있는 여러 기본 제공 기능을 제공 합니다. 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 바인딩된 데이터 소스 제어에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 제공 정렬, 업데이트 및 삭제 기능입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> 정렬, 업데이트 및 다른 유형의 데이터 원본 삭제에 대 한 지원을 제공할 수 있습니다. 그러나 이러한 작업에 대 한 구현으로 적절 한 이벤트 처리기를 제공 해야 합니다.  
  
 항목을 정렬할 수 있도록 정렬는 <xref:System.Web.UI.WebControls.GridView> 열 머리글을 클릭 하 여 특정 열에 대해 제어 합니다. 정렬 기능을 사용 설정 된 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> 속성을 `true`합니다.  
  
 자동 업데이트, 삭제 및 선택 기능을 사용할 때의 단추를 사용할 수는 <xref:System.Web.UI.WebControls.ButtonField> 또는 <xref:System.Web.UI.WebControls.TemplateField> 각각 "편집", "Delete" 및 "Select" 명령 이름으로 열 필드를 클릭 합니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 추가할 수는 <xref:System.Web.UI.WebControls.CommandField> 경우 열 필드는 편집, 삭제 또는 선택 단추를는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>, 또는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> 속성이 `true`각각.  
  
> [!NOTE]
>  데이터 원본에 레코드 삽입 직접에서 지원 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 그러나 사용 하 여 레코드를 삽입 하는 <xref:System.Web.UI.WebControls.GridView> 제어와 함께에서 `DetailsView` 또는 `FormView` 제어 합니다. 자세한 내용은 참조 <xref:System.Web.UI.WebControls.DetailsView> 또는 <xref:System.Web.UI.WebControls.FormView>각각.  
  
 같은 시간에 데이터 원본의 모든 레코드를 표시 하는 대신는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 분리할 수 레코드 페이지에 있습니다. 페이징을 사용 하려면 설정는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 포스트백에 저장 된 정보를 기반으로 다시 생성은 <xref:System.Web.UI.PageStatePersister.ViewState%2A>합니다. 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 포함 됩니다는 <xref:System.Web.UI.WebControls.TemplateField> 또는 <xref:System.Web.UI.WebControls.CommandField> 와 <xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> 속성이로 설정 `true`, 하면 <xref:System.Web.UI.Page.EnableViewState%2A> 속성 설정 해야 `true` 동시 데이터를 확인 하려면 작업의 경우와 같은 업데이트 및 삭제에는 해당 행에 적용 됩니다.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>사용자 인터페이스 사용자 지정  
 모양을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView> 는 컨트롤의 다른 부분에 대 한 스타일 속성을 설정 하 여 제어 합니다. 다음 표에서 다른 스타일 속성을 나열합니다.  
  
|스타일 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|에 대체 데이터 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 데이터 행을 교대로 표시할이 속성이 설정 된 경우는 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 설정 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|편집 하 고 행의 스타일 설정을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|빈 데이터 행에 표시 되는 스타일 설정이 <xref:System.Web.UI.WebControls.GridView> 제어 데이터 소스 모든 레코드를 포함 하지 않습니다.|  
|<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|바닥글 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|머리글 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|호출기 행의 스타일 설정을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|데이터 행에 대 한 스타일 설정의 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 도 속성이 설정 되어, 교대로 데이터 행을 표시할는 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 설정 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|선택한 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|데이터 열 데이터에 따라 정렬 됩니다에 대 한 스타일 설정의 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 스타일을 설정 하는 경우 스타일 (예를 들어 강조 표시 된 열) 데이터를 오름차순 정렬 될 때 셀에 적용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|데이터 열 데이터에 따라 정렬 됩니다에 대 한 스타일 설정의 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 스타일을 설정 하는 경우의 헤더에 배치 됩니다 화살표 나타내는 데이터가 오름차순으로 정렬 되는 <xref:System.Web.UI.WebControls.GridView> 데이터 오름차순 정렬 한 경우를 제어 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|데이터 열 데이터에 따라 정렬 됩니다에 대 한 스타일 설정의 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 스타일을 설정 하는 경우 스타일 (예를 들어 강조 표시 된 열) 데이터를 내림차순 정렬 될 때 셀에 적용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|데이터 열 데이터에 따라 정렬 됩니다에 대 한 스타일 설정의 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 스타일을 설정 하는 경우 가리키는 화살표가 아래에 배치 됩니다의 헤더는 <xref:System.Web.UI.WebControls.GridView> 데이터 내림차순 정렬 한 경우.|  
  
 표시 하거나 컨트롤의 다른 부분을 숨길 수 있습니다. 다음 표에서 표시 하거나 숨길 어느 부분을 제어 하는 속성을 나열 합니다.  
  
|속성|설명|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|표시 하거나 숨깁니다의 바닥글 섹션은 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|헤더 섹션을 나타내거나는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
  
<a name="events"></a>   
## <a name="events"></a>이벤트  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤 프로그래밍할 수 있는 몇 가지 이벤트를 제공 합니다. 그러면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 지원 되는 이벤트를 나열 하는 다음 표에 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
|이벤트(event)|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 페이징 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 사용자가 컨트롤에서 다른 페이지로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 페이징 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|행의 취소 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView> 편집 모드를 제어 종료 합니다. 이 이벤트는 자주 취소 작업을 중지 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowCommand>|<xref:System.Web.UI.WebControls.GridView> 컨트롤에서 단추를 클릭하면 이 이벤트가 발생합니다. 이 이벤트는 자주 컨트롤에서 단추를 클릭 하면 작업을 수행 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowCreated>|새 행을 만들 때 발생 합니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 이벤트는 대개 행을 만들 때 행의 내용을 수정 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowDataBound>|데이터 행의 데이터에 바인딩되면 발생는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 이벤트는 대개 행 데이터에 바인딩될 때 행의 내용을 수정 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|행의 삭제 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 데이터 원본에서 레코드를 삭제 합니다. 이 이벤트는 대개 삭제 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|행의 삭제 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 데이터 원본에서 레코드를 삭제 합니다. 이 이벤트는 종종 삭제 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|행의 편집 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 편집 모드로 전환되기 전에 이 이벤트가 발생합니다. 이 이벤트는 종종 편집 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|행의 업데이트 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트한 후에 이 이벤트가 발생합니다. 이 이벤트는 대개 업데이트 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|행의 업데이트 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트하기 전에 이 이벤트가 발생합니다. 이 이벤트는 자주 업데이트 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|행의 선택 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 선택 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 컨트롤에서 행을 선택한 후 작업을 수행 하는 경우가 많습니다.|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|행의 선택 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 선택 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 종종 선택 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|열을 정렬하는 하이퍼링크를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 일반적으로 사용자가 열을 정렬에 대 한 하이퍼링크를 클릭 한 후 작업을 수행 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|열을 정렬하는 하이퍼링크를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 정렬 작업을 취소 하거나 사용자 지정 정렬 루틴을 수행 하기 위해 종종 사용 됩니다.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>액세스 가능성  
 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하십시오. [Visual Studio 및 ASP.NET의 내게 필요한 옵션](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤 및내게필요한옵션](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:GridView  
    AccessKey="string"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    AutoGenerateDeleteButton="True|False"  
    AutoGenerateEditButton="True|False"  
    AutoGenerateSelectButton="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableSortingAndPagingCallbacks="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnRowCancelingEdit="RowCancelingEdit event handler"  
    OnRowCommand="RowCommand event handler"  
    OnRowCreated="RowCreated event handler"  
    OnRowDataBound="RowDataBound event handler"  
    OnRowDeleted="RowDeleted event handler"  
    OnRowDeleting="RowDeleting event handler"  
    OnRowEditing="RowEditing event handler"  
    OnRowUpdated="RowUpdated event handler"  
    OnRowUpdating="RowUpdating event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    PageSize="integer"  
    RowHeaderColumn="string"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingRowStyle />  
        <Columns>  
                <asp:BoundField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundField>  
                <asp:ButtonField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ImageUrl="uri"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonField>  
                <asp:CheckBoxField  
                    AccessibleHeaderText="string"  
                    DataField="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CheckBoxField>  
                <asp:CommandField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CancelImageUrl="uri"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    DeleteImageUrl="uri"  
                    DeleteText="string"  
                    EditImageUrl="uri"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertImageUrl="uri"  
                    InsertText="string"  
                    InsertVisible="True|False"  
                    NewImageUrl="uri"  
                    NewText="string"  
                    SelectImageUrl="uri"  
                    SelectText="string"  
                    ShowCancelButton="True|False"  
                    ShowDeleteButton="True|False"  
                    ShowEditButton="True|False"  
                    ShowHeader="True|False"  
                    ShowInsertButton="True|False"  
                    ShowSelectButton="True|False"  
                    SortExpression="string"  
                    UpdateImageUrl="uri"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CommandField>  
                <asp:DynamicField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ShowHeader="True|False"  
                    UIHint="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:DynamicField>  
                <asp:HyperLinkField  
                    AccessibleHeaderText="string"  
                    DataNavigateUrlFields="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NavigateUrl="uri"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkField>  
                <asp:ImageField  
                    AccessibleHeaderText="string"  
                    AlternateText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DataAlternateTextField="string"  
                    DataAlternateTextFormatString="string"  
                    DataImageUrlField="string"  
                    DataImageUrlFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    NullImageUrl="uri"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ImageField>  
                <asp:TemplateField  
                    AccessibleHeaderText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <ControlStyle />  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <AlternatingItemTemplate>  
                            <!-- child controls -->  
                        </AlternatingItemTemplate>  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <InsertItemTemplate>  
                            <!-- child controls -->  
                        </InsertItemTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateField>  
        </Columns>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <HeaderStyle />  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
        <SelectedRowStyle />  
</asp:GridView>  
```  
  
   
  
## Examples  
 소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=191882)합니다.  
  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 Microsoft SQL Server에서 AdventureWorksLT 샘플 데이터베이스의 Customers 테이블에서 값을 표시 합니다. 에 값이 사용 하 여 검색 한 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-aspx-vb[GridViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView> 제어 및 <xref:System.Web.UI.WebControls.LinqDataSource> 레코드를 편집할 수 있도록 컨트롤입니다.  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 셀의에서 값에 액세스 하는 방법을 보여 주는 예제를 참조 하십시오. <xref:System.Web.UI.WebControls.GridViewRow>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.ImageField" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.UI.WebControls.GridView> 클래스입니다. 동적으로 추가 하는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 페이지, 새 <xref:System.Web.UI.WebControls.GridView> 개체, 해당 속성을 설정한 다음에 추가 하는 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 등의 컬렉션 컨테이너 컨트롤 <xref:System.Web.UI.WebControls.PlaceHolder>합니다.  
  
   
  
## Examples  
 다음 예제에서는 동적으로 추가 하는 생성자를 사용 하는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 페이지입니다.  
  
 [!code-aspx-csharp[GridViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCtor/CS/gridviewctorcs.aspx#1)]
 [!code-aspx-vb[GridViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCtor/VB/gridviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomPaging : bool with get, set" Usage="System.Web.UI.WebControls.GridView.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 페이징의 활성화 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자 지정 페이징이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징을 사용 하면의 내용을 표시 하는 <xref:System.Web.UI.WebControls.GridView> 청크에서 제어 합니다. 페이지에 있는 항목 수에 의해 결정 됩니다는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성입니다. 일반적으로 데이터 원본의 모든 행 할 때마다 읽기는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 다른 페이지로 이동 합니다. 이 하면 데이터 원본에 있는 항목의 총 수를 매우 큰 경우 리소스를 많이 사용할 수 있습니다. 사용자 지정 페이징을 사용 하면 데이터 원본에서 단일 페이지에 필요한 항목만 읽을 수 있습니다.  
  
 페이징을 사용 하도록 사용자 지정을 모두 설정 된 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 및 <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> 속성을 `true`합니다. 에 대 한 처리기에서는 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 이벤트를 설정는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> 속성 새 페이지 인덱스 값으로 설정 된 <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> 속성을 데이터 원본에 있는 항목의 총 수는 현재 페이지와 호출에 필요한 행만 반환 하도록 데이터 원본을 설정는 < c6 > <xref:System.Web.UI.WebControls.GridView.DataBind%2A>  메서드. <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> 속성 페이지의 총 수를 확인 하기 위해 컨트롤을 사용 하면,이 값은 모든 항목을 읽어 자동으로 결정 일반적으로 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.GridView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이징 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>페이징 기능을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 같은 시간에 데이터 원본의 모든 레코드를 표시 하는 대신는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 분리할 수 레코드 페이지에 있습니다. 데이터 원본에서 페이징 기능을 지 원하는 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 이용할 수 및 기본 제공 페이징 기능을 제공 합니다. 페이징 기능을 지 원하는 데이터 원본 개체에 사용할 수는 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스 또는 페이징 기능을 지 원하는 데이터 소스는 합니다.  
  
 페이징 기능을 사용 하려면 설정는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`합니다. 기본적으로는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 페이지에 한 번에 10 개의 레코드를 표시 합니다. 설정 하 여 페이지에 표시 되는 레코드의 수를 변경할 수는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성입니다. 데이터 원본 콘텐츠를 표시 하는 데 필요한 페이지의 총 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PageCount%2A> 속성입니다. 현재 표시 된 페이지의 인덱스를 사용 하 여 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> 속성입니다.  
  
 페이징이 활성화 된 경우 호출기 행 이라는 추가 행에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 호출기 행에는 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤이 포함 됩니다. 사용 하 여 호출기 행 (예: 페이저 디스플레이 모드, 페이저 컨트롤의 텍스트 레이블을 한 번에 표시할 페이지 링크의 수)의 설정을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> 속성입니다. 호출기 행을 설정 하 여 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수는 <xref:System.Web.UI.WebControls.PagerSettings.Position%2A> 속성입니다. 설정 하 여 4 개의 기본 제공 호출기 디스플레이 모드 중 하나를 선택할 수도 있습니다는 <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> 속성입니다. 다음 표에서 기본 제공 디스플레이 모드를 설명합니다.  
  
|모드|설명|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|집합 페이지 매김 구성 된 컨트롤의 이전 및 다음 단추입니다.|  
|`PagerButton.NextPreviousFirstLast`|A의 페이지 매김 구성 된 컨트롤의 이전, 다음으로, 첫 번째 및 마지막 단추 설정 합니다.|  
|`PagerButton.Numeric`|페이지에 직접 액세스할 수 있는 번호가 매겨진 링크 단추로 구성된 페이지 매김 컨트롤의 집합입니다. 기본 모드입니다.|  
|`PagerButton.NumericFirstLast`|집합 페이지 매김 구성 된 컨트롤의 번호가 매겨진 및 첫 번째 및 마지막 링크 단추입니다.|  
  
 호출기 행 (배경 색, 글꼴 색, 위치 등)의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> 속성입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> 데이터 소스에 한 페이지만 레코드의 경우 컨트롤 호출기 행을 자동으로 숨깁니다.  
  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤 또한 호출기 행에 대 한 사용자 지정 템플릿을 정의할 수 있습니다. 사용자 지정 호출기 행 템플릿을 만드는 방법에 대 한 자세한 내용은 참조 <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>합니다.  
  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 페이징이 발생 하는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다. 다음 표에서 사용할 수 있는 이벤트를 나열합니다.  
  
|이벤트(event)|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 페이징 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 사용자가 컨트롤에서 다른 페이지로 이동한 후 작업을 수행 해야 할 때 주로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 페이징 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 자주 페이징 작업을 취소 하는 데 사용 됩니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을에서 페이징 기능을 사용 하는 선언적으로 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowSorting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSorting : bool with get, set" Usage="System.Web.UI.WebControls.GridView.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>정렬 기능을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정렬을 지 원하는 데이터 소스 제어에 바인딩되면는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 정렬 기능을 제공 합니다. 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 설정 하 여 데이터 원본에 바인딩되는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성을 프로그래밍 방식으로 기능을 제공 해야는 정렬를 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.Sorting> 이벤트입니다.  
  
> [!NOTE]
>  서로 다른 데이터 원본에는 정렬 기능을 사용 하도록 설정 하는 것에 대 한 다른 요구 사항이 있습니다. 요구 사항을 확인 하려면 특정 데이터 원본에 대 한 설명서를 참조 하십시오.  
  
 정렬 기능을 사용 설정 된 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> 속성을 `true`합니다. 정렬을 사용 하면, 각 열 필드에 대 한 머리글 텍스트는 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 속성 집합 링크 단추로 표시 됩니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 속성이 자동으로 생성 된 열 필드는 자동으로 채워집니다. 통해 직접 열을 정의 하는 경우는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 설정 해야 컬렉션의 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 각 열에 대 한 속성 그렇지 않은 경우 열에에서 표시 되지 것입니다 링크 단추 헤더입니다.  
  
 항목에 사용 하면 열에 대 한 링크 단추 클릭는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 정렬할 식을 기반으로 정렬 합니다. 일반적으로 정렬 식은 단순히 인데 열에 표시 되는 필드의 이름이 고 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 해당 열을 기준으로 정렬 합니다. 여러 필드를 정렬할 쉼표로 구분 된 필드 이름 목록이 포함 된 정렬 식을 사용 합니다. 정렬 식을 확인할 수 있습니다 하는 <xref:System.Web.UI.WebControls.GridView> 제어를 사용 하 여 적용 하는 <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> 속성입니다. 반복 해 서 열의 링크 단추를 클릭 하면 정렬 방향을 오름차순 및 내림차순 사이 전환 합니다. 현재 정렬 방향을 확인 하려면는 <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤 정렬 이벤트가 발생할 때 사용자 지정 동작을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다. 다음 표에서 사용할 수 있는 이벤트를 나열합니다.  
  
|이벤트(event)|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|열을 정렬하는 하이퍼링크를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 일반적으로 사용자가 열을 정렬에 대 한 하이퍼링크를 클릭 한 후 작업을 수행 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|열을 정렬하는 하이퍼링크를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 정렬 작업을 취소 하거나 사용자 지정 정렬 루틴을 수행 하기 위해 종종 사용 됩니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> 속성으로 정렬을 사용 하는 <xref:System.Web.UI.WebControls.GridView> 자동으로 생성 된 열을 사용할 때 제어 합니다.  
  
 [!code-aspx-csharp[GridViewAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSorting/CS/gridviewallowsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSorting/VB/gridviewallowsortingvb.aspx#1)]  
  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> 속성의 정렬을 활성화 하려면는 <xref:System.Web.UI.WebControls.GridView> 시점을 제어할는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션 정의 됩니다. 이미지 정렬 방향을 나타내기 위해 정렬 하 고 열의 머리글에 프로그래밍 방식으로 추가 됩니다. 이 예제가 작동 하려면 사용자 고유의 이미지를 제공 해야 합니다.  
  
 [!code-aspx-csharp[GridViewAllowSortingColumns#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSortingColumns#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternatingRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ AlternatingRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 데이터 행이 교대로 반복되는 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 대체 데이터 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 속성의 데이터 행에 교대로 반복 되는 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 데이터 행을 교대로 표시할이 속성이 설정 된 경우는 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 설정 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `AlternatingRowStyle-ForeColor`).  
  
-   중첩 된 `<AlternatingRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `AlternatingRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 선언적으로 교대로 반복 되는 데이터 행에 대 한 스타일을 정의 하는 속성을 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.  
  
 [!code-aspx-csharp[GridViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumns : bool with get, set" Usage="System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 각 필드에 대해 바인딩된 필드를 자동으로 만들지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 소스의 각 필드에 대해 바인딩된 필드를 자동으로 만들려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성이 `true`, <xref:System.Web.UI.WebControls.AutoGeneratedField> 개체 데이터 소스에 있는 각 필드에 자동으로 만들어집니다. 각 필드에 열으로 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 데이터 원본에 표시 된 순서 대로 제어 합니다. 이 옵션은 데이터 소스에 모든 필드를 표시 하는 편리한 방법을 제공합니다 그러나 자동으로 생성 된 열 필드의 표시 방법이 나 동작의 제어를 제한 있습니다.  
  
 대신는 <xref:System.Web.UI.WebControls.GridView> 열 필드를 자동으로 생성 하는 컨트롤을 설정 하 여 열 필드를 수동으로 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성을 `false` 사용자 지정을 만든 다음 `Columns` 컬렉션입니다. 바인딩된 열 필드 외에도 단추 열 필드, 확인란 열 필드, 명령 필드, 하이퍼링크 열 필드는 이미지 필드 또는 사용자 정의 된 사용자 지정 템플릿을 기준으로 열 필드를 표시할 수 있습니다.  
  
 자동으로 생성 된 열 필드와 명시적으로 선언 된 열 필드를 결합할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 열 필드 뒤에 자동으로 생성 된 열 필드를 먼저 렌더링 됩니다. 바인딩된 열을 자동으로 생성 된 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.GridView.Columns%2A>을 참조하세요.  
  
 이 속성을 설정 하는 경우 `true` 설정 하 고는 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 모델 유형과 속성 <xref:System.Web.DynamicData.DynamicField> 컨트롤 생성 됩니다. 설정 하지 않은 경우는 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 속성 <xref:System.Web.UI.WebControls.BoundField> 컨트롤 생성 됩니다. 원하지 않는 경우 <xref:System.Web.DynamicData.DynamicField> 컨트롤, 다음과 같은 옵션이 있습니다.  
  
-   설정의 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> 속성을 `null` 에 `Page_Load` 이벤트 처리기입니다. 이 경우 <xref:System.Web.UI.WebControls.BoundField> 컨트롤 생성 됩니다.  
  
-   자동으로 만들고 직접 할당 하 여 필드를 생성 하는 사용자 지정 코드 작성 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> 클래스 및 컨트롤에 해당 형식의 인스턴스를 할당 합니다.  
  
-   <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>를 `false`로 설정합니다. 이 경우 필드가 생성 되 고와 같은 컨트롤을 사용 하 여 필드를 수동으로 지정 해야 <xref:System.Web.UI.WebControls.BoundField> 또는 <xref:System.Web.UI.WebControls.ImageField>합니다.  
  
-   <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> 속성은 설정하지 않습니다. 이 경우 <xref:System.Web.UI.WebControls.BoundField> 컨트롤 생성 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성을 자동으로 열에 바인딩된 필드를 만들는 <xref:System.Web.UI.WebControls.GridView> 데이터 원본에 있는 각 필드에 대 한 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-aspx-vb[GridViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDeleteButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateDeleteButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateDeleteButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDeleteButton : bool with get, set" Usage="System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 데이터 행의 삭제 단추가 있는 <see cref="T:System.Web.UI.WebControls.CommandField" /> 필드 열을 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 자동으로 추가할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>각 데이터 행의 삭제 단추가 있는 <see cref="T:System.Web.UI.WebControls.CommandField" /> 필드 열을 자동으로 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원하는 데이터 소스 제어에 바인딩되면는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 삭제 기능을 제공 합니다.  
  
> [!NOTE]
>  데이터를 삭제 하는 데이터 소스 제어에 대 한 데이터를 삭제 하려면 구성 되어야 합니다. 레코드를 삭제 하는 데이터 소스 제어를 구성 하려면 특정 데이터 소스 제어에 대 한 설명서를 참조 하십시오.  
  
 때는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`, 열 (나타내는 <xref:System.Web.UI.WebControls.CommandField> 개체) 각 데이터에 대 한 삭제 단추가 행이 자동으로 추가 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 영구적으로 행에 대 한 삭제 단추를 클릭 하면 데이터 원본의 해당 레코드를 제거 합니다.  
  
> [!NOTE]
>  설정 해야는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 키 필드 또는 실행 되도록 자동 삭제 기능에 대 한 데이터 소스의 필드를 식별 하는 속성입니다.  
  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 행이 삭제 되는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다. 다음 표에서 사용할 수 있는 이벤트를 나열합니다.  
  
|이벤트(event)|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|행의 삭제 단추를 클릭 하면 후 발생는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 데이터 원본에서 레코드를 삭제 합니다. 이 이벤트는 대개 삭제 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|행의 삭제 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 데이터 원본에서 레코드를 삭제 합니다. 이 이벤트는 종종 삭제 작업을 취소 하는 데 사용 됩니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 의 자동 삭제 기능을 사용 하도록 설정 하려면 속성은 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateEditButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateEditButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateEditButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateEditButton : bool with get, set" Usage="System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 데이터 행의 편집 단추가 있는 <see cref="T:System.Web.UI.WebControls.CommandField" /> 필드 열을 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 자동으로 추가할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>각 데이터 행의 편집 단추가 있는 <see cref="T:System.Web.UI.WebControls.CommandField" /> 필드 열을 자동으로 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원하는 데이터 소스 컨트롤에 바인딩된 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트 기능을 제공 합니다.  
  
> [!NOTE]
>  데이터를 업데이트 하는 데이터 소스 제어에 대 한 데이터를 업데이트 하려면 구성 되어야 합니다. 레코드를 업데이트 하는 데이터 소스 제어를 구성 하려면 특정 데이터 소스 제어에 대 한 설명서를 참조 하십시오.  
  
 때는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> 속성이 `true`, 열 (나타내는 <xref:System.Web.UI.WebControls.CommandField> 개체) 각 데이터에 대 한 편집 단추가 행이 자동으로 추가 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 행에 대 한 편집 단추를 클릭 하면 해당 행이 편집 모드로 전환 합니다. 읽기 전용으로 설정 하지 않은 행의 각 열 필드와 같은 적절 한 입력된 컨트롤을 표시 행 편집 모드일 때는 <xref:System.Web.UI.WebControls.TextBox> 필드의 데이터 형식에 대 한 제어 합니다. 이 사용자를 필드의 값을 수정할 수 있습니다.  
  
 를 클릭 하면 편집 단추 업데이트 단추와 취소 단추로 바뀝니다. 업데이트 단추를 클릭 하면 모든 값 변경과 데이터 소스에 행을 업데이트 하 고 모드를 표시 하는 행을 반환 합니다. 취소 단추를 클릭 하는 값 변경 사항이 고 모드를 표시 하는 행을 반환 합니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 행 편집 모드에 설정 하 여 넣을 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 행의 인덱스를 사용 하 여 속성입니다. 편집 모드를 프로그래밍 방식으로 종료 하려면 설정는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 속성을-1입니다.  
  
 기본 제공 업데이트 기능을 사용할 경우 설정 해야 합니다는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 필드의 쉼표로 구분 된 목록 사용 하 여 속성 이름을 기본 키 필드 또는 데이터 원본의 필드를 식별 하 여, 그렇지 않은 경우 기본 제공 업데이트 기능 할 수 있습니다 올바른 레코드를 업데이트 합니다. 자동으로 사용 하 여 필드 열을 생성 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성을 `true`), <xref:System.Web.UI.WebControls.GridView> 컨트롤 자동으로 확인 하는 필드 또는에 지정 된 필드에 해당 하는 자동으로 생성 되는 필드 열 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성은 읽기 전용입니다.  
  
 사용 하 여 편집 모드에 있는 행의 모양을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> 속성입니다. 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 행이 업데이트 될 때 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다. 다음 표에서 사용할 수 있는 이벤트를 나열합니다.  
  
|이벤트(event)|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|행의 취소 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.GridView> 편집 모드가 컨트롤을 취소 합니다. 이 이벤트는 자주 취소 작업을 중지 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|행의 편집 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 편집 모드로 전환되기 전에 이 이벤트가 발생합니다. 이 이벤트는 종종 편집 작업을 취소 하는 데 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|행의 업데이트 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트한 후에 이 이벤트가 발생합니다. 이 이벤트는 대개 업데이트 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|행의 업데이트 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트하기 전에 이 이벤트가 발생합니다. 이 이벤트는 자주 업데이트 작업을 취소 하는 데 사용 됩니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> 의 자동 편집 기능을 사용 하도록 설정 하려면 속성은 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateSelectButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateSelectButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateSelectButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateSelectButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateSelectButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateSelectButton : bool with get, set" Usage="System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 데이터 행의 선택 단추가 있는 <see cref="T:System.Web.UI.WebControls.CommandField" /> 필드 열을 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 자동으로 추가할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>각 데이터 행의 선택 단추가 있는 <see cref="T:System.Web.UI.WebControls.CommandField" /> 필드 열을 자동으로 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> 속성이 `true`, 열 (나타내는 <xref:System.Web.UI.WebControls.CommandField> 개체) 된 각 데이터에 대 한 선택 단추에 행이 자동으로 추가 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 설정 선택 단추 컨트롤에서 해당 행을 선택 하는 행에 대 한를 클릭 하 여 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 속성을 행의 인덱스입니다. 검색 하는 <xref:System.Web.UI.WebControls.GridViewRow> 사용 하 여 선택된 된 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> 속성입니다. 사용 하 여 선택된 된 레코드에 대 한 기본 키 값을 가져올 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 속성입니다. <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 속성에 지정 된 키 필드의 값이 포함 된 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성입니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하 여 행을 선택할 수는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 속성입니다. 행의 선택을 취소 하려면는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 속성을-1입니다.  
  
 사용 하 여 선택된 된 행의 모양을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 속성입니다. 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 행을 선택 하는 경우 사용자 지정 동작을 수행 하는 데 사용할 수 있는 여러 가지 이벤트를 제공 합니다. 다음 표에서 사용할 수 있는 이벤트를 나열합니다.  
  
|이벤트(event)|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|행의 선택 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 선택 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 컨트롤에서 행을 선택한 후 작업을 수행 하는 경우가 많습니다.|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|행의 선택 단추를 클릭하면 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 선택 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 종종 선택 작업을 취소 하는 데 사용 됩니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> 의 자동 선택 기능을 사용 하도록 설정 하려면 속성은 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.GridView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 배경에 표시할 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 배경에 표시할 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A> 속성의 배경에 표시할 이미지에 URL을 지정 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.GridView> 백그라운드에서 채울 컨트롤, 이미지를 바둑판식으로 표시 합니다. 이미지 컨트롤 보다 큰 경우 이미지가 잘립니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A> 속성의 백그라운드에서 사용자 지정 이미지를 표시 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewBackImageUrl/CS/gridviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[GridViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewBackImageUrl/VB/gridviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ BottomPagerRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.GridViewRow" Usage="System.Web.UI.WebControls.GridView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 컨트롤의 아래쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체를 가져옵니다.</summary>
        <value>컨트롤의 아래쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridViewRow" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 호출기 행 사용자가 다른 페이지로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> 속성을 프로그래밍 방식으로 액세스는 <xref:System.Web.UI.WebControls.GridViewRow> 의 아래쪽 호출기 행을 나타내는 개체의 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 아래쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때 맨 아래 호출기 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정 하지는 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> 속성 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 변경 내용을 덮어쓰게 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> 아래쪽 호출기 행에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다. <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> 속성 검색을 사용 하는 <xref:System.Web.UI.WebControls.DropDownList> 페이저 행에서 제어 합니다.  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.GridView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 장치 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.Caption%2A> 속성 캡션 HTML 요소에 렌더링할 텍스트를 지정 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 지정 하는 텍스트에는 보조 기술 장치가 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 테이블에 대 한 설명을 제공 합니다. 사용 하 여 HTML caption 요소를 렌더링 하는 위치를 지정할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> 속성입니다.  
  
 이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.Caption%2A> 속성에 대 한 캡션을 지정 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-aspx-vb[GridViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.GridView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 있는 HTML 캡션 요소의 가로 또는 세로 위치를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 장치 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 값 중 하나입니다. 기본값은 브라우저의 기본 설정을 사용하는 <see langword="TableCaptionAlign.NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> 속성에 HTML 캡션 요소의 가로 또는 세로 위치를 지정 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 속성을 사용하면 보조 기술 장치 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.  
  
 이 속성 중 하나를 사용 하 여는 <xref:System.Web.UI.WebControls.TableCaptionAlign> 열거형 값입니다. 다음 표에서 가능한 값을 나열합니다.  
  
|값|설명|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|캡션 요소가 테이블의 아래쪽에 맞춰집니다.|  
|`TableCaptionAlign.Left`|캡션 요소가 테이블의 왼쪽에 맞춰집니다.|  
|`TableCaptionAlign.NotSet`|Caption 요소 맞춤 설정 되지 않았습니다.|  
|`TableCaptionAlign.Right`|캡션 요소가 테이블의 오른쪽에 맞춰집니다.|  
|`TableCaptionAlign.Top`|캡션 요소가 테이블의 위쪽에 맞춰집니다.|  
  
> [!NOTE]
>  이 속성이로 설정 된 경우 `TableCaptionAlign.NotSet`, 브라우저의 기본값이 사용 됩니다.  
  
 HTML caption 요소에 대 한 텍스트를 지정 하려면 사용 된 <xref:System.Web.UI.WebControls.GridView.Caption%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> 되도록 지정 하려면 속성에 대 한 caption 요소는 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 컨트롤의 위쪽에 맞춰집니다.  
  
 [!code-aspx-csharp[GridViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-aspx-vb[GridViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 값이 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 열거형 값이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.GridView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 내용과 셀 테두리 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>셀 내용과 셀 테두리 사이의 여백 크기(픽셀)입니다. 기본값은 -1로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.CellPadding%2A> 속성을 셀의 내용과 셀의 테두리 사이의 간격을 제어 합니다. 셀의 네 면에 지정 된 안쪽 여백이 추가 됩니다.  
  
 모든 셀의 같은 열에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 너비를 같게 만들기가 있습니다. 안쪽 여백이 가장 넓은 셀에 적용 되 있고 열에 있는 다른 모든 셀이 셀 너비입니다. 마찬가지로, 동일한 행에 있는 모든 셀 높이 같게 만들기가 있어야 합니다. 안쪽 여백이 행에서 가장 높은 셀에 적용 됩니다 있고 행의 다른 모든 셀이 셀 높이입니다. 개별 셀의 크기를 지정할 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.CellPadding%2A> 속성을 셀의 내용을 셀 테두리 사이의 간격을 선언적으로 설정 합니다.  
  
 [!code-aspx-csharp[GridViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[GridViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.GridView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>픽셀 단위로 나타낸 셀 사이의 공간 크기입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.CellSpacing%2A> 속성에 인접 한 셀 사이의 간격을 제어할 수는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 세로 및 가로로이 간격이 적용 됩니다. 셀 간격은 일정의 전체 컨트롤에 대 한 합니다. 행 이나 열 사이의 개별 셀 간격을 지정할 수 없습니다.  
  
> [!NOTE]
>  이 속성을 0 보다 큰 값을 설정 하 고 다음을 설정 하는 경우는 <xref:System.Web.UI.WebControls.GridView.GridLines%2A> 속성 셀 테두리를 표시 하는 값으로 인접 한 셀 테두리 사이의 간격이 생깁니다. 이 경우에는 <xref:System.Web.UI.WebControls.Table.CellSpacing%2A> 속성 간격의 크기를 제어 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.CellSpacing%2A> 속성의 셀 사이의 간격을 선언적으로 설정 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[GridViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDRowSuffix As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDRowSuffix : string[] with get, set" Usage="System.Web.UI.WebControls.GridView.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하기 위해 값을 <see cref="P:System.Web.UI.Control.ClientID" /> 속성 값에 추가하는 데이터 필드의 이름을 가져오거나 설정합니다.</summary>
        <value>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 해당 값이 사용되는 데이터 필드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 방지 하기 위해 컨트롤의 여러 인스턴스가의 여러 행에서 렌더링 될 때 이름 충돌을 <xref:System.Web.UI.WebControls.GridView> 컨트롤, ASP.NET <xref:System.Web.UI.Control.ClientID%2A> 각 인스턴스에 대 한 값입니다. 지정 하는 방법을 <xref:System.Web.UI.Control.ClientID%2A> 값을 설정 하 여 생성 됩니다는 <xref:System.Web.UI.Control.ClientIDMode%2A> 속성입니다. 설정 하는 경우는 <xref:System.Web.UI.Control.ClientIDMode%2A> 속성을 <xref:System.Web.UI.ClientIDMode.Predictable>, asp는 <xref:System.Web.UI.Control.ClientID%2A> 하나 이상의에 지정 된 데이터 필드에서 파생 된 접미사를 추가 하 여 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>합니다. 경우 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A> 접미사는 일련 번호를 설정 하지 않으면 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataKeyArray ^ ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDRowSuffixDataKeys : System.Web.UI.WebControls.DataKeyArray" Usage="System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용되는 데이터 값을 가져옵니다.</summary>
        <value>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용되는 데이터 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataControlFieldCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Columns As DataControlFieldCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataControlFieldCollection ^ Columns { System::Web::UI::WebControls::DataControlFieldCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Web.UI.WebControls.DataControlFieldCollection" Usage="System.Web.UI.WebControls.GridView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> 컨트롤의 열 필드를 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" /> 컨트롤의 모든 열 필드가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열 필드의 열을 나타냅니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. <xref:System.Web.UI.WebControls.GridView.Columns%2A> 속성 (컬렉션)에 렌더링 되는 모든 열을 명시적으로 선언 된 필드를 저장을 사용 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 프로그래밍 방식으로 열 필드의 컬렉션을 관리 하는 컬렉션입니다.  
  
> [!NOTE]
>  명시적으로 선언 된 열 필드를 자동으로 생성 된 열 필드와 함께에서 사용할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 열 필드 뒤에 자동으로 생성 된 열 필드를 먼저 렌더링 됩니다. 자동으로 생성 된 열 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션입니다.  
  
 에 열 필드가 표시 되는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 열 필드가 표시 되는 순서는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션입니다. 다음 표에서 다른 열에서 파생 되는 필드 클래스는 <xref:System.Web.UI.WebControls.DataControlField> 클래스 및에서 사용할 수는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션입니다.  
  
|열 필드 형식|설명|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|데이터 원본에서 필드의 값을 표시 합니다. 기본 열 형식는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.ButtonField>|명령 단추에 있는 각 항목에 대 한 표시는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 추가 / 제거 단추 등의 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|각 항목에 대 한 확인란을 표시는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 열 필드 형식은이 부울 값을 사용 하는 필드를 표시 하려면 일반적으로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.CommandField>|미리 정의 된 select를 수행 하는 명령 단추 표시, 편집 또는 삭제 작업입니다.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|데이터 원본의 필드의 값을 하이퍼링크로 표시 됩니다. 이 열 필드 형식에는 두 번째 필드 하이퍼링크의 URL에 바인딩할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.ImageField>|각 항목에 대 한 이미지를 표시는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.TemplateField>|각 항목에 대 한 사용자 정의 콘텐츠가 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 지정한 템플릿에 따라 제어 합니다. 이 열 필드 형식에는 사용자 지정 열 필드를 만들 수 있습니다.|  
  
 프로그래밍 방식으로 열 필드를 추가할 수는 있지만 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션 쉽습니다에서 선언적으로 열 필드를 나열 하는 <xref:System.Web.UI.WebControls.GridView> 제어 하 고 사용 하 여는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 각 열 필드를 표시 하거나 숨기려면 각 열 필드의 속성입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 열 필드의 속성이로 설정 되어 `false`, 열에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView> 제어 및 열에 대 한 데이터 해도 왕복 클라이언트에 있습니다. 대문자로 표시 되지 않는 열에 대 한 데이터를 원하는 경우 추가 필드 이름을 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 채우는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션 선언적으로 합니다.  
  
 [!code-aspx-csharp[GridViewColumnFields#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewColumnFields/CS/gridviewcolumnfieldscs.aspx#1)]
 [!code-aspx-vb[GridViewColumnFields#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewColumnFields/VB/gridviewcolumnfieldsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.ImageField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      </Docs>
    </Member>
    <Member MemberName="ColumnsGenerator">
      <MemberSignature Language="C#" Value="public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator ColumnsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ColumnsGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnsGenerator As IAutoFieldGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IAutoFieldGenerator ^ ColumnsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnsGenerator : System.Web.UI.IAutoFieldGenerator with get, set" Usage="System.Web.UI.WebControls.GridView.ColumnsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET Dynamic Data 기능을 사용하는 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 대한 열을 자동으로 생성하는 컨트롤을 가져오거나 설정합니다.</summary>
        <value>ASP.NET Dynamic Data 기능을 사용하는 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 대한 열을 자동으로 생성하는 컨트롤입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지에서 ASP.NET Dynamic Data 기능을 사용 하려면 추가 해야 합니다는 <xref:System.Web.DynamicData.DynamicDataManager> 컨트롤을 페이지입니다. 와 같은 페이지에서 데이터 바인딩된 컨트롤에 대 한 ASP.NET Dynamic Data 기능을 통해이 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 개별을 사용 하도록 설정 하려면 <xref:System.Web.UI.WebControls.GridView> Dynamic Data 기능을 사용 하도록 컨트롤을 사용 하 여 연결 해야 합니다는 <xref:System.Web.DynamicData.DynamicDataManager> 호출 하 여 컨트롤의 <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=nameWithType> 메서드 중는 `Page_Init` 이벤트입니다. 이 메서드를 자동으로 설정 된 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> 속성을는 <xref:System.Web.DynamicData.DynamicDataManager> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn(class System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAutoGeneratedColumn (fieldProperties As AutoGeneratedFieldProperties) As AutoGeneratedField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::AutoGeneratedField ^ CreateAutoGeneratedColumn(System::Web::UI::WebControls::AutoGeneratedFieldProperties ^ fieldProperties);" />
      <MemberSignature Language="F#" Value="abstract member CreateAutoGeneratedColumn : System.Web.UI.WebControls.AutoGeneratedFieldProperties -&gt; System.Web.UI.WebControls.AutoGeneratedField&#xA;override this.CreateAutoGeneratedColumn : System.Web.UI.WebControls.AutoGeneratedFieldProperties -&gt; System.Web.UI.WebControls.AutoGeneratedField" Usage="gridView.CreateAutoGeneratedColumn fieldProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This is kept for backward compatibility - this API is no more used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <param name="fieldProperties">만들 자동으로 생성된 열 필드의 속성을 나타내는 <see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />입니다.</param>
        <summary>자동으로 생성된 열 필드를 만듭니다.</summary>
        <returns>
          <paramref name="fieldProperties" /> 매개 변수에 의해 지정된 자동으로 생성된 열 필드를 나타내는 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn%2A> 메서드는 자동으로 생성 된 열을 만드는 데 때 필드는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성이 `true`합니다. 자동으로 생성 된 열 필드의 속성을 통해 지정 되며는 <xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties> 에 포함 된 개체는 `fieldProperties` 매개 변수입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="gridView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Collections.IEnumerable" /> 컨트롤의 데이터 소스가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridView" />입니다.</param>
        <param name="dataBinding">자식 컨트롤이 데이터에 바인딩되어 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 데이터 소스를 사용하여 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤을 렌더링하는 데 사용할 컨트롤 계층 구조를 만듭니다.</summary>
        <returns>만든 행의 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateChildControls%2A> 메서드의 컨트롤 계층 구조를 만드는 데 사용 되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="dataSource" />가 null <see cref="T:System.Web.UI.DataSourceView" />를 반환하는 경우  -또는-  <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않고 <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />를 반환할 수 없습니다.  -또는-  <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />이 <see langword="true" />이고 <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않고 데이터 소스 페이징을 수행할 수 없습니다.  -또는-  <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않고 <paramref name="dataBinding" />이 <see langword="false" />로 설정되었습니다.</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateChildTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateChildTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateChildTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateChildTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateChildTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateChildTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="gridView.CreateChildTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 자식 테이블을 만듭니다.</summary>
        <returns>항상 자식 테이블을 나타내는 새 <see cref="T:System.Web.UI.WebControls.Table" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateChildTable%2A> 에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 자식 테이블을 만듭니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CreateColumns">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateColumns(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumns (dataSource As PagedDataSource, useDataSource As Boolean) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ CreateColumns(System::Web::UI::WebControls::PagedDataSource ^ dataSource, bool useDataSource);" />
      <MemberSignature Language="F#" Value="abstract member CreateColumns : System.Web.UI.WebControls.PagedDataSource * bool -&gt; System.Collections.ICollection&#xA;override this.CreateColumns : System.Web.UI.WebControls.PagedDataSource * bool -&gt; System.Collections.ICollection" Usage="gridView.CreateColumns (dataSource, useDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">데이터 소스를 나타내는 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />입니다.</param>
        <param name="useDataSource">
          <c>dataSource</c> 매개 변수에 의해 지정된 데이터 소스를 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>컨트롤 계층 구조를 빌드하는 데 사용되는 열 필드의 집합을 만듭니다.</summary>
        <returns>컨트롤 계층 구조를 빌드하는 데 사용되는 필드가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성이로 설정 되어 `true`, 데이터 원본에 있는 각 필드에 대 한 바인딩된 열 필드가 자동으로 만들어집니다. 바인딩된 각 열 필드의 행으로 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 데이터 원본에 표시 된 순서 대로 제어 합니다. <xref:System.Web.UI.WebControls.GridView.CreateColumns%2A> 메서드는 자동으로 생성 된 열 필드를 만드는 데 사용 됩니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="gridView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤의 기본 스타일을 만듭니다.</summary>
        <returns>컨트롤의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateControlStyle%2A> 메서드는 컨트롤에 대 한 기본 스타일을 만드는 데 사용 됩니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="gridView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>처리를 위해 데이터 소스에 전달되는 인수를 포함하는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체입니다.</summary>
        <returns>데이터 소스에 전달되는 인수를 포함하는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 만들 컨트롤을는 <xref:System.Web.UI.DataSourceSelectArguments> 데이터 원본에 전달 된 인수를 포함 하는 개체입니다. 이 구현에서는 <xref:System.Web.UI.DataSourceSelectArguments> 페이징 작업에 대 한 인수를 포함 하는 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.GridView" /> 클래스, 데이터 원본에 전달 되는 고유한 값을 지정 하려면이 메서드를 재정의할 수 있습니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.GridViewRow CreateRow(int32 rowIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (rowIndex As Integer, dataSourceIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::GridViewRow ^ CreateRow(int rowIndex, int dataSourceIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.GridViewRow&#xA;override this.CreateRow : int * int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.GridViewRow" Usage="gridView.CreateRow (rowIndex, dataSourceIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="rowIndex">만들 행의 인덱스입니다.</param>
        <param name="dataSourceIndex">행에 바인딩할 데이터 소스 항목의 인덱스입니다.</param>
        <param name="rowType">
          <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 값 중 하나입니다.</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 값 중 하나입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 행을 만듭니다.</summary>
        <returns>지정된 매개 변수를 사용하여 만든 <see cref="T:System.Web.UI.WebControls.GridViewRow" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.CreateRow%2A> 메서드에의 한 행을 만드는 데 사용 되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 데이터 바인딩된 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 자동으로 대상 데이터를 표시 하는 데 필요한 행을 생성 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="gridView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 데이터 소스를 바인딩합니다. 이 메서드는 상속될 수 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.DataBind> 를 데이터 원본에서 데이터를 바인딩할 메서드는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 메서드는 컨트롤의 현재 서식 파일의 모든 데이터 바인딩 식을 확인합니다.  
  
 <xref:System.Web.UI.WebControls.GridView.DataBind%2A> 경우 메서드가 자동으로 호출 됩니다는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridView> 컨트롤 유효한 데이터 소스 컨트롤을 참조 합니다.  
  
 수동으로 호출 하는 대신는 <xref:System.Web.UI.WebControls.GridView.DataBind%2A> 메서드를 사용 하는 모델 바인딩을 사용할 수 있습니다 프로그램 <xref:System.Web.UI.WebControls.GridView.DataBind%2A> 설정 하 여 컨트롤의 <xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> 속성에 대 한 데이터를 반환 하는 메서드의 이름으로는 <xref:System.Web.UI.WebControls.GridView>합니다. <xref:System.Web.UI.WebControls.GridView> 자동으로 채워집니다 select 메서드에서 반환 되는 데이터를 사용 합니다. 모델 바인딩 데이터로 작업 하기 위한 코드를 단순화할 수 있습니다. 자세한 내용은 참조 [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.DataBind> 데이터 소스를 바인딩할 메서드를 한 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataBind/CS/gridviewdatabindcs.aspx#1)]
 [!code-aspx-vb[GridViewDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataBind/VB/gridviewdatabindvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.GridView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 표시된 항목에 대한 기본 키 필드의 이름이 들어 있는 배열을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 표시된 항목의 기본 키 필드 이름이 들어 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성을 통해 하나 이상의 데이터 원본의 기본 키를 나타내는 필드를 지정 합니다. 이 속성을 각 행을 고유 하 게 식별 하는 데 필요한 필드에만 설정 해야 예를 들어 정수 값에 고유 하 게 하는 경우에 ID 열의 각 행을 식별 합니다. 설정 해야 합니다는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 자동 되려면에서 속성 업데이트 및 삭제 작업의 기능은 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 실행 되도록 합니다. 이러한 키 필드의 값을 업데이트 하거나 삭제할 행을 지정 하기 위해 데이터 소스 제어에 전달 됩니다.  
  
 검색 해야 하는 경우 데이터를 업데이트할 때 키 값 또는를 사용 하 여 행을 삭제 하는 `Keys` 속성 중 하나는 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 또는 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 클래스입니다. 예를 들어 `e.Keys[0]` 에서 첫 번째 데이터 키의 값을 보유 한 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 또는 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 이벤트 처리기입니다.  
  
 행을 선택 하는 경우 데이터 키 값을 검색, 사용 하려는 경우는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 속성입니다.  
  
 때는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성이 설정 되어는 <xref:System.Web.UI.WebControls.GridView> 채웁니다 자동으로 해당 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 각 행의 기본 키에 액세스 하는 편리한 방법을 제공 하는 지정 된 필드 또는 필드의 값을 사용 하 여 컬렉션입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> 컨트롤은 컨트롤 상태에 이러한 키 필드 값을 저장 합니다. 이러한 값이 중요 한 정보가 들어 있으면이 가장 좋습니다 설정 하 여 상태 보기 암호화를 사용 하 여 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 속성을 `ViewStateEncryptionMode.Always`합니다.  
  
 사용 하는 경우 자동으로 생성 된 필드 열 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성을 `true`), <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하면 하나 이상의 필드에 해당 하는 열에 지정 된 되었는지는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성은 읽기 전용입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 열 필드의 속성이로 설정 되어 `false`, 열에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.GridView> 제어 및 열에 대 한 데이터 해도 왕복 클라이언트에 있습니다. 클라이언트에 사용할 수 있도록 표시 되지 않는 열에 대 한 데이터를 원하는 경우 추가 필드 이름을 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성을 통해 데이터 원본의 키 필드를 지정 합니다. 예제에서는 `DataKeyNames` 의 특성은 `GridView` 요소 태그 이름을 구분 하려면 쉼표를 사용 하 여 두 개의 키 필드를 지정 합니다. 이 예제를 실행 하려면 다음가 있는 웹 사이트를 만듭니다.  
  
-   AdventureWorksLT 샘플 데이터베이스 및 명명 된 연결 문자열에 대 한 연결 `AdventureWorksLTConnectionString`합니다. AdventureWorksLT 샘플 데이터베이스를 설정 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 된 AdventureWorksLT 샘플 데이터베이스 설정 ASP.NET 개발을 위한](http://msdn.microsoft.com/library/2baad633-9d63-49cc-a6b2-917cafd35356)합니다.  
  
-   라고 하는 LINQ to SQL 데이터 컨텍스트 클래스 `AdventureWorksLTDataClassesDataContext`합니다. 데이터 컨텍스트 SalesOrderDetails 테이블에 대 한 클래스에 있어야 합니다. LINQ to SQL 클래스를 만드는 방법에 대 한 정보를 참조 하십시오. [LINQ to SQL](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)합니다.  
  
 [!code-aspx-csharp[GridViewEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-aspx-vb[GridViewEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKeys As DataKeyArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKeyArray ^ DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeys : System.Web.UI.WebControls.DataKeyArray" Usage="System.Web.UI.WebControls.GridView.DataKeys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.DataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataKey" /> 컨트롤에 있는 각 행의 데이터 키 값을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataKeyArray" /> 컨트롤에 있는 각 행의 데이터 키 값이 들어 있는 <see cref="T:System.Web.UI.WebControls.GridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성이 설정 되어는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey> 컨트롤의 각 행에 대 한 개체입니다. <xref:System.Web.UI.WebControls.DataKey> 필드나에 지정 된 필드의 값을 포함 하는 개체는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성입니다. <xref:System.Web.UI.WebControls.DataKey> 개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 컬렉션입니다. 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 검색할 속성의 <xref:System.Web.UI.WebControls.DataKey> 의 특정 데이터 행에 대 한 개체는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  사용할 수는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 검색할 속성의 <xref:System.Web.UI.WebControls.DataKey> 현재 선택 된 행에 대 한 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 속성을 현재 선택 된 행에 대 한 데이터 키 값을 직접 검색 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 속성에서 선택한 행의 데이터 키 값을 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewDataKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataKeys/CS/gridviewdatakeyscs.aspx#1)]
 [!code-aspx-vb[GridViewDataKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataKeys/VB/gridviewdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.GridView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터를 삭제하기 위해 호출할 메서드의 이름을 가져오거나 설정합니다.</summary>
        <value>메서드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 방법으로 사용할 모델 바인딩을 사용 하면이 속성을 설정 합니다.  
  
 Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRow">
      <MemberSignature Language="C#" Value="public virtual void DeleteRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRow : int -&gt; unit&#xA;override this.DeleteRow : int -&gt; unit" Usage="gridView.DeleteRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">삭제할 행의 인덱스입니다.</param>
        <summary>데이터 소스에서 지정된 인덱스에 있는 레코드를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.GridView.DeleteRow%2A> 메서드를 프로그래밍 방식으로 데이터 소스에서 지정 된 인덱스에 있는 레코드를 삭제 합니다. 외부에서 레코드를 삭제 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.GridView> 페이지 내의 다른 컨트롤 처럼 제어 합니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 및 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.DeleteRow%2A> 프로그래밍 방식으로의 레코드를 삭제 하는 메서드는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewDeleteRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDeleteRow/CS/GridViewDeleteRowcs.aspx#1)]
 [!code-aspx-vb[GridViewDeleteRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDeleteRow/VB/GridViewDeleteRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되지 않은 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 바인딩되는 데이터 소스 컨트롤이 삭제 작업을 지원하지 않거나 데이터 소스에 정의된 삭제 명령이 없습니다.</exception>
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditIndex : int with get, set" Usage="System.Web.UI.WebControls.GridView.EditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집할 행의 인덱스를 가져오거나 설정합니다.</summary>
        <value>편집할 행의 0부터 시작하는 인덱스입니다. 기본값은 -1로, 편집하고 있는 행이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행 인덱스는 0부터 시작 (첫 번째 행이 행 0 임).  
  
 이 속성은 일반적으로 다음과 같은 특정 이벤트에 대 한 처리기를 포함 하는 경우에만 사용 됩니다.  
  
-   원하는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 처음으로 페이지에 표시 되는 특정 행에 대 한 모드에서 열립니다. 이 위해 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 속성에 대 한 처리기는 <xref:System.Web.UI.Control.Load> 의 이벤트는 <xref:System.Web.UI.Page> 클래스 또는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
-   어떤 행이 해당 행을 업데이트 한 후 편집 되었는지 알아야 합니다. 이 위해 행 인덱스를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 속성에는 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 이벤트 처리기입니다.  
  
-   바인딩하는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 설정 하 여 데이터 소스는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성 프로그래밍 방식으로 합니다. 이 경우에 설정 해야 합니다는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 속성에는 <xref:System.Web.UI.WebControls.GridView.RowEditing> 및 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 이벤트 처리기입니다.  
  
 설정 하는 경우는 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 속성 포스트백 후 또는 발생 한 이벤트에 대 한 처리기에서 보다 이후는 <xref:System.Web.UI.Control.Load> 이벤트를는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 지정된 된 행에 대 한 편집 모드를 입력할 수 있습니다. 다른 이벤트 처리기에서이 속성의 값을 읽고 인덱스 편집 중인 행을 반영 하도록 보장 되지 않습니다.  
  
 가 사용자를 한 행을 확인 하려면 클릭는 **편집** 단추 또는 하이퍼링크를 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 편집 모드로 전환, 행 인덱스를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewEditEventArgs> 는 의개체<xref:System.Web.UI.WebControls.GridView.RowEditing> 이벤트 처리기입니다.  
  
 방지 하기 위해는 <xref:System.Web.UI.WebControls.GridView> 사용자가 클릭 한 후 편집 모드를 입력할 필요가 제어는 **편집** 단추 또는 하이퍼링크를 집합은 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성의는 <xref:System.Web.UI.WebControls.GridViewEditEventArgs> 개체를 `true` 에 <xref:System.Web.UI.WebControls.GridView.RowEditing> 이벤트 처리기입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 속성에서 편집 된 후 어떤 행이 업데이트를 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 업데이트가 성공 했는지를 나타내는 메시지가 표시 됩니다.  
  
 [!code-aspx-csharp[GridViewRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-aspx-vb[GridViewRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 인덱스가 -1보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 편집하기 위해 선택한 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 편집하고 있는 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> 속성에서 편집 되는 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `EditRowStyle-ForeColor`).  
  
-   중첩 된 `<EditRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EditRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> 속성에서 편집 되는 행에 대 한 사용자 지정 스타일을 정의 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewEditRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEditRowStyle/CS/gridvieweditrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewEditRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEditRowStyle/VB/gridvieweditrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 바인딩될 때 렌더링되는 빈 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>null 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 속성에 null 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 컨트롤에 바인딩되는 데이터 원본에 레코드가 없는 경우 null 행 표시 됩니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `EmptyDataRowStyle-ForeColor`).  
  
-   중첩 된 `<EmptyDataRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EmptyDataRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 설정 하는 방법을 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 속성을 통해 선언적으로 연한 파랑색 배경이 및 null 행에 대 한 빨간색 글꼴을 지정 합니다.  
  
 [!code-aspx-csharp[GridViewNullRowTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewNullRowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 바인딩될 때 렌더링되는 빈 데이터 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 데이터 행에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다. 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)를 사용 하 여 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> 속성입니다.  
  
 빈 데이터 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<EmptyDataTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<EmptyDataTemplate>` 태그입니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 속성입니다. 설정 하 여 빈 데이터 행에 대 한 기본 제공 UI를 사용할 수는 또는 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> 이 속성 대신 합니다.  
  
 빈 데이터 서식 파일에서 선언 하는 컨트롤을 프로그래밍 방식으로 액세스 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: ID 별로 액세스 서버 컨트롤](http://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3)합니다.  
  
> [!NOTE]
>  모두는 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> 및 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> 속성이 설정 되는 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 예제에서는 때 표시 되는 빈 데이터 행에 대 한 사용자 지정 서식 파일을 정의 하는 방법을 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩되어 있습니다.  
  
 [!code-aspx-csharp[GridViewNullRowTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewNullRowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.GridView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 바인딩될 때 렌더링되는 빈 데이터 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 데이터 행에 표시할 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 데이터 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 제어 컨트롤에 바인딩되는 데이터 원본 모든 레코드를 포함 하지 않습니다. 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> 속성을 통해 빈 데이터 행에 표시할 텍스트를 지정 합니다. 빈 데이터 행의 스타일을 제어 하기 위해 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 속성입니다. 빈 데이터 행에 대 한 고유의 사용자 지정 사용자 인터페이스 (UI)을 설정 하 여 정의할 수 있습니다 또는 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두는 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> 및 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> 속성이 설정 되는 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> 속성이 우선 합니다.  
  
 이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> 속성을 통해 빈 데이터 행에 표시할 텍스트를 지정 합니다.  
  
 [!code-aspx-csharp[GridViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewemptydatatext/CS/gridviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[GridViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewemptydatatext/VB/gridviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.GridView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>유효성 검사 컨트롤이 삽입 또는 업데이트 작업 도중 발생하는 예외를 처리하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>유효성 검사 컨트롤이 삽입 또는 업데이트 작업 도중 발생하는 예외를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnablePersistedSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePersistedSelection : bool with get, set" Usage="System.Web.UI.WebControls.GridView.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인덱스 또는 데이터 키 값을 기준으로 행이 선택되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 키 값을 기준으로 행이 선택되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이 `false` 행을 선택 하 고, 새 페이지에 다른 데이터가 있는 경우에 새 페이지가 표시 되 면 동일한 행이 선택 되어 있습니다. 이 속성을 설정 하는 경우 `true`, 다른 데이터에 있는 페이지를 표시 하는 경우 행을 선택 합니다. 다음 행 선택한에 페이지를 반환 하는 경우 해당 행이 여전히 선택 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSortingAndPagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnableSortingAndPagingCallbacks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSortingAndPagingCallbacks" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableSortingAndPagingCallbacks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableSortingAndPagingCallbacks { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSortingAndPagingCallbacks : bool with get, set" Usage="System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬 및 페이징 작업에 클라이언트측 콜백을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>정렬 및 페이징 작업에 클라이언트측 콜백을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정렬 또는 페이징 작업을 수행 하면 기본적으로는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 작업을 수행 하는 서버에 다시 게시 합니다. 경우는 <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> 속성이 `true`정렬을 수행 하는 클라이언트에는 서비스를 호출 하 고 서버에 게시 하지 않아도 페이징 작업을 다시 합니다.  
  
> [!NOTE]
>  일부 브라우저는이 기능을 지원합니다. 브라우저에서이 기능을 지원 하는지 여부를 확인 하려면는 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> 속성입니다.  
  
 모든 열은 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션에서 실행 되도록이 기능에 대 한 콜백을 지원 해야 합니다. 경우는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션와 같은 콜백의 경우, 지원 하지 않는 열이 포함 되어 <xref:System.Web.UI.WebControls.TemplateField>, <xref:System.NotSupportedException> 예외가 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> 속성을 정렬 및 페이징 작업에 대 한 클라이언트 콜백을 사용 합니다.  
  
 [!code-aspx-csharp[GridViewEnableSortingAndPagingCallbacks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/CS/gridviewenablesortingandpagingcallbackscs.aspx#1)]
 [!code-aspx-vb[GridViewEnableSortingAndPagingCallbacks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/VB/gridviewenablesortingandpagingcallbacksvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> 컬렉션에 콜백을 지원하지 않는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 등의 열이 포함된 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, class System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, row As GridViewRow, includeReadOnlyFields As Boolean, includePrimaryKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, System::Web::UI::WebControls::GridViewRow ^ row, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.GridViewRow * bool * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.GridViewRow * bool * bool -&gt; unit" Usage="gridView.ExtractRowValues (fieldValues, row, includeReadOnlyFields, includePrimaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">필드 값을 저장하는 데 사용되는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</param>
        <param name="row">필드 값을 검색할 <see cref="T:System.Web.UI.WebControls.GridViewRow" />입니다.</param>
        <param name="includeReadOnlyFields">읽기 전용 필드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="includePrimaryKey">기본 키 필드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 행 내에서 선언된 각 필드의 값을 검색하여 지정된 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 개체에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 지정한 행 내에 선언 된 각 필드의 값을 검색 하는 `row` 매개 변수입니다. 추출 된 값 읽기 전용 필드 및 키 필드를 사용 하 여 포함 하는지 여부를 지정할 수는 `includeReadOnlyFields` 및 `includePrimaryKey` 매개 변수를 각각.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.GridView" /> 클래스, 필드 값을 검색 하는 사용자 고유의 루틴을 만들려면이 메서드를 재정의할 수 있습니다.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ FooterRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.GridViewRow" Usage="System.Web.UI.WebControls.GridView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 컨트롤의 바닥글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 컨트롤의 바닥글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> 속성을 프로그래밍 방식으로 액세스는 <xref:System.Web.UI.WebControls.GridViewRow> 의 바닥글 행을 나타내는 개체를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 바닥글 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때 바닥글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정 하지는 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> 속성 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 변경 내용을 덮어쓰게 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> 바닥글 행의 정렬 방향을 표시 하는 속성입니다.  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowFooter" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤의 바닥글 행 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 바닥글 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> 속성의 바닥글 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `FooterStyle-ForeColor`).  
  
-   중첩 된 `<FooterStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FooterStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> 속성의 바닥글 행에 대 한 사용자 지정 스타일을 정의 하는 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="gridView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤을 대상으로 하는 콜백 이벤트의 결과를 반환합니다.</summary>
        <returns>콜백의 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView> 구현 제어는 <xref:System.Web.UI.ICallbackEventHandler> 인터페이스 및 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> 비동기적으로 데이터를 검색 하 고 <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> 컨트롤에 검색된 된 데이터를 반환 하는 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string&#xA;override this.GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string" Usage="gridView.GetCallbackScript (buttonControl, argument)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">콜백 스크립트를 만들 단추 컨트롤입니다.</param>
        <param name="argument">콜백 스크립트에 전달할 인수입니다.</param>
        <summary>정렬 작업을 수행하는 단추의 콜백 스크립트를 만듭니다.</summary>
        <returns>정렬 작업을 수행하는 단추의 콜백 스크립트입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.GetCallbackScript%2A> 에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트를 만들 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.GridView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 모눈선 스타일을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridLines" /> 값 중 하나입니다. 기본값은 <see langword="GridLines.Both" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.GridLines%2A> 속성 모눈선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 다음 표에서 사용 가능한 스타일을 보여 줍니다.  
  
|스타일|설명|  
|-----------|-----------------|  
|`GridLines.None`|눈금선이 없는 표시 됩니다.|  
|`GridLines.Horizontal`|가로 눈금선을 표시합니다.|  
|`GridLines.Vertical`|세로 눈금선을 표시합니다.|  
|`GridLines.Both`|가로 및 세로 눈금선을 표시합니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.GridLines%2A> 속성에 눈금선을 숨기려면는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewGridLines/CS/gridviewgridlinescs.aspx#1)]
 [!code-aspx-vb[GridViewGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewGridLines/VB/gridviewgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ HeaderRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.GridViewRow" Usage="System.Web.UI.WebControls.GridView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 컨트롤의 머리글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 컨트롤의 머리글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> 속성을 프로그래밍 방식으로 액세스는 <xref:System.Web.UI.WebControls.GridViewRow> 에 머리글 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 머리글 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated> 이벤트입니다.  
  
 이 속성은 사용자 지정 콘텐츠를 추가할 때 예를 들어 머리글 행을 프로그래밍 방식으로 조작 해야 할 때 일반적으로 사용 됩니다. 수정 하지는 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> 속성 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 변경 내용을 덮어쓰게 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> 정렬 방향에 따라 속성을 프로그래밍 방식으로 머리글 행의 글꼴 색을 변경 합니다.  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤의 머리글 행 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> 속성에 헤더 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `HeaderStyle-ForeColor`).  
  
-   중첩 된 `<HeaderStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `HeaderStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> 속성 사용자 지정 스타일의 머리글 행을 정의 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.GridView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 내에 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 가로 맞춤을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 값 중 하나입니다. 기본값은 <see langword="HorizontalAlign.NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A> 속성의 가로 맞춤을 지정 하는 <xref:System.Web.UI.WebControls.GridView> 페이지 내에서 제어 합니다. 다음 표에서 다양 한 가로 맞춤 스타일을 나열 합니다.  
  
|맞춤 값|설명|  
|---------------------|-----------------|  
|`HorizontalAlign.NotSet`|가로 맞춤은 <xref:System.Web.UI.WebControls.GridView> 컨트롤 설정 되지 않았습니다.|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.GridView> 컨트롤은 페이지에 왼쪽 맞춤 합니다.|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.GridView> 가운데 컨트롤이 페이지에 표시 됩니다.|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.GridView> 컨트롤은 페이지에서 오른쪽 정렬 합니다.|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.GridView> 컨트롤 페이지의 왼쪽 및 오른쪽 여백에 맞게 정렬 됩니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A> 에 맞게 속성을 <xref:System.Web.UI.WebControls.GridView> 페이지의 오른쪽에는 컨트롤입니다.  
  
 [!code-aspx-csharp[GridViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewHorizontalAlign/CS/gridviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[GridViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewHorizontalAlign/VB/gridviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.GridViewRow row, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::GridViewRow ^ row, int columnSpan, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.GridViewRow * int * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.GridViewRow * int * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="gridView.InitializePager (row, columnSpan, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">초기화할 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridViewRow" />입니다.</param>
        <param name="columnSpan">페이저 행에 포함할 열의 수입니다.</param>
        <param name="pagedDataSource">데이터 소스를 나타내는 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />입니다.</param>
        <summary>페이지 기능을 사용할 수 있을 때 표시되는 페이저 행을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.InitializePager%2A> 페이징 기능을 활성화 하는 경우 표시 되 호출기 행 초기화 메서드를 사용 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.GridViewRow row, class System.Web.UI.WebControls.DataControlField[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As GridViewRow, fields As DataControlField())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::GridViewRow ^ row, cli::array &lt;System::Web::UI::WebControls::DataControlField ^&gt; ^ fields);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.GridViewRow * System.Web.UI.WebControls.DataControlField[] -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.GridViewRow * System.Web.UI.WebControls.DataControlField[] -&gt; unit" Usage="gridView.InitializeRow (row, fields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="fields" Type="System.Web.UI.WebControls.DataControlField[]" />
      </Parameters>
      <Docs>
        <param name="row">초기화할 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridViewRow" />입니다.</param>
        <param name="fields">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> 컨트롤의 열 필드를 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체의 배열입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 행을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.InitializeRow%2A> 메서드는에 행을 초기화 하는 데 사용 되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="gridView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">테스트할 데이터 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
        <summary>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 열에 바인딩할 수 있는지 여부를 나타냅니다.</summary>
        <returns>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 열에 바인딩할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.IsBindableType%2A> 메서드는 프로그래밍 방식으로 지정된 된 데이터 형식 열에 바인딩할 수 있는지 여부를 결정 하는 컨트롤 개발자가 일반적으로 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 다음 데이터 형식 열에 바인딩될 수는 <xref:System.Web.UI.WebControls.GridView> 제어:  
  
-   <xref:System.Boolean?displayProperty=nameWithType>  
  
-   <xref:System.Byte?displayProperty=nameWithType>  
  
-   <xref:System.Char?displayProperty=nameWithType>  
  
-   <xref:System.DateTime?displayProperty=nameWithType>  
  
-   <xref:System.Decimal?displayProperty=nameWithType>  
  
-   <xref:System.Double?displayProperty=nameWithType>  
  
-   <xref:System.Guid?displayProperty=nameWithType>  
  
-   <xref:System.Int16?displayProperty=nameWithType>  
  
-   <xref:System.Int32?displayProperty=nameWithType>  
  
-   <xref:System.Int64?displayProperty=nameWithType>  
  
-   <xref:System.SByte?displayProperty=nameWithType>  
  
-   <xref:System.Single?displayProperty=nameWithType>  
  
-   <xref:System.String?displayProperty=nameWithType>  
  
-   <xref:System.UInt16?displayProperty=nameWithType>  
  
-   <xref:System.UInt32?displayProperty=nameWithType>  
  
-   <xref:System.UInt64?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="gridView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">해당 컨트롤에 저장된 컨트롤 상태 값이 들어 있는 <see cref="T:System.Object" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤의 속성 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 있는 속성의 상태를 로드 하도록이 메서드는는 <xref:System.Web.UI.WebControls.GridView> 경우에 유지 해야 하는 컨트롤의 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> 속성이 `false`합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="gridView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 <see cref="T:System.Object" />입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 참조 [ASP.NET 상태 관리 개요](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="gridView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>웹 서버 컨트롤의 이벤트가 페이지의 UI 서버 컨트롤 계층 구조로 전달되었는지 여부를 확인합니다.</summary>
        <returns>이벤트가 취소되었으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnBubbleEvent%2A> 메서드 구현에서 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> 페이지 계층에 자식 컨트롤에서 이벤트를 전달 하는 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="override this.OnDataPropertyChanged : unit -&gt; unit" Usage="gridView.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" />, <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 또는 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 속성이 변경된 후에 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 컨트롤을 해당 데이터에 다시 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnDataPropertyChanged%2A> 에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 컨트롤을 한 후 해당 데이터에 바인딩됩니다는 <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>, 또는 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 속성을 변경 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.GridView" /> 클래스, 데이터에 다시 고유한 루틴을 만들려면이 메서드를 재정의할 수 있습니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="gridView.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> 메서드 알립니다는 <xref:System.Web.UI.WebControls.GridView> 바인딩해야 하 고 기본 데이터 원본의 변경 된 컨트롤입니다. 일반적으로 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> 데이터 원본 뷰의 속성이 변경 되 면 메서드가 호출 됩니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="gridView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 방법으로 알림을 웹 서버 컨트롤을 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 해야 합니다. 이 서버 컨트롤의 수명 주기이 단계에서 컨트롤의 뷰 상태가 아직 채울 수 있습니다. 또한 자식 또는이 컨트롤에 부모 인지에 관계 없이이 메서드를 호출할 때 다른 서버 컨트롤을 액세스할 수 없습니다. 다른 서버 컨트롤 생성 하 고 액세스할 준비가 되도록 보장 되지 않습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="gridView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 페이저 단추 중 하나를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 페이징 작업을 처리 합니다. 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 페이징 작업과 같은 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.GridViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As GridViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::GridViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.GridViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.GridViewPageEventArgs -&gt; unit" Usage="gridView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 페이저 단추 중 하나를 클릭 하기 전에 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView> 컨트롤 페이징 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPagePreLoad : obj * EventArgs -&gt; unit" Usage="gridView.OnPagePreLoad (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>컨트롤이 로드되기 전에 데이터 바인딩된 컨트롤의 초기화된 상태를 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="gridView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 상태 보기 및 렌더링 콘텐츠를 저장 하기 전에 필요한 모든 사전 렌더링 단계를 수행 하는 서버 컨트롤을 알립니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnPreRender%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCancelingEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCancelingEdit(class System.Web.UI.WebControls.GridViewCancelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowCancelingEdit (e As GridViewCancelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowCancelingEdit(System::Web::UI::WebControls::GridViewCancelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowCancelingEdit : System.Web.UI.WebControls.GridViewCancelEditEventArgs -&gt; unit&#xA;override this.OnRowCancelingEdit : System.Web.UI.WebControls.GridViewCancelEditEventArgs -&gt; unit" Usage="gridView.OnRowCancelingEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 편집 모드에 있는 행의 취소 단추를 클릭할 때 발생 하지만 행 종료 되기 전에 편집 모드입니다. 따라서이 경우 행 원치 않는 상태가이 이벤트가 발생할 때마다 취소 작업을 중지 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowCancelingEdit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCommand(class System.Web.UI.WebControls.GridViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowCommand (e As GridViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowCommand(System::Web::UI::WebControls::GridViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowCommand : System.Web.UI.WebControls.GridViewCommandEventArgs -&gt; unit&#xA;override this.OnRowCommand : System.Web.UI.WebControls.GridViewCommandEventArgs -&gt; unit" Usage="gridView.OnRowCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCommand> 에서 단추를 클릭할 때 이벤트가 발생는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 따라서이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=191882)합니다.  
  
 다음 예제에 대 한 이벤트 처리 메서드를 제공 하는 방법의 <xref:System.Web.UI.WebControls.GridView.RowCommand> 이벤트입니다. 지정된 된 행에 대 한 추가 단추를 클릭할 때는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 선택 된 고객의 이름에 추가 됩니다 한 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewRowCommmand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCommmand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCreated(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowCreated (e As GridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowCreated(System::Web::UI::WebControls::GridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowCreated : System.Web.UI.WebControls.GridViewRowEventArgs -&gt; unit&#xA;override this.OnRowCreated : System.Web.UI.WebControls.GridViewRowEventArgs -&gt; unit" Usage="gridView.OnRowCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 렌더링 한 <xref:System.Web.UI.WebControls.GridViewRow> 컨트롤의 각 행에 대 한 개체를 생성 해야 합니다. <xref:System.Web.UI.WebControls.GridView.RowCreated> 이벤트가 발생할 때의 각 행는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 만들어집니다. 따라서이 이벤트가 발생할 때마다 행, 사용자 지정 콘텐츠를 추가 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리 메서드를 제공 하는 방법의 <xref:System.Web.UI.WebControls.GridView.RowCreated> 이벤트입니다. 행을 만들고 해당 항목이 있는 인덱스에 저장 됩니다는 <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> 속성은 <xref:System.Web.UI.WebControls.LinkButton> 컨트롤에 새 행에 포함 합니다. 그러면 명령 단추를 클릭할 때 행의 인덱스를 확인할 수 있습니다.  
  
 [!code-aspx-csharp[GridViewRowCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDataBound(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDataBound (e As GridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDataBound(System::Web::UI::WebControls::GridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDataBound : System.Web.UI.WebControls.GridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDataBound : System.Web.UI.WebControls.GridViewRowEventArgs -&gt; unit" Usage="gridView.OnRowDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 렌더링 될 수, 데이터 원본에서 레코드를 컨트롤의 각 행을 연결 해야 합니다. <xref:System.Web.UI.WebControls.GridView.RowDataBound> 이벤트는 데이터 행 (나타내는 <xref:System.Web.UI.WebControls.GridViewRow> 개체) 데이터에 바인딩되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 따라서이 이벤트가 발생할 때마다 해당 행에 바인딩된 데이터의 값을 수정 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowDataBound%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=191882)합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Web.UI.WebControls.GridViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As GridViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Web::UI::WebControls::GridViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleted : System.Web.UI.WebControls.GridViewDeletedEventArgs -&gt; unit&#xA;override this.OnRowDeleted : System.Web.UI.WebControls.GridViewDeletedEventArgs -&gt; unit" Usage="gridView.OnRowDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 행의 삭제 단추를 클릭 하면 후 이벤트는 발생 된 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 삭제 합니다. 따라서이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowDeleted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Web.UI.WebControls.GridViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As GridViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Web::UI::WebControls::GridViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleting : System.Web.UI.WebControls.GridViewDeleteEventArgs -&gt; unit&#xA;override this.OnRowDeleting : System.Web.UI.WebControls.GridViewDeleteEventArgs -&gt; unit" Usage="gridView.OnRowDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 이벤트는 행의 삭제 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 삭제 합니다. 따라서이 이벤트가 발생할 때마다 삭제 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowDeleting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEditing(class System.Web.UI.WebControls.GridViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowEditing (e As GridViewEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowEditing(System::Web::UI::WebControls::GridViewEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowEditing : System.Web.UI.WebControls.GridViewEditEventArgs -&gt; unit&#xA;override this.OnRowEditing : System.Web.UI.WebControls.GridViewEditEventArgs -&gt; unit" Usage="gridView.OnRowEditing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowEditing> 이벤트는 행의 편집 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 편집 모드로 전환 합니다. 따라서이 이벤트가 발생할 때마다 편집 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowEditing%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Web.UI.WebControls.GridViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (e As GridViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Web::UI::WebControls::GridViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Web.UI.WebControls.GridViewUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Web.UI.WebControls.GridViewUpdatedEventArgs -&gt; unit" Usage="gridView.OnRowUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 행의 업데이트 단추를 클릭 하면 후 이벤트는 발생 된 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트 합니다. 따라서이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowUpdated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Web.UI.WebControls.GridViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (e As GridViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Web::UI::WebControls::GridViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Web.UI.WebControls.GridViewUpdateEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Web.UI.WebControls.GridViewUpdateEventArgs -&gt; unit" Usage="gridView.OnRowUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 이벤트는 행의 업데이트 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트 합니다. 따라서이 이벤트가 발생할 때마다 업데이트 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnRowUpdating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="gridView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 행의 선택 단추를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView> select 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 상태 레이블을 현재 선택 된 행으로 업데이트 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리기를 만드는 방법의 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 이벤트입니다. 이 예제에서는 선택 된 행 보기 상태로 유지 됩니다. 정렬 또는 페이징 작업 후에 해당 행만 선택 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.GridViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanging (e As GridViewSelectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanging(System::Web::UI::WebControls::GridViewSelectEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanging : System.Web.UI.WebControls.GridViewSelectEventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanging : System.Web.UI.WebControls.GridViewSelectEventArgs -&gt; unit" Usage="gridView.OnSelectedIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 이벤트는 행의 선택 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> select 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 선택 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorted : EventArgs -&gt; unit&#xA;override this.OnSorted : EventArgs -&gt; unit" Usage="gridView.OnSorted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorted> 열을 정렬 하는 하이퍼링크를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리 합니다. 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 정렬 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnSorted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.GridViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorting (e As GridViewSortEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorting(System::Web::UI::WebControls::GridViewSortEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorting : System.Web.UI.WebControls.GridViewSortEventArgs -&gt; unit&#xA;override this.OnSorting : System.Web.UI.WebControls.GridViewSortEventArgs -&gt; unit" Usage="gridView.OnSorting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorting> 이벤트가 발생 한 열을 정렬 하는 하이퍼링크를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 정렬 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnSorting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.GridView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 있는 데이터 소스의 레코드를 표시하는 데 필요한 페이지의 수를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 페이지 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`)를 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PageCount%2A> 속성을 데이터 원본에서 레코드를 표시 하는 데 필요한 페이지의 총 수를 확인 합니다. 페이지에 표시 된 레코드 수로 데이터 원본에 있는 레코드의 총 수를 분할 하 여이 값은 계산 (에 지정 된 대로 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성) 반올림 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.PageCount%2A> 속성에 표시 되는 페이지의 총 수를 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.GridView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 표시된 페이지의 인덱스를 가져오거나 설정합니다.</summary>
        <value>현재 표시된 페이지의 0부터 시작하는 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`)를 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> 속성을 현재 표시 된 페이지의 인덱스를 확인 합니다. 또한 프로그래밍 방식으로 표시 된 페이지를 변경 하려면이 속성을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> 속성에 현재 표시 된 페이지의 인덱스를 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 또한이 예제에서는 방법을 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> 페이저 행에서 값을 선택한 후 표시 되는 페이지를 지정 하려면 속성을 사용할 수 있습니다.  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> 속성이 0보다 작은 값으로 설정된 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이저 단추 중 하나를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 페이징 작업을 처리한 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 페이저 단추 중 하나를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 페이징 작업을 처리 합니다. 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 페이징 작업과 같은 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 사용자가 선택한 페이지의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 페이저 행에서 사용자가 선택한 페이지 번호를 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanged/CS/gridviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[GridViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanged/VB/gridviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As GridViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.GridViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.GridViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이저 단추 중 하나를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 페이징 작업을 처리하기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 페이저 단추 중 하나를 클릭 하기 전에 이벤트가 발생 된 <xref:System.Web.UI.WebControls.GridView> 컨트롤 페이징 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> 속성입니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewPageEventArgs> 개체 하면 사용자가 선택한 페이지의 인덱스를 확인 하 고 페이징 작업을 취소 해야 함을 나타낼 수 있는 이벤트 처리 메서드에 전달 됩니다. 페이징 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewPageEventArgs> 개체 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 사용자가을 다른 페이지로 이동 하는 경우 페이징 작업을 취소 하는 이벤트 때 페이지는 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 편집 모드에 있습니다.  
  
 [!code-aspx-csharp[GridViewPageIndexChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanging/CS/gridviewpageindexchangingcs.aspx#1)]
 [!code-aspx-vb[GridViewPageIndexChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanging/VB/gridviewpageindexchangingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.GridView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.PagerSettings" /> 컨트롤의 페이저 단추 속성을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.PagerSettings" /> 컨트롤의 페이저 단추 속성을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> 속성의 호출기 행의 설정을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`) 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 하 고 있습니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.PagerSettings> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.PagerSettings> 개체 (예를 들어 `PagerSettings-Mode`).  
  
-   중첩 된 `<PagerSettings>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.Mode`). 일반 설정에는 일반적으로 호출기 행의 디스플레이 모드 및 사용자 지정 텍스트 또는 이미지 탐색 컨트롤에 대 한 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 설정 하는 <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> 속성 선언적으로 합니다. 파랑과 연한 파랑으로 각각의 글꼴과 호출기 행에 대 한 배경색을 설정 합니다.  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤의 페이저 행 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 페이저 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> 속성의 호출기 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 호출기 행 페이징 기능을 사용할 때 표시 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`) 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 하 고 있습니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `PagerStyle-ForeColor`).  
  
-   중첩 된 `<PagerStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 설정 하는 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> 속성 선언적으로 합니다. 파랑과 연한 파랑으로 각각의 글꼴과 호출기 행에 대 한 배경색을 설정 합니다.  
  
 [!code-aspx-csharp[GridViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[GridViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.GridView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 페이저 행에 대한 사용자 지정 콘텐츠를 가져오거나 설정합니다.</summary>
        <value>페이저 행에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출기 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.GridView> 페이징 기능을 활성화 하는 시기를 제어 (때는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성이 true로). 호출기 행 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 합니다. 기본 제공 호출기 행 사용자 인터페이스 (UI)를 사용 하는 대신 사용 하 여 UI를 직접 정의할 수는 <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A> 속성입니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A> 속성이 설정 되어 있으면 기본 제공 호출기 행 UI를 재정의 합니다.  
  
 호출기 행에 대 한 사용자 지정 서식 파일을 지정 하려면 먼저 `<PagerTemplate>` 여는 태그와 닫는 태그 사이 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 그런 다음 열기 및 닫기 사이의 서식 파일의 내용을 나열 수 `<PagerTemplate>` 태그입니다. 호출기 행의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> 속성입니다.  
  
 일반적으로 단추 컨트롤 페이징 작업을 수행 하는 페이저 서식 파일에 추가 됩니다. <xref:System.Web.UI.WebControls.GridView> 때 단추 컨트롤을 페이징 작업을 수행 하는 컨트롤의 `CommandName` "페이지"로 설정 하는 속성을 클릭 합니다. 단추의 `CommandArgument` 속성 페이징 수행할 작업 유형을 결정 합니다. 지 원하는 명령 인수 값을 나열 하는 다음 표에 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
|`CommandArgument` 값|설명|  
|-----------------------------|-----------------|  
|"다음"|다음 페이지로 이동합니다.|  
|"이전"|이전 페이지로 이동합니다.|  
|"First"|첫 번째 페이지로 이동합니다.|  
|"마지막"|페이지를 마지막으로 이동합니다.|  
|정수 값|지정된 된 페이지 번호를 탐색합니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용자가 탐색할 수 있게 하는 사용자 지정 페이저 템플릿을 만드는 방법에는 <xref:System.Web.UI.WebControls.GridView> 를 사용 하 여 제어는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[GridViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.Web.UI.WebControls.GridView.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 페이지에 표시할 레코드의 수를 가져오거나 설정합니다.</summary>
        <value>단일 페이지에 표시할 레코드의 수입니다. 기본값은 10입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`)를 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 속성을 한 페이지에 표시할 레코드 수를 지정 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> 15 개 레코드에서 한 번에 표시할 속성을는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewPageSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageSize/CS/gridviewpagesizecs.aspx#1)]
 [!code-aspx-vb[GridViewPageSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageSize/VB/gridviewpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.PageSize" /> 속성이 1보다 작은 값으로 설정된 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="gridView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">데이터 소스가 들어 있는 <see cref="T:System.Collections.IEnumerable" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 지정된 데이터 소스를 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.PerformDataBinding%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 지정된 된 데이터 소스 컨트롤에 바인딩할 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>때문에 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 메서드는 봉인 되어, 데이터를 바인딩할 때 추가 작업을 수행 해야 할 경우이 메서드를 재정의 해야 합니다.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="gridView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤 계층 구조를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여에 대 한 컨트롤 계층 구조를 설정할 수는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="gridView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트 처리기에 전달할 인수입니다.</param>
        <summary>
          <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> 메서드의 콜백 처리기에 대한 인수를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RaiseCallbackEvent%2A> 에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 콜백 처리기에 대 한 인수를 만드는 데는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="gridView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">발생한 이벤트에 대한 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />를 만드는 데 사용할 이벤트 인수입니다.</param>
        <summary>서버에 다시 게시될 때 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 대한 적절한 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 호출은 <xref:System.Web.UI.Page.RaisePostBackEvent%2A> 포스트백 이벤트가 발생 하는 방법에 대 한 적절 한 이벤트를 발생 한 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다. 로드 및 변경 내용 알림 작업이 완료 된 후 있지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다. 만들려면이 메서드는 구현 된 <xref:System.Web.UI.WebControls.CommandEventArgs> 발생 하는 이벤트에 대 한 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="gridView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트의 브라우저에서 서버 컨트롤 내용을 렌더링하는 데 사용되는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체를 사용하여 웹 서버 컨트롤 내용을 클라이언트 브라우저에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Render%2A> 메서드를 사용 하 여 지정 된 클라이언트의 브라우저에 서버 컨트롤 콘텐츠를 렌더링 하는 <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RowCancelingEdit">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowCancelingEdit As GridViewCancelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewCancelEditEventHandler ^ RowCancelingEdit;" />
      <MemberSignature Language="F#" Value="member this.RowCancelingEdit : System.Web.UI.WebControls.GridViewCancelEditEventHandler " Usage="member this.RowCancelingEdit : System.Web.UI.WebControls.GridViewCancelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCancelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 모드에 있는 행의 취소 단추를 클릭하면 행의 편집 모드가 끝나기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 편집 모드에 있는 행의 취소 단추를 클릭할 때 발생 하지만 행 종료 되기 전에 편집 모드입니다. 따라서이 경우 행 원치 않는 상태가이 이벤트가 발생할 때마다 취소 작업을 중지 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> 개체는 현재 행의 인덱스를 확인 하 고 취소 작업을 중지 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다. 취소 작업을 중지 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> 개체 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 의 업데이트 작업을 취소 하는 경우 취소 메시지를 표시 하는 이벤트는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewRowCancellingEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCancellingEdit/CS/gridviewrowcancellingeditcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCancellingEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCancellingEdit/VB/gridviewrowcancellingeditvb.aspx#1)]  
  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 데이터 원본을 프로그래밍 방식으로 설정 된 경우 업데이트 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowCommand As GridViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewCommandEventHandler ^ RowCommand;" />
      <MemberSignature Language="F#" Value="member this.RowCommand : System.Web.UI.WebControls.GridViewCommandEventHandler " Usage="member this.RowCommand : System.Web.UI.WebControls.GridViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowCommand> 에서 단추를 클릭할 때 이벤트가 발생는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 따라서이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 내에서 단추는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 컨트롤의 기본 기능 중 일부를 호출할 수도 있습니다. 이러한 작업 중 하나를 수행 하려면 설정는 `CommandName` 다음 표에 있는 값 중 하나에 있는 단추의 속성입니다.  
  
|`CommandName` 값|설명|  
|-------------------------|-----------------|  
|"취소"|편집 작업을 취소 하 고 반환 된 <xref:System.Web.UI.WebControls.GridView> 읽기 전용 모드를 제어 합니다. <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 이벤트를 발생시킵니다.|  
|"Delete"|현재 레코드를 삭제합니다. 발생 된 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 및 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 이벤트입니다.|  
|"Edit"|현재 레코드를 편집 모드로 전환 합니다. <xref:System.Web.UI.WebControls.GridView.RowEditing> 이벤트를 발생시킵니다.|  
|"Page"|페이징 작업을 수행합니다. 설정의 `CommandArgument` 단추 "First", "마지막"를, "다음", "이전" 또는 페이징 작업의 형식을 지정 하는 페이지 번호를 수행 하려면의 속성입니다. 발생 된 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 및 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 이벤트입니다.|  
|"Select"|현재 레코드를 선택 합니다. 발생 된 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 및 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 이벤트입니다.|  
|"Sort"|정렬 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 발생 된 <xref:System.Web.UI.WebControls.GridView.Sorting> 및 <xref:System.Web.UI.WebControls.GridView.Sorted> 이벤트입니다.|  
|"업데이트"|데이터 소스의 현재 레코드를 업데이트합니다. 발생 된 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 및 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 이벤트입니다.|  
  
 하지만 <xref:System.Web.UI.WebControls.GridView.RowCommand> 앞의 표에 나열 된 단추를 클릭할 때 이벤트가 발생, 작업에 대 한 테이블에 나열 된 이벤트를 사용 하는 것이 좋습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> 개체 명령 이름 및 단추 클릭의 명령 인수를 확인할 수 있습니다 하는 이벤트 처리 메서드에 전달 됩니다.  
  
> [!NOTE]
>  이벤트를 발생 하는 행의 인덱스를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 이벤트에 전달 되는 이벤트 인수의 속성입니다. <xref:System.Web.UI.WebControls.ButtonField> 클래스를 자동으로 채우려고는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 적절 한 인덱스 값을 갖는 속성입니다. 다른 명령 단추의 수동으로 설정 해야는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 명령 단추의 속성입니다. 예를 들어, 설정할 수는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 를 `<%# Container.DataItemIndex %>` 때는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 없는 페이징을 사용 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=191882)합니다.  
  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.RowCommand> 에서 고객의 이름을 추가 하려면 이벤트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 <xref:System.Web.UI.WebControls.ListBox> 행의 추가 단추를 클릭할 때 제어 합니다.  
  
 [!code-aspx-csharp[GridViewRowCommmand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCommmand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowCommand> 행의 단추를 클릭할 때 제품의 가격을 업데이트 하는 이벤트입니다. 이 예제에 대해 활성화 페이징 기능에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤과 설정은 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성의는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 적절 한 행 인덱스입니다.  
  
 [!code-aspx-csharp[GridViewRowCommmand#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommand2cs.aspx#2)]
 [!code-aspx-vb[GridViewRowCommmand#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommand2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowCreated As GridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewRowEventHandler ^ RowCreated;" />
      <MemberSignature Language="F#" Value="member this.RowCreated : System.Web.UI.WebControls.GridViewRowEventHandler " Usage="member this.RowCreated : System.Web.UI.WebControls.GridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 행을 만들면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 렌더링 한 <xref:System.Web.UI.WebControls.GridViewRow> 컨트롤의 각 행에 대 한 개체를 생성 해야 합니다. <xref:System.Web.UI.WebControls.GridView.RowCreated> 이벤트가 발생할 때의 각 행는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 만들어집니다. 따라서이 이벤트가 발생할 때마다 행, 사용자 지정 콘텐츠를 추가 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> 개체 만들고 행의 속성에 액세스할 수 있도록 하는 이벤트 처리 메서드에 전달 됩니다. 행에서 특정 셀에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TableRow.Cells%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewRowEventArgs> 개체입니다. 사용 하 여 만들고 있는 행 형식 (머리글 행, 데이터 행 및 등)은 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.RowCreated> 에서 만들어지는 행의 인덱스를 저장 하는 이벤트는 <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> 속성의는 <xref:System.Web.UI.WebControls.LinkButton> 행에 포함 된 컨트롤입니다. 이렇게 하면 포함 된 행의 인덱스를 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.LinkButton> 사용자는 단추를 클릭 하는 시기를 제어 합니다.  
  
 [!code-aspx-csharp[GridViewRowCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDataBound As GridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewRowEventHandler ^ RowDataBound;" />
      <MemberSignature Language="F#" Value="member this.RowDataBound : System.Web.UI.WebControls.GridViewRowEventHandler " Usage="member this.RowDataBound : System.Web.UI.WebControls.GridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 데이터 행을 데이터에 바인딩하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 렌더링 될 수, 데이터 원본에서 레코드를 컨트롤의 각 행을 연결 해야 합니다. <xref:System.Web.UI.WebControls.GridView.RowDataBound> 이벤트는 데이터 행 (나타내는 <xref:System.Web.UI.WebControls.GridViewRow> 개체) 데이터에 바인딩되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 따라서이 이벤트가 발생할 때마다 해당 행에 바인딩된 데이터의 값을 수정 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> 개체에 바인딩되는 행의 속성에 액세스할 수 있는 이벤트 처리 메서드에 전달 됩니다. 행에서 특정 셀에 액세스 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.TableRow.Cells%2A> 속성은 <xref:System.Web.UI.WebControls.GridViewRow> 에 포함 된 개체는 <xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> 속성의는 <xref:System.Web.UI.WebControls.GridViewRowEventArgs> 개체입니다. 사용 하 여 바인딩된 되 고 있는 행 형식 (머리글 행, 데이터 행 및 등)을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkId=191882)합니다.  
  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.RowDataBound> 에 표시 되기 전에 데이터 원본에 있는 필드의 값을 수정 하는 이벤트는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewRowDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDataBound/CS/gridviewrowdataboundcs.aspx#1)]
 [!code-aspx-vb[GridViewRowDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDataBound/VB/gridviewrowdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As GridViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewDeletedEventHandler ^ RowDeleted;" />
      <MemberSignature Language="F#" Value="member this.RowDeleted : System.Web.UI.WebControls.GridViewDeletedEventHandler " Usage="member this.RowDeleted : System.Web.UI.WebControls.GridViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 삭제 단추를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 행을 삭제한 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 행의 삭제 단추를 클릭 하면 후 이벤트는 발생 된 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 삭제 합니다. 따라서이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> 개체 발생할 수 있는 모든 예외와 영향을 받는 행 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 삭제 작업의 결과 확인 하는 이벤트입니다. 작업에 성공 했는지 여부를 나타내는 사용자에 게 메시지가 표시 됩니다.  
  
 [!code-aspx-csharp[GridViewRowDeleted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleted/CS/gridviewrowdeletedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowDeleted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleted/VB/gridviewrowdeletedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As GridViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewDeleteEventHandler ^ RowDeleting;" />
      <MemberSignature Language="F#" Value="member this.RowDeleting : System.Web.UI.WebControls.GridViewDeleteEventHandler " Usage="member this.RowDeleting : System.Web.UI.WebControls.GridViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 삭제 단추를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 행을 삭제하기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 이벤트는 행의 삭제 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 삭제 합니다. 따라서이 이벤트가 발생할 때마다 삭제 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 개체는 현재 행의 인덱스를 확인 하 고 삭제 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다. 삭제 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 개체 `true`합니다. 조작할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A> 및 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> 컬렉션, 필요한 경우 전에 값이 데이터 원본에 전달 됩니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 삭제 작업을 취소 하는 이벤트입니다. 페이지에는 <xref:System.Web.UI.WebControls.GridView> 고객의에서 이름과 주소 AdventureWorksLT 데이터베이스의 목록을 표시 하는 컨트롤입니다. 사용자가 클릭할 때는 **삭제** 행에 대 한 처리기에 대 한 링크는 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 이벤트는 사용자가을 삭제 하려고 시도 하는 행에 표시 되는 사용자의 성을 여부를 확인 합니다. 마지막 이름이 "비버" 인 경우 삭제 작업이 취소 되 고 오류 메시지가 표시 됩니다. 다른 이름에 대 한 삭제 작업이 진행 되 고 행이 삭제 됩니다.  
  
 이벤트 처리기에서 사용는 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 개체는 사용자가을 삭제 하려고 시도 하는 행을 찾습니다. 콘텐츠를 검사 하는 예제는 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 컬렉션입니다. 비교할 키 값이 값을 원하는 경우을 검토할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 컬렉션 대신 합니다.  
  
 이 예제를 간단 하 게 유지 하기 위해 고객 테이블 대신 CustomerAddress 테이블에서 행 삭제 됩니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤 3 개의 테이블을 조인 결과 보여 줍니다: 고객, 주소 및 고객 주소입니다. 때 해당 행이 삭제 되는 CustomerAddress <xref:System.Web.UI.WebControls.GridView> 행이 사라집니다. 참조 무결성 제약 조건을 실제로 더 복잡 한 Customer 테이블에서 행을 삭제 하는 예제 코드를 확인 합니다.  
  
 AdventureWorksLT 데이터베이스를 설정 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 된 AdventureWorksLT 샘플 데이터베이스 설정 ASP.NET 개발을 위한](http://msdn.microsoft.com/library/2baad633-9d63-49cc-a6b2-917cafd35356)합니다.  
  
 [!code-aspx-csharp[GridViewRowDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleting/CS/gridviewrowdeleting.aspx#1)]
 [!code-aspx-vb[GridViewRowDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleting/VB/gridviewrowdeleting.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowEditing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewEditEventHandler RowEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowEditing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowEditing As GridViewEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewEditEventHandler ^ RowEditing;" />
      <MemberSignature Language="F#" Value="member this.RowEditing : System.Web.UI.WebControls.GridViewEditEventHandler " Usage="member this.RowEditing : System.Web.UI.WebControls.GridViewEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 편집 단추를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 편집 모드로 전환되기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowEditing> 이벤트는 행의 편집 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 편집 모드로 전환 합니다. 따라서이 이벤트가 발생할 때마다 편집 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewEditEventArgs> 개체는 현재 행의 인덱스를 확인 하 고 편집 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다. 편집 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewEditEventArgs> 개체 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowEditing> 데이터 원본을 프로그래밍 방식으로 설정 된 경우 행을 편집 모드로 전환 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowEditing> 미국에 있는 회사에 대 한 레코드를 편집 하는 사용자가 편집 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewRowEditing#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/gridviewroweditingcs.aspx#1)]
 [!code-aspx-vb[GridViewRowEditing#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/gridviewroweditingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowHeaderColumn">
      <MemberSignature Language="C#" Value="public virtual string RowHeaderColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowHeaderColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RowHeaderColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RowHeaderColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeaderColumn : string with get, set" Usage="System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataColumnSelectionConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 열 머리글로 사용할 열의 이름을 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 장치 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value>열 머리글로 사용할 열의 이름입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Html에서 테이블의 머리글 행 또는 열과 함께 연결할 수 있습니다. 방향을 설정 하 여 지정 된 `scope` 특성에는 `<th>` 요소. <xref:System.Web.UI.WebControls.GridView> 컨트롤을 설정 하 여 표시 될 수 있는 기본 제공 머리글 행에는 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> 속성을 `true`합니다. 머리글 열을 선택적으로 지정할 수 있습니다 (일반적으로 첫 번째 또는 마지막 열에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤)이이 속성을 설정 합니다. 지정 된 필드 이름에 해당 하는 열의 모든 셀으로 렌더링 됩니다이 속성이 설정 된 경우 `<th scope="row">` 요소입니다.  
  
> [!NOTE]
>  지정된 된 열의 헤더를 처리 되는 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>, <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>, 및 <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> 속성은 header 열에 적용 되지 않습니다.  
  
 기본 렌더링은 `<th>` 굵게 및 가운데 맞춤으로 텍스트를 가로로 렌더링 요소가 유지 됩니다. 개발자의 동작을 재정의할 수는 `<th>` 는 연계를 사용 하 여 스타일 시트입니다.  
  
> [!NOTE]
>  이 속성은 바인딩된 필드에만 작동합니다. 서식 파일 필드와 함께 작동 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> 속성에서 머리글 열을 표시 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewRowHeaderColumn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewrowheadercolumn/CS/GridViewRowHeaderColumncs.aspx#1)]
 [!code-aspx-vb[GridViewRowHeaderColumn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewrowheadercolumn/VB/GridViewRowHeaderColumnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Rows As GridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRowCollection ^ Rows { System::Web::UI::WebControls::GridViewRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Web.UI.WebControls.GridViewRowCollection" Usage="System.Web.UI.WebControls.GridView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 컨트롤의 데이터 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridViewRowCollection" /> 컨트롤의 모든 데이터 행이 들어 있는 <see cref="T:System.Web.UI.WebControls.GridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 속성 (컬렉션)의 데이터 행을 저장을 사용 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. <xref:System.Web.UI.WebControls.GridView> 제어를 자동으로 채우려고는 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 를 만들어 컬렉션은 <xref:System.Web.UI.WebControls.GridViewRow> 개체 데이터 소스에 있는 각 레코드에 대 한 한 다음 컬렉션에 각 개체를 추가 합니다. 이 속성은 컨트롤의 특정 행에 액세스 하거나 행의 전체 컬렉션을 반복에 일반적으로 사용 됩니다.  
  
> [!NOTE]
>  행만 자신의 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> 속성이로 설정 `DataControlRowType.DataRow` 에 저장 되는 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 컬렉션입니다. <xref:System.Web.UI.WebControls.GridViewRow> 머리글, 바닥글 및 호출기 행을 나타내는 개체 컬렉션에 포함 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 컬렉션에서 편집 하 고 행에 액세스 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 행이 업데이트 한 후 업데이트가 성공 했는지를 나타내는 메시지가 표시 됩니다.  
  
 [!code-aspx-csharp[GridViewRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-aspx-vb[GridViewRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowCollection" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 데이터 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 속성에 데이터 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 도 속성이 설정 되어, 교대로 데이터 행을 표시할는 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 설정 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `RowStyle-ForeColor`).  
  
-   중첩 된 `<RowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `RowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 선언적으로 항목 행에 대 한 스타일을 정의 하는 속성을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-aspx-vb[GridViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As GridViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Web.UI.WebControls.GridViewUpdatedEventHandler " Usage="member this.RowUpdated : System.Web.UI.WebControls.GridViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 업데이트 단추를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 행을 업데이트한 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 행의 업데이트 단추를 클릭 하면 후 이벤트는 발생 된 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트 합니다. 따라서이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 개체 발생할 수 있는 모든 예외와 영향을 받는 행 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 업데이트 작업의 결과 확인 하는 이벤트입니다. 작업에 성공 했는지 여부를 나타내는 사용자에 게 메시지가 표시 됩니다.  
  
 [!code-aspx-csharp[GridViewRowUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowUpdated/CS/gridviewrowupdatedcs.aspx#1)]
 [!code-aspx-vb[GridViewRowUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowUpdated/VB/gridviewrowupdatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As GridViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewUpdateEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Web.UI.WebControls.GridViewUpdateEventHandler " Usage="member this.RowUpdating : System.Web.UI.WebControls.GridViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 업데이트 단추를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 행을 업데이트하기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 이벤트는 행의 업데이트 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 행을 업데이트 합니다. 따라서이 이벤트가 발생할 때마다 업데이트 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 개체는 현재 행의 인덱스를 확인 하 고 업데이트 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다. 업데이트 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> 개체 `true`합니다. 조작할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>, 및 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> 컬렉션, 필요한 경우 전에 값이 데이터 원본에 전달 됩니다. 이러한 컬렉션을 사용 하는 일반적인 방법은 데이터 원본에 저장 되기 전에 사용자가 제공 하는 값을 HTML 인코딩하려면입니다. 이렇게 하면 스크립트 삽입 공격을 방지 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> 및 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> 컬렉션은 자동으로 채워집니다 경우에만 <xref:System.Web.UI.WebControls.GridView> 제어를 사용 하 여 데이터에 바인딩되는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 데이터 원본을 프로그래밍 방식으로 설정 된 경우 데이터 원본 개체의 값을 업데이트 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewRowEditing#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-aspx-vb[GridViewRowEditing#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="gridView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤의 속성 상태를 저장합니다.</summary>
        <returns>서버 컨트롤의 현재 뷰 상태를 반환합니다. 컨트롤과 연결된 뷰 상태가 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 속성의 상태를 저장 하려면이 메서드는는 <xref:System.Web.UI.WebControls.GridView> 경우에 유지 해야 하는 컨트롤의 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> 속성이 `false`합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="gridView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <returns>해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.GridView.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataKey" /> 컨트롤에서 선택한 행의 데이터 키 값이 들어 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataKey" /> 컨트롤에서 선택한 행의 <see cref="T:System.Web.UI.WebControls.GridView" />입니다. 기본값은 <see langword="null" />로, 현재 선택된 행이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성이 설정 되어는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey> 값 또는 지정 된 필드 또는 필드의 값을 사용 하 여 컨트롤의 각 행에 대 한 개체입니다. <xref:System.Web.UI.WebControls.DataKey> 개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 컬렉션입니다. 일반적으로 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 속성 검색을 사용 하는 <xref:System.Web.UI.WebControls.DataKey> 의 특정 데이터 행에 대 한 개체는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 방금 하는 경우를 검색 해야 하는 반면는 <xref:System.Web.UI.WebControls.DataKey> 개체의 현재 선택 된 행을 사용 하면는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 가기로 속성입니다.  
  
> [!NOTE]
>  즉, 검색 하는 것 같습니다는 <xref:System.Web.UI.WebControls.DataKey> 로 지정 된 인덱스에 개체는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 에서 속성의 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 컬렉션입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 속성을 현재 선택 된 행에 대 한 데이터 키 값을 직접 검색 합니다.  
  
 만들려는 경우 한 <xref:System.Web.UI.WebControls.ControlParameter> 개체 및 인덱스에서 사용 하 여 첫 번째 필드 이외의 키 필드에 액세스 하려면 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 속성에는 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 속성의는 <xref:System.Web.UI.WebControls.ControlParameter> 개체입니다. 예는 다음과 같습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 속성에서 선택한 행의 데이터 키 값을 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelectedDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKey/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKey/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 다음 예제에서는 두 번째 키 필드는 마스터/세부 시나리오에서 매개 변수로 사용 하는 방법을 보여 줍니다. A <xref:System.Web.UI.WebControls.GridView> 컨트롤은 Northwind 데이터베이스의 Order Details 테이블에서 레코드를 표시 하는 데 사용 됩니다. 레코드에서 선택 되 면는 <xref:System.Web.UI.WebControls.GridView> 컨트롤, Products 테이블에서 제품의 세부 정보에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. ProductID가 두 번째 키 이름을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 두 번째 키 GridView1.SelectedDataKey[1의 값에 액세스할]로 사용 되는 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> 에 대 한는 <xref:System.Web.UI.WebControls.ControlParameter> 의 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 의 제어는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelectedDataKeyIndex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedDataKeyIndex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> 속성에 데이터 키가 지정되어 있지 않은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.GridView.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 선택한 행의 인덱스를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 선택한 행의 0부터 시작하는 인덱스입니다. 기본값은 -1로, 현재 선택된 행이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 속성에서 현재 선택 된 행의 인덱스를 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 또한 프로그래밍 방식으로 컨트롤의 행을 선택 하려면이 속성을 사용할 수 있습니다. 행의 선택을 지우려면이 속성을-1로 설정 합니다. 사용 하 여 현재 선택 된 행의 모양을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 속성입니다. 현재 선택 된 행에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 속성에 두 번째 행을 선택 하는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 처음으로 표시를 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> 속성이 -1보다 작은 값으로 설정된 경우입니다.</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 선택 단추를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 선택 작업을 처리한 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 행의 선택 단추를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView> select 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 상태 레이블을 현재 선택 된 행으로 업데이트 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 의 선택된 된 행에 고객의 이름을 표시 하는 이벤트는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanging As GridViewSelectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewSelectEventHandler ^ SelectedIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanging : System.Web.UI.WebControls.GridViewSelectEventHandler " Usage="member this.SelectedIndexChanging : System.Web.UI.WebControls.GridViewSelectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 선택 단추를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 선택 작업을 처리하기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 이벤트는 행의 선택 단추를 클릭 하기 전에 <xref:System.Web.UI.WebControls.GridView> select 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 선택 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 속성입니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> 개체 사용 하면 사용자가 선택한 행의 인덱스를 확인 하 고 선택 작업을 취소 해야 함을 나타낼 수 있는 이벤트 처리 메서드에 전달 됩니다. 선택 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> 개체 `true`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> select 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedPersistedDataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedPersistedDataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ SelectedPersistedDataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPersistedDataKey : System.Web.UI.WebControls.DataKey with get, set" Usage="System.Web.UI.WebControls.GridView.SelectedPersistedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 유지되는 선택한 항목의 데이터 키 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 유지되는 선택한 항목의 데이터 키 값입니다. 기본값은 <see langword="null" />로, 현재 선택된 항목이 없음을 나타냅니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow SelectedRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ SelectedRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRow : System.Web.UI.WebControls.GridViewRow" Usage="System.Web.UI.WebControls.GridView.SelectedRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 선택한 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>컨트롤에서 선택한 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridViewRow" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행을 선택 하는 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> 검색할 속성의 <xref:System.Web.UI.WebControls.GridViewRow> 해당 행을 나타내는 개체입니다.  
  
> [!NOTE]
>  즉, 검색 하는 것 같습니다는 <xref:System.Web.UI.WebControls.GridViewRow> 로 지정 된 인덱스에 개체는 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> 에서 속성의 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 컬렉션입니다.  
  
 그런 다음이 개체 선택된 된 행의 속성에 액세스 데 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> 속성의 속성에 액세스 하는 <xref:System.Web.UI.WebControls.GridViewRow> 에서 선택한 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SelectedRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 선택한 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 선택한 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 속성에서 선택한 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 다음 방법 중 하나를 선언적으로 사용 하는 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치는 <xref:System.Web.UI.WebControls.GridView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 의 속성인는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `SelectedRowStyle-ForeColor`).  
  
-   중첩 된 `<SelectedRowStyle>` 여는 태그와 닫는 태그 사이 요소는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 양식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `SelectedRowStyle.ForeColor`). 일반 설정 사용자 지정 배경색, 전경색 및 글꼴 속성에 일반적으로 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> 속성에서 선택한 행에 대 한 사용자 지정 스타일을 정의 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-aspx-vb[GridViewSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.GridView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 선택한 행의 데이터 키 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 선택한 행의 데이터 키 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 속성은 데이터 원본의 기본 키를 나타내는 필드 이름의 쉼표로 구분 된 목록이 있는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.DataKey> 값 또는 값을 사용 하 여 컨트롤의 각 행에 대 한 개체는 지정 된 필드 또는 필드입니다. <xref:System.Web.UI.WebControls.DataKey> 개체를 컨트롤의 추가 됩니다 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 컬렉션입니다. 일반적으로 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 속성 검색을 사용 하는 <xref:System.Web.UI.WebControls.DataKey> 의 특정 데이터 행에 대 한 개체는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 방금 하는 경우를 검색 해야 하는 반면는 <xref:System.Web.UI.WebControls.DataKey> 개체의 현재 선택 된 행을 사용 하면는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 가기로 속성입니다. 보다 손쉽게 확인할 수 있습니다 직접 선택한 행의 첫 번째 키 필드의 데이터 키 값 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 속성입니다.  
  
 만들려는 경우 한 <xref:System.Web.UI.WebControls.ControlParameter> 개체를 첫 번째 필드를 사용 하 여 이외의 키 필드에 액세스 하는 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 속성입니다. 예제를 보려면 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>를 참조하십시오.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 속성에서 선택한 행의 데이터 키 값을 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedValue/CS/gridviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[GridViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedValue/VB/gridviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
      </Docs>
    </Member>
    <Member MemberName="SelectRow">
      <MemberSignature Language="C#" Value="public void SelectRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SelectRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.SelectRow : int -&gt; unit" Usage="gridView.SelectRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">편집할 행의 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 편집할 행을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEditRow">
      <MemberSignature Language="C#" Value="public void SetEditRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEditRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEditRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.SetEditRow : int -&gt; unit" Usage="gridView.SetEditRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">편집할 행의 인덱스입니다.</param>
        <summary>지정된 행 인덱스를 사용하여 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에서 행을 편집 모드로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.UI.WebControls.GridView.RowEditing> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="gridView.SetPageIndex rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">페이지에서 편집할 행의 인덱스입니다.</param>
        <summary>행 인덱스를 사용하여 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 페이지 인덱스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.GridView.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 바닥글 행을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>바닥글 행을 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> 속성을 통해 지정 여부는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 바닥글 행을 표시 합니다. 바닥글 행의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> 속성의 바닥글 행을 표시 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.GridView.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 머리글 행을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>머리글 행을 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> 속성을 통해 지정 여부는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 머리글 행을 표시 합니다. 머리글 행의 모양을 제어는 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> 속성에 헤더 행을 표시 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-aspx-vb[GridViewShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowFooter" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeaderWhenEmpty">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeaderWhenEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeaderWhenEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeaderWhenEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeaderWhenEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeaderWhenEmpty : bool with get, set" Usage="System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열에 데이터가 없을 때 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 열 머리글이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>머리글이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::String ^ sortExpression, System::Web::UI::WebControls::SortDirection sortDirection);" />
      <MemberSignature Language="F#" Value="abstract member Sort : string * System.Web.UI.WebControls.SortDirection -&gt; unit&#xA;override this.Sort : string * System.Web.UI.WebControls.SortDirection -&gt; unit" Usage="gridView.Sort (sortExpression, sortDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤을 정렬하는 기준으로 사용할 정렬 식입니다.</param>
        <param name="sortDirection">
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 값 중 하나입니다.</param>
        <summary>지정된 정렬 식과 방향을 기준으로 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤을 정렬합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.Sort%2A> 프로그래밍 방식으로 정렬 하는 메서드는 <xref:System.Web.UI.WebControls.GridView> 지정 된 정렬 식 및 방향을 사용 하 여 제어 합니다. 정렬 식은 열 또는 열을 정렬할을 지정 합니다. 여러 열을 정렬 하려면 필드 이름의 쉼표로 구분 된 목록을 포함 하는 정렬 식을 만듭니다. 정렬 방향을 오름차순 또는 내림차순 정렬 수행 되는지 여부를 나타냅니다. 정렬 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 컨트롤 외부와 같은 페이지에서 다른 컨트롤에서입니다. 이 메서드는 또한 일반적으로 사용에 대 한 기본 정렬 순서를 프로그래밍 방식으로 설정 하는 <xref:System.Web.UI.WebControls.GridView> 를 처음 렌더링할 때 제어 합니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.GridView.Sorted> 및 <xref:System.Web.UI.WebControls.GridView.Sorting> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.Sort%2A> 프로그래밍 방식으로 정렬 하는 메서드는 <xref:System.Web.UI.WebControls.GridView> 여러 열으로 제어 합니다.  
  
 [!code-aspx-csharp[GridViewSort#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSort/CS/GridViewSortcs.aspx#1)]
 [!code-aspx-vb[GridViewSort#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSort/VB/GridViewSortvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 데이터 소스에 바인딩되어 있지만 데이터 소스와 연결된 <see cref="T:System.Web.UI.DataSourceView" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::SortDirection SortDirection { System::Web::UI::WebControls::SortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirection : System.Web.UI.WebControls.SortDirection" Usage="System.Web.UI.WebControls.GridView.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬하고 있는 열의 정렬 방향을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 값 중 하나입니다. 기본값은 <see langword="SortDirection.Ascending" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> 속성을 오름차순 또는 내림차순 정렬 하 고 열이 정렬 되어 있는지 여부를 확인 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> 컨트롤에 기본 제공 정렬 기능을 자동으로이 속성을 설정 합니다. 정렬 방향을 또는 경우에 사용자 지정 정렬 기능을 추가 하는 프로그래밍 방식으로 결정 해야 하는 경우에이 속성은 일반적으로 사용 됩니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> 속성의 정렬 방향을 프로그래밍 방식으로 확인 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewFooterRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-aspx-vb[GridViewFooterRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberSignature Language="F#" Value="member this.Sorted : EventHandler " Usage="member this.Sorted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열을 정렬하는 하이퍼링크를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 정렬 작업을 처리한 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorted> 열을 정렬 하는 하이퍼링크를 클릭 하면 후 이벤트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리 합니다. 이렇게 하면이 이벤트가 발생할 때마다 사용자 지정 정렬 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.Sorted> 정렬 될 열의 이름을 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedAscendingCellStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedAscendingCellStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedAscendingCellStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.SortedAscendingCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열이 오름차순으로 정렬될 경우 <see cref="T:System.Web.UI.WebControls.GridView" /> 열의 CSS 스타일을 가져오거나 설정합니다.</summary>
        <value>열이 오름차순으로 정렬될 경우 스타일이 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이로 설정 된 경우 `true`, 데이터를 오름차순 정렬 될 때 열에는 셀에 스타일 적용 됩니다. 예를 들어, 오름차순 정렬 때 열을 특정 색으로 강조 표시할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedAscendingHeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedAscendingHeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedAscendingHeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열이 오름차순으로 정렬될 경우 <see cref="T:System.Web.UI.WebControls.GridView" /> 열 머리글에 적용할 CSS 스타일을 가져오거나 설정합니다.</summary>
        <value>열이 오름차순으로 정렬될 경우 스타일이 <see cref="T:System.Web.UI.WebControls.GridView" /> 머리글에 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이로 설정 된 경우 `true`, 열 머리글에 정렬 방향을 나타내는 화살표로 표시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedDescendingCellStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedDescendingCellStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedDescendingCellStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.SortedDescendingCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열이 내림차순으로 정렬될 때 <see cref="T:System.Web.UI.WebControls.GridView" /> 열의 스타일을 가져오거나 설정합니다.</summary>
        <value>열이 내림차순으로 정렬될 경우 스타일이 <see cref="T:System.Web.UI.WebControls.GridView" />에 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이로 설정 된 경우 `true`, 데이터 내림차순으로 정렬 될 열에는 셀에 스타일 적용 됩니다. 예를 들어 내림차순 정렬 때 열을 특정 색으로 강조 표시할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedDescendingHeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SortedDescendingHeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedDescendingHeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열이 내림차순으로 정렬될 경우 <see cref="T:System.Web.UI.WebControls.GridView" /> 열 머리글에 적용할 스타일을 가져오거나 설정합니다.</summary>
        <value>열이 내림차순으로 정렬될 경우 스타일이 <see cref="T:System.Web.UI.WebControls.GridView" /> 머리글에 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이로 설정 된 경우 `true`, 열 머리글에 정렬 방향을 나타내는 화살표로 표시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string" Usage="System.Web.UI.WebControls.GridView.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬하고 있는 열과 관련된 정렬 식을 가져옵니다.</summary>
        <value>정렬하고 있는 열과 관련된 정렬 식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> 속성 열 또는 정렬 하 고 관련 된 정렬 식을 결정 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> 컨트롤에 기본 제공 정렬 기능을 자동으로이 속성을 설정 합니다. 이 속성은 일반적으로 프로그래밍 방식으로 정렬 하 고 열을 결정 하는 경우에 사용 됩니다 또는 사용자 고유의 사용자 지정 정렬 기능을 추가할는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 여러 열을 정렬 하는 경우이 속성 필드를 정렬할 쉼표로 구분 된 목록이 들어 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> 속성을 정렬 하 고 열의 이름을 확인 합니다.  
  
 [!code-aspx-csharp[GridViewAllowSortingColumns#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-aspx-vb[GridViewAllowSortingColumns#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSortEventHandler Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorting As GridViewSortEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::GridViewSortEventHandler ^ Sorting;" />
      <MemberSignature Language="F#" Value="member this.Sorting : System.Web.UI.WebControls.GridViewSortEventHandler " Usage="member this.Sorting : System.Web.UI.WebControls.GridViewSortEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSortEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열을 정렬하는 하이퍼링크를 클릭하면 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 정렬 작업을 처리하기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.Sorting> 이벤트가 발생 한 열을 정렬 하는 하이퍼링크를 클릭 하면 하기 전에 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 정렬 작업을 처리 합니다. 따라서이 이벤트가 발생할 때마다 정렬 작업을 취소 하는 등의 사용자 정의 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.GridViewSortEventArgs> 개체 열에 대 한 정렬 식을 확인 하 고 선택 작업을 취소 해야 함을 나타내기 위해 사용할 수 있는 이벤트 처리 메서드에 전달 됩니다. 선택 작업을 취소 하려면는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridViewSortEventArgs> 개체 `true`합니다.  
  
 프로그래밍 방식으로 정렬 작업을 시작 하는 방법에 대 한 정보를 참조 하십시오.는 <xref:System.Web.UI.WebControls.GridView.Sort%2A> 메서드.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.Sorting> 정렬 기능을 수행 하는 이벤트 때는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 바인딩되는 <xref:System.Data.DataTable> 설정 하 여 개체는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성 프로그래밍 방식으로 합니다.  
  
 [!code-aspx-csharp[GridViewSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsorting2cs.aspx#2)]
 [!code-aspx-vb[GridViewSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsorting2vb.aspx#2)]  
  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.Sorting> 정렬 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[GridViewSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-aspx-vb[GridViewSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤을 대상으로 하는 콜백 이벤트의 결과를 반환합니다.</summary>
        <returns>콜백의 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView> 구현 제어는 <xref:System.Web.UI.ICallbackEventHandler> 인터페이스 및 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> 비동기적으로 데이터를 검색 하 고 <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> 컨트롤에 검색된 된 데이터를 반환 하는 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트 처리기에 전달할 인수입니다.</param>
        <summary>
          <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> 메서드의 콜백 처리기에 대한 인수를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 콜백 처리기에 대 한 인수를 만드는 데는 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ClientIDRowSuffixDataKeys As DataKeyArray Implements IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용되는 데이터 값을 가져옵니다.</summary>
        <value>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 사용되는 데이터 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.IDataKeysControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">발생한 이벤트에 대한 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />를 만드는 데 사용할 이벤트 인수입니다.</param>
        <summary>서버에 다시 게시될 때 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 대한 적절한 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 호출은 <xref:System.Web.UI.Page.RaisePostBackEvent%2A> 에 대 한 적절 한 이벤트를 발생 시키는 포스트백 이벤트가 발생할 경우 메서드는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 로드 및 변경 내용 알림 작업이 완료 된 후 있지만 사전 렌더링이 발생 하기 전에 페이지 수명 주기에서이 호출이 발생 합니다. 만들려면이 메서드는 구현 된 <xref:System.Web.UI.WebControls.CommandEventArgs> 발생 하는 이벤트에 대 한 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String Implements ICallbackContainer.GetCallbackScript" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument) = System::Web::UI::WebControls::ICallbackContainer::GetCallbackScript;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">콜백 스크립트를 만들 단추 컨트롤입니다.</param>
        <param name="argument">콜백 스크립트에 전달할 인수입니다.</param>
        <summary>정렬 작업을 수행하는 단추의 콜백 스크립트를 만듭니다.</summary>
        <returns>정렬 작업을 수행하는 단추의 콜백 스크립트입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23WebControls%23ICallbackContainer%23GetCallbackScript%2A> 사용 되는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.GridView> 정렬 작업을 수행 하는 단추에 대 한 콜백 스크립트를 만들 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에 표시된 항목에 대한 기본 키 필드의 이름을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤에 표시된 항목의 기본 키 필드 이름이 들어 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 이 속성에 대 한 액세스를 제공는 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 의 속성은 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 통해 노출 되는 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스입니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에 바인딩할 데이터 소스 컨트롤에서 노출하는 테이블을 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에 바인딩할 데이터 소스 컨트롤에서 노출하는 테이블입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 데이터 소스에 여러 데이터 소스를 포함 하는 경우 특정 데이터 테이블, 컬렉션 또는 기타 데이터 컨트롤을 바인딩할를 설정 하려면이 속성을 사용 합니다. 예를 들어 데이터 소스는 <xref:System.Data.DataSet> 인스턴스 여러 테이블이 포함 된이 속성을 사용 하 여 컨트롤을 바인딩할 테이블을 지정할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 소스 개체를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 사용하는 데이터 소스 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 소스의 ID를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 데이터 항목을 검색할 데이터 소스의 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 소스 개체를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 데이터 소스 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberSignature Language="VB.NET" Value=" Property ClientIDRowSuffix As String() Implements IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하기 위해 값을 <see cref="P:System.Web.UI.Control.ClientID" /> 속성 값에 추가하는 데이터 필드의 이름을 가져오거나 설정합니다.</summary>
        <value>ASP.NET에서 <see cref="P:System.Web.UI.Control.ClientID" /> 값을 생성할 때 데이터 바인딩된 컨트롤의 각 인스턴스를 고유하게 식별하는 데 해당 값이 사용되는 데이터 필드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKeys As DataKeyArray Implements IDataBoundListControl.DataKeys" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKeyArray ^ System.Web.UI.WebControls.IDataBoundListControl.DataKeys { System::Web::UI::WebControls::DataKeyArray ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.DataKeys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> 값을 나타내는 개체 컬렉션을 가져옵니다.</summary>
        <value>데이터 바인딩된 컨트롤에 있는 각 행의 데이터 키 값이 들어 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberSignature Language="VB.NET" Value=" Property EnablePersistedSelection As Boolean Implements IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인덱스 또는 데이터 키 값을 기준으로 행이 선택되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 키 값을 기준으로 행이 선택되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SelectedDataKey As DataKey Implements IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 선택한 행의 데이터 키 값이 들어 있는 개체를 가져옵니다.</summary>
        <value>선택한 행의 데이터 키 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberSignature Language="VB.NET" Value=" Property SelectedIndex As Integer Implements IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 선택한 행의 인덱스를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 선택한 행의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundListControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IFieldControl.FieldsGenerator">
      <MemberSignature Language="C#" Value="System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator" />
      <MemberSignature Language="VB.NET" Value=" Property FieldsGenerator As IAutoFieldGenerator Implements IFieldControl.FieldsGenerator" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IAutoFieldGenerator ^ System.Web.UI.WebControls.IFieldControl.FieldsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IFieldControl.FieldsGenerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET Dynamic Data에서 사용할 데이터 바인딩된 컨트롤에 대한 열을 자동으로 생성하는 컨트롤을 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에 대한 열을 자동으로 생성하는 컨트롤입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.GridView> 인스턴스가 <xref:System.Web.UI.WebControls.IFieldControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ASP.NET Dynamic Data이이 속성을 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberSignature Language="VB.NET" Value=" Property DataKey As DataKey Implements IPersistedSelector.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IPersistedSelector.DataKey { System::Web::UI::WebControls::DataKey ^ get(); void set(System::Web::UI::WebControls::DataKey ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.GridView.System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IPersistedSelector.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IPersistedSelector.DataKey" />를 참조하세요.</summary>
        <value>데이터 바인딩된 컨트롤에서 유지되는 선택한 레코드의 데이터 키 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 방법 선택 된 행을 지정할 수 있습니다 때 유지 됩니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 페이징 모드에 있습니다. 기본적으로 행 선택은 행 인덱스를 기반으로 합니다. 같은 행 (예를 들어 셋째 행)는 각 페이지에서 선택 됩니다. 또는 선택한 행의 데이터 키에 따라 지 속성을 사용할 수 있습니다. 이 경우 3 페이지 1에 행을 선택 하는 경우 2 페이지로 이동 하면 행이 2 페이지에서 선택 됩니다. 1 페이지로 다시 이동 하면 행 3이 여전히 선택 합니다. 이 기능을 설정 하려면이 속성을 설정 `true`합니다.  
  
> [!NOTE]
>  버전 2.0, 3.0 및 3.5의 ASP.NET에서는 행 선택 된 행 인덱스에 대해서만 기반으로 합니다. 기본적으로 ASP.NET 4의 행 선택은 이전 버전과 호환성에 대 한 인덱스를 기반으로 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">콜백 스크립트를 만들 단추 컨트롤입니다.</param>
        <summary>지정된 단추 컨트롤의 포스트백 동작을 나타내는 <see cref="T:System.Web.UI.PostBackOptions" /> 개체를 만듭니다.</summary>
        <returns>지정된 단추 컨트롤의 포스트백 동작을 나타내는 <see cref="T:System.Web.UI.PostBackOptions" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buttonControl" /> 매개 변수에 <see langword="null" />이 포함되어 있는 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="buttonControl" />에서 유효성 검사를 발생시키고 유효성을 검사하는 같은 컨테이너에 다시 게시하려는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.GridView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.GridView" /> 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.GridView" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.GridView.TagKey%2A> 속성을 사용 하면에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림을 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> 속성이 `true`,이 속성은 반환 `HtmlTextWriterTag.Div`, 그렇지 않으면이 속성은 반환 `HtmlTextWriterTag.Table`합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 속성을 지정 합니다. 재정의할 수 있습니다 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 파생 된 컨트롤에 사용할 값입니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As GridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridViewRow ^ TopPagerRow { System::Web::UI::WebControls::GridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.GridViewRow" Usage="System.Web.UI.WebControls.GridView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 컨트롤의 위쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridView" /> 개체를 가져옵니다.</summary>
        <value>컨트롤의 위쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.GridViewRow" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> 속성을 `true`), 호출기 행 이라는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 호출기 행 사용자가 다른 페이지로 이동 하도록 허용 하 고 위쪽, 아래쪽 또는 위쪽와 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> 속성을 프로그래밍 방식으로 액세스는 <xref:System.Web.UI.WebControls.GridViewRow> 의 상위 호출기 행을 나타내는 개체는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> 속성은 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.GridView> 컨트롤의 위쪽 호출기 행을 만듭니다는 <xref:System.Web.UI.WebControls.GridView.RowCreated> 이벤트입니다.  
  
 이 속성은 일반적으로 프로그래밍 방식으로 조작 위쪽 페이저 행 예를 들어 사용자 지정 내용을 추가 해야 할 때 사용 됩니다. 수정 하지는 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> 속성 후 수행 해야 합니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 렌더링 되 고, 그렇지 않으면 만들어졌으면는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 변경 내용을 덮어쓰게 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> 속성 위쪽 페이저 행에 액세스 하는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> 속성 검색을 사용 하는 <xref:System.Web.UI.WebControls.DropDownList> 페이저 행에서 제어 합니다.  
  
 [!code-aspx-csharp[GridViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewTopPagerRow/CS/gridviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[GridViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewTopPagerRow/VB/gridviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="gridView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장할 수 있도록 추적합니다. 이 개체는 <see cref="P:System.Web.UI.Control.ViewState" /> 속성을 통해 액세스할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 컨트롤의 뷰 상태의 일환으로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하는 시작 위치를 표시 하도록 재정의 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.GridView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터를 업데이트하기 위해 호출할 메서드의 이름을 가져오거나 설정합니다.</summary>
        <value>메서드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 방법으로 사용할 모델 바인딩을 사용 하면이 속성을 설정 합니다.  
  
 Web Forms 모델 바인딩 사용에 자습서 시리즈를 참조 하십시오. [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRow">
      <MemberSignature Language="C#" Value="public virtual void UpdateRow (int rowIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateRow(int32 rowIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateRow (rowIndex As Integer, causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateRow(int rowIndex, bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateRow : int * bool -&gt; unit&#xA;override this.UpdateRow : int * bool -&gt; unit" Usage="gridView.UpdateRow (rowIndex, causesValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">업데이트할 행의 인덱스입니다.</param>
        <param name="causesValidation">이 메서드가 호출될 때 페이지 유효성 검사를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>행의 필드 값을 사용하여 지정된 행 인덱스에 있는 레코드를 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.GridView.UpdateRow%2A> 메서드 프로그래밍 방식으로 데이터 원본에 지정 된 인덱스에 있는 레코드를 업데이트 합니다. 외부에서 레코드를 업데이트 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.GridView> 페이지 내의 다른 컨트롤 처럼 제어 합니다.  
  
> [!NOTE]
>  현재 편집 모드에 있는 행에 대해서만이 메서드를 호출할 수 있습니다 또는 양방향 데이터 바인딩된 입력된 컨트롤을 포함 하는 행에 대 한 합니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 [데이터베이스에 바인딩](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다.  
  
 업데이트 작업 전의 페이지 유효성 검사를 수행할지 여부를 지정 하려면는 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생은 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 및 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.GridView.UpdateRow%2A> 프로그래밍 방식으로의 레코드를 업데이트 하는 메서드는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[GridViewUpdateRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdateRow/CS/GridViewUpdateRowcs.aspx#1)]
 [!code-aspx-vb[GridViewUpdateRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdateRow/VB/GridViewUpdateRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 데이터 소스에 바인딩되어 있지만 데이터 소스와 연결된 <see cref="T:System.Web.UI.DataSourceView" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      </Docs>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAccessibleHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseAccessibleHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseAccessibleHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAccessibleHeader : bool with get, set" Usage="System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 머리글을 액세스할 수 있는 형식으로 렌더링하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 장치 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 머리글을 액세스할 수 있는 형식으로 렌더링하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> 속성을 통해 지정 여부는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 액세스할 수 있는 형식에 해당 머리글 행은 렌더링 합니다. 이 속성을 사용하면 보조 기술 장치 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다. 기본적으로이 속성의 값은 `true` 컨트롤에 대 한 헤더를 사용 하 여 렌더링 되 고 `<th>` 테이블 머리글 셀 태그입니다. 또한 한 `scope="col"` 특성이 머리글이 열에 있는 모든 셀에 적용 되도록 지정 하려면 테이블 머리글에 추가 됩니다. 기본 렌더링은 `<th>` 굵게 및 가운데 맞춤으로 텍스트를 가로로 렌더링 요소가 유지 됩니다. 개발자의 스타일을 재정의할 수는 `<th>` 는 연계를 사용 하 여 스타일 시트입니다.  
  
 이 속성의 값이 `false`, 컨트롤에 대 한 헤더를 사용 하 여 렌더링 되 `<td>` 테이블 셀 태그입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> 속성을 액세스할 수 있는 헤더를 사용 하지 않도록 설정 합니다.  
  
 [!code-aspx-csharp[GridViewUseAccessibleHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUseAccessibleHeader/CS/gridviewuseaccessibleheadercs.aspx#1)]
 [!code-aspx-vb[GridViewUseAccessibleHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUseAccessibleHeader/VB/gridviewuseaccessibleheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.VirtualItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VirtualItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VirtualItemCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualItemCount : int with get, set" Usage="System.Web.UI.WebControls.GridView.VirtualItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 페이징을 사용하는 경우<see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 바인딩된 데이터 소스에 있는 가상 항목 수를 가져오거나 설정합니다.</summary>
        <value>사용자 지정 페이징을 사용 중일 때 데이터 소스에서 <see cref="T:System.Web.UI.WebControls.GridView" /> 컨트롤이 바인딩된 실제 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 사용 경우에만의 값은 <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> 속성은 `true`합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> 속성을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>