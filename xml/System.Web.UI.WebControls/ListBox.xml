<Type Name="ListBox" FullName="System.Web.UI.WebControls.ListBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a18dfe59816aa1578cf15abd49ae9cf1f392d5bc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox : System.Web.UI.WebControls.ListControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListBox extends System.Web.UI.WebControls.ListControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox&#xA;Inherits ListControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBox : System::Web::UI::WebControls::ListControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ListControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("SelectedItem")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>하나 또는 여러 항목을 선택할 수 있는 목록 상자 컨트롤을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [액세스 가능성](#accessibility)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListBox> 단일 수 있는 목록 컨트롤을 만들 컨트롤을 또는 여러 항목 선택 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.ListBox.Rows%2A> 속성을 컨트롤의 높이 지정 합니다. 여러 항목을 선택할 수 있도록, 설정 된 <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> 속성을 `ListSelectionMode.Multiple`합니다.  
  
 에 표시할 항목을 지정 하는 <xref:System.Web.UI.WebControls.ListBox> 컨트롤는 `ListItem` 여는 태그와 닫는 태그 사이 각 항목에 대 한 요소는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 를 검사 하는 컬렉션의 <xref:System.Web.UI.WebControls.ListItem> 에 포함 된 개체는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 예를 들어에서 선택한 항목을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.ListBox> 열거 하 여 컨트롤의 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 컬렉션 및 테스트는 <xref:System.Web.UI.WebControls.ListItem.Selected%2A> 각각에 대 한 값 <xref:System.Web.UI.WebControls.ListItem> 요소입니다.  
  
 <xref:System.Web.UI.WebControls.ListBox> 컨트롤은 데이터 바인딩을 지원 합니다. 데이터 소스에 컨트롤을 바인딩할 먼저 중 하 나와 같은 데이터 원본을 만들고는 <xref:System.Web.UI.DataSourceControl> 컨트롤에 표시할 항목을 포함 하는 개체입니다. 를 사용 하 여는 <xref:System.Web.UI.Control.DataBind%2A> 데이터 소스를 바인딩할 메서드는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> 및 <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> 바인딩할 데이터 소스 필드를 지정 하는 속성은 `Text` 및 `Value` 속성을 각각 각 목록 항목 컨트롤에서 합니다. <xref:System.Web.UI.WebControls.ListBox> 컨트롤 이제 데이터 원본에서 정보를 표시 됩니다.  
  
> [!CAUTION]
>  이 컨트롤 악의적인 클라이언트 스크립트가 포함 될 수 있습니다는 사용자 입력을 표시 하려면 사용할 수 있습니다. 응용 프로그램에 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 보낸 모든 정보를 확인 합니다. 컨트롤에서 입력된 텍스트를 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET은 사용자 입력에 있는 스크립트 블록 및 HTML에 있는 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 참조 [보안 표준 컨트롤](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [하는 방법: 보호에 대 한 스크립트에 의해 악용 문자열을 HTML 인코딩 적용 하 여 웹 응용 프로그램에서](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [에 사용자 입력 유효성 검사 ASP.NET 웹 페이지](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>액세스 가능성  
 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하십시오. [Visual Studio 및 ASP.NET의 내게 필요한 옵션](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤 및내게필요한옵션](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:ListBox  
    AccessKey="string"  
    AppendDataBoundItems="True|False"  
    AutoPostBack="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CssClass="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DataTextField="string"  
    DataTextFormatString="string"  
    DataValueField="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnTextChanged="TextChanged event handler"  
    OnUnload="Unload event handler"  
    Rows="integer"  
    runat="server"  
    SelectedIndex="integer"  
    SelectedValue="string"  
    SelectionMode="Single|Multiple"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
>  
            <asp:ListItem  
                Enabled="True|False"  
                Selected="True|False"  
                Text="string"  
                Value="string"  
            />  
</asp:ListBox>  
```  
  
   
  
## Examples  
 다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 [!code-aspx-csharp[Classic ListBox Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ListBox Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox Example 2/VB/sourcevb.aspx#1)]  
  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListBox> 다중 선택을 지 원하는 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic ListBox Example 2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox Example 2/CS/source3cs.aspx#3)]
 [!code-aspx-vb[Classic ListBox Example 2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox Example 2/VB/source3vb.aspx#3)]  
  
 다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListBox> 데이터 바인딩을 통해 제어 합니다.  
  
 [!code-aspx-csharp[Classic ListBox Example 2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox Example 2/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic ListBox Example 2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox Example 2/VB/source2vb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListControl" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListBox" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.ListBox> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML 콘텐츠를 클라이언트에 렌더링하는 출력 스트림입니다.</param>
        <summary>
          <see langword="name" />, <see langword="size" />, <see langword="multiple" /> 및 <see langword="onchange" />를 렌더링할 특성 목록에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ListBox.AddAttributesToRender%2A> 메서드는 사용자 지정 서버 컨트롤에 있도록는 <xref:System.Web.UI.WebControls.ListBox> 목록 항목 텍스트는 항상 굵은 글꼴로 표시 합니다.  
  
 [!code-aspx-csharp[CustomListBoxAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/CS/custom_listbox_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomListBoxAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/VB/custom_listbox_addattributestorendervb.aspx#1)]  
  
 [!code-csharp[CustomListBoxAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/CS/custom_listbox_addattributestorender.cs#2)]
 [!code-vb[CustomListBoxAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/VB/custom_listbox_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 테두리 색을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 테두리 색을 나타내는 <see cref="T:System.Drawing.Color" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListBox.BorderColor%2A> 속성에서 상속 되는 <xref:System.Web.UI.WebControls.WebControl> 클래스 및에 적용 되지 않습니다는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 테두리 스타일을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.BorderStyle" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListBox.BorderStyle%2A> 속성에서 상속 되는 <xref:System.Web.UI.WebControls.WebControl> 클래스 및에 적용 되지 않습니다는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 테두리 너비를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 테두리 너비를 나타내는 <see cref="T:System.Web.UI.WebControls.Unit" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListBox.BorderWidth%2A> 속성에서 상속 되는 <xref:System.Web.UI.WebControls.WebControl> 클래스 및에 적용 되지 않습니다는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedIndices">
      <MemberSignature Language="C#" Value="public virtual int[] GetSelectedIndices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetSelectedIndices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.GetSelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelectedIndices () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetSelectedIndices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListBox" /> 컨트롤에서 현재 선택한 항목에 대한 인덱스 값의 배열을 가져옵니다.</summary>
        <returns>목록 상자에서 선택한 항목의 인덱스를 각각 나타내는 정수의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListBox.GetSelectedIndices%2A> 메서드를 식별 하거나 선택한 항목에 액세스 하는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 반환 된 배열의 각 요소에에서는 선택한 목록 항목에 대 한 인덱스를 나타냅니다. 항목에 액세스 하는 인덱스 값을 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 컬렉션입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">
          <c>postCollection</c>을 인덱싱하는 데 사용되는 컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">컨트롤 식별자로 인덱싱된 값 정보를 포함하는 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
        <summary>목록 컨트롤의 게시된 내용이 마지막으로 게시된 내용과 다를 경우 해당 내용을 로드합니다.</summary>
        <returns>
          게시된 내용이 마지막으로 게시된 내용과 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> 에서 사용자 지정 컨트롤을 파생 하는 경우 메서드는 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.ListBox> 클래스입니다.  
  
 <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> 메서드가 나타내는 경우의 상태는 <xref:System.Web.UI.WebControls.ListBox> 컨트롤 변경 되었습니다. 컨트롤의 각 목록 항목에 동일한 있는지 결정 즉, <xref:System.Web.UI.WebControls.ListItem.Selected%2A> 마지막 게시 된 값과 값입니다. 컨트롤에 항목을 선택 하면 사용자는 <xref:System.Web.UI.WebControls.ListItem.Selected%2A> 해당 하는 것에 대 한 값 <xref:System.Web.UI.WebControls.ListItem> 개체에 <xref:System.Web.UI.WebControls.ListControl.Items%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 일부 목록 항목 컨트롤에서 선택 되거나 경우는 <xref:System.Web.UI.WebControls.ListBox> 사용 하지 않으면 <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> 반환 `false`합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> 메서드 반환 `true` ASP.NET 페이지 프레임 워크는 컨트롤에 대 한 호출에서 <xref:System.Web.UI.WebControls.RadioButtonList.RaisePostDataChangedEvent%2A> 컨트롤의 메서드를 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>클라이언트에 렌더링하기 전에 <see cref="T:System.Web.UI.WebControls.ListBox" /> 컨트롤을 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListBox.OnPreRender%2A> 에서 사용자 지정 컨트롤을 파생 하는 경우 메서드는 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.ListBox> 클래스입니다. <xref:System.Web.UI.WebControls.ListBox.OnPreRender%2A> 파생된 클래스가를 처리할 메서드를 사용 하면는 <xref:System.Web.UI.Control.PreRender> 대리자를 연결 하지 않고도 이벤트입니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 <xref:System.Web.UI.WebControls.ListBox.OnPreRender%2A> 저장 상태 보기 및에 대 한 콘텐츠를 렌더링 하기 전에 모든 필요한 렌더링 이전 단계를 수행 하는 메서드는 <xref:System.Web.UI.WebControls.ListBox>합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ListBox.OnPreRender(System.EventArgs)" /> 파생된 클래스에서 메서드를 호출 해야는 <see cref="M:System.Web.UI.WebControls.ListBox.OnPreRender(System.EventArgs)" /> 등록 된 대리자에는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> 컨트롤의 게시된 데이터가 변경될 때마다 <see cref="T:System.Web.UI.WebControls.ListBox" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> 에서 사용자 지정 컨트롤을 파생 하는 경우 메서드는 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 ASP.NET 페이지 프레임 워크 호출은 <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> 메서드를 한 <xref:System.Web.UI.WebControls.ListBox> 시점을 제어할는 <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> 메서드 목록 항목의 상태가 변경 되었음을 나타냅니다에 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> 메서드 호출의 <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> 를 발생 시키는 메서드는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> 이벤트입니다. 컨트롤 개발자는 <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> 메서드는 사용자가 컨트롤에 목록 항목을 선택할 때 사용자 지정 처리를 수행 합니다.  
  
 <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> 메서드 발생 하기 전에 유효성 검사를 선택적으로 수행할 수는 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> 컨트롤에 대 한 이벤트입니다. 경우 목록 항목 페이지에 컨트롤 그룹의 유효성을 검사 하는 <xref:System.Web.UI.WebControls.ListBox> 을 선택 하면 설정는 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 및 <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> 속성을 `true`, 다음에 유효성을 검사할 컨트롤의 그룹을 지정 하 고는 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual int Rows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Rows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Rows { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListBox" /> 컨트롤에 표시할 행의 수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListBox" /> 컨트롤에 표시할 행의 수입니다. 기본값은 <see langword="4" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListBox.Rows%2A> 속성에 표시할 행의 수를 지정 하는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
> [!CAUTION]
>  행의 수와 2000 사이 여야 합니다. 이 범위 밖의 값에는 예외가 발생 합니다.  
  
 값은 <xref:System.Web.UI.WebControls.ListBox.Rows%2A> 속성은 뷰 상태에 저장 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.ListBox.Rows%2A> 속성에서 6 개의 행을 표시 하는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 [!code-aspx-csharp[Classic ListBox.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox.Rows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ListBox.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox.Rows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 행의 수가 1보다 작거나 2000보다 큰 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ListSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionMode As ListSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListSelectionMode SelectionMode { System::Web::UI::WebControls::ListSelectionMode get(); void set(System::Web::UI::WebControls::ListSelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListBox" /> 컨트롤의 선택 모드를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListSelectionMode" /> 값 중 하나입니다. 기본값은 <see langword="Single" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> 속성의 모드 동작을 지정 하는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다. 이 속성을 설정 `ListSelectionMode.Single` 나타냅니다에서 하나의 항목만 선택할 수는 <xref:System.Web.UI.WebControls.ListBox> 컨트롤 동안 `ListSelectionMode.Multiple` 여러 항목을 선택할 수 있는 지정 합니다.  
  
 값은 <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> 속성은 뷰 상태에 저장 합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> 사용자에서 여러 항목을 선택할 수 있도록 속성을는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 [!code-aspx-csharp[ListBoxSelectionMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListBoxSelectionMode/CS/listboxselectionmodecs.aspx#1)]
 [!code-aspx-vb[ListBoxSelectionMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListBoxSelectionMode/VB/listboxselectionmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 선택 모드가 <see cref="T:System.Web.UI.WebControls.ListSelectionMode" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.ListSelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">로드할 내용을 참조하는 게시된 컬렉션 내의 인덱스입니다.</param>
        <param name="postCollection">서버에 게시되는 컬렉션입니다.</param>
        <summary>목록 컨트롤의 게시된 내용이 마지막으로 게시된 내용과 다를 경우 해당 내용을 로드합니다.</summary>
        <returns>
          게시된 내용이 마지막으로 게시된 내용과 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 사용 해야는 <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A?displayProperty=nameWithType> 변화에 대 한 게시 된 데이터를 처리 하는 메서드는 <xref:System.Web.UI.WebControls.ListBox> 개체입니다.  
  
 <xref:System.Web.UI.WebControls.ListBox.System%23Web%23UI%23IPostBackDataHandler%23LoadPostData%2A> 메서드는 명시적 인터페이스 멤버 구현 합니다. <xref:System.Web.UI.WebControls.ListBox> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>게시 된 데이터를 처리 하는 사용자 지정 구현을 정의 하는 <see cref="T:System.Web.UI.WebControls.ListBox" /> 개체, 재정의 <see cref="M:System.Web.UI.WebControls.ListBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 멤버입니다. 명시적 인터페이스 구현 호출은 <see cref="M:System.Web.UI.WebControls.ListBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 컨트롤에 대 한 게시 된 데이터를 처리 하는 메서드.</para>
        </block>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> 컨트롤의 게시된 데이터가 변경될 때마다 <see cref="T:System.Web.UI.WebControls.ListBox" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 사용 해야는 <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A?displayProperty=nameWithType> 메서드 이벤트를 발생 시키는 경우 게시 된 데이터를는 <xref:System.Web.UI.WebControls.ListBox> 개체 변경 합니다.  
  
 <xref:System.Web.UI.WebControls.ListBox.System%23Web%23UI%23IPostBackDataHandler%23LoadPostData%2A> 메서드는 명시적 인터페이스 멤버 구현 합니다. <xref:System.Web.UI.WebControls.ListBox> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>에 대 한 이벤트를 발생 시키기 위한 사용자 지정 구현을 정의 하는 <see cref="T:System.Web.UI.WebControls.ListBox" /> 개체, 재정의 <see cref="M:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent" /> 멤버입니다. 명시적 인터페이스 구현 호출은 <see cref="M:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent" /> 메서드를 컨트롤에 대 한 게시 된 데이터가 변경 될 때 이벤트를 발생 시킵니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
  </Members>
</Type>