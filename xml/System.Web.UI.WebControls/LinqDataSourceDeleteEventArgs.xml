<Type Name="LinqDataSourceDeleteEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccde8e297e7fa550eadd02196d38705cb8e4a6a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30596717" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDeleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceDeleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceDeleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> 개체에 대 한 모든 처리기에 전달 되는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 이벤트입니다. <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> 속성 삭제 되는 데이터를 포함 합니다.  
  
 데이터 소스를 나타내는 데이터를 삭제 하기 전에 유효성 검사 예외를 throw 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 의 인스턴스를 포함 하는 속성은 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 클래스입니다. 통해 모든 유효성 검사 예외를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> 속성입니다. 유효성 검사 예외가 throw 되 면는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 속성 포함 `null`합니다. 유효성 검사 예외를 처리 하 고 예외를 다시 throw 하지 않을 경우에 설정 된 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> 속성을 `true`합니다.  
  
 에 대 한 이벤트 처리기를 만들고는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 을 데이터 클래스의 유효성 검사 오류를 검사 하거나 삭제 작업을 취소 하는 데이터 유효성을 검사 하는 이벤트입니다. 설정 하 여 삭제 작업을 취소는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`합니다.  
  
 기본적으로는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어 원래 값을 데이터 원본에서 보기에 상태 저장 제외 하 고 웹 페이지에서 해당 <xref:System.Data.Linq.Mapping.ColumnAttribute> 특성으로 표시 되어 `UpdateCheck.Never`합니다. LINQ to SQL은 자동으로 데이터를 삭제 하기 전에 데이터의 무결성을 확인 합니다. 뷰 상태에 저장 된 원래 값이 포함 된 데이터 원본에서 현재 값을 비교 하 여 수행 합니다. 에 대 한 처리기를 만들어 추가적인 데이터 유효성 검사를 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서 속성에 따라 삭제 작업을 취소 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> 속성 및 웹 페이지의 값입니다. 예제에서는 사용자가 선택 해야는 <xref:System.Web.UI.WebControls.CheckBox> 제품 삭제 것인지 확인 하는 컨트롤 기록 될 때 해당 `OnSale` 속성이로 설정 된 `true`합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (object originalObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Object ^ originalObject);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">
          <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 속성에 지정되어 있으며 삭제될 데이터가 들어 있는 형식의 개체입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">삭제할 데이터의 유효성을 검사할 때 발생한 예외입니다.</param>
        <summary>지정된 예외를 사용하여 <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제 작업을 수행하기 전에 데이터의 유효성을 검사할 때 throw된 예외를 가져옵니다.</summary>
        <value>오류가 발생한 경우 해당 예외이고, 그렇지 않은 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 삭제 작업을 수행 하기 전에 유효성 검사 예외가 throw 되는 예외에 저장 됩니다는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 속성입니다. 에 대 한 이벤트 처리기에는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 이벤트를 통해 예외를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>예외가 처리되었으며 다시 throw되어서는 안 되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          예외가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 이벤트 처리기를 만들 수는 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 삭제 작업 전에 throw 된 유효성 검사 예외를 검사 하는 이벤트입니다. 예외를 처리 하지 않을를 다시 throw 하는 경우이 설정의 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> 속성을 `true`합니다. 설정 하지 않은 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> 속성을 `true`, 예외 호출 스택에 있는 다음 이벤트 처리기에 전파 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제할 데이터를 나타내는 개체를 가져옵니다.</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 속성에 지정되어 있으며 삭제될 데이터가 들어 있는 형식의 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> 속성을 삭제 하기 전에 데이터와 상호 작용 합니다. 데이터의 유효성을 검사 하거나 설정 하 여 이벤트를 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`합니다. 에 있는 개체의 값을 변경 하 여 어떤 레코드가 삭제 되 수정할 수는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서 속성에 따라 삭제 작업을 취소 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> 속성 및 웹 페이지의 값입니다. 예제에서는 사용자가 선택 해야는 <xref:System.Web.UI.WebControls.CheckBox> 제품 삭제 것인지 확인 하는 컨트롤 기록 될 때 해당 `OnSale` 속성이로 설정 된 `true`합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>