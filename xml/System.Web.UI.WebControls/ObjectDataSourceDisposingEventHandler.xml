<Type Name="ObjectDataSourceDisposingEventHandler" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf0b9612367bc2ef76b61819847a45af2f2760fc" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46667357" /></Metadata><TypeSignature Language="C#" Value="public delegate void ObjectDataSourceDisposingEventHandler(object sender, ObjectDataSourceDisposingEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ObjectDataSourceDisposingEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ObjectDataSourceDisposingEventHandler(sender As Object, e As ObjectDataSourceDisposingEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ObjectDataSourceDisposingEventHandler(System::Object ^ sender, ObjectDataSourceDisposingEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventHandler = delegate of obj * ObjectDataSourceDisposingEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="d00ec-101"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />는 이벤트의 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-101">The source of the event, the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</span></span></param>
    <param name="e"><span data-ttu-id="d00ec-102">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-102">An <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="d00ec-103"><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 이벤트를 처리할 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-103">Represents the method that will handle the <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> event of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d00ec-104"><xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler> 대리자를 만드는 경우 이벤트를 처리할 메서드를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-104">When you create an <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="d00ec-105">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="d00ec-106">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="d00ec-107">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-107">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d00ec-108">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-108">This section contains two code examples.</span></span> <span data-ttu-id="d00ec-109">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-109">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="d00ec-110">두 번째 코드 예제에서는 첫 번째 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-110">The second code example provides an example middle-tier business object that the first code example uses.</span></span>  
  
 <span data-ttu-id="d00ec-111">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-111">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="d00ec-112">웹 페이지를 수행 하는 모든 데이터 작업에 대해 만들려는 (시간 또는 리소스) 측면에서 매우 비용이 많이 드는 비즈니스 개체를 사용 하 여 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-112">You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs.</span></span> <span data-ttu-id="d00ec-113">비용이 많이 드는 개체를 사용 하는 한 가지 방법은 해당 인스턴스를 한 번 만들어를 만들고 모든 데이터 작업에 대 한 제거 하는 대신 다음 작업에 캐시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-113">One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</span></span> <span data-ttu-id="d00ec-114">이 예제에서는이 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-114">This example demonstrates this pattern.</span></span> <span data-ttu-id="d00ec-115">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 개체에 대 한 캐시를 먼저 확인을 만든 다음 인스턴스를 이미 캐시 되지 않습니다 하는 경우에 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-115">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache first for an object, and then create an instance, only if one is not already cached.</span></span> <span data-ttu-id="d00ec-116">그런 다음 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 제거 하는 대신 나중에 사용할 비즈니스 개체를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-116">Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it.</span></span> <span data-ttu-id="d00ec-117">이 예제에서는 <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 클래스로 설정 되어 `true`지시를 <xref:System.Web.UI.WebControls.ObjectDataSource> 를 호출 하지 않도록 <xref:System.IDisposable.Dispose%2A> 인스턴스에서.</span><span class="sxs-lookup"><span data-stu-id="d00ec-117">In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 <span data-ttu-id="d00ec-118">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-118">The following code example provides an example middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="d00ec-119">정의한 기본 비즈니스 개체의 코드 예제는는 `EmployeeLogic` 클래스는 상태를 유지 관리 및 비즈니스 논리를 캡슐화 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-119">The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic.</span></span> <span data-ttu-id="d00ec-120">전체 작업 예제를 보려면이 코드를 라이브러리로 컴파일하고 ASP 페이지에서 이러한 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="d00ec-120">For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
  </Docs>
</Type>