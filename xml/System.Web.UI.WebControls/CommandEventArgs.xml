<Type Name="CommandEventArgs" FullName="System.Web.UI.WebControls.CommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="437953a5b6b6b10be6717d48c189668c2f8b885f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30596187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see langword="Command" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Command` 이벤트가 발생할 때는 <xref:System.Web.UI.WebControls.Button> 또는 <xref:System.Web.UI.WebControls.ImageButton> 컨트롤을 클릭 합니다.  
  
 <xref:System.Web.UI.WebControls.CommandEventArgs> 개체에 대 한 데이터가 포함 되어는 `Command` 수 있는 이벤트에 처리기 이벤트에 액세스 합니다. 사용할 수 있는 속성을 사용 하는 <xref:System.Web.UI.WebControls.CommandEventArgs> 클래스 등을 수행 하려면 명령의 이름을 확인할 수 있습니다 `Sort`와 같은 명령을 보완 하는 선택적 인수 뿐 아니라 `Ascending`합니다.  
  
 인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.CommandEventArgs>, 참조는 <xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A> 생성자입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성에 액세스 하는 방법을 <xref:System.Web.UI.WebControls.CommandEventArgs> 수행할 명령을 확인 하려면. 이 예제에서는 이벤트 처리기를 선언적으로 지정를 사용 하 여는 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 의 속성은 <xref:System.Web.UI.WebControls.Button> 제어 합니다.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 다음 코드 예제에서는 이벤트 처리기를 지정 하 고 프로그래밍 방식으로 이벤트에 추가 하는 방법을 보여 줍니다.는 `Page_Load` 메서드.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <altmember cref="E:System.Web.UI.WebControls.ImageButton.Command" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />입니다.</param>
        <summary>다른 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 개체를 사용하여 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.CommandEventArgs> 사용 하 여 지정 된 클래스 <xref:System.Web.UI.WebControls.CommandEventArgs> 개체입니다.  
  
 인스턴스가 <xref:System.Web.UI.WebControls.CommandEventArgs> 만들어집니다이 생성자를 호출한 다음 속성이 지정된 된 값으로 초기화 됩니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|CommandName|`e.CommandName` 매개 변수입니다.|  
|CommandArgument|`e.CommandArgument` 매개 변수입니다.|  
  
   
  
## Examples  
 다음 예제에서는 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.CommandEventArgs> 사용 하 여 지정 된 클래스 <xref:System.Web.UI.WebControls.CommandEventArgs> 개체입니다.  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (string commandName, object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandName, object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandName As String, argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::String ^ commandName, System::Object ^ argument);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandName">명령 이름입니다.</param>
        <param name="argument">명령에 대한 인수가 들어 있는 <see cref="T:System.Object" />입니다.</param>
        <summary>지정된 명령 이름과 인수를 사용하여 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.CommandEventArgs> 클래스 지정된 명령 이름 및 인수를 사용 합니다.  
  
 인스턴스가 <xref:System.Web.UI.WebControls.CommandEventArgs> 만들어집니다이 생성자를 호출한 다음 속성이 지정된 된 값으로 초기화 됩니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|CommandName|`commandName` 매개 변수의 값입니다.|  
|CommandArgument|`argument` 매개 변수의 값입니다.|  
  
   
  
## Examples  
 다음 예제에서는 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.CommandEventArgs> 클래스 지정된 명령 이름 및 인수를 사용 합니다.  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령에 대한 인수를 가져옵니다.</summary>
        <value>명령에 대한 인수가 들어 있는 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 프로그래머는 설정한 문자열이 포함 될 수 있습니다. <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 속성 보완은 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 명령에 대 한 추가 정보를 제공 하는 속성입니다. 예를 들어, 설정할 수는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 속성을 `Sort` 설정 하 고는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 속성을 `Ascending` 오름차순으로 정렬 하려면 명령을 지정 하려면.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 속성을 수행 하기 위한 명령에 대 한 추가 정보를 확인 합니다.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령 이름을 가져옵니다.</summary>
        <value>수행할 명령 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 수행할 명령을 결정 하는 속성입니다. <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 속성에는 프로그래머는 설정한 문자열이 포함 될 수 있습니다. 다음 프로그래머는 코드에서 명령 이름을 식별 하 고 적절 한 작업을 수행할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 속성을 프로그래밍 방식으로 수행 하기 위한 명령을 확인 합니다.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
      </Docs>
    </Member>
  </Members>
</Type>