<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectDataSource.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fab33d8ebbc73e4028e4c915742468326c153117.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fab33d8ebbc73e4028e4c915742468326c153117</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Represents a business object that provides data to data-bound controls in multitier Web application architectures.</source>
          <target state="translated">다중 계층 웹 응용 프로그램 아키텍처의 데이터 바인딩된 컨트롤에 데이터를 제공하는 비즈니스 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>In this topic:</source>
          <target state="translated">항목 내용:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>소개<ept id="p1">](#introduction)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Purpose<ept id="p1">](#purpose)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>용도<ept id="p1">](#purpose)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Retrieving Data<ept id="p1">](#retrieving_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 검색<ept id="p1">](#retrieving_data)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Performing Data Operations<ept id="p1">](#performing_data_operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 작업을 수행합니다.<ept id="p1">](#performing_data_operations)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Filtering Data<ept id="p1">](#filtering_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 필터링<ept id="p1">](#filtering_data)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Caching<ept id="p1">](#caching)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>캐싱<ept id="p1">](#caching)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Features<ept id="p1">](#features)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>기능<ept id="p1">](#features)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Data View<ept id="p1">](#data_view)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 뷰<ept id="p1">](#data_view)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Using LINQ to SQL<ept id="p1">](#using_linq_to_sql)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to SQL 사용<ept id="p1">](#using_linq_to_sql)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>선언 구문<ept id="p1">](#declarative_syntax)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Introduction</source>
          <target state="translated">소개</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>An <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control works with a class that you create.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤의 클래스를 만들면와 함께 작동 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You create methods that retrieve and update data, and you provide the names of those methods to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control in markup.</source>
          <target state="translated">데이터를 검색 및 업데이트 하는 메서드 만들고 해당 메서드 이름이 제공는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 태그에서 제어 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>During rendering or postback processing, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> calls the methods that you have specified.</source>
          <target state="translated">포스트백 처리 또는 렌더링 중는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 지정한 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>There is no visual rendering of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">시각적으로 렌더링 되지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> does not support visual features such as the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceControl.EnableTheming%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.UI.DataSourceControl.SkinID%2A&gt;</ph> property.</source>
          <target state="translated">결과적으로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 같은 시각적 기능 지원 하지 않습니다는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceControl.EnableTheming%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Web.UI.DataSourceControl.SkinID%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Purpose</source>
          <target state="translated">용도</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>A very common application design practice is to separate the presentation layer from business logic and to encapsulate the business logic in business objects.</source>
          <target state="translated">매우 일반적인 응용 프로그램 디자인 방법은 비즈니스 논리에서 프레젠테이션 계층을 구분 하 고 비즈니스 개체의 비즈니스 논리를 캡슐화 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>These business objects form a distinct layer between the presentation layer and the data tier, resulting in a three-tier application architecture.</source>
          <target state="translated">이러한 비즈니스 개체 프레젠테이션 계층 및 3 계층 응용 프로그램 아키텍처에는 데이터 계층 사이 고유한 계층을 형성 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control enables developers to use an ASP.NET data source control while retaining their three-tier application architecture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 사용 하면 개발자가 자신의 3 계층 응용 프로그램 아키텍처를 유지 하면서 ASP.NET 데이터 소스 제어를 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control uses reflection to create instances of business objects and to call methods on them to retrieve, update, insert, and delete data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 리플렉션을 사용 하 여 인스턴스를 만든 비즈니스 개체의 메서드를 호출을 검색 하려면 업데이트, 삽입 및 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property identifies the name of the class that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> works with.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성 클래스의 이름을 식별 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 작동 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control creates and destroys an instance of the class for each method call; it does not hold the object in memory for the lifetime of the Web request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> ; 보유 하지 않는 개체가 메모리에 웹 요청 수명에 대 한 제어를 만들고 각 메서드 호출에 대 한 클래스의 인스턴스를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>This is a serious consideration if the business object that you use requires many resources or is otherwise expensive to create and destroy.</source>
          <target state="translated">경우에 사용할 수 있는 비즈니스 개체 많은 리소스가 필요 하거나 만들고 삭제 하는 비용이 많이 소요 되는 중요 한 고려 사항입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Using an expensive object might not be an optimal design choice, but you can control the life cycle of the object by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> events.</source>
          <target state="translated">부담이 큰 개체가 사용 하는 최적의 디자인 선택 하지 않을 수 있지만 사용 하 여 개체의 수명 주기를 제어할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The methods that are identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> properties can be instance methods or <ph id="ph5">`static`</ph> (<ph id="ph6">`Shared`</ph> in Visual Basic) methods.</source>
          <target state="translated">로 식별 되는 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성 인스턴스 메서드 일 수 있습니다 또는 <ph id="ph5">`static`</ph> (<ph id="ph6">`Shared`</ph> Visual basic에서) 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>If the methods are <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), an instance of the business object is not created, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> events are not raised.</source>
          <target state="translated">메서드가 이면 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서), 비즈니스 개체의 인스턴스 만들어지지 않습니다 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Retrieving Data</source>
          <target state="translated">데이터 검색</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>To retrieve data from a business object, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property to the name of the method that retrieves data.</source>
          <target state="translated">비즈니스 개체의 데이터를 검색 하려면 설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 데이터를 검색 하는 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>If the method does not return an <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object, the object is wrapped by the runtime in an <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> collection.</source>
          <target state="translated">메서드가 반환 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 개체를 개체에 런타임에 의해 래핑된는 <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>If the method signature has parameters, you can add <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection, and then bind them to the values that you want to pass to the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">메서드 시그니처에 매개 변수가 추가할 수 있습니다 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 컬렉션에 지정 된 메서드에 전달 하려는 값에 바인딩할는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>In order for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to use the parameters, the parameters must match the names and types of the parameters in the method signature.</source>
          <target state="translated">에 대 한 순서 대로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 매개 변수를 사용 하 여 제어 하 고, 매개 변수 이름 및 메서드 시그니처의 매개 변수 형식과 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For more information, see <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ObjectDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control retrieves data whenever the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 데이터를 검색할 때마다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>This method provides programmatic access to the method that is specified by <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드는 지정 된 메서드에 프로그래밍 방식의 액세스를 제공 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property is called automatically by controls that are bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> when their <ph id="ph3">`DataBind`</ph> method is called.</source>
          <target state="translated">지정 된 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에 바인딩되는 컨트롤에 의해 자동으로 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 때 해당 <ph id="ph3">`DataBind`</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>If you set the <ph id="ph1">`DataSourceID`</ph> property of a data-bound control, the control automatically binds to data from the data source, as needed.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">`DataSourceID`</ph> 데이터 바인딩된 컨트롤의 속성을 컨트롤 자동으로 데이터에 바인딩하는 데이터 원본에서 필요에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Setting the <ph id="ph1">`DataSourceID`</ph> property is the recommended method for binding an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to a data-bound control.</source>
          <target state="translated">설정의 <ph id="ph1">`DataSourceID`</ph> 속성은 바인딩에 대 한 권장 되는 방법 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 데이터 바인딩된 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Alternatively, you can set the <ph id="ph1">`DataSource`</ph> property, but then you must explicitly call the <ph id="ph2">`DataBind`</ph> method of the data-bound control.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">`DataSource`</ph> 속성이 아니라 다음 명시적으로 호출 해야는 <ph id="ph2">`DataBind`</ph> 데이터 바인딩된 컨트롤의 메서드.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method programmatically at any time to retrieve data.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 프로그래밍 방식으로 언제 든 지 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For more information about binding data-bound controls to data source controls, see <bpt id="p1">[</bpt>Binding to Data Using a Data Source Control<ept id="p1">](http://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7)</ept>.</source>
          <target state="translated">데이터 소스 컨트롤에 데이터 바인딩된 컨트롤에 바인딩하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 소스 제어를 사용 하 여 데이터에 바인딩<ept id="p1">](http://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Performing Data Operations</source>
          <target state="translated">데이터 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Depending on the capabilities of the business object that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control works with, you can perform data operations, such as updates, insertions, and deletions.</source>
          <target state="translated">비즈니스 기능에 따라 개체를 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤, 업데이트, 삽입 및 삭제 같은 데이터 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>To perform these data operations, set the appropriate method name and any associated parameters for the operation that you want to perform.</source>
          <target state="translated">이러한 데이터 작업을 수행 하려면 적절 한 메서드 이름 및 수행 하려는 작업에 대 한 관련된 매개 변수를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For example, for an update operation, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property to the name of the business object method that performs updates and add any required parameters to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated">예를 들어 업데이트 작업에 대 한 설정에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성을 업데이트를 수행 하 고 추가 하는 비즈니스 개체 메서드 이름에 필요한 매개 변수가 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is associated with a data-bound control, the parameters are added by the data-bound control.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 이면 데이터 바인딩된 컨트롤에 연결 된 매개 변수를 데이터 바인딩된 컨트롤에 의해 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>In this case, you need to ensure that the parameter names of the method match the field names in the data-bound control.</source>
          <target state="translated">이 경우 메서드의 매개 변수 이름이 데이터 바인딩된 컨트롤의 필드 이름과 일치 하는지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The update is performed when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> method is called, either explicitly by your code or automatically by a data-bound control.</source>
          <target state="translated">업데이트가 수행 되는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 메서드가 호출 되는 데이터 바인딩된 컨트롤에서 사용자 코드에서 명시적으로 또는 자동으로 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The same general pattern is followed for <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operations.</source>
          <target state="translated">동일한 일반 패턴에 대 한 뒤 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Business objects are assumed to perform these types of data operations one record at a time, rather than batched.</source>
          <target state="translated">비즈니스 개체는 일괄 처리 되지 않고 이러한 유형의 데이터 작업에 대 한 하나의 레코드를 한 번에 수행할 예정 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Filtering Data</source>
          <target state="translated">데이터 필터링</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control can filter data that is retrieved by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property, if the data is returned as a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤에서 검색 되는 데이터를 필터링 할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성을 데이터로 반환 되 면 한 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property to a filtering expression by using a format string syntax and bind values in the expression to parameters that are specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성 형식을 사용 하 여 필터링 식에 구문 문자열 및에 지정 된 매개 변수를 식의 값을 바인딩하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Caching</source>
          <target state="translated">캐싱</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Although the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> does not retain the instance of the business object across multiple requests, it can cache the result of calling the method identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 인스턴스를 유지 하지 않는 여러 요청에 대해 비즈니스 개체의 것으로 식별 되는 메서드를 호출한 결과를 캐시할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>While the data is cached, subsequent calls to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method return the cached data instead of creating the business object and calling its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> using reflection.</source>
          <target state="translated">데이터가 캐시를 다시 호출 하면 되는 동안는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 비즈니스 개체를 만들고 호출 하는 대신 캐시 된 데이터를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 리플렉션을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Caching lets you avoid creating the object and calling its data method at the expense of memory on the Web server.</source>
          <target state="translated">캐싱을 사용 하면 않으려면 개체를 만들고 웹 서버의 메모리 해당 데이터 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property is set to the number of seconds that the cache stores data before the cache is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 데이터를 캐시 하는 자동으로 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성은 캐시 삭제 되기 전에 캐시 데이터를 저장 하는 시간 (초)의 수입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You can also specify a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> property and an optional <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> property.</source>
          <target state="translated">지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성과 선택적 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control allows you to cache all types of data, but you should not cache objects that retain resources or state that cannot be shared to service multiple requests (for example, an open <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> object), because the same instance of the object will be used to service multiple requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 사용 하면 모든 유형의 데이터를 캐시할 수 있지만 리소스 또는 여러 요청을 처리 하는 공유할 수 없는 상태를 유지 하는 개체를 캐시 하지 않습니다 (예: 열기 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 개체) 때문에 개체의 동일한 인스턴스 여러 개의 요청을 처리 하기에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Features</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The following table describes the features of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">기능을 설명 하는 다음 표에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Capability</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Selecting</source>
          <target state="translated">선택</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property to the name of the business object method that selects data, and include any necessary parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection either programmatically or by using a data-bound control.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성을 비즈니스 이름 개체의 데이터를 선택 하는 메서드의 등과의 모든 필요한 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 컬렉션 프로그래밍 방식으로 또는 데이터 바인딩된 컨트롤을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Sorting</source>
          <target state="translated">정렬</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> property to the name of the parameter in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> method that carries the sort criteria.</source>
          <target state="translated">설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> 속성에 있는 매개 변수 이름으로는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 정렬 조건을 전달 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Filtering</source>
          <target state="translated">필터링</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property to a filtering expression and optionally add any parameters to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection to filter the data when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is called.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성 필터링 식에 사용 하 고 필요에 따라 매개 변수를 추가할는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션 데이터를 필터링 할 때는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The method specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property must return a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">지정 된 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 반환 해야 합니다는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Paging</source>
          <target state="translated">페이징</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Data source paging is supported, if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> method contains parameters for the maximum number of records to retrieve and the index of the first record to retrieve.</source>
          <target state="translated">데이터 소스 페이징을 지원 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 메서드 검색할 레코드의 최대 수와 검색할 첫 번째 레코드의 인덱스에 대 한 매개 변수를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The names of those parameters must be set in the  <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> properties, respectively.</source>
          <target state="translated">이러한 매개 변수 이름 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 속성을 각각.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>A data-bound control might be able to perform paging itself, even if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control does not support paging directly in the method specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">데이터 바인딩된 컨트롤 자체에서 페이징을 수행할 수 있습니다 경우에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 페이징으로 지정한 메서드의에서 직접 지원 하지 않습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The requirement for the data-bound control to be able to do this is that the method specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property return an object that implements the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">이 작업을 수행할 수 있게 되기를 데이터 바인딩된 컨트롤에 대 한 요구 사항은 지정 된 메서드가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 구현 하는 개체를 반환 하는 속성은 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Updating</source>
          <target state="translated">업데이트하는 중</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property to the name of the business object method that updates data, and include any necessary parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성을 비즈니스 이름 개체 데이터를 업데이트 하는 메서드의 등과의 모든 필요한 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Deleting</source>
          <target state="translated">삭제</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property to the name of the business object method or function that deletes data, and include any necessary parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성을 비즈니스 이름 개체 메서드 또는 데이터를 삭제 하는 기능 등과의 모든 필요한 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Inserting</source>
          <target state="translated">삽입</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property to the name of the business object method or function that inserts data, and include any necessary parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성을 비즈니스 이름 개체 메서드 또는 함수의 데이터를 삽입 하 고에서 모든 필요한 매개 변수를 포함 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Caching</source>
          <target state="translated">캐싱</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> properties according to the caching behavior you want for your cached data.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 캐시 된 데이터에 대해 원하는 캐싱 동작에 따라 속성입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class to update or insert data, strings that are entered at the client are not automatically converted from the client culture format to the server culture format.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 클래스를 업데이트 하거나 데이터를 클라이언트에 입력 된 문자열 삽입 자동으로 변환 되지 않습니다 클라이언트 culture 형식에서 서버 문화권 형식입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For example, the client culture might specify DD/MM/YYYY as the date format, and the date format on the server might be MM/DD/YYYY.</source>
          <target state="translated">예를 들어 클라이언트 culture의 날짜 형식으로 DD/MM/YYYY를 지정할 수 있습니다 및 서버에서의 날짜 형식은 MM/DD/YYYY를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>In that case, October 5, 2009 would be entered in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control as 5/10/2009 but would be interpreted as May 10, 2009.</source>
          <target state="translated">이 경우 2009 년 10 월 5 일은에 입력 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 5/10/2009로 제어할 수 있지만 2009 년 5 월 10 일으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>October 15, 2009 would be entered as 15/10/2009, and would be rejected as an invalid date.</source>
          <target state="translated">2009 년 10 월 15 일은 15/10/2009로 입력 및 잘못 된 날짜로 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Data View</source>
          <target state="translated">데이터 뷰</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>As with all data source controls, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is associated with a data source view class.</source>
          <target state="translated">모든 데이터 소스 제어와 마찬가지로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 원본 뷰 클래스와 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>While the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is the interface that the page developer uses to work with data, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> class is the interface that data-bound controls work with.</source>
          <target state="translated">반면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 페이지 개발자 데이터 작업을 위해 사용 하는 인터페이스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 클래스는 데이터 바인딩된 컨트롤을 사용 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> class describes the capabilities of the data source control, and performs the actual work.</source>
          <target state="translated">또한는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 클래스는 데이터 소스 컨트롤의 기능을 설명 하 고 실제 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control has only one associated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph>, and it is always named <ph id="ph3">`DefaultView`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 하나만 연결 된 컨트롤에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph>, 이름은 항상 및 <ph id="ph3">`DefaultView`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>While the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object is exposed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A&gt;</ph> method, many of its properties and methods are wrapped and exposed directly by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">반면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 개체에 의해 노출 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A&gt;</ph> 다양 한 속성 및 메서드에 래핑된 메서드와 직접 노출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Behind the scenes, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object performs all data operations, including retrieving, inserting, updating, deleting, filtering, and sorting the data.</source>
          <target state="translated">내부적으로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 개체 검색, 삽입, 업데이트, 삭제, 필터링 및 데이터 정렬 등의 모든 데이터 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Using LINQ to SQL</source>
          <target state="translated">LINQ to SQL 사용</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a LINQ to SQL class.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> LINQ to SQL 클래스를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>To do so, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property to the name of the data-context class.</source>
          <target state="translated">이렇게 하려면 설정한는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성을 데이터 컨텍스트 클래스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You also set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> methods to the methods in the data-context class that perform the corresponding operations.</source>
          <target state="translated">또한 설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 메서드는 해당 작업을 수행 하는 데이터 컨텍스트 클래스의 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You must create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event in order to cancel disposing of the data-context class.</source>
          <target state="translated">에 대 한 이벤트 처리기를 만들어야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 데이터 컨텍스트 클래스의 삭제를 취소 하려면 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>This step is necessary because LINQ to SQL supports deferred execution, whereas the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control tries to dispose the data context after the Select operation.</source>
          <target state="translated">이 단계는 필요 LINQ to SQL에서는 지연 된 실행을 지원 하기 때문에 반면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 선택 작업 한 후 데이터 컨텍스트를 삭제 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For more information about how to create LINQ to SQL classes, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">LINQ to SQL 클래스 만들기 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For an example of how to cancel the disposing of a data context class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event.</source>
          <target state="translated">참조 데이터 컨텍스트 클래스의 삭제를 취소 하는 방법의 예는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Using the Entity Framework</source>
          <target state="translated">Entity Framework를 사용 하 여</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with the Entity Framework.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> Entity Framework와 제어 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For more information, see <bpt id="p1">[</bpt>Using the Entity Framework and the ObjectDataSource Control<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=209117)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Entity Framework와 ObjectDataSource 컨트롤을 사용 하 여<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=209117)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Declarative Syntax</source>
          <target state="translated">선언 구문</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>A Visual Studio Web site project with source code is available to accompany this topic: <bpt id="p1">[</bpt>Download<ept id="p1">](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&amp;DownloadId=14838)</ept>.</source>
          <target state="translated">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: <bpt id="p1">[</bpt>다운로드<ept id="p1">](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&amp;DownloadId=14838)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>This section shows an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> in markup in an .aspx page and it shows the business objects that it works with.</source>
          <target state="translated">이 섹션에 표시 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 태그에서.aspx 페이지에서는 함께 작동 하는 비즈니스 개체입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The example is the .aspx page.</source>
          <target state="translated">.Aspx 페이지는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>It contains a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that is bound to an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">포함 된 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 바인딩되는 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control markup specifies the name of the business object and the name of the business object method to call in order to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 태그 비즈니스 개체의 이름 및 데이터를 검색 하기 위해 호출할 비즈니스 개체 메서드의 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The following example shows the business object that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control in the .aspx page uses.</source>
          <target state="translated">다음 예에서는 비즈니스 개체는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> .aspx 페이지에서 컨트롤을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>(Many other <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> code examples use this business object also.) The example consists of the following two basic classes:</source>
          <target state="translated">(다른 많은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 코드 예제도이 비즈니스 개체를 사용 합니다.) 이 예제에서는 다음 두 가지 기본 클래스로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">`EmployeeLogic`</ph> class is the business logic class that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> uses.</source>
          <target state="translated"><ph id="ph1">`EmployeeLogic`</ph> 클래스는 비즈니스 논리는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 사용 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>The <ph id="ph1">`NorthwindEmployee`</ph> class defines the data object that is returned by the <ph id="ph2">`GetAllEmployees`</ph> method of the <ph id="ph3">`EmployeeLogic`</ph> class.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployee`</ph> 클래스 정의에서 반환 되는 데이터 개체는 <ph id="ph2">`GetAllEmployees`</ph> 의 메서드는 <ph id="ph3">`EmployeeLogic`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>An additional <ph id="ph1">`NorthwindDataException`</ph> class is provided as a convenience.</source>
          <target state="translated">추가 <ph id="ph1">`NorthwindDataException`</ph> 클래스 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>This set of example classes works with the Northwind Traders database, which is available with Microsoft SQL Server and Microsoft Access.</source>
          <target state="translated">이 예제에서는 클래스이 집합을 Microsoft SQL Server 및 Microsoft Access에서 사용할 수 있는 Northwind Traders 데이터베이스와 함께 작동 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For a complete working example, you must compile and use these classes with the .aspx page example that is provided.</source>
          <target state="translated">전체 작업 예제에 대 한 컴파일 및 제공 하는.aspx 페이지 예제로 이러한 클래스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>For information about how to install the Northwind Traders database, see <bpt id="p1">[</bpt>How to: Install Sample Databases<ept id="p1">](http://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e)</ept>.</source>
          <target state="translated">Northwind 데이터베이스를 설치 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: 샘플 데이터베이스 설치<ept id="p1">](http://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.ObjectDataSource">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)">
          <source>The name of the class that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> works with.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>와 작동하는 클래스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)">
          <source>The name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> invokes to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>가 데이터를 검색하기 위해 호출하는 메서드 또는 함수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> class with the specified type name and data retrieval method name.</source>
          <target state="translated">지정된 형식 이름과 데이터 검색 메서드 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)">
          <source>The value of the <ph id="ph1">`typeName`</ph> parameter can be a partially qualified type for code that is located in the Bin or App_Code directory or a fully qualified type name for code that is registered in the global assembly cache.</source>
          <target state="translated">값은 <ph id="ph1">`typeName`</ph> Bin 또는 App_Code 디렉터리에 있는 코드는 부분적으로 정규화 된 형식 또는 전역 어셈블리 캐시에 등록 되어 있는 코드에 대 한 정규화 된 형식 이름 매개 변수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)">
          <source>If you use the global assembly cache, you must add the appropriate reference to the <ph id="ph1">`assemblies`</ph> section of the Machine.config or Web.config configuration file.</source>
          <target state="translated">에 대 한 적절 한 참조를 추가 해야 전역 어셈블리 캐시를 사용 하는 경우는 <ph id="ph1">`assemblies`</ph> Machine.config 또는 Web.config 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 속성으로 검색된 데이터를 데이터 소스 컨트롤에서 캐시하는 시간(초)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The number of seconds that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> caches the results of a <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property invocation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 속성 호출의 결과를 캐시하는 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The value cannot be negative.</source>
          <target state="translated">값은 음수일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>While data is cached, calls to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieve data from the cache rather than from the business object that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> works with.</source>
          <target state="translated">데이터 캐시 되어 있는 동안에 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 검색 데이터는 비즈니스 대신 캐시에서 개체를 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 작동 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieves data from the business object, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 비즈니스 개체의 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 데이터를 자동으로 캐시 하는 컨트롤 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성이 캐시에 데이터를 캐시 엔트리의 하기 전에 저장 하는 시간 (초)의 수를 나타내는 0 보다 큰 값으로 설정 된 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>A value of 0 indicates an infinitely long cache.</source>
          <target state="translated">값이 0 무한정 캐시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The cache is regulated by a combination of the duration and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> setting.</source>
          <target state="translated">캐시 기간의 조합에 따라 조정 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> caches data on the first call to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method and holds it in memory for, at most, the amount of time that is specified by the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> 값을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 첫 번째 호출에서 데이터를 캐시는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 많아야 하 여 지정 된 시간 기간 동안 메모리에 보관 하 고는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The data might be released before the duration time, if the memory is needed.</source>
          <target state="translated">데이터는 메모리를 필요로 하는 경우 지속 시간 이전 해제 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The cache is then refreshed during the next call to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">다음 호출 하는 동안 캐시는 다음의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> value, the data source control caches data on the first call to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method, but resets the time window for which it holds the cache on each subsequent call to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> 값, 데이터 소스 제어의 첫 번째 호출에서 데이터를 캐시는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드, 하지만 캐시에 각 후속 호출에 보관 하는 기간을 다시 설정에서 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The cache expires if there is no activity for a time that is equal to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property since the last call to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">해당 하는 한 번에 대 한 작업이 수행 되지 않은 경우 캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성에 대 한 마지막 호출 후의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The first code example demonstrates how an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object supports caching.</source>
          <target state="translated">첫 번째 코드 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The second code example demonstrates how to implement a wrapper method that returns a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object to enable caching with an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object.</source>
          <target state="translated">두 번째 코드 예제에서는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 캐싱을 사용할 수 있도록 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The following code example demonstrates how an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports caching.</source>
          <target state="translated">다음 코드 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>To enable caching, you must implement the method that retrieves data, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property, to return the data as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">캐싱을 사용 하려면으로 식별 되는 데이터를 검색 하는 메서드를 구현 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 데이터를 반환 하는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>In this example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> properties are set.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph2">`true`</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> caches data that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property for 30 seconds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에서 반환 되는 데이터를 캐시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 30 초 동안 속성입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>The following code example demonstrates how to implement a wrapper method that returns a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object to enable caching with an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 캐싱을 사용할 수 있도록 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>In the base implementation of the <ph id="ph1">`EmployeeLogic`</ph> class, the <ph id="ph2">`GetAllEmployees`</ph> method returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> object.</source>
          <target state="translated">기본 구현에서는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 <ph id="ph2">`GetAllEmployees`</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>Instead of refactoring the object completely to work with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> on a Web Forms page, a wrapper method named <ph id="ph2">`GetAllEmployeesAsDataSet`</ph> is added that returns a set of <ph id="ph3">`NorthwindEmployee`</ph> data as a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">완전히 작동 하는 개체를 리팩터링 하는 대신는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 라는 래퍼 메서드가 Web Forms 페이지에 <ph id="ph2">`GetAllEmployeesAsDataSet`</ph> 집합을 반환 하는 추가 <ph id="ph3">`NorthwindEmployee`</ph> 으로 데이터는 <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</source>
          <target state="translated">기간과 결합될 때 데이터 소스 컨트롤에서 사용하는 캐시의 동작을 설명하는 캐시 만료 동작을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCacheExpiry" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.DataSourceCacheExpiry" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>While data is cached, calls to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieve data from the cache rather than from the business object that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> works with.</source>
          <target state="translated">데이터 캐시 되어 있는 동안에 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 검색 데이터는 비즈니스 대신 캐시에서 개체를 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 작동 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieves data from the business object, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 비즈니스 개체의 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 데이터를 자동으로 캐시 하는 컨트롤 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성이 캐시에 데이터를 캐시 엔트리의 하기 전에 저장 하는 시간 (초)의 수를 나타내는 0 보다 큰 값으로 설정 된 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>A value of 0 indicates an infinitely long cache period.</source>
          <target state="translated">값이 0 무한정 캐시 기간을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The cache is regulated by a combination of the duration and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> setting.</source>
          <target state="translated">캐시 기간의 조합에 따라 조정 되 고 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> caches data on the first call to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method and holds it in memory for, at most, the amount of time that is specified by the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Absolute&gt;</ph> 값을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 첫 번째 호출에서 데이터를 캐시는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 많아야 하 여 지정 된 시간 기간 동안 메모리에 보관 하 고는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The data might be released before the duration time, if the memory is needed.</source>
          <target state="translated">데이터는 메모리를 필요로 하는 경우 지속 시간 이전 해제 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The cache is then refreshed during the next call to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">다음 호출 하는 동안 캐시는 다음의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> value, the data source control caches data on the first call to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method, but resets the time window for which it holds the cache for each subsequent call to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceCacheExpiry.Sliding&gt;</ph> 값, 데이터 소스 제어의 첫 번째 호출에서 데이터를 캐시는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드, 하지만 각 후속 호출에 대 한 캐시 보관 하는 기간을 다시 설정는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The cache expires if there is no activity for a time that is equal to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property since the last call to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">해당 하는 한 번에 대 한 작업이 수행 되지 않은 경우 캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성에 대 한 마지막 호출 후의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The first code example demonstrates how an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object supports filtering and caching.</source>
          <target state="translated">첫 번째 코드 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체가 필터링과 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The second code example demonstrates how to implement a wrapper method that returns a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object to enable caching and filtering with an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object.</source>
          <target state="translated">두 번째 코드 예제에서는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 캐싱 및 필터링을 사용 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The following code example demonstrates how an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports filtering and caching.</source>
          <target state="translated">다음 코드 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 필터링과 캐싱을 컨트롤을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>To enable filtering and caching, you must implement the method that retrieves data, which is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property, to return the data as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">필터링 및 캐시를 사용 하려면으로 식별 되는 데이터를 검색 하는 메서드를 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 데이터를 반환 하는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>In this example, caching is enabled because the <ph id="ph1">`EmployeeLogic`</ph> object returns data as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph>, and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> properties are set.</source>
          <target state="translated">이 예제에서는 캐싱을 사용할 수 있으므로 <ph id="ph1">`EmployeeLogic`</ph> 개체 데이터를 반환할는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph4">`true`</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성이 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> caches data that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property for 30 seconds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에서 반환 되는 데이터를 캐시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 30 초 동안 속성입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>The following code example demonstrates how to implement a wrapper method that returns a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object to enable caching and filtering with an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 캐싱 및 필터링을 사용 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>In the base implementation of the <ph id="ph1">`EmployeeLogic`</ph> class, the <ph id="ph2">`GetAllEmployees`</ph> method returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">기본 구현에서는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 <ph id="ph2">`GetAllEmployees`</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>Instead of refactoring the object completely to work with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> on a Web Forms page, a wrapper method named <ph id="ph2">`GetAllEmployeesAsDataSet`</ph> is added that returns a set of <ph id="ph3">`NorthwindEmployee`</ph> data as a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">완전히 작동 하는 개체를 리팩터링 하는 대신는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 라는 래퍼 메서드가 Web Forms 페이지에 <ph id="ph2">`GetAllEmployeesAsDataSet`</ph> 집합을 반환 하는 추가 <ph id="ph3">`NorthwindEmployee`</ph> 으로 데이터는 <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</source>
          <target state="translated">데이터 소스 컨트롤에서 만든 모든 데이터 캐시 개체에 링크된 사용자 정의 키 종속성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>A key that identifies all cache objects created by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 만든 모든 캐시 개체를 식별하는 키입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> property can be set to any arbitrary string value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 임의의 문자열 값으로 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>All cache objects are explicitly expired when the key is expired.</source>
          <target state="translated">이 키가 만료되면 모든 캐시 개체도 명시적으로 만료됩니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>This allows you to invalidate cache entries that are created by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> from your own page code programmatically.</source>
          <target state="translated">이 캐시 항목에 의해 만들어진 무효화 될 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 고유한 페이지에서 코드 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>While data is cached, calls to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieve data from the cache rather than from the business object that the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> works with.</source>
          <target state="translated">데이터 캐시 되어 있는 동안에 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 검색 데이터는 비즈니스 대신 캐시에서 개체를 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 작동 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieves data from the business object, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 비즈니스 개체의 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 데이터를 자동으로 캐시 하는 컨트롤 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성이 캐시에 데이터를 캐시 엔트리의 하기 전에 저장 하는 시간 (초)의 수를 나타내는 0 보다 큰 값으로 설정 된 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>A value of 0 indicates an infinitely long cache.</source>
          <target state="translated">값이 0 무한정 캐시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> property to create a dependency between all cache entries that are created by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the key.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 속성에 의해 만들어진 모든 캐시 항목 간의 종속성을 만들려면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤과 키입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>You can expire all the cache entries programmatically at any time by expiring the key.</source>
          <target state="translated">있습니다 수 모든 캐시 항목 프로그래밍 방식으로 언제 든 지 하 여 만료 키를 만료 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>Expire the key by using the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType&gt;</ph> method with the current <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> value as the parameter.</source>
          <target state="translated">키를 사용 하 여 만료 된 <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType&gt;</ph> 현재의 메서드 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 매개 변수로 값입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>A unique cache entry is created for every combination of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> properties.</source>
          <target state="translated">모든 조합에 대 한 고유 캐시 엔트리가 만들어집니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>Multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls can use the same cache entries in scenarios where they load data using the same type, method, and parameters.</source>
          <target state="translated">여러 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 수 동일한 캐시 항목 시나리오에 사용할 컨트롤 같은 형식, 메서드 및 매개 변수를 사용 하 여 데이터를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.</source>
          <target state="translated">다음 세 가지 예제는 웹 페이지, 코드 숨김 페이지 클래스 및 Northwind 데이터베이스의 Employees 테이블에서 레코드를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The first example shows a Web page that contains two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">첫 번째 예에서는 두 개가 포함 된 웹 페이지를 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The first <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control are used to retrieve and display employee names from the database.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 검색 하 고 데이터베이스에서 직원 이름을 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The second <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control are used to retrieve and display the employee record that is selected by the user.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 검색 하 고 사용자가 선택 되어 있는 직원 레코드를 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>Caching is enabled for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">캐싱을 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>Therefore, each record is retrieved only one time from the database.</source>
          <target state="translated">따라서 각 레코드는 데이터베이스에서 한 번만 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> property is set to "EmployeeDetails", but any string value can work as the key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 속성이 "EmployeeDetails"로 설정 되어 있지만 임의의 문자열 값을 키로 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The Web page also includes a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control that the user can click to expire the cached data.</source>
          <target state="translated">웹 페이지에 포함 되어는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> 캐시 된 데이터를 만료를 클릭할 수 있는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The second example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> event and a handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> 이벤트 및에 대 한 처리기는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> 의 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> event handler creates a cache item with a key set to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> 이벤트 처리기로 설정 하는 키 캐시 항목이 생성 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event handler removes the cache item whose key is equal to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> 키가 같은 캐시 항목을 제거 하는 이벤트 처리기는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>When the cache item is removed, all the cached data that is dependent on the key is expired.</source>
          <target state="translated">캐시 항목이 제거 되는 키에 종속 된 모든 캐시 된 데이터가 만료 되었습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The third example shows the data access class that interacts with the Northwind database.</source>
          <target state="translated">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The class uses LINQ to query the Employees table.</source>
          <target state="translated">LINQ를 사용 하 여 Employees 테이블을 쿼리 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and the Employees table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스를 나타내는 Northwind 데이터베이스와 Employees 테이블입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>Gets or sets a value that determines whether or not just the new values are passed to the <ph id="ph1">&lt;see langword="Update" /&gt;</ph> method or both the old and new values are passed to the <ph id="ph2">&lt;see langword="Update" /&gt;</ph> method.</source>
          <target state="translated">새 값만 <ph id="ph1">&lt;see langword="Update" /&gt;</ph> 메서드에 전달되는지 아니면 기존 값과 새 값이 모두 <ph id="ph2">&lt;see langword="Update" /&gt;</ph> 메서드에 전달되는지를 확인하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.ConflictOptions" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>This property determines whether parameters for old and new values are applied to the method specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property.</source>
          <target state="translated">이 속성으로 지정한 메서드의에 이전 및 새 값에 대 한 매개 변수 적용 되었는지 여부를 결정은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>For example, if the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> control with the columns <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph>, and the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph6">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> field, parameters are created for <ph id="ph7">`Name`</ph> and <ph id="ph8">`Number`</ph> for the <ph id="ph9">`Update`</ph> method.</source>
          <target state="translated">예를 들어, 즉 메서드가로 지정 된는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에서 반환은 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 열이 포함 된 컨트롤 <ph id="ph3">`Name`</ph> 및 <ph id="ph4">`Number`</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph6">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> 필드에 대 한 매개 변수를 만드는 됩니다 <ph id="ph7">`Name`</ph> 및 <ph id="ph8">`Number`</ph> 에 대 한는 <ph id="ph9">`Update`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, parameters are created for <ph id="ph3">`Name`</ph>, <ph id="ph4">`Number`</ph>, <ph id="ph5">`original_Name`</ph>, and <ph id="ph6">`original_Number`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값 매개 변수가 대해 만들어진 <ph id="ph3">`Name`</ph>, <ph id="ph4">`Number`</ph>, <ph id="ph5">`original_Name`</ph>, 및 <ph id="ph6">`original_Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>(The exact name of the parameters for the original values depends on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> property.) The <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> then determines whether the method that is specified in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property has parameters that match.</source>
          <target state="translated">(원래 값에 대 한 정확한 이름은 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성입니다.) <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 다음 여부를 확인 메서드는에 지정 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성에 일치 하는 매개 변수가 있습니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</source>
          <target state="translated">동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어 하려면 데이터 저장소를 사용 하는 기술입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>For example, one client reads data and presents it to a user, while another client reads the same data and presents it to a different user.</source>
          <target state="translated">예를 들어 하나의 클라이언트 데이터 읽고는 사용자에 게 제공 하는 동안 다른 클라이언트가 동일한 데이터를 읽고를 다른 사용자에 게 제공 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>If both users update the data and submit it to the data storage, an unexpected result might occur, because both clients might provide different values for the same data.</source>
          <target state="translated">두 사용자가 데이터를 업데이트 하는 데이터 저장소에 제출 하는 경우 두 클라이언트 모두 동일한 데이터에 대해 서로 다른 값을 제공할 수 있습니다 때문에 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>This is considered a conflict.</source>
          <target state="translated">충돌로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>By setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, the <ph id="ph3">`Update`</ph> method can then compare the old and new values to the original data source to detect conflicts and handle them as necessary.</source>
          <target state="translated">설정 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값의 <ph id="ph3">`Update`</ph> 메서드 충돌을 감지 하 고 처리할 필요에 따라 데이터 원본에 이전 및 새 값 비교 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> values that are passed to an update, insert, or delete operation are automatically converted from <ph id="ph2">&lt;see langword="null" /&gt;</ph> to the <ph id="ph3">&lt;see cref="F:System.DBNull.Value" /&gt;</ph> value by the <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control.</source>
          <target state="translated">업데이트, 삽입 또는 삭제 작업에 전달되는 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> 값이 <ph id="ph3">&lt;see cref="F:System.DBNull.Value" /&gt;</ph> 컨트롤에 의해 <ph id="ph2">&lt;see langword="null" /&gt;</ph>에서 <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 값으로 자동으로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if any <ph id="ph2">&lt;see langword="null" /&gt;</ph> values in <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> objects passed to the <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control are automatically converted to <ph id="ph5">&lt;see cref="F:System.DBNull.Value" /&gt;</ph> values; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.Parameter" /&gt;</ph> 컨트롤에 전달된 <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 개체의 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 값이 자동으로 <ph id="ph5">&lt;see cref="F:System.DBNull.Value" /&gt;</ph> 값으로 변환되면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull">
          <source>Not converting <ph id="ph1">`null`</ph> to the <ph id="ph2">&lt;xref:System.DBNull.Value&gt;</ph> value can result in errors at run time.</source>
          <target state="translated">변환 되지 않으면 <ph id="ph1">`null`</ph> 에 <ph id="ph2">&lt;xref:System.DBNull.Value&gt;</ph> 값 실행 시 오류가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A&gt;</ph> property to indicate whether <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> values that are passed to an update, insert, or delete operation are automatically converted from <ph id="ph3">`null`</ph> to the <ph id="ph4">&lt;xref:System.DBNull.Value&gt;</ph> value by the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A&gt;</ph> 나타내는 속성을 여부 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> 에서 업데이트, 삽입 또는 삭제 작업에 전달 되는 값이 자동으로 변환 <ph id="ph3">`null`</ph> 에 <ph id="ph4">&lt;xref:System.DBNull.Value&gt;</ph> 값을 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>Gets or sets the name of a class that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control uses for a parameter in an update, insert, or delete data operation, instead of passing individual values from the data-bound control.</source>
          <target state="translated">데이터 바인딩된 컨트롤의 개별 값을 전달하는 대신 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤에서 데이터 업데이트, 삽입 또는 삭제 작업의 매개 변수로 사용할 클래스의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>A partially or fully qualified class name that identifies the type of the object that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> can use as a parameter for an <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph>, or a <ph id="ph4">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> 작업의 매개 변수로 사용할 수 있는 개체의 형식을 식별하는 정규화된 또는 부분적으로 정규화된 클래스 이름입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>Instead of specifying several parameters that are passed to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> methods, you can create one object that aggregates several data field values.</source>
          <target state="translated">에 전달 되는 여러 매개 변수를 지정 하는 대신는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 메서드를 여러 데이터 필드 값을 집계 하는 하나의 개체를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>This one object is passed to the methods, instead of several parameters.</source>
          <target state="translated">이 하나의 개체가 여러 매개 변수 대신 메서드로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The default behavior of an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control that is bound to a data-bound control is that the data-bound control creates a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> object for each parameter in the data source.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 데이터 바인딩된 컨트롤에 바인딩되는 컨트롤은 데이터 바인딩된 컨트롤을 만들도록는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter&gt;</ph> 데이터 원본의 각 매개 변수에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>If the business object has many fields, the resulting method also has many fields.</source>
          <target state="translated">비즈니스 개체에 여러 필드가, 하는 경우 결과 메서드 또한에 여러 필드가 있습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property allows you to specify a type that has a property for each data field.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성을 사용 하면 각 데이터 필드에 대 한 속성을 가진 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>Then, instead of passing several parameters to the method, the runtime creates one object and sets all of its properties.</source>
          <target state="translated">그런 다음 여러 매개 변수는 메서드에 전달 하는 대신 런타임 하나의 개체를 만들고 모든 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>This one object is added to the parameters collection for the method call.</source>
          <target state="translated">이 개체는 메서드 호출에 대 한 parameters 컬렉션에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The type that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property must have a default constructor that has no parameters, so the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control can create an instance of the type.</source>
          <target state="translated">형식으로 지정 된는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성 매개 변수가 없는, 기본 생성자가 있어야 하므로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 형식의 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The type must also have settable properties that allow the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to populate the object with values that are passed from the data-bound control.</source>
          <target state="translated">형식을 사용할 수 있는 속성을 설정할 수 있어야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 데이터 바인딩된 컨트롤에서 전달 되는 값을 사용 하 여 개체를 채웁니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The property names on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control are expected to exactly match the parameter names of values that are passed by the data-bound control.</source>
          <target state="translated">에 있는 속성 이름은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 바인딩된 컨트롤에 의해 전달 되는 값의 매개 변수 이름과 정확히 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property is set and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is associated with a data-bound control, the methods that are specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> properties must each have one parameter of the type that is specified in the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성을 설정 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에 연결 된 데이터 바인딩된 컨트롤에서 지정 된 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성 각각 한 개의 매개 변수만 에지정된형식의<ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> value, the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property must have one parameter of the type that is specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.OverwriteChanges&gt;</ph> 값을 지정 된 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성에 지정 된 형식의 매개 변수 하나 있어야 합니다.는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property must have two parameters of the type that is specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값을 지정 된 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성에 지정 된 형식의 두 매개 변수가 있어야 합니다.는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The first parameter contains the original values; the second parameter contains the new values.</source>
          <target state="translated">원래 값을 포함 하는 첫 번째 매개 변수 두 번째 매개 변수는 새 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 와 연결 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The section contains two code examples.</source>
          <target state="translated">섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The first code example demonstrates how to implement a type that combines all parameter values into one object, using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated">첫 번째 코드 예제에서는 모든 매개 변수 값을 하나의 개체로 결합 하는 형식을 구현 하는 방법을 보여 줍니다를 사용 하 여 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The second code example shows the Web page that uses the two classes that are used in the first code example.</source>
          <target state="translated">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 두 개의 클래스를 사용 하는 웹 페이지를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The following code example demonstrates how to implement a type that combines all parameter values into one object, using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 모든 매개 변수 값을 하나의 개체로 결합 하는 형식을 구현 하는 방법을 보여 줍니다를 사용 하 여 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The select method of the <ph id="ph1">`AggregateData`</ph> class returns a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object with two columns named <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph>.</source>
          <target state="translated">select 메서드는 <ph id="ph1">`AggregateData`</ph> 반환 클래스는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 라는 두 개의 열이 있는 개체 <ph id="ph3">`Name`</ph> 및 <ph id="ph4">`Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>Similarly, the <ph id="ph1">`NewData`</ph> class defines two read/write properties, <ph id="ph2">`Name`</ph> and <ph id="ph3">`Number`</ph>.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">`NewData`</ph> 클래스 두 개의 읽기/쓰기 속성을 정의 <ph id="ph2">`Name`</ph> 및 <ph id="ph3">`Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The <ph id="ph1">`Insert`</ph> method of the <ph id="ph2">`AggregateData`</ph> class takes one parameter of type <ph id="ph3">`NewData`</ph>.</source>
          <target state="translated"><ph id="ph1">`Insert`</ph> 의 메서드는 <ph id="ph2">`AggregateData`</ph> 형식의 매개 변수 하나를 사용 하는 클래스가 <ph id="ph3">`NewData`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The <ph id="ph1">`TypeName`</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> is set to <ph id="ph3">`AggregateData`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property is set to <ph id="ph5">`NewData`</ph>.</source>
          <target state="translated"><ph id="ph1">`TypeName`</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 로 설정 된 <ph id="ph3">`AggregateData`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph5">`NewData`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName">
          <source>The following code example shows the Web page that uses the two classes that are used in the preceding code example.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제에 사용 되는 두 개의 클래스를 사용 하는 웹 페이지를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>Performs a delete operation by calling the method that is identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /&gt;</ph> property with any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /&gt;</ph> 컬렉션의 매개 변수를 사용하여 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" /&gt;</ph> 속성으로 식별되는 메서드를 호출하는 방식으로 삭제 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>A value that represents the number of rows deleted from the underlying data storage, if the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /&gt;</ph> is set in the <ph id="ph3">&lt;see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /&gt;</ph> event; otherwise, -1.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /&gt;</ph> 속성이 <ph id="ph3">&lt;see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /&gt;</ph> 이벤트에 설정되어 있으면 내부 데이터 저장소에서 삭제된 행 수를 나타내는 값이며, 그렇지 않으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>Before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> operation is performed, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated">하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 작업이 수행 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event to examine the values of the parameters and to perform any preprocessing before a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> operation.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>To perform a delete operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object uses reflection to create an instance of the object that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property.</source>
          <target state="translated">삭제 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 으로 식별 되는 개체의 인스턴스를 만들고 하기 위해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>It then calls the method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property, using any associated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> properties.</source>
          <target state="translated">다음으로 식별 되는 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성, 연결 된 모든를 사용 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>If the deletion parameters come from an associated data-bound control, the name of the parameters is created according to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수 이름을 삭제 매개 변수 연결된 된 데이터 바인딩 컨트롤에 연결 하는 경우에 따라 만들어집니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>After the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> operation completes, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> event.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 작업이 완료 되 면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>Data-Bound Controls</source>
          <target state="translated">데이터 바인딩 컨트롤</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is associated with a data-bound control, such as the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, it is not necessary to call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> method from page code.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어와 같은 연결 된 데이터 바인딩 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 필요 없는 호출 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 페이지 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> method is invoked directly by the data-bound control instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Delete">
          <source>For more information about parameter merging, object lifetime, and method resolution, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph>.</source>
          <target state="translated">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>Occurs when a <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> 하거나 이벤트를 반환 값 또는 출력 매개 변수의 값을 확인 한 후 예외가 throw 되었는지 여부를 결정 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 작업이 완료 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>The return value, output parameters, and exception handling properties are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> object to return the number of rows that were deleted from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> method.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> 에서 삭제 된 행의 수를 반환 하는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A&gt;</ph> property.</source>
          <target state="translated">이 위해 설정 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>If you return the number of deleted rows from the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property, the value is available from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> object.</source>
          <target state="translated">으로 지정 하는 메서드에서 삭제 된 행 수를 반환 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성, 값은 사용할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>The second code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예에서는 <ph id="ph1">`EmployeeLogic`</ph> 첫 번째 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control displays a set of all employees, using the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property to retrieve the data from the <ph id="ph3">`EmployeeLogic`</ph> object.</source>
          <target state="translated">처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 변수로 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 하는 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에서 데이터를 검색 하는 <ph id="ph3">`EmployeeLogic`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control automatically displays a <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤이 자동으로 표시는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>If you click the <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button, the delete operation is performed using the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property and any parameters that are specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 변수로 지정 된 메서드를 사용 하 여 단추를 삭제 작업이 수행 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성 및에 지정 된 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>In this code example, some preprocessing and post-processing steps are also performed.</source>
          <target state="translated">이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>The <ph id="ph1">`NorthwindEmployeeDeleting`</ph> delegate is called to handle the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event before the operation is performed and the <ph id="ph3">`NorthwindEmployeeDeleted`</ph> delegate is called to handle the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> event after the operation has completed to perform exception handling.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployeeDeleting`</ph> 대리자 처리 하기 위해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 작업을 수행 하기 전에 이벤트와 <ph id="ph3">`NorthwindEmployeeDeleted`</ph> 대리자 처리 하기 위해 호출 됩니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> 예외 처리를 수행 하는 작업이 완료 된 후 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>In this code example, if a <ph id="ph1">`NorthwindDataException`</ph> is thrown, it is handled by the <ph id="ph2">`NorthwindEmployeeDeleted`</ph> method.</source>
          <target state="translated">이 코드 예제에서는 하는 경우는 <ph id="ph1">`NorthwindDataException`</ph> 은 의해 처리 될 throw는 <ph id="ph2">`NorthwindEmployeeDeleted`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleted">
          <source>The following code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the preceding code example.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`EmployeeLogic`</ph> 이전 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Gets or sets the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control invokes to delete data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤에서 데이터 삭제를 위해 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>A string that represents the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> uses to delete data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 데이터를 삭제할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The business object is assumed to delete data one record at a time, rather than in a batch.</source>
          <target state="translated">일괄 처리 대신 한 번에 하나씩 레코드의 데이터를 삭제 하는 비즈니스 개체 가정 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Make sure that the parameter names configured for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection match the column names that are returned by the select method.</source>
          <target state="translated">매개 변수 이름에 대해 구성 되었는지 확인는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션 select 메서드에 의해 반환 되는 열 이름과 일치 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Object Lifetime</source>
          <target state="translated">개체 수명</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property can be an instance method or a <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) method.</source>
          <target state="translated">로 식별 되는 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성에는 인스턴스 메서드 일 수 또는 <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> Visual basic에서) 메서드.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If it is an instance method, the business object is created and destroyed each time the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">비즈니스 개체가 생성 되 고 소멸 될 때마다 인스턴스 메서드인 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> events to work with the business object before the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 앞에 비즈니스 개체를 사용 하는 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>You can also handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event that is raised after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트 후에 발생 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If the business object implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method is called before the object is destroyed.</source>
          <target state="translated">비즈니스 개체를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 메서드는 개체가 소멸 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If the method is a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) method, the business object is never created and you cannot handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> events.</source>
          <target state="translated">메서드가 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서) 비즈니스 개체를 만들지는 메서드와 처리할 수 없습니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Parameter Merging</source>
          <target state="translated">병합 하는 매개 변수</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Parameters are added to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection from three sources:</source>
          <target state="translated">매개 변수가에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 세 개의 원본에서 컬렉션:</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>From the data-bound control, at run time.</source>
          <target state="translated">런타임에 데이터 바인딩된 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>From the <ph id="ph1">`DeleteParameters`</ph> element, declaratively.</source>
          <target state="translated"><ph id="ph1">`DeleteParameters`</ph> 요소를 선언적으로 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>From the <ph id="ph1">`Deleting`</ph> method, declaratively.</source>
          <target state="translated"><ph id="ph1">`Deleting`</ph> 메서드를 선언적으로 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>First, any parameters that are generated from data-bound controls are added to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection.</source>
          <target state="translated">첫째, 매개 변수를 데이터 바인딩된 컨트롤에서 생성 된에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is bound to a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that has the columns <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph>, parameters for <ph id="ph5">`Name`</ph> and <ph id="ph6">`Number`</ph> are added to the collection.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 바인딩되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 열이 있는 컨트롤 <ph id="ph3">`Name`</ph> 및 <ph id="ph4">`Number`</ph>, 매개 변수를 <ph id="ph5">`Name`</ph> 및 <ph id="ph6">`Number`</ph> 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The exact name of the parameter depends on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> property.</source>
          <target state="translated">정확한 이름은 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The data type of these parameters is <ph id="ph1">`string`</ph>.</source>
          <target state="translated">이러한 매개 변수의 데이터 형식이 <ph id="ph1">`string`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Next, the parameters that are listed in the <ph id="ph1">`DeleteParameters`</ph> element are added.</source>
          <target state="translated">다음에 나와 있는 매개 변수는 <ph id="ph1">`DeleteParameters`</ph> 요소가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If a parameter in the <ph id="ph1">`DeleteParameters`</ph> element is found with the same name as a parameter that is already in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection, the existing parameter is modified to match the parameter that is specified in the <ph id="ph3">`DeleteParameters`</ph> element.</source>
          <target state="translated">경우에 매개 변수는 <ph id="ph1">`DeleteParameters`</ph> 요소가 이미 있는 매개 변수의 동일한 이름으로 발견 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 기존 매개 변수 컬렉션에 지정 된 매개 변수의 이름과 일치 하도록 수정 됩니다는 <ph id="ph3">`DeleteParameters`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Typically, this is used to modify the type of the data in the parameter.</source>
          <target state="translated">일반적으로이 매개 변수에서 데이터의 유형을 수정 하도록 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Finally, you can programmatically add and remove parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event, which occurs before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> method is run.</source>
          <target state="translated">마지막으로 프로그래밍 방식으로 추가 및 제거할 수 있습니다에 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트를 발생 하기 전에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The method is resolved after the parameters are merged.</source>
          <target state="translated">메서드는 매개 변수가 병합 된 후 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Method resolution is discussed in the next section.</source>
          <target state="translated">메서드 해상도 다음 섹션에서 설명 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Method Resolution</source>
          <target state="translated">메서드 확인</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph2">`DeleteParameters`</ph> element, and the parameters that were added in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event handler are all merged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 메서드가 호출 되 면 데이터 바인딩된 컨트롤에서 선언적으로 생성 된 매개 변수에서 데이터 필드는 <ph id="ph2">`DeleteParameters`</ph> 요소 및에 추가 된 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트 처리기 모두 병합 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>(For more information, see the preceding section.) The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object then attempts to find a method to call.</source>
          <target state="translated">(자세한 내용은 이전 섹션 참조). <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체 호출할 메서드를 찾으려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>First, it looks for one or more methods with the name that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property.</source>
          <target state="translated">에 지정 된 이름 가진 하나 이상의 메서드가 먼저 찾습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If no match is found, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.</source>
          <target state="translated">일치 항목이 없는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If a match is found, it then looks for matching parameter names.</source>
          <target state="translated">일치 하는 항목이 없는 경우 일치 하는 매개 변수 이름을 찾습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>For example, suppose the type that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property has two methods named <ph id="ph2">`DeleteARecord`</ph>.</source>
          <target state="translated">예를 들어 하 여 지정 된 유형에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성이 라는 두 가지 방법 <ph id="ph2">`DeleteARecord`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>One <ph id="ph1">`DeleteARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`DeleteARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
          <target state="translated">하나의 <ph id="ph1">`DeleteARecord`</ph> 하나의 매개 변수가 <ph id="ph2">`ID`</ph>, 다른 <ph id="ph3">`DeleteARecord`</ph> 2 개의 매개 변수가 <ph id="ph4">`Name`</ph> 및 <ph id="ph5">`Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection has only one parameter named <ph id="ph2">`ID`</ph>, the <ph id="ph3">`DeleteARecord`</ph> method with just the <ph id="ph4">`ID`</ph> parameter is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션에 명명 된 매개 변수만 <ph id="ph2">`ID`</ph>, <ph id="ph3">`DeleteARecord`</ph> 메서드 테이블만 <ph id="ph4">`ID`</ph> 매개 변수 라고 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The type of the parameter is not checked in resolving the methods.</source>
          <target state="translated">매개 변수 형식의 메서드 확인 과정에서 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The order of the parameters does not matter.</source>
          <target state="translated">매개 변수의 순서가 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property is set, the method is resolved in a different way.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성은 메서드를 다른 방식으로 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> looks for a method with the name that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property that takes one parameter of the type that is specified in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에 지정 된 이름의 메서드를 찾습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 매개 변수 유형 중 하나를 사용 하는 속성에 지정 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>In this case, the name of the parameter does not matter.</source>
          <target state="translated">이 경우 매개 변수의 이름을 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The second code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예에서는 <ph id="ph1">`EmployeeLogic`</ph> 첫 번째 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control displays a set of all employees, using the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property to retrieve the data from the <ph id="ph3">`EmployeeLogic`</ph> object.</source>
          <target state="translated">처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 변수로 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 하는 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에서 데이터를 검색 하는 <ph id="ph3">`EmployeeLogic`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control automatically displays a <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤이 자동으로 표시는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>If you click the <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button, the delete operation is performed using the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property and any parameters that are specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 변수로 지정 된 메서드를 사용 하 여 단추를 삭제 작업이 수행 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성 및에 지정 된 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>In this code example, some preprocessing and post-processing steps are also performed.</source>
          <target state="translated">이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The <ph id="ph1">`NorthwindEmployeeDeleting`</ph> delegate is called to handle the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event before the operation is performed, and the <ph id="ph3">`NorthwindEmployeeDeleted`</ph> delegate is called to handle the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> event after the operation has completed to perform exception handling.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployeeDeleting`</ph> 대리자 처리 하기 위해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트는 작업이 수행 되기 전에 및 <ph id="ph3">`NorthwindEmployeeDeleted`</ph> 대리자 처리 하기 위해 호출 됩니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> 예외 처리를 수행 하는 작업이 완료 된 후에 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>In this example, if a <ph id="ph1">`NorthwindDataException`</ph> is thrown, it is handled by the <ph id="ph2">`NorthwindDataException`</ph> delegate.</source>
          <target state="translated">이 예에서 경우는 <ph id="ph1">`NorthwindDataException`</ph> 은 의해 처리 될 throw는 <ph id="ph2">`NorthwindDataException`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod">
          <source>The following code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the preceding code example.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`EmployeeLogic`</ph> 이전 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>Gets the parameters collection that contains the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /&gt;</ph> 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 메서드에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The names and types of the parameters that are contained in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection must match the names and types of the parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> method signature.</source>
          <target state="translated">이름 및 유형의에 포함 된 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션 이름 및 매개 변수 형식과 일치 해야 합니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 메서드 서명입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The parameter names are affected by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> property and are case-sensitive.</source>
          <target state="translated">매개 변수 이름은 영향을 받는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성 및 대/소문자 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The parameters in the collection depend on the data that is in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically.</source>
          <target state="translated">매개 변수 컬렉션에 데이터 바인딩된 컨트롤, 선언적으로 지정 된 매개 변수 및 매개 변수를 프로그래밍 방식으로 추가 되는 데이터에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>For more information, see "Parameter Merging" in <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> and <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>.</source>
          <target state="translated">자세한 내용은 "매개 변수가 병합"의 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 및 <bpt id="p1">[</bpt>ObjectDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>For more information about parameter merging, object lifetime, and method resolution, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph>.</source>
          <target state="translated">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The second code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예에서는 <ph id="ph1">`EmployeeLogic`</ph> 첫 번째 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 데이터를 삭제 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control displays a set of all employees, using the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property to retrieve the data from the <ph id="ph3">`EmployeeLogic`</ph> object.</source>
          <target state="translated">처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 변수로 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 하는 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에서 데이터를 검색 하는 <ph id="ph3">`EmployeeLogic`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control automatically displays a <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤이 자동으로 표시는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>If you click the <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event is called with two parameters.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 단추는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트는 두 개의 매개 변수와 함께 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>One parameter, <ph id="ph1">`EmpID`</ph>, comes from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> control, and is based on the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt;</ph> property.</source>
          <target state="translated">하나의 매개 변수가 <ph id="ph1">`EmpID`</ph>에서 제공 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> 컨트롤을 기반으로 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The other parameter comes from the declarative <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> property.</source>
          <target state="translated">다른 매개 변수가 선언적에서 가져온 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The <ph id="ph1">`EmployeeLogic`</ph> class overloads the <ph id="ph2">`DeleteEmployee`</ph> method.</source>
          <target state="translated"><ph id="ph1">`EmployeeLogic`</ph> 클래스 오버 로드는 <ph id="ph2">`DeleteEmployee`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>One overload takes a <ph id="ph1">`NorthwindEmployee`</ph> parameter, and the other takes an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> parameter named <ph id="ph3">`anID`</ph>.</source>
          <target state="translated">하나의 오버 로드는 <ph id="ph1">`NorthwindEmployee`</ph> 매개 변수를 사용 하 고 다른 하나는 <ph id="ph2">&lt;xref:System.Int32&gt;</ph> 라는 매개 변수 <ph id="ph3">`anID`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>In the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event, the entries in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> property are adjusted to include only one parameter named <ph id="ph3">`anID`</ph> with the value from <ph id="ph4">`original_EmpID`</ph>.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트에 있는 항목의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> 속성 라는 하나의 매개 변수를 포함 하도록 조정 됩니다 <ph id="ph3">`anID`</ph> 값부터 <ph id="ph4">`original_EmpID`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>When the event handler exists, the matching <ph id="ph1">`DeleteEmployee`</ph> method is called.</source>
          <target state="translated">이벤트 처리기 있을 때, 일치 하는 <ph id="ph1">`DeleteEmployee`</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The following code example shows the Web page that displays the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> control and handles the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 표시 하는 웹 페이지를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> 제어 및 핸들의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters">
          <source>The following code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the preceding code example.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`EmployeeLogic`</ph> 이전 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>Occurs before a <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control performs the delete operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 추가 초기화를 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 삭제 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>The parameters are available as an <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> collection that is accessed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> property, which is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> object.</source>
          <target state="translated">매개 변수는 사용할 수는 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 액세스 하는 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> 속성에 의해 노출 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>You can cancel the delete operation by setting the <ph id="ph1">&lt;xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">설정 하 여 삭제 작업을 취소할 수 있습니다는 <ph id="ph1">&lt;xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>The second code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예에서는 <ph id="ph1">`EmployeeLogic`</ph> 첫 번째 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to delete data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 데이터를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control displays a set of all employees, using the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property to retrieve the data from the <ph id="ph3">`EmployeeLogic`</ph> object.</source>
          <target state="translated">처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 변수로 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 하는 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에서 데이터를 검색 하는 <ph id="ph3">`EmployeeLogic`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control automatically displays a <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤이 자동으로 표시는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>If you click the <bpt id="p1">**</bpt>Delete<ept id="p1">**</ept> button, the delete operation is performed using the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property and any parameters that are specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>삭제<ept id="p1">**</ept> 변수로 지정 된 메서드를 사용 하 여 단추를 삭제 작업이 수행 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성 및에 지정 된 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>In this code example, some preprocessing and post-processing steps are also performed.</source>
          <target state="translated">이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>The <ph id="ph1">`NorthwindEmployeeDeleting`</ph> delegate is called to handle the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event before the operation is performed, and the <ph id="ph3">`NorthwindEmployeeDeleted`</ph> delegate is called to handle the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> event after the operation has completed to perform exception handling.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployeeDeleting`</ph> 대리자 처리 하기 위해 호출 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> 이벤트는 작업이 수행 되기 전에 및 <ph id="ph3">`NorthwindEmployeeDeleted`</ph> 대리자 처리 하기 위해 호출 됩니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph> 예외 처리를 수행 하는 작업이 완료 된 후에 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>In this code example, if a <ph id="ph1">`NorthwindDataException`</ph> is thrown, it is handled by the <ph id="ph2">`NorthwindEmployeeDeleted`</ph> method.</source>
          <target state="translated">이 코드 예제에서는 하는 경우는 <ph id="ph1">`NorthwindDataException`</ph> 은 의해 처리 될 throw는 <ph id="ph2">`NorthwindEmployeeDeleted`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Deleting">
          <source>The following code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the preceding code example.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`EmployeeLogic`</ph> 이전 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control has data caching enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤에서 데이터 캐싱이 활성화되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data caching is enabled for the data source control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터 소스 컨트롤에서 데이터 캐싱을 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports data caching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 캐싱을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>While data is cached, calls to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieve data from the cache rather than the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> creating an instance of the business object and calling its data method.</source>
          <target state="translated">데이터 캐시 되어 있는 동안에 호출는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드는 캐시에서 데이터를 검색 하지 않고 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체의 인스턴스를 만들고 해당 데이터 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>When the cache expires, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method retrieves data from the business object, and then caches the data again.</source>
          <target state="translated">캐시가 만료 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 비즈니스 개체의 데이터를 검색 한 후 다시 데이터를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control automatically caches data when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 데이터를 자동으로 캐시 하는 컨트롤 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 속성이 캐시에 데이터를 캐시 엔트리의 하기 전에 저장 하는 시간 (초)의 수를 나타내는 0 보다 큰 값으로 설정 된 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>A value of 0 indicates an infinitely long cache.</source>
          <target state="translated">값이 0 무한정 캐시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.</source>
          <target state="translated">다음 세 가지 예제는 웹 페이지, 코드 숨김 페이지 클래스 및 Northwind 데이터베이스의 Employees 테이블에서 레코드를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The first example shows a Web page that contains two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">첫 번째 예에서는 두 개가 포함 된 웹 페이지를 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The first <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control are used to retrieve and display employee names from the database.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 검색 하 고 데이터베이스에서 직원 이름을 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The second <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control are used to retrieve and display the employee record that is selected by the user.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 검색 하 고 사용자가 선택 되어 있는 직원 레코드를 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>Caching is enabled for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">캐싱을 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>Therefore, each record is retrieved only one time from the database.</source>
          <target state="translated">따라서 각 레코드는 데이터베이스에서 한 번만 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> property is set to "EmployeeDetails", but any string value can work as the key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 속성이 "EmployeeDetails"로 설정 되어 있지만 임의의 문자열 값을 키로 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The Web page also includes a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control that the user can click to expire the cached data.</source>
          <target state="translated">웹 페이지에 포함 되어는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> 캐시 된 데이터를 만료를 클릭할 수 있는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The second example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> event and a handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> 이벤트 및에 대 한 처리기는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> 의 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> event handler creates a cache item with a key set to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Control.Load&gt;</ph> 이벤트 처리기로 설정 하는 키 캐시 항목이 생성 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event handler removes the cache item whose key is equal to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> 키가 같은 캐시 항목을 제거 하는 이벤트 처리기는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>When the cache item is removed, all the cached data that is dependent on the key is expired.</source>
          <target state="translated">캐시 항목이 제거 되는 키에 종속 된 모든 캐시 된 데이터가 만료 되었습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The third example shows the data access class that interacts with the Northwind database.</source>
          <target state="translated">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The class uses LINQ to query the Employees table.</source>
          <target state="translated">LINQ를 사용 하 여 Employees 테이블을 쿼리 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and the Employees table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스를 나타내는 Northwind 데이터베이스와 Employees 테이블입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> when the method specified by the <ph id="ph3">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property returns a <ph id="ph4">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /&gt;</ph> 속성으로 지정된 메서드가 <ph id="ph3">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph>를 반환할 때 <ph id="ph4">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 설정되어 있는 경우</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>Gets or sets a value that indicates whether the data source control supports paging through the set of data that it retrieves.</source>
          <target state="translated">데이터 소스 컨트롤에서 검색된 데이터 집합을 통해 페이징을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data source control supports paging through the data it retrieves; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터 소스 컨트롤에서 검색된 데이터에 대해 페이징을 지원하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>Paging by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is handled by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> properties of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> and defining a select method in the business object with the proper parameters.</source>
          <target state="translated">페이징은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 설정 하 여 처리 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 의 속성은 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 적절 한 매개 변수를 사용 하 고 비즈니스 개체에서 선택 메서드를 정의 하 고 합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection includes two additional parameters for the first row that is requested and the number of rows that are requested.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 컬렉션 요청 된 첫 번째 행 및 요청 된 행의 수에 대 한 두 개의 추가 매개 변수를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>These two parameters are named as defined by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> properties.</source>
          <target state="translated">에 정의 된 대로이 두 매개 변수 이름은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The <ph id="ph1">`Select`</ph> method should return the requested number of rows, starting at the specified index.</source>
          <target state="translated"><ph id="ph1">`Select`</ph> 메서드 요청된 수가 지정된 된 인덱스에서 시작 하는 행을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>Because the data might not divide evenly by the page size, the last page might contain fewer rows.</source>
          <target state="translated">데이터 페이지 크기에 따라 균등 하 게 나누지 수 때문에 적은 수의 행 마지막 페이지에 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>Thus, the number of rows that are requested is actually the maximum number of rows that are returned.</source>
          <target state="translated">따라서 요청 된 행의 수는 실제로 반환 되는 행의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>When paging is enabled on the associated data-bound control, the data-bound control calls the <ph id="ph1">`Select`</ph> method with the start index and number of rows that are required.</source>
          <target state="translated">연결된 된 데이터 바인딩된 컨트롤에서 페이징이 활성화 된 데이터 바인딩 컨트롤 호출는 <ph id="ph1">`Select`</ph> 메서드 시작 인덱스와 요청 된 행의 수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>Additionally, if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property is set, the data-bound control calls the method before rendering the pager controls.</source>
          <target state="translated">또한 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성이 설정 되 면 데이터 바인딩된 컨트롤 페이저 컨트롤을 렌더링 하기 전에 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control has paging enabled with a page size of 5, and the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property returns 20, only 4 pages are displayed in the pager.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤에서 페이징을 사용 하 여 지정 된 장치와 5의 페이지 크기는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성 반환 20, 호출기에 4 개의 페이지만 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</source>
          <target state="translated">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The Web page contains an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control whose <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">웹 페이지에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property is set to the name of a method that returns the total number of records in the query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성 레코드의 총 수는 쿼리에서 반환 하는 메서드의 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> property are set to the names of the parameters that are used in the Select method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 속성 Select 메서드에서 사용 되는 매개 변수 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The page also contains a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">페이지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The second example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The code in the handler sets the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> property to the user's selection.</source>
          <target state="translated">처리기 집합의 코드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> 속성을 사용자의 선택 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The third example shows the data access class that retrieves data from the Customers table.</source>
          <target state="translated">세 번째 예에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>It includes a method named <ph id="ph1">`GetSubsetOfEmployees`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">라는 메서드를 포함 <ph id="ph1">`GetSubsetOfEmployees`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The example also includes a method named <ph id="ph1">`GetEmployeeCount`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">이 예제에는 또한 라는 메서드가 포함 되어 <ph id="ph1">`GetEmployeeCount`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The class uses LINQ to query the Customers table.</source>
          <target state="translated">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스를 Northwind 데이터베이스와 Customers 테이블을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>Gets or sets a filtering expression that is applied when the method that is specified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 속성으로 지정된 메서드가 호출될 때 적용되는 필터링 식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>A string that represents a filtering expression that is applied when data is retrieved by using the method or function identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 속성으로 식별된 메서드나 함수를 사용하여 데이터를 검색할 때 적용되는 필터링 식을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports filtering data only when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method returns a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 필터링을 지 원하는 경우에만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 개체.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The syntax that is used for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property is a format string–style expression.</source>
          <target state="translated">에 사용 되는 구문에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성은 형식 문자열 스타일 식입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The filter expression syntax is the same syntax that is accepted by the <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property.</source>
          <target state="translated">필터 식 구문은에 허용 되는 동일한 구문을 <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>If you add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection, you can also include format string placeholders.</source>
          <target state="translated">매개 변수를 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션 형식 문자열 자리 표시자를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>For example, include <ph id="ph1">`"{0}"`</ph> in the expression to substitute for parameter values.</source>
          <target state="translated">예를 들어 포함 <ph id="ph1">`"{0}"`</ph> 매개 변수 값에 대 한 대체 식에 있습니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The placeholders are replaced according to the index of the parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">인덱스에 있는 매개 변수 자리 표시자는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>You can include parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수를 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>If the type of the parameter is a string or character type, enclose the parameter in single quotation marks.</source>
          <target state="translated">매개 변수 형식의 문자열 또는 문자 형식인 경우 매개 변수를 작은따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>Quotation marks are not required if the parameter is a numeric type.</source>
          <target state="translated">매개 변수가 숫자 형식인 경우에 따옴표가 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection contains the parameters that are evaluated for the placeholders that are found in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 에 있는 자리 표시자에 대 한 계산 되는 매개 변수를 포함 하는 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>You should validate any filter parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 필터 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object that is returned by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 에서 반환 되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성으로 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하는 보안 조치입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The following code example demonstrates how to display filtered data using an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to retrieve data from a middle-tier business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display the results.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 중간 계층 비즈니스 개체에서 데이터를 검색 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 결과 표시 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control can filter data only when the method that retrieves the data retrieves it as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 데이터를 검색 하는 메서드를로 검색 하는 경우에 데이터를 필터링 할 수는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>For this reason, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property identifies a business object method that retrieves data as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이러한 이유로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성으로 데이터를 검색 하는 비즈니스 개체 메서드를 식별 한 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The code example consists of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control, and a <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button.</source>
          <target state="translated">코드 예제는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 및 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> is populated with the name of one of the Northwind Traders employees.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 은 Northwind Traders 직원 중 하나의 이름으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> displays information about the employee that is identified by the name in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에서 이름으로 식별 되는 직원에 대 한 정보가 표시 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>To retrieve data on another employee, enter the full name of the employee in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>, and then click the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button.</source>
          <target state="translated">다른 직원에 대 한 데이터를 검색 하려면에 있는 직원의 전체 이름을 입력는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>, 클릭 하 고는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property specifies an expression that is used to filter the data that is retrieved by the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성으로 지정 된 메서드에 의해 검색 되는 데이터를 필터링 하는 데 사용 되는 식을 지정는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>It uses parameter placeholders that are evaluated to the parameters that are contained in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">에 포함 된 매개 변수 계산 되는 매개 변수 자리 표시자를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces.</source>
          <target state="translated">이 예제에서는 매개 변수 자리 표시자 매개 변수 형식의 공백을 포함할 수 있는 문자열 형식에는 작은따옴표에 의해 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>If the type of the parameter is a numeric or date type, bounding quotation marks are not required.</source>
          <target state="translated">매개 변수 형식의 숫자 또는 날짜 형식인 경우에 따옴표가 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The following code example provides an example of a middle-tier business object that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The code example consists of two basic classes:</source>
          <target state="translated">코드 예제에서는 두 개의 기본 클래스로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">`EmployeeLogic`</ph> class, which is a class that encapsulates business logic.</source>
          <target state="translated"><ph id="ph1">`EmployeeLogic`</ph> 클래스는 비즈니스 논리를 캡슐화 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">`NorthwindEmployee`</ph> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployee`</ph> 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>For simplicity, the <ph id="ph1">`EmployeeLogic`</ph> class creates a static set of data, rather than retrieving the data from a data tier.</source>
          <target state="translated">간단히 하기 위해는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 데이터 계층에서 데이터를 검색 하는 것이 아니라 데이터를 정적 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.</source>
          <target state="translated">또한이 샘플의 필터링을 보여 주기는 Northwind Traders 직원 전체 이름을 제공할 수 있습니다에 의존 하기 때문에이 예제에 대 한 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.</source>
          <target state="translated">전체 작업 예제에 대 한 컴파일 및 이러한 클래스를 제공 하는 Web Forms 코드 예제와 함께 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph> property was set and the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> method does not return a <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> or <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph> 속성이 설정되어 있고 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> 메서드가 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>를 반환하지 않는 경우</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>Occurs before a filter operation.</source>
          <target state="translated">필터 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Filtering&gt;</ph> event to perform validation operations on filter parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control performs a filter operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Filtering&gt;</ph> 하기 전에 필터 매개 변수 값에 대해 유효성 검사 작업을 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 필터 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>You can cancel the selected operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">설정 하 여 선택한 작업을 취소할 수는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&gt;</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>The event is raised only if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property is set.</source>
          <target state="translated">경우에 이벤트가 발생 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType&gt;</ph> event delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType&gt;</ph> 에 위임 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType&gt;</ph> 의 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 와 연결 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>You should validate any filter parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 필터 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object that is returned by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 에서 반환 되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성으로 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하는 보안 조치입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Filtering">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>Gets a collection of parameters that are associated with any parameter placeholders in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph> string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains a set of parameters associated with any parameter placeholders found in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports filtering data only when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method returns a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 필터링을 지 원하는 경우에만 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 개체.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The syntax that is used for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> is a format string–style expression.</source>
          <target state="translated">에 사용 되는 구문에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 형식 문자열 스타일 식입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The filter expression syntax is the same syntax that is accepted by the <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property.</source>
          <target state="translated">필터 식 구문은에 허용 되는 동일한 구문을 <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>If you add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection, you can also include format string placeholders.</source>
          <target state="translated">매개 변수를 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션 형식 문자열 자리 표시자를 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>For example, include <ph id="ph1">`"{0}"`</ph> in the expression to substitute for parameter values.</source>
          <target state="translated">예를 들어 포함 <ph id="ph1">`"{0}"`</ph> 매개 변수 값에 대 한 대체 식에 있습니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The placeholders are replaced according to the index of the parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">인덱스에 있는 매개 변수 자리 표시자는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>You can include parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수를 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>If the parameter is a string or character type, enclose the parameter in single quotation marks.</source>
          <target state="translated">매개 변수는 문자열 또는 문자 형식인 경우 매개 변수를 작은따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>Quotation marks are not required if the parameter is a numeric type.</source>
          <target state="translated">매개 변수가 숫자 형식인 경우에 따옴표가 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The first code example demonstrates how to display filtered data using an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object to retrieve data from a middle-tier business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display the results.</source>
          <target state="translated">첫 번째 코드 예제를 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 결과 표시 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The second code example provides an example of a middle-tier business object that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The following code example demonstrates how to display filtered data using an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to retrieve data from a middle-tier business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display the results.</source>
          <target state="translated">다음 코드 예제를 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 중간 계층 비즈니스 개체에서 데이터를 검색 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 결과 표시 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control can filter data only when the method that retrieves the data retrieves it as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 데이터를 검색 하는 메서드를로 검색 하는 경우에 데이터를 필터링 할 수는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>For this reason, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property identifies a business object method that retrieves data as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이러한 이유로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성으로 데이터를 검색 하는 비즈니스 개체 메서드를 식별 한 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The code example consists of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control, and a <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button.</source>
          <target state="translated">코드 예제는는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 및 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> is populated with the name of one of the Northwind Traders employees.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 은 Northwind Traders 직원 중 하나의 이름으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> displays information about the employee that is identified by the name in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에서 이름으로 식별 되는 직원에 대 한 정보가 표시 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>To retrieve data on another employee, in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>, enter the full name of the employee, and then click the <bpt id="p1">**</bpt>Submit<ept id="p1">**</ept> button.</source>
          <target state="translated">에 다른 직원에 대 한 데이터를 검색 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>는 직원의 전체 이름을 입력 한 다음 클릭는 <bpt id="p1">**</bpt>전송<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property specifies an expression that is used to filter the data that is retrieved by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성에서 검색 되는 데이터를 필터링 하는 데 사용 되는 식을 지정는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>It uses parameter placeholders that are evaluated to the parameters that are contained in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection.</source>
          <target state="translated">에 포함 된 매개 변수 계산 되는 매개 변수 자리 표시자를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces.</source>
          <target state="translated">이 예제에서는 매개 변수 자리 표시자 매개 변수 형식의 공백을 포함할 수 있는 문자열 형식에는 작은따옴표에 의해 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>If the type of the parameter is a numeric or date type, bounding quotation marks are not required.</source>
          <target state="translated">매개 변수 형식의 숫자 또는 날짜 형식인 경우에 따옴표가 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> collection contains one parameter, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FormParameter&gt;</ph> object that is bound to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 하나의 매개 변수를 포함 하는 컬렉션 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.FormParameter&gt;</ph> 에 바인딩되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>You should validate any filter parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 필터 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> object that is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">런타임에 매개 변수 값은 필터 식으로 대체 하 고에 적용 됩니다는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 에서 반환 되는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성으로 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하는 보안 조치입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The following code example provides an example of a middle-tier business object that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The code example consists of two basic classes:</source>
          <target state="translated">코드 예제에서는 두 개의 기본 클래스로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">`EmployeeLogic`</ph> class, which is a class that encapsulates business logic.</source>
          <target state="translated"><ph id="ph1">`EmployeeLogic`</ph> 클래스는 비즈니스 논리를 캡슐화 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>The <ph id="ph1">`NorthwindEmployee`</ph> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployee`</ph> 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>For simplicity, the <ph id="ph1">`EmployeeLogic`</ph> class creates a static set of data, rather than retrieving the data from a data tier.</source>
          <target state="translated">간단히 하기 위해는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 데이터 계층에서 데이터를 검색 하는 것이 아니라 데이터를 정적 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.</source>
          <target state="translated">또한이 샘플의 필터링을 보여 주기는 Northwind Traders 직원 전체 이름을 제공할 수 있습니다에 의존 하기 때문에이 예제에 대 한 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.</source>
          <target state="translated">전체 작업 예제에 대 한 컴파일 및 이러한 클래스를 제공 하는 Web Forms 코드 예제와 함께 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters">
          <source>You set the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph> property and the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> method does not return a <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> or <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /&gt;</ph> 속성이 설정되어 있고 <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> 메서드에서 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>을 반환하지 않는 경우</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>The name of the view to retrieve.</source>
          <target state="translated">검색할 뷰의 이름입니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>Because the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> supports only one view, <bpt id="p1">&lt;c&gt;</bpt>viewName<ept id="p1">&lt;/c&gt;</ept> is ignored.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>는 한 개의 뷰만 지원하기 때문에 <bpt id="p1">&lt;c&gt;</bpt>viewName<ept id="p1">&lt;/c&gt;</ept>은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>Retrieves the named data source view that is associated with the data source control.</source>
          <target state="translated">데이터 소스 컨트롤이 연결된 명명된 데이터 소스 뷰를 검색합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /&gt;</ph> named <ph id="ph2">&lt;see langword="DefaultView" /&gt;</ph> that is associated with the <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /&gt;</ph>와 연결된 <ph id="ph2">&lt;see langword="DefaultView" /&gt;</ph>라는 이름의 <ph id="ph3">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports only one data source view.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 하나의 데이터 원본 뷰를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>As with all data source view objects, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> that is associated with the data source control defines its capabilities, performs all the work that is necessary to retrieve data from the underlying data storage, and performs operations such as sorting, inserting, deleting, and updating.</source>
          <target state="translated">모든 데이터 원본 뷰 개체와 마찬가지로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 데이터와 원본 제어 해당 기능을 정의 기본 데이터 저장소에서 데이터를 검색 해야 하는 고 정렬과 같은 작업을 수행 하는 모든 작업을 수행 합니다. 삽입, 삭제 및 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A&gt;</ph> method is intended to be called by data-bound controls, not by page code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A&gt;</ph> 페이지 코드가 아니라 데이터 바인딩된 컨트롤에서 호출 될 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)">
          <source>The specified <ph id="ph1">&lt;paramref name="viewName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or something other than <ph id="ph3">&lt;see langword="DefaultView" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="viewName" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 <ph id="ph3">&lt;see langword="DefaultView" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames">
          <source>Retrieves a collection of names representing the list of view objects that are associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 개체와 연결된 뷰 개체의 목록을 나타내는 이름의 컬렉션을 검색합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the names of the views associated with the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>와 연결된 뷰의 이름이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports only one view, named <ph id="ph2">`DefaultView`</ph>, on its underlying data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 라는 하나의 보기에서 지 원하는 <ph id="ph2">`DefaultView`</ph>, 원본 데이터에 있습니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A&gt;</ph> method returns a single-element collection of this one view name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A&gt;</ph> 메서드가 하나의 뷰 이름의 단일 요소 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A&gt;</ph> method is intended to be called by data-bound controls, not by page code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A&gt;</ph> 페이지 코드가 아니라 데이터 바인딩된 컨트롤에서 호출 될 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>Performs an insert operation by calling the method that is identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /&gt;</ph> property and any parameters in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /&gt;</ph> 속성으로 식별되는 메서드와 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" /&gt;</ph> 컬렉션의 매개 변수를 호출하여 삽입 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>A value that represents the number of rows inserted into the underlying data storage.</source>
          <target state="translated">내부 데이터 저장소로 삽입되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>Before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation is performed, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated">하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 작업이 수행 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> event to examine the values of the parameters and to perform any preprocessing before an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>To perform an insert operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object uses reflection to create an instance of the object that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property.</source>
          <target state="translated">삽입 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 으로 식별 되는 개체의 인스턴스를 만들고 하기 위해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>It then calls the method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property, using any associated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> properties.</source>
          <target state="translated">다음으로 식별 되는 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성, 연결 된 모든를 사용 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>After the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation completes, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph> event.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 작업이 완료 되 면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 와 연결 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>For more information about parameter merging, object lifetime, and method resolution, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>.</source>
          <target state="translated">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>Data-Bound Controls</source>
          <target state="translated">데이터 바인딩 컨트롤</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object is associated with a data-bound control, such as the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, it is not necessary to call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method from page code.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체와 같은 연결 된 데이터 바인딩 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 필요 없는 호출 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 페이지 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Insert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method is invoked directly by the data-bound control instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserted">
          <source>Occurs when an <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /&gt;</ph> operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /&gt;</ph> 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph> 하거나 이벤트를 반환 값 또는 출력 매개 변수의 값을 확인 한 후 예외가 throw 되었는지 여부를 결정 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 작업이 완료 합니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserted">
          <source>The return value, output parameters, and exception handling properties are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>Occurs before an <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /&gt;</ph> 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control performs the insert operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 추가 초기화를 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 삽입 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The parameters are available as an <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> collection that is accessed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> property, which is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> object.</source>
          <target state="translated">매개 변수는 사용할 수는 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 액세스 하는 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> 속성에 의해 노출 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to insert data.</source>
          <target state="translated">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The second code example provides an example of the middle-tier business object that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to insert data.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> displays a new <ph id="ph2">`NorthwindEmployee`</ph> record, along with an automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 <ph id="ph2">`NorthwindEmployee`</ph> 레코드와 자동으로 생성 된 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>After you enter data into the fields of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, click the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">데이터의 필드에 입력 한 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤을 클릭는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property identifies which method performs the insert operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성 삽입 작업을 수행 하는 메서드를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>In this example, the <ph id="ph1">`UpdateEmployeeInfo`</ph> method is used to perform an insert; however, it requires a <ph id="ph2">`NorthwindEmployee`</ph> parameter to insert the data.</source>
          <target state="translated">하지만이 예제에서는 <ph id="ph1">`UpdateEmployeeInfo`</ph> 필요; 메서드는 삽입 수행 하는 데 사용 되는 <ph id="ph2">`NorthwindEmployee`</ph> 매개 변수 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>For this reason, the collection of strings that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control passes automatically is not sufficient.</source>
          <target state="translated">이러한 이유로 컬렉션의 부분 문자열의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 전달 자동으로 충분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The <ph id="ph1">`NorthwindEmployeeInserting`</ph> delegate is an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler&gt;</ph> object that handles the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> event and enables you to manipulate the input parameters before the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation proceeds.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployeeInserting`</ph> 대리자는는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler&gt;</ph> 처리 하는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> 이벤트 및 입력된 매개 변수를 조작할 수 있습니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 작업이 진행 합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>Because the <ph id="ph1">`UpdateEmployeeInfo`</ph> method requires a <ph id="ph2">`NorthwindEmployee`</ph> object as a parameter, one is created using the collection of strings and is added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> collection using a parameter name (<ph id="ph4">`ne`</ph>) that the method expects.</source>
          <target state="translated">때문에 <ph id="ph1">`UpdateEmployeeInfo`</ph> 메서드를 사용 하려면는 <ph id="ph2">`NorthwindEmployee`</ph> 매개 변수로 개체 문자열의 컬렉션을 사용 하 여 하나 및에 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> 매개 변수 이름을 사용 하 여 컬렉션 (<ph id="ph4">`ne`</ph>) 하면 메서드에 필요한 합니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">형식 및 사용 하도록 특별히 설계 되지 않은 메서드는 데이터 원본으로 기존 중간 계층 개체를 사용 하는 경우에 이와 같은 단계를 수행할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation is performed, the method that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 연산을 수행한으로 식별 되는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>If the <ph id="ph1">`Insert`</ph> method of the object has a method signature that includes parameters, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection must contain a parameter with names that match the method signature parameters for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method to complete successfully.</source>
          <target state="translated">경우는 <ph id="ph1">`Insert`</ph> 개체의 메서드는 매개 변수를 포함 하는 메서드 시그니처는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름 가진 매개 변수가 있어야 합니다.는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 메서드를 성공적으로 완료 합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The following code example provides an example of a middle-tier business object that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The code example consists of two basic classes:</source>
          <target state="translated">코드 예제에서는 두 개의 기본 클래스로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The <ph id="ph1">`EmployeeLogic`</ph> class, which is a stateless class that encapsulates business logic.</source>
          <target state="translated"><ph id="ph1">`EmployeeLogic`</ph> 클래스는 비즈니스 논리를 캡슐화 하는 상태 비저장 클래스입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The <ph id="ph1">`NorthwindEmployee`</ph> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployee`</ph> 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>An additional <ph id="ph1">`NorthwindDataException`</ph> class is provided as a convenience.</source>
          <target state="translated">추가 <ph id="ph1">`NorthwindDataException`</ph> 클래스 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>For a complete working example, you must compile and use these classes.</source>
          <target state="translated">전체 작업 예제에 대 한 컴파일 및 이러한 클래스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Inserting">
          <source>The <ph id="ph1">`UpdateEmployeeInfo`</ph> method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.</source>
          <target state="translated"><ph id="ph1">`UpdateEmployeeInfo`</ph> 메서드가 구현 되지 않은 완전히, 됩니다 하지 데이터를 삽입할 Northwind Traders 데이터베이스이 예제를 테스트할 때 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Gets or sets the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control invokes to insert data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤에서 데이터 삽입을 위해 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>A string that represents the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> uses to insert data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 데이터를 삽입할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The business object is assumed to insert data one record at a time, rather than in a batch.</source>
          <target state="translated">비즈니스 개체 일괄 처리 대신 한 번에 하나씩 레코드의 데이터를 삽입으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Object Lifetime</source>
          <target state="translated">개체 수명</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property can be an instance method or a <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) method.</source>
          <target state="translated">로 식별 되는 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성에는 인스턴스 메서드 일 수 또는 <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> Visual basic에서) 메서드.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If it is an instance method, the business object is created and destroyed each time the method specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> events to work with the business object before the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 앞에 비즈니스 개체를 사용 하는 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>You can also handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event that is raised after the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 메서드에 의해 지정 된 후에 발생 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If the business object implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method is called before the object is destroyed.</source>
          <target state="translated">비즈니스 개체를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 메서드는 개체가 소멸 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If the method is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the business object is never created and you cannot handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> events.</source>
          <target state="translated">메서드가 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서), 비즈니스 개체를 만들지는 및 처리할 수 없는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Parameter Merging</source>
          <target state="translated">병합 하는 매개 변수</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Parameters are added to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection from three sources:</source>
          <target state="translated">매개 변수가에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 세 개의 원본에서 컬렉션:</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>From the data-bound control, at run time.</source>
          <target state="translated">런타임에 데이터 바인딩된 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>From the <ph id="ph1">`InsertParameters`</ph> element, declaratively.</source>
          <target state="translated"><ph id="ph1">`InsertParameters`</ph> 요소를 선언적으로 합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>From the <ph id="ph1">`Inserting`</ph> method, programmatically.</source>
          <target state="translated"><ph id="ph1">`Inserting`</ph> 메서드를 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>First, any parameters that are generated from data-bound controls are added to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">첫째, 매개 변수를 데이터 바인딩된 컨트롤에서 생성 된에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is bound to a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that has the columns <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph>, the parameters for <ph id="ph5">`Name`</ph> and <ph id="ph6">`Number`</ph> are added to the collection.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 바인딩되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 열이 있는 컨트롤 <ph id="ph3">`Name`</ph> 및 <ph id="ph4">`Number`</ph>, 매개 변수를 <ph id="ph5">`Name`</ph> 및 <ph id="ph6">`Number`</ph> 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The data type of these parameters is <ph id="ph1">`string`</ph>.</source>
          <target state="translated">이러한 매개 변수의 데이터 형식이 <ph id="ph1">`string`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Next, the parameters that are listed in the <ph id="ph1">`InsertParameters`</ph> element are added.</source>
          <target state="translated">다음에 나와 있는 매개 변수는 <ph id="ph1">`InsertParameters`</ph> 요소가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If a parameter in the <ph id="ph1">`InsertParameters`</ph> element is found with the same name as a parameter that is already in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection, the existing parameter is modified to match the parameter that is specified in the <ph id="ph3">`InsertParameters`</ph> element.</source>
          <target state="translated">경우에 매개 변수는 <ph id="ph1">`InsertParameters`</ph> 요소가 이미 있는 매개 변수의 동일한 이름으로 발견 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 기존 매개 변수 컬렉션에 지정 된 매개 변수의 이름과 일치 하도록 수정 됩니다는 <ph id="ph3">`InsertParameters`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Typically, this is used to modify the type of the data in the parameter.</source>
          <target state="translated">일반적으로이 매개 변수에서 데이터의 유형을 수정 하도록 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Finally, you can programmatically add and remove parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> event, which occurs before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method is run.</source>
          <target state="translated">마지막으로 프로그래밍 방식으로 추가 및 제거할 수 있습니다에 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> 이벤트를 발생 하기 전에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The method is resolved after the parameters are merged.</source>
          <target state="translated">메서드는 매개 변수가 병합 된 후 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Method resolution is discussed in the next section.</source>
          <target state="translated">메서드 해상도 다음 섹션에서 설명 합니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>You should validate any parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The runtime simply substitutes the parameter value into the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property.</source>
          <target state="translated">런타임에 매개 변수 값에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Method Resolution</source>
          <target state="translated">메서드 확인</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph2">`InsertParameters`</ph> element, and the parameters that were added in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> event handler are all merged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 메서드가 호출 되 면 데이터 바인딩된 컨트롤에서 선언적으로 생성 된 매개 변수에서 데이터 필드는 <ph id="ph2">`InsertParameters`</ph> 요소 및에 추가 된 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> 이벤트 처리기 모두 병합 합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>(For more information, see the preceding section.) The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object then attempts to find a method to call.</source>
          <target state="translated">(자세한 내용은 이전 섹션 참조). <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체 호출할 메서드를 찾으려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>First, it looks for one or more methods with the name that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property.</source>
          <target state="translated">에 지정 된 이름 가진 하나 이상의 메서드가 먼저 찾습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If no match is found, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.</source>
          <target state="translated">일치 항목이 없는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If a match is found, it then looks for matching parameter names.</source>
          <target state="translated">일치 하는 항목이 없는 경우 일치 하는 매개 변수 이름을 찾습니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>For example, suppose a type that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property has two methods named <ph id="ph2">`InsertARecord`</ph>.</source>
          <target state="translated">예를 들어 지정 된 형식에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성이 라는 두 가지 방법 <ph id="ph2">`InsertARecord`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>One <ph id="ph1">`InsertARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`InsertARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
          <target state="translated">하나의 <ph id="ph1">`InsertARecord`</ph> 하나의 매개 변수가 <ph id="ph2">`ID`</ph>, 다른 <ph id="ph3">`InsertARecord`</ph> 2 개의 매개 변수가 <ph id="ph4">`Name`</ph> 및 <ph id="ph5">`Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection has only one parameter named <ph id="ph2">`ID`</ph>, the <ph id="ph3">`InsertARecord`</ph> method with just the <ph id="ph4">`ID`</ph> parameter is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션에 명명 된 매개 변수만 <ph id="ph2">`ID`</ph>, <ph id="ph3">`InsertARecord`</ph> 메서드 테이블만 <ph id="ph4">`ID`</ph> 매개 변수 라고 합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The type of the parameter is not checked in resolving the methods.</source>
          <target state="translated">매개 변수 형식의 메서드 확인 과정에서 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The order of the parameters does not matter.</source>
          <target state="translated">매개 변수의 순서가 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property is set, the method is resolved in a different way.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성은 메서드를 다른 방식으로 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> looks for a method with the name that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property that takes one parameter of the type that is specified in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에 지정 된 이름의 메서드를 찾습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 매개 변수 유형 중 하나를 사용 하는 속성에 지정 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>In this case, the name of the parameter does not matter.</source>
          <target state="translated">이 경우 매개 변수의 이름을 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to insert data.</source>
          <target state="translated">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The second code example provides an example of the middle-tier business object that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to insert data.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> displays a new <ph id="ph2">`NorthwindEmployee`</ph> record, along with an automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 <ph id="ph2">`NorthwindEmployee`</ph> 레코드와 자동으로 생성 된 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>After you enter data into the fields of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, click the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">데이터의 필드에 입력 한 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤을 클릭는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property identifies which method performs the insert operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성 삽입 작업을 수행 하는 메서드를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>In this example, the <ph id="ph1">`UpdateEmployeeInfo`</ph> method is used to perform an insert; however, it requires a <ph id="ph2">`NorthwindEmployee`</ph> parameter to insert the data.</source>
          <target state="translated">하지만이 예제에서는 <ph id="ph1">`UpdateEmployeeInfo`</ph> 필요; 메서드는 삽입 수행 하는 데 사용 되는 <ph id="ph2">`NorthwindEmployee`</ph> 매개 변수 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>For this reason, the collection of strings that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control passes automatically is not sufficient.</source>
          <target state="translated">이러한 이유로 컬렉션의 부분 문자열의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 전달 자동으로 충분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The <ph id="ph1">`NorthwindEmployeeInserting`</ph> delegate is an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler&gt;</ph> object that handles the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> event and enables you to manipulate the input parameters before the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation proceeds.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployeeInserting`</ph> 대리자는는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler&gt;</ph> 처리 하는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph> 이벤트 및 입력된 매개 변수를 조작할 수 있습니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 작업이 진행 합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>Because the <ph id="ph1">`UpdateEmployeeInfo`</ph> method requires a <ph id="ph2">`NorthwindEmployee`</ph> object as a parameter, one is created using the collection of strings and is added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> collection using a parameter name (<ph id="ph4">`ne`</ph>) that the method expects.</source>
          <target state="translated">때문에 <ph id="ph1">`UpdateEmployeeInfo`</ph> 메서드를 사용 하려면는 <ph id="ph2">`NorthwindEmployee`</ph> 매개 변수로 개체 문자열의 컬렉션을 사용 하 여 하나 및에 추가 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> 매개 변수 이름을 사용 하 여 컬렉션 (<ph id="ph4">`ne`</ph>) 하면 메서드에 필요한 합니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">형식 및 사용 하도록 특별히 설계 되지 않은 메서드는 데이터 원본으로 기존 중간 계층 개체를 사용 하는 경우에 이와 같은 단계를 수행할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation is performed, the method that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 연산을 수행한으로 식별 되는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>If the <ph id="ph1">`Insert`</ph> method of the object has a method signature that includes parameters, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection must contain a parameter with names that match the method signature parameters for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method to complete successfully.</source>
          <target state="translated">경우는 <ph id="ph1">`Insert`</ph> 개체의 메서드는 매개 변수를 포함 하는 메서드 시그니처는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름 가진 매개 변수가 있어야 합니다.는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 메서드를 성공적으로 완료 합니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The following code example provides an example of a middle-tier business object that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The code example consists of two basic classes:</source>
          <target state="translated">코드 예제에서는 두 개의 기본 클래스로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The <ph id="ph1">`EmployeeLogic`</ph> class, which is a stateless class that encapsulates business logic.</source>
          <target state="translated"><ph id="ph1">`EmployeeLogic`</ph> 클래스는 비즈니스 논리를 캡슐화 하는 상태 비저장 클래스입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The <ph id="ph1">`NorthwindEmployee`</ph> class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.</source>
          <target state="translated"><ph id="ph1">`NorthwindEmployee`</ph> 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>An additional <ph id="ph1">`NorthwindDataException`</ph> class is provided as a convenience.</source>
          <target state="translated">추가 <ph id="ph1">`NorthwindDataException`</ph> 클래스 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>For a complete working example, you must compile and use these classes.</source>
          <target state="translated">전체 작업 예제에 대 한 컴파일 및 이러한 클래스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod">
          <source>The <ph id="ph1">`UpdateEmployeeInfo`</ph> method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.</source>
          <target state="translated"><ph id="ph1">`UpdateEmployeeInfo`</ph> 메서드가 구현 되지 않은 완전히, 됩니다 하지 데이터를 삽입할 Northwind Traders 데이터베이스이 예제를 테스트할 때 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>Gets the parameters collection that contains the parameters that are used by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /&gt;</ph> 속성에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the method identified by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성으로 식별되는 메서드에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The names and types of the parameters that are contained in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection must match the names and types of the parameters that are in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property signature.</source>
          <target state="translated">이름 및 유형의에 포함 된 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션 이름 및에 있는 매개 변수 형식과 일치 해야 합니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성 서명 합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The parameter names are case sensitive.</source>
          <target state="translated">매개 변수 이름은 대/소문자를 구분 합니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>When working with data-bound controls that supply parameters, such as the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control automatically merges any parameters that are explicitly specified in the collection with the parameters that are provided by the data-bound control.</source>
          <target state="translated">와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 작업할 때의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 되는 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 데이터 바인딩된 컨트롤에서 제공합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>This is important because data-bound controls always supply their parameters as <ph id="ph1">&lt;xref:System.String&gt;</ph> types, and if the method signature includes numeric or date types, you must explicitly include a parameter in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection with the correct type.</source>
          <target state="translated">데이터 바인딩된 컨트롤에는 항상 해당 매개 변수를 제공 하기 때문에이 중요 <ph id="ph1">&lt;xref:System.String&gt;</ph> 형식이 있고 메서드 시그니처에 숫자 또는 날짜 형식을 명시적으로 지정 해야 하는 경우에 매개 변수를 포함는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 에 올바른 형식의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control attempts to cast the parameters according to the type that is defined by the parameters in the collection.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 컬렉션의 매개 변수에 의해 정의 된 형식에 따라 매개 변수를 캐스팅 하 려 합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ObjectDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 와 연결 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>For more information about parameter merging, object lifetime, and method resolution, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>.</source>
          <target state="translated">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to insert data.</source>
          <target state="translated">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The second code example provides an example implementation of the <ph id="ph1">`Insert`</ph> method that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예의 예제 구현은 제공는 <ph id="ph1">`Insert`</ph> 첫 번째 코드 예제에 사용 되는 메서드.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to insert data.</source>
          <target state="translated">다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> displays text boxes in which you can enter data for a new <ph id="ph2">`NorthwindEmployee`</ph> record, along with an automatically generated <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">처음에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새에 대 한 데이터를 입력할 수 있는 텍스트 상자를 표시 <ph id="ph2">`NorthwindEmployee`</ph> 레코드와 자동으로 생성 된 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>After you enter data into the fields of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, click the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button.</source>
          <target state="translated">데이터의 필드에 입력 한 후의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤을 클릭는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추입니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property identifies which method performs the insert operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성 삽입 작업을 수행 하는 메서드를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>If you click the <bpt id="p1">**</bpt>Insert<ept id="p1">**</ept> button, the operation is performed using the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property and any parameters that are specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>삽입<ept id="p1">**</ept> 단추를 작업으로 지정 된 메서드를 사용 하 여 수행 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성 및에 지정 된 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>In this code example, one parameter is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection that corresponds to the supervisor's ID.</source>
          <target state="translated">에이 코드 예제에서는 하나의 매개 변수가 지정 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 감독자의 ID에 해당 하는 컬렉션</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>This is because even though the ID is displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.Rows%2A&gt;</ph> collection for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control as a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> object, it is passed as a string to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">ID에 표시 되는 경우에 ¿¡´는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.Rows%2A&gt;</ph> 에 대 한 컬렉션은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 으로 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> 개체에 대 한 문자열로 전달 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>By adding it explicitly to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Type%2A&gt;</ph> property set to the <ph id="ph3">&lt;xref:System.TypeCode.Int32&gt;</ph> value, it will be passed correctly by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> to the method as an <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, not as a string.</source>
          <target state="translated">에 명시적으로 추가 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 사용 하 여 컬렉션은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Type%2A&gt;</ph> 속성이로 설정 된 <ph id="ph3">&lt;xref:System.TypeCode.Int32&gt;</ph> 값을 전달 될에서 올바르게는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 메서드에으로 <ph id="ph5">&lt;xref:System.Int32&gt;</ph>문자열로 아니라 합니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> operation is performed, the method that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 연산을 수행한으로 식별 되는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method of the object has a method signature that includes parameters, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> collection must contain parameters that have names that match the method signature parameters for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> method to complete successfully.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 개체의 메서드는 매개 변수를 포함 하는 메서드 시그니처는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt;</ph> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름을 가진 매개 변수가 있어야 합니다.는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph> 메서드를 성공적으로 완료 합니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>You should validate any parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The runtime simply substitutes the parameter value into the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> property.</source>
          <target state="translated">런타임에 매개 변수 값에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The following code example provides an example implementation of the <ph id="ph1">`Insert`</ph> method that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는의 구현 예제가 제공는 <ph id="ph1">`Insert`</ph> 이전 코드 예제에서 사용 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The <ph id="ph1">`InsertNewEmployeeWrapper`</ph> method is added to the <ph id="ph2">`EmployeeLogic`</ph> middle-tier object that is provided in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class overview to enable the object to work more easily with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control in Web scenarios, without a substantial rewrite to the actual business logic.</source>
          <target state="translated"><ph id="ph1">`InsertNewEmployeeWrapper`</ph> 메서드가 추가 되는 <ph id="ph2">`EmployeeLogic`</ph> 에서 제공 되는 중간 계층 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체 보다 쉽게 작업할 수 있도록 클래스 개요의 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 실제에 다시 쓰지 않고 웹 시나리오에서 비즈니스 논리입니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>To run the example, you must have the <ph id="ph1">`NorthwindEmployee`</ph> class that is provided in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class overview.</source>
          <target state="translated">이 예제를 실행 하려면 있어야는 <ph id="ph1">`NorthwindEmployee`</ph> 에서 제공 되는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>This example illustrates only how to connect the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> to a business object method that gets data for a new database record by using parameters.</source>
          <target state="translated">연결 하는 방법만 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 매개 변수를 사용 하 여 새 데이터베이스 레코드에 대 한 데이터를 가져오는 비즈니스 개체 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters">
          <source>The example does not add records to the database, because the <ph id="ph1">`Save`</ph> method of the <ph id="ph2">`NorthwindEmployee`</ph> class does not include code to update the database.</source>
          <target state="translated">이 예제를 추가 하지 않습니다 레코드는 데이터베이스 때문에 <ph id="ph1">`Save`</ph> 의 메서드는 <ph id="ph2">`NorthwindEmployee`</ph> 클래스는 데이터베이스를 업데이트 하는 코드는 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)">
          <source>An object that contains the saved view state values for the control.</source>
          <target state="translated">해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)">
          <source>Loads the previously saved view state of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control.</source>
          <target state="translated">이전에 저장된 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤의 뷰 상태를 로드합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)">
          <source>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 메서드는.NET Framework 인프라에서 주로 사용 하 고 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)">
          <source>However, control developers can override this method to specify how a custom server control restores its view state.</source>
          <target state="translated">그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET 상태 관리 개요<ept id="p1">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A&gt;</ph> method is used to load the previously saved view state of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A&gt;</ph> 메서드는 이전에 저장 된 뷰 상태를 로드 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /&gt;</ph> method is used primarily by control developers when extending the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /&gt;</ph> 메서드 확장할 때 주로 컨트롤 개발자가 사용 되는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>Gets or sets the name of the business object data retrieval method parameter that is used to indicate the number of records to retrieve for data source paging support.</source>
          <target state="translated">데이터 소스 페이징을 지원하게 위해 검색할 레코드의 수를 나타내는 데 사용되는 비즈니스 개체 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The name of the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> parameter that is used to indicate the number of records to retrieve.</source>
          <target state="translated">검색할 레코드의 수를 나타내는 데 사용되는 <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 매개 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The default is <bpt id="p1">&lt;c&gt;</bpt>"maximumRows"<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;c&gt;</bpt>"maximumRows"<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> property is used to support data source paging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 속성은 데이터 소스 페이징을 지원 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>For information about how paging is supported by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control, see <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>.</source>
          <target state="translated">페이징을 지 원하는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어, 참조 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</source>
          <target state="translated">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The Web page contains an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control whose <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">웹 페이지에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property is set to the name of a method that returns the total number of records in the query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성 레코드의 총 수는 쿼리에서 반환 하는 메서드의 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> property are set to the names of the parameters that are used in the Select method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 속성 Select 메서드에서 사용 되는 매개 변수 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The page also contains a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">페이지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The second example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The code in the handler sets the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> property to the user's selection.</source>
          <target state="translated">처리기 집합의 코드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> 속성을 사용자의 선택 합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The third example shows the data access class that retrieves data from the Customers table.</source>
          <target state="translated">세 번째 예에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>It includes a method named <ph id="ph1">`GetSubsetOfEmployees`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">라는 메서드를 포함 <ph id="ph1">`GetSubsetOfEmployees`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The example also includes a method named <ph id="ph1">`GetEmployeeCount`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">이 예제에는 또한 라는 메서드가 포함 되어 <ph id="ph1">`GetEmployeeCount`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The class uses LINQ to query the Customers table.</source>
          <target state="translated">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스를 Northwind 데이터베이스와 Customers 테이블을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated">
          <source>Occurs after the object that is identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /&gt;</ph> property is created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /&gt;</ph> 속성으로 식별되는 개체가 만들어진 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> event to call other methods on the business object, set properties, or perform other initialization that is specific to the business object before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object calls the business object data method to perform a data operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> 비즈니스 개체의 다른 메서드를 호출 하는 이벤트 속성을 설정 하거나 앞에 비즈니스 개체에만 적용 되는 다른 초기화를 수행할는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 데이터 작업을 수행 하는 비즈니스 개체 데이터 메서드를 호출 하는 개체 .</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated">
          <source>A reference to the object is accessed by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> property, which is exposed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt;</ph> object.</source>
          <target state="translated">액세스 하는 개체에 대 한 참조는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> 속성에 의해 노출 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated">
          <source>If the method that is identified to perform the data operation is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> events are never raised.</source>
          <target state="translated">메서드를 식별 하는 데이터 작업을 수행 하는 데는 경우 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서), <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> 이벤트는 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>Occurs before the object that is identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /&gt;</ph> property is created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /&gt;</ph> 속성으로 식별되는 개체가 만들어지기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>If the method that is identified to perform the data operation is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> events are never raised.</source>
          <target state="translated">메서드를 식별 하는 데이터 작업을 수행 하는 데는 경우 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서), <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> 이벤트는 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control automatically calls the default constructor of a business object to create an instance of it using reflection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 자동으로 리플렉션을 사용 하 여 해당 형식의 인스턴스를 만들려면 비즈니스 개체의 기본 생성자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> event to explicitly call another constructor, and set the instance of the object that results to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> property of the associated <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt;</ph> object.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 이벤트를 명시적으로 다른 생성자를 호출 하 고 결과를 개체의 인스턴스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> 속성은 연결 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display information.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>The second code example provides the middle-tier business object that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display information.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs.</source>
          <target state="translated">웹 페이지에서 수행 하는 모든 데이터 작업에 대 한 (측면에서 시간 또는 리소스)을 만드는 데 비용이 많이 드는 비즈니스 개체를 작업할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</source>
          <target state="translated">부담이 큰 개체가 사용 하는 한 가지 방법은 해당 형식의 인스턴스를 한 번 만들고 다음 나중에 작업 만들고 모든 데이터 작업에 대 한 삭제 하는 대신 캐시 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>In a production application, multiple requests might end up simultaneously using the same instance.</source>
          <target state="translated">프로덕션 응용 프로그램에서 여러 요청이 동시에 같은 인스턴스를 사용 하 여 생길 수 있습니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>Therefore, the object needs to be implemented in a thread-safe manner.</source>
          <target state="translated">따라서 개체는 스레드로부터 안전한 방식으로 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>This code example demonstrates this pattern.</source>
          <target state="translated">이 코드 예제에서는이 패턴을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> event to check the cache for an object first, and only create an instance of the object, if one is not already cached.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 이벤트를 개체에 대 한 캐시를 먼저 확인 하 고 이미 캐시 되지 않으면만 개체의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>Then, handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event to cache the business object for future use, instead of destroying it.</source>
          <target state="translated">그런 다음 처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 않고 나중에 사용할 비즈니스 개체를 캐시 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>In this code example, the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> object is set to <ph id="ph3">`true`</ph> to direct the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> to not call <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method on the object.</source>
          <target state="translated">이 코드 예제는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> 개체로 설정 됩니다 <ph id="ph3">`true`</ph> 직접는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 를 호출 하지 않도록 <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 개체의 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>The following code example provides the example middle-tier business object that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>The code example consists of a basic business object, defined by the <ph id="ph1">`EmployeeLogic`</ph> class, which is a stateful class that encapsulates business logic.</source>
          <target state="translated">에 정의 된 기본 비즈니스 개체의 코드 예제는는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 비즈니스 논리를 캡슐화 하는 상태 저장 클래스입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating">
          <source>For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).</source>
          <target state="translated">전체 작업 예제를 보려면이이 코드를 라이브러리로 컴파일하고 ASP.NET 페이지 (.aspx 파일)에서 이러한 클래스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>Occurs before the object that is identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /&gt;</ph> property is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /&gt;</ph> 속성으로 식별되는 개체가 삭제되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event is always raised before the instance of the business object is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트는 비즈니스 개체의 인스턴스가 삭제 되기 전에 항상 발생 합니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>If the business object implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method is called after this event is raised.</source>
          <target state="translated">비즈니스 개체를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 메서드는이 이벤트가 발생 한 후에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event to call other methods on the object, set properties, or perform clean-up that is specific to the object before the object is destroyed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 개체에서 다른 메서드를 호출 하는 이벤트 속성을 설정 하거나 개체를 제거 하기 전에 개체에 지정 된 정리를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>A reference to the object is accessed by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> property, which is exposed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt;</ph> object.</source>
          <target state="translated">액세스 하는 개체에 대 한 참조는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> 속성에 의해 노출 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>When you use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a LINQ to SQL class, you must cancel the disposing of the data-context class in an handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤에 대 한 처리기의 데이터 컨텍스트 클래스의 삭제 취소 해야는 LINQ to SQL 클래스와는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>This step is necessary because LINQ to SQL supports deferred execution, whereas the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control tries to dispose the data context after the Select operation.</source>
          <target state="translated">이 단계는 필요 LINQ to SQL에서는 지연 된 실행을 지원 하기 때문에 반면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 선택 작업 한 후 데이터 컨텍스트를 삭제 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display information.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 개체와 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>The second code example provides the middle-tier business object that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display information.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs.</source>
          <target state="translated">웹 페이지에서 수행 하는 모든 데이터 작업에 대 한 (측면에서 시간 또는 리소스)을 만드는 데 비용이 많이 드는 비즈니스 개체를 작업할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</source>
          <target state="translated">부담이 큰 개체가 사용 하는 한 가지 방법은 해당 형식의 인스턴스를 한 번 만들고 다음 나중에 작업 만들고 모든 데이터 작업에 대 한 삭제 하는 대신 캐시 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>This example demonstrates this pattern.</source>
          <target state="translated">이 예제에서는이 패턴을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> event to check the cache for an object first, and only create an instance of it, if one is not already cached.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 이벤트를 개체에 대 한 캐시를 먼저 확인 하 고만 아직 캐시 되지 않으면,의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>Then, handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event to cache the business object for future use, instead of destroying it.</source>
          <target state="translated">그런 다음 처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 않고 나중에 사용할 비즈니스 개체를 캐시 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>In this code example, the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> object is set to <ph id="ph3">`true`</ph> to direct the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> to not call the <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method on the object.</source>
          <target state="translated">이 코드 예제는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> 개체로 설정 됩니다 <ph id="ph3">`true`</ph> 직접는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 를 호출 하지 않도록는 <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 개체의 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>The following code example provides the example middle-tier business object that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>The code example consists of a basic business object, defined by the <ph id="ph1">`EmployeeLogic`</ph> class, which is a stateful class that encapsulates business logic.</source>
          <target state="translated">에 정의 된 기본 비즈니스 개체의 코드 예제는는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 비즈니스 논리를 캡슐화 하는 상태 저장 클래스입니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).</source>
          <target state="translated">전체 작업 예제를 보려면이이 코드를 라이브러리로 컴파일하고 ASP.NET 페이지 (.aspx 파일)에서 이러한 클래스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing">
          <source>The following example shows how to handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event when using an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a LINQ to SQL class.</source>
          <target state="translated">다음 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 사용 하는 경우 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> LINQ to SQL 클래스를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>Gets or sets a format string to apply to the names of the parameters for original values that are passed to the <ph id="ph1">&lt;see langword="Delete" /&gt;</ph> or <ph id="ph2">&lt;see langword="Update" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Delete" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="Update" /&gt;</ph> 메서드에 전달된 원래 값에 대한 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>A string that represents a format string applied to the names of any <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> or key parameters passed to the <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> or <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph> 메서드에 전달된 모든 <ph id="ph1">&lt;paramref name="oldValues" /&gt;</ph> 또는 키 매개 변수의 이름에 적용된 서식 문자열을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>The default is <bpt id="p1">&lt;c&gt;</bpt>"{0}"<ept id="p1">&lt;/c&gt;</ept>, which means the parameter name is the field name.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;c&gt;</bpt>"{"이 (0}<ept id="p1">&lt;/c&gt;</ept>, 해당 매개 변수 이름이 필드 이름입니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> property is applied to primary keys only, such as those that are identified with the <ph id="ph2">`DataKeyNames`</ph> property of a data-bound control, or in delete and update scenarios where the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, and the set of original values are passed to the corresponding data method.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 속성으로 식별 하는 것과 같은 기본 키에 적용 됩니다는 <ph id="ph2">`DataKeyNames`</ph> 또는 삭제에는 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt;</ph> 속성이로 설정 되어는 <ph id="ph4">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 값 및 원래 값의 집합은 해당 데이터 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>The following are two common scenarios where you might change the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> property:</source>
          <target state="translated">다음은 변경할 수 있는 두 가지 일반적인 시나리오는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>You might want to change the property to differentiate between old and new values in updates.</source>
          <target state="translated">업데이트에 이전 및 새 값을 구분할 수 속성을 변경 하려면 원하는 수 있습니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt;</ph> property is set to the <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> value, parameters for both the original and new values are added to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt;</ph> 속성이로 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.ConflictOptions.CompareAllValues&gt;</ph> 의 값, 매개 변수는 원래 값과 새 값 모두에 추가 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>Without the formatting string, two parameters with the same name would be created for each data field.</source>
          <target state="translated">서식 문자열 사용 하지 않고 동일한 이름 가진 두 개의 매개 변수는 각 데이터 필드에 대 한 만들어졌습니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>By changing the name of the original value parameter, you can compare the data to the original data source to detect conflicts and compare key values.</source>
          <target state="translated">원래 값 매개 변수의 이름을 변경 하 여 충돌을 감지 하 고 키 값을 비교 하려면 데이터 원본에 데이터를 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>Some visual designers implement a particular naming scheme for original values and keys.</source>
          <target state="translated">원래 값 및 키에 대 한 특정 이름 지정 체계를 구현 하는 일부 시각적 디자이너입니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains event data.</source>
          <target state="translated">이벤트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)">
          <source>Adds a <ph id="ph1">&lt;see cref="E:System.Web.UI.Page.LoadComplete" /&gt;</ph> event handler to the page that contains the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.Page.LoadComplete" /&gt;</ph> 이벤트 처리기를 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤이 포함된 페이지에 추가합니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)">
          <source>When overriding the <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /&gt;</ph> method in a derived class, be sure to call the <ph id="ph2">&lt;see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /&gt;</ph> method for the base class so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 메서드를 호출 해야는 <ph id="ph2">&lt;see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /&gt;</ph> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture">
          <source>Gets a or sets a value that indicates what culture information is used when converting string values to actual property types in order to construct an object of the type indicated by <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /&gt;</ph>이 나타내는 형식의 개체를 생성하기 위해 문자열 값을 실제 속성 형식으로 변환할 때 사용되는 문화권 정보를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture">
          <source>The culture information.</source>
          <target state="translated">문화권 정보입니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState">
          <source>Saves the state of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>컨트롤의 상태를 저장합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState">
          <source>Returns the server control's current view state; otherwise, returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if there is no view state associated with the control.</source>
          <target state="translated">서버 컨트롤의 현재 뷰 상태를 반환합니다. 컨트롤과 연결된 뷰 상태가 없는 경우에는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>Retrieves data from the underlying data storage by calling the method that is identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property with the parameters in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 속성으로 식별되는 메서드를 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" /&gt;</ph> 컬렉션의 매개 변수와 함께 호출하여 내부 데이터 저장소에서 데이터를 검색합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> list of data rows.</source>
          <target state="translated">데이터 행의 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 목록입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The specified method might have any method signature, but it must return or be derived from one of the types listed in the following table for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to call it successfully.</source>
          <target state="translated">지정된 된 메서드는 어떤 메서드 시그니처를 가질 수 있지만 반환 하거나에 대 한 다음 표에 나열 된 형식 중 하나에서 파생 될는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 성공적으로 호출 합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>Return type</source>
          <target state="translated">반환 형식</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>Action</source>
          <target state="translated">작업</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> is created by using the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and returned by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 사용 하 여 만든는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 반환한는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The first <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> is extracted and a <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> is created and returned by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 추출 및 <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> 만들어지고에서 반환 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The object is wrapped in a one-element <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> collection and returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">개체가 단일 요소에 래핑됩니다 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 컬렉션에 의해 반환 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property can be an instance method or a <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) method.</source>
          <target state="translated">로 식별 되는 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에는 인스턴스 메서드 일 수 또는 <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> Visual basic에서) 메서드.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>If it is an instance method, the business object is created and destroyed each time the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property is called, except that the same instance is used to call the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property and the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property.</source>
          <target state="translated">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성이 호출 제외 하 고 지정 된 메서드를 호출 하 고 동일한 인스턴스가 사용 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 및 지정 된 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>However, to enable caching and filtering scenarios, the return value must be a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">그러나 캐싱 및 필터링 시나리오를 사용 하려면 반환 값 이어야 합니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>While the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class does not implement the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control automatically extracts the default <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> control, which implements the <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph>.</source>
          <target state="translated">동안는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 클래스를 구현 하지 않습니다는 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 기본값을 자동으로 추출 <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> 컨트롤을 구현 하는 <ph id="ph5">&lt;xref:System.Collections.IEnumerable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>Before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> operation is performed, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 작업이 수행 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event to examine the values of the parameters and to perform any preprocessing before a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>To perform a data retrieval operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object uses reflection to create an instance of the object that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property.</source>
          <target state="translated">데이터 검색 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 으로 식별 되는 개체의 인스턴스를 만들고 하기 위해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>It then calls the method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property, using any associated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> properties.</source>
          <target state="translated">다음으로 식별 되는 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성, 연결 된 모든를 사용 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>After the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> operation completes, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> event.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 작업이 완료 되 면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> object and caching is enabled, the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> retrieves data from and saves data to the cache during the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph> 개체 및 캐싱을 사용 하도록 설정는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에서 데이터를 검색 하는 동안 캐시에 데이터를 저장 하는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The cache is created, discarded, or refreshed based on the caching behavior that is specified by the combination of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> properties.</source>
          <target state="translated">캐시 또는 생성 된 경우 삭제 된 새로 고침의 조합에 의해 지정 된 캐싱 동작에 따라는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> object, and a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> property has been specified, it is evaluated with any supplied <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> properties and the resulting filter is applied to the list of data during the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에서 반환은 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 개체 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt;</ph> 속성이 지정 된 경우, 제공 된를 사용 하 여 확인 됩니다 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt;</ph> 속성 및 결과 필터 목록 중 데이터에 적용 되는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 와 연결 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>For more information about parameter merging, object lifetime, and method resolution, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>.</source>
          <target state="translated">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>Data-Bound Controls</source>
          <target state="translated">데이터 바인딩 컨트롤</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is associated with a data-bound control, such as the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, it is not necessary to call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method from page code.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어와 같은 연결 된 데이터 바인딩 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 필요 없는 호출 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 페이지 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is invoked directly by the data-bound control instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Select">
          <source>For a code example, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph>.</source>
          <target state="translated">코드 예제를 보려면 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>Gets or sets the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control invokes to retrieve a row count.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤이 행 수를 검색할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>A string that represents the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> uses to retrieve a row count.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>가 행 수를 검색할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The method must return an integer (<ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">이 메서드는 정수(<ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>)를 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property identifies a business object method that is used to retrieve a total row count, to support data source paging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성 데이터 소스 페이징을 지원 하기 위해 총 행 수를 검색 하는 데 사용 되는 비즈니스 개체 메서드를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property is evaluated only if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성은 경우에 평가 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>For information about how paging is supported by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control, see <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>.</source>
          <target state="translated">페이징을 지 원하는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어, 참조 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</source>
          <target state="translated">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The Web page contains an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control whose <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">웹 페이지에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property is set to the name of a method that returns the total number of records in the query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성 레코드의 총 수는 쿼리에서 반환 하는 메서드의 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> property are set to the names of the parameters that are used in the Select method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 속성 Select 메서드에서 사용 되는 매개 변수 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The page also contains a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">페이지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The second example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The code in the handler sets the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> property to the user's selection.</source>
          <target state="translated">처리기 집합의 코드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> 속성을 사용자의 선택 합니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The third example shows the data access class that retrieves data from the Customers table.</source>
          <target state="translated">세 번째 예에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>It includes a method named <ph id="ph1">`GetSubsetOfEmployees`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">라는 메서드를 포함 <ph id="ph1">`GetSubsetOfEmployees`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The example also includes a method named <ph id="ph1">`GetEmployeeCount`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">이 예제에는 또한 라는 메서드가 포함 되어 <ph id="ph1">`GetEmployeeCount`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The class uses LINQ to query the Customers table.</source>
          <target state="translated">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스를 Northwind 데이터베이스와 Customers 테이블을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>Occurs when a <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 하거나 이벤트를 반환 값 또는 출력 매개 변수의 값을 확인 한 후 예외가 throw 되었는지 여부를 결정 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 작업이 완료 합니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The return value, output parameters, and exception handling properties are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.</source>
          <target state="translated">다음 세 가지 예제는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자를 검색 하 고 Northwind 데이터베이스의 Employees 테이블의 레코드를 업데이트할 수 있도록 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The first example shows a Web page that contains two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">첫 번째 예에서는 두 개가 포함 된 웹 페이지를 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The first <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control are used to retrieve and display employee names from the database.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 검색 하 고 데이터베이스에서 직원 이름을 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The second <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤은 검색, 표시 및 사용자가 선택 되어 있는 직원 레코드의 데이터를 수정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The second example shows handlers for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> events.</source>
          <target state="translated">두 번째 예에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> event handler serializes the object that contains data that was retrieved from the Employee table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 이벤트 처리기는 Employee 테이블 로부터 검색 된 데이터를 포함 하는 개체를 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The serialized object is stored in view state.</source>
          <target state="translated">직렬화 된 개체는 뷰 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event handler deserializes the object in view state that contains the original data for the data record that is being updated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트 처리기에서 업데이트 되는 데이터 레코드에 대 한 원본 데이터를 포함 하는 뷰 상태 개체를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The object that contains the original data is passed as a parameter to the Update method.</source>
          <target state="translated">원래 데이터를 포함 하는 개체의 Update 메서드를 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.</source>
          <target state="translated">다른 프로세스에 의해 데이터가 수정 되었는지 여부를 확인 하려면 사용할 수 있도록 원래 데이터를 데이터베이스에 전달 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The third example shows the data access class that interacts with the Northwind database.</source>
          <target state="translated">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The class uses LINQ to query and update the Employees table.</source>
          <target state="translated">LINQ를 사용 하 여를 쿼리하고 Employees 테이블을 업데이트 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and Employees table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스 및 Employees 테이블을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selected">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selecting">
          <source>Occurs before a <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /&gt;</ph> 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selecting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control performs the data retrieval operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 추가 초기화를 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 데이터 검색 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selecting">
          <source>The parameters are available as an <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> collection that is accessed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> property, which is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> object.</source>
          <target state="translated">매개 변수는 사용할 수는 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 액세스 하는 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> 속성에 의해 노출 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selecting">
          <source>This event can be fired twice for a single call to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method, if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property is set.</source>
          <target state="translated">이 이벤트를 한 번 호출에 대해 두 번 발생 시킬 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드를 하는 경우는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selecting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&gt;</ph> object is used to determine if select was called to retrieve data or retrieve the count.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&gt;</ph> 개체 선택 하는 경우이 호출 되어 데이터를 검색 하거나 검색할 수를 결정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Selecting">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Gets or sets the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control invokes to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤이 데이터를 검색할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>A string that represents the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> uses to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 데이터를 검색할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The specified method can have any method signature, but it must return one of the types shown in the following table for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control to call it successfully.</source>
          <target state="translated">지정된 된 메서드는 어떤 메서드 시그니처를 가질 수 있지만 대 한 다음 표에 표시 된 형식 중 하나를 반환 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤을 성공적으로 호출 합니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Return type</source>
          <target state="translated">반환 형식</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Action</source>
          <target state="translated">작업</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> is created using the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and returned by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 사용 하 여 만들어집니다는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 반환한는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> is returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The first <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> is extracted, and a <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> is created and returned by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 추출 되는 및 <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> 만들어지고에서 반환 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The object is wrapped in a one-element <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> collection and returned by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method.</source>
          <target state="translated">개체가 단일 요소에 래핑됩니다 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 컬렉션에 의해 반환 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class to delete or update data, make sure that the parameter names configured for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> collection or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection match the column names that are returned by the select method.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 삭제 하거나 데이터를 업데이트, 매개 변수 이름에 대해 구성 되었는지 확인 하는 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤에 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt;</ph> 컬렉션 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션 select 메서드에 의해 반환 되는 열 이름과 일치 .</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Object Lifetime</source>
          <target state="translated">개체 수명</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property can be an instance method or a <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) method.</source>
          <target state="translated">로 식별 되는 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성에는 인스턴스 메서드 일 수 또는 <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> Visual basic에서) 메서드.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>If it is an instance method, the business object is created and destroyed each time the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> events to work with the business object before the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 변수로 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>You can also handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event that is raised after the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 메서드에 의해 지정 된 후에 발생 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>If the business object implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method is called before the object is destroyed.</source>
          <target state="translated">비즈니스 개체를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 메서드는 개체가 소멸 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>If the method is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the business object is never created and you cannot handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> events.</source>
          <target state="translated">메서드가 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서), 비즈니스 개체를 만들지는 및 처리할 수 없는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Parameter Merging</source>
          <target state="translated">병합 하는 매개 변수</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Parameters are added to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection from these sources:</source>
          <target state="translated">매개 변수가에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 이러한 원본의 컬렉션:</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Declaratively from the <ph id="ph1">`SelectParameters`</ph> element.</source>
          <target state="translated">선언적으로 <ph id="ph1">`SelectParameters`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Programmatically from the <ph id="ph1">`Selecting`</ph> method.</source>
          <target state="translated">프로그래밍 방식으로 <ph id="ph1">`Selecting`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>First, the parameters listed in the <ph id="ph1">`SelectParameters`</ph> element are added.</source>
          <target state="translated">첫째,에 나열 된 매개 변수는 <ph id="ph1">`SelectParameters`</ph> 요소가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Second, parameters are programmatically added and removed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event, which occurs before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is run.</source>
          <target state="translated">둘째, 매개 변수는 프로그래밍 방식으로 추가 및 제거에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트를 발생 하기 전에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The method is resolved after the parameters are merged.</source>
          <target state="translated">메서드는 매개 변수가 병합 된 후 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Method resolution is discussed in the next section.</source>
          <target state="translated">메서드 해상도 다음 섹션에서 설명 합니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>You should validate any parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The runtime simply substitutes the parameter value into the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">런타임에 매개 변수 값에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>Method Resolution</source>
          <target state="translated">메서드 확인</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph2">`SelectParameters`</ph> element, and the parameters that were added in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event handler are all merged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드가 호출 되 면 데이터 바인딩된 컨트롤에서 선언적으로 생성 된 매개 변수에서 데이터 필드는 <ph id="ph2">`SelectParameters`</ph> 요소 및에 추가 된 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트 처리기 모두 병합 합니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>(For more information, see the preceding section.) The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control then attempts to find a method to call.</source>
          <target state="translated">(자세한 내용은 이전 섹션 참조). <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 다음 시도 호출할 메서드를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>First, it looks for one or more methods with the name that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">에 지정 된 이름 가진 하나 이상의 메서드가 먼저 찾습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>If no match is found, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.</source>
          <target state="translated">일치 항목이 없는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>If a match is found, it then looks for matching parameter names.</source>
          <target state="translated">일치 하는 항목이 없는 경우 일치 하는 매개 변수 이름을 찾습니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>For example, suppose a type that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property has two methods named <ph id="ph2">`SelectARecord`</ph>.</source>
          <target state="translated">예를 들어 지정 된 형식에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성이 라는 두 가지 방법 <ph id="ph2">`SelectARecord`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>One <ph id="ph1">`SelectARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`SelectARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
          <target state="translated">하나의 <ph id="ph1">`SelectARecord`</ph> 하나의 매개 변수가 <ph id="ph2">`ID`</ph>, 다른 <ph id="ph3">`SelectARecord`</ph> 2 개의 매개 변수가 <ph id="ph4">`Name`</ph> 및 <ph id="ph5">`Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection has only one parameter named <ph id="ph2">`ID`</ph>, the <ph id="ph3">`SelectARecord`</ph> method with just the <ph id="ph4">`ID`</ph> parameter is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 컬렉션에 명명 된 매개 변수만 <ph id="ph2">`ID`</ph>, <ph id="ph3">`SelectARecord`</ph> 메서드 테이블만 <ph id="ph4">`ID`</ph> 매개 변수 라고 합니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The type of the parameter is not checked in resolving the methods.</source>
          <target state="translated">매개 변수 형식의 메서드 확인 과정에서 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The order of the parameters does not matter.</source>
          <target state="translated">매개 변수의 순서가 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property is set, the method is resolved in a different way.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성은 메서드를 다른 방식으로 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> looks for a method with the name that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property that takes one parameter of the type that is specified in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에 지정 된 이름의 메서드를 찾습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 매개 변수 유형 중 하나를 사용 하는 속성에 지정 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>In this case, the name of the parameter does not matter.</source>
          <target state="translated">이 경우 매개 변수의 이름을 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The following code example demonstrates how a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control can display data using an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control on a Web Forms page.</source>
          <target state="translated">다음 코드 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤에서 사용 하 여 데이터를 표시할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> Web Forms 페이지에 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> identifies a partially or fully qualified class name with its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property and a method that is called to retrieve data with its <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 또는 부분적으로 정규화 된 클래스 이름을 식별 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성 및 메서드 데이터를 검색 하기 위해 호출 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>At run time, the object is created and the method is called using reflection.</source>
          <target state="translated">런타임 시 개체가 생성 되 고 리플렉션을 사용 하 여 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control enumerates through the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> collection that is returned by the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property, and displays the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 통해 열거는 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 변수로 지정 된 메서드에 의해 반환 되는 컬렉션은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 및 해당 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>Gets a collection of parameters that are used by the method specified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 속성에 지정된 메서드에서 사용하는 매개 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>A collection of parameters that are used by the method specified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 속성에 지정된 메서드에서 사용하는 매개 변수의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> property gets the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 속성 get는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection declaratively by using the <ph id="ph2">`SelectParameters`</ph> element or programmatically in the handler for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">매개 변수를 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 선언적으로 사용 하 여 컬렉션의 <ph id="ph2">`SelectParameters`</ph> 요소에 대 한 처리기에서 프로그래밍 방식으로 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>At run time, parameters listed in the <ph id="ph1">`SelectParameters`</ph> element are added to the collection first.</source>
          <target state="translated">실행 시에 나열 된 매개 변수는 <ph id="ph1">`SelectParameters`</ph> 먼저 요소를 컬렉션에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>Parameters in the collection are then added or removed by the handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">Parameters 컬렉션의 다음 추가 또는 제거에 대 한 처리기가는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event is raised before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is run.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트가 발생 하기 전에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>Before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is run, the names and types of the parameters that are contained in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection must match the signature of the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated">하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드가 실행 될 이름 및 유형의에 포함 된 매개 변수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 컬렉션에 지정 된 메서드의 서명과 일치 해야는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>For example, if a select method named <ph id="ph1">`GetEmployeesByStateAndAge`</ph> takes a <ph id="ph2">`string`</ph> and an integer as parameters, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> collection must contain two parameters.</source>
          <target state="translated">예를 들어 라는 select 메서드 <ph id="ph1">`GetEmployeesByStateAndAge`</ph> 사용는 <ph id="ph2">`string`</ph> 및를 매개 변수로 정수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt;</ph> 컬렉션에는 두 개의 매개 변수가 포함 되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The first parameter must resolve to a string and the second parameter must resolve to an integer.</source>
          <target state="translated">첫 번째 매개 변수는 문자열을 확인 해야 하 고 두 번째 매개 변수는 정수를 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>Both parameters can be specified in markup in the <ph id="ph1">`SelectParameters`</ph> element.</source>
          <target state="translated">태그에서 두 매개 변수를 지정할 수 있습니다는 <ph id="ph1">`SelectParameters`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>Alternatively, they can be can be added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event handler, or one parameter can be added in markup and the other one can be added programmatically.</source>
          <target state="translated">될 수 있습니다에 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트 처리기 또는 하나의 매개 변수 태그에 추가할 수 있으며, 다른 하나는 프로그래밍 방식으로 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept> and the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ObjectDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept> 및 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>In the code for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> event handler or in the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property, make sure that you validate any parameter value that is received from the client.</source>
          <target state="translated">에 대 한 코드에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph> 이벤트 처리기 또는으로 지정 하는 방법에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성을 클라이언트에서 수신 하는 모든 매개 변수 값 유효성을 검사 하 고 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The following code example demonstrates how to retrieve a single data record using an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and display it in a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 사용 하 여 단일 데이터 레코드를 검색 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어에 표시 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control retrieves a specific employee record by calling the <ph id="ph2">`GetEmployee`</ph> method of the <ph id="ph3">`EmployeeLogic`</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 호출 하 여 특정 직원 레코드를 검색 된 <ph id="ph2">`GetEmployee`</ph> 의 메서드는 <ph id="ph3">`EmployeeLogic`</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The <ph id="ph1">`GetEmployee`</ph> method requires an employee ID parameter.</source>
          <target state="translated"><ph id="ph1">`GetEmployee`</ph> 메서드는 직원 ID 매개 변수가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control uses a <ph id="ph2">`QueryStringParameter`</ph> element in markup to create a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.QueryStringParameter&gt;</ph> object that will retrieve the value of a specified query-string parameter from the URL and pass it to the <ph id="ph4">`GetEmployee`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 사용 하는 <ph id="ph2">`QueryStringParameter`</ph> 태그를 만드는 요소에에서는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.QueryStringParameter&gt;</ph> URL에서 지정 된 쿼리 문자열 매개 변수 값을 검색 하 고에 전달 하는 개체는 <ph id="ph4">`GetEmployee`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>Other parameter classes can be used to retrieve values from other sources, such as control properties, form fields, cookies, ASP.NET profile data, or session state.</source>
          <target state="translated">컨트롤 속성, 폼 필드, 쿠키, ASP.NET 프로필 데이터, 세션 상태 등과 같은 다른 원본에서 값을 검색 하려면 다른 매개 변수 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>You can also use a parameter object that is defined in markup in order to pass a hard-coded value to the select method.</source>
          <target state="translated">Select 메서드에 하드 코딩 된 값을 전달 하기 위해 태그에 정의 된 매개 변수 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>For more information about parameter classes that are available, see <bpt id="p1">[</bpt>Using Parameters with Data Source Controls for Filtering<ept id="p1">](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)</ept>.</source>
          <target state="translated">사용할 수 있는 매개 변수 클래스에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>필터링에 대 한 데이터 소스 컨트롤과 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>To run this example, you will need the following:</source>
          <target state="translated">이 예제를 실행 하려면 다음이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>A Web site that has a connection string named <ph id="ph1">`NorthwindConnection`</ph> that connects to the Northwind Traders database.</source>
          <target state="translated">명명 된 연결 문자열을 포함 하는 웹 사이트 <ph id="ph1">`NorthwindConnection`</ph> Northwind Traders 데이터베이스에 연결 하 합니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class overview.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The <ph id="ph1">`EmployeeLogic`</ph> class that is shown as one of the code examples for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> class overview.</source>
          <target state="translated"><ph id="ph1">`EmployeeLogic`</ph> 하나에 대 한 코드 예제로 표시 된 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The class file must be located in the App_Code folder.</source>
          <target state="translated">클래스 파일을 App_Code 폴더에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>The sample code can be run as an .aspx page.</source>
          <target state="translated">.Aspx 페이지와 예제 코드를 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>If you request the page without a query-string parameter, an error message is displayed.</source>
          <target state="translated">쿼리 문자열 매개 변수 없이 페이지를 요청 하는 경우 오류 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters">
          <source>If you request the page using a query string such as <ph id="ph1">`?empid=1`</ph> after the name of the .aspx file, you will see the details for the requested employee.</source>
          <target state="translated">같은 쿼리 문자열을 사용 하 여 페이지를 요청 하는 경우 <ph id="ph1">`?empid=1`</ph> .aspx 파일의 이름 뒤에 오는 요청한 직원에 대 한 세부 정보가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>Gets or sets the name of the business object that the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> parameter used to specify a sort expression for data source sorting support.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /&gt;</ph> 매개 변수에서 데이터 소스 정렬을 지원하기 위해 정렬 식을 지정하는 데 사용하는 비즈니스 개체의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The name of the method parameter used to indicate the parameter which is used to sort the data.</source>
          <target state="translated">데이터 정렬에 사용되는 매개 변수를 나타내는 데 사용되는 메서드 매개 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The default is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> property is used to support data source sorting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> 속성은 데이터 소스 정렬을 지 원하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>When a <ph id="ph1">&lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt;</ph> property is set on the <ph id="ph2">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> object and passed to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method, the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> value identifies the parameter name of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> business object method according to which the data is sorted.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt;</ph> 속성이에 설정 되는 <ph id="ph2">&lt;xref:System.Web.UI.DataSourceSelectArguments&gt;</ph> 개체를 전달는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드를는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> 값의 매개 변수 이름을 식별는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 비즈니스 개체 메서드 기준인 데이터 정렬입니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> is associated with a data-bound control, the values that are passed to this parameter take the form of comma-separated field values followed by <ph id="ph2">`"ASC"`</ph> or <ph id="ph3">`"DESC"`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 연결 된 값이 매개 변수 사용 하 여 뒤에 쉼표로 구분 된 필드 값의 형식에 전달 되는 데이터 바인딩된 컨트롤을 <ph id="ph2">`"ASC"`</ph> 또는 <ph id="ph3">`"DESC"`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>For example, the value for an ascending sort on <ph id="ph1">`Name`</ph> would be <ph id="ph2">`"Name ASC"`</ph>.</source>
          <target state="translated">예를 들어, 오름차순 정렬에 대 한 값 <ph id="ph1">`Name`</ph> 것 <ph id="ph2">`"Name ASC"`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The first code example demonstrates how to implement a type that supports sorting.</source>
          <target state="translated">첫 번째 코드 예제에서는 정렬을 지 원하는 형식을 구현 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The second code example demonstrates how to implement a sort expression.</source>
          <target state="translated">두 번째 코드 예제에는 정렬 식을 구현 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The following code example demonstrates how to implement a type that supports sorting.</source>
          <target state="translated">다음 코드 예제에서는 정렬을 지 원하는 형식을 구현 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The <ph id="ph1">`SelectMethod`</ph> of the <ph id="ph2">`SortingData`</ph> class takes a parameter, <ph id="ph3">`sortExpression`</ph>.</source>
          <target state="translated"><ph id="ph1">`SelectMethod`</ph> 의 <ph id="ph2">`SortingData`</ph> 매개 변수를 사용 하는 클래스가 <ph id="ph3">`sortExpression`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The string that is passed to <ph id="ph1">`SelectMethod`</ph> is used for the <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> object that is returned by <ph id="ph4">`SelectMethod`</ph>.</source>
          <target state="translated">에 전달 되는 문자열 <ph id="ph1">`SelectMethod`</ph> 에 사용 되는 <ph id="ph2">&lt;xref:System.Data.DataView.Sort%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> 개체에서 반환 되는 <ph id="ph4">`SelectMethod`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The following code example demonstrates how to implement a sort expression.</source>
          <target state="translated">다음 코드 예제에는 정렬 식을 구현 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The code in the Web page creates an instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">인스턴스를 만들고 웹 페이지의 코드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property is set to <ph id="ph2">`SortingData`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> property is set to <ph id="ph4">`sortExpression`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성이 <ph id="ph2">`SortingData`</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt;</ph> 속성이 <ph id="ph4">`sortExpression`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 로 설정 되어 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName">
          <source>When the user clicks the <bpt id="p1">**</bpt>Sort<ept id="p1">**</ept> button, the field name, <ph id="ph1">`Name`</ph> or <ph id="ph2">`Number`</ph>, is passed to <ph id="ph3">`SelectMethod`</ph> in the sort parameter.</source>
          <target state="translated">사용자가 클릭할 때는 <bpt id="p1">**</bpt>정렬<ept id="p1">**</ept> 단추, 필드 이름 <ph id="ph1">`Name`</ph> 또는 <ph id="ph2">`Number`</ph>에 전달 <ph id="ph3">`SelectMethod`</ph> 정렬 매개 변수에서 합니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</source>
          <target state="translated">Microsoft SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 세미콜론으로 구분된 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>A string that indicates which databases and tables to use for the SQL Server cache dependency.</source>
          <target state="translated">SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control supports an optional expiration policy that is based on the <ph id="ph2">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> object for the data cache (the service must be configured for the database server).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 똑같이 선택적 만료 정책을 기반으로 하는 <ph id="ph2">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> (데이터베이스 서버에 대 한 서비스 구성 해야 합니다) 데이터 캐시에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>SQL Server supports two mechanisms for cache invalidation: polling and notification.</source>
          <target state="translated">SQL Server는 캐시 무효화에 대 한 두 가지 메커니즘을 지원: 폴링 및 알림.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>Each mechanism has a different syntax for the <ph id="ph1">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> object.</source>
          <target state="translated">각 메커니즘에 대 한 다른 구문에는 <ph id="ph1">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> supports only polling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 폴링만 지원 합니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> string is used to create a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> object that is passed to the <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> constructor before the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> method is executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> 문자열 만드는 데 사용 되는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> 에 전달 되는 개체는 <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 하기 전에 생성자는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph> 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> string identifies databases and tables according to the same format that is used by the <ph id="ph2">`@ Page`</ph> directive, where the first part of the string is a connection string to a SQL Server database, followed by a colon delimiter, and finally the name of the database table (for example, <ph id="ph3">`"connectionstring1:table1"`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> 데이터베이스 및 테이블에서 사용 되는 동일한 형식에 따라 식별 하는 문자열은 <ph id="ph2">`@ Page`</ph> 지시문을 문자열의 첫 번째 부분 인 SQL Server 데이터베이스에 연결 문자열 뒤에 마지막으로 이름 데이터베이스 테이블의 (예를 들어 <ph id="ph3">`"connectionstring1:table1"`</ph>).</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> property depends on more than one table, the connection string and table name pairs are separated by semicolons (for example, <ph id="ph2">`"connectionstring1:table1";connectionstring2:table2"`</ph>).</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> 둘 이상의 테이블에 종속 속성, 연결 문자열 및 테이블 이름 쌍은 세미콜론으로 구분 됩니다 (예를 들어 <ph id="ph2">`"connectionstring1:table1";connectionstring2:table2"`</ph>).</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>To support notification, you must write the cache logic in the implementation of your <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property and handle the construction of the <ph id="ph2">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> object in your code.</source>
          <target state="translated">구현에서 캐시 논리 작성 해야 하는 알림을 지원 하려면 프로그램 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 처리를 생성 하 고는 <ph id="ph2">&lt;xref:System.Web.Caching.SqlCacheDependency&gt;</ph> 코드에서이 개체입니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The first code example demonstrates how to create a SQL Server cache dependency and set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object.</source>
          <target state="translated">첫 번째 코드 예제에는 SQL Server 캐시 종속성을 만들고 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> 의 속성을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The second code example demonstrates how to implement a wrapper method that returns a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object to enable caching and filtering with an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> object.</source>
          <target state="translated">두 번째 코드 예제에서는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 캐싱 및 필터링을 사용 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The following code example demonstrates how to create a SQL Server cache dependency and set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에는 SQL Server 캐시 종속성을 만들고 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt;</ph> 의 속성을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>In this example, the database is polled every 120 seconds.</source>
          <target state="translated">이 예제에서는 데이터베이스 120 초 마다 폴링됩니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and displayed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is expired and a new set of data is retrieved on the next request for the page.</source>
          <target state="translated">Northwind Traders 직원의 데이터를 변경 하는 동안 시간 테이블에서 캐시 된 모든 데이터는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 하 고 여 표시 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 만료 되 고 새 데이터 집합의 페이지에 대 한 다음 요청 시 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>The following code example demonstrates how to implement a wrapper method that returns a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object to enable caching and filtering with an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 반환 하는 래퍼 메서드를 구현 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 캐싱 및 필터링을 사용 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>In the base implementation of the <ph id="ph1">`EmployeeLogic`</ph> class, the <ph id="ph2">`GetAllEmployees`</ph> method returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> object.</source>
          <target state="translated">기본 구현에서는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 <ph id="ph2">`GetAllEmployees`</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency">
          <source>Instead of refactoring the object completely to work with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> on a Web Forms page, a wrapper method named <ph id="ph2">`GetAllEmployeesAsDataSet`</ph> is added that returns a set of <ph id="ph3">`NorthwindEmployee`</ph> data as a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">완전히 작동 하는 개체를 리팩터링 하는 대신는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 라는 래퍼 메서드가 Web Forms 페이지에 <ph id="ph2">`GetAllEmployeesAsDataSet`</ph> 집합을 반환 하는 추가 <ph id="ph3">`NorthwindEmployee`</ph> 으로 데이터는 <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>Gets or sets the name of the data retrieval method parameter that is used to indicate the value of the identifier of the first record to retrieve for data source paging support.</source>
          <target state="translated">데이터 소스 페이징을 지원하기 위해 검색할 첫 번째 레코드의 식별자 값을 나타내는 데 사용되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The name of the business object method parameter used to indicate the first record to retrieve.</source>
          <target state="translated">검색할 첫 번째 레코드를 나타내는 데 사용되는 비즈니스 개체 메서드 매개 변수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The parameter must return an integer value.</source>
          <target state="translated">이 매개 변수는 정수 값을 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The default is <bpt id="p1">&lt;c&gt;</bpt>"startRowIndex"<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;c&gt;</bpt>"startRowIndex"<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> property is used to support data source paging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 속성은 데이터 소스 페이징을 지원 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>For information about how paging is supported by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control, see <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>.</source>
          <target state="translated">페이징을 지 원하는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어, 참조 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.</source>
          <target state="translated">다음 세 가지 예제에는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자는 페이지에 표시 된 레코드 수를 선택할 수 있도록 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The Web page contains an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control whose <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">웹 페이지에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;</ph> 속성이 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property is set to the name of a method that returns the total number of records in the query.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성 레코드의 총 수는 쿼리에서 반환 하는 메서드의 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> property are set to the names of the parameters that are used in the Select method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;</ph> 속성 Select 메서드에서 사용 되는 매개 변수 이름으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The page also contains a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">페이지는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The second example shows a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">두 번째 예제에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The code in the handler sets the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> property to the user's selection.</source>
          <target state="translated">처리기 집합의 코드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.PageSize%2A&gt;</ph> 속성을 사용자의 선택 합니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The third example shows the data access class that retrieves data from the Customers table.</source>
          <target state="translated">세 번째 예에서는 Customers 테이블에서 데이터를 검색 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>It includes a method named <ph id="ph1">`GetSubsetOfEmployees`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">라는 메서드를 포함 <ph id="ph1">`GetSubsetOfEmployees`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The example also includes a method named <ph id="ph1">`GetEmployeeCount`</ph>, which is assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated">이 예제에는 또한 라는 메서드가 포함 되어 <ph id="ph1">`GetEmployeeCount`</ph>에 할당 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The class uses LINQ to query the Customers table.</source>
          <target state="translated">LINQ를 사용 하 여 Customers 테이블을 쿼리 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and Customers table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스를 Northwind 데이터베이스와 Customers 테이블을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState">
          <source>Tracks view-state changes to the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control so that they can be stored in the <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤의 뷰 상태 변경 내용을 <ph id="ph2">&lt;see cref="T:System.Web.UI.StateBag" /&gt;</ph> 개체에 저장할 수 있도록 추적합니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A&gt;</ph> method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the view state for the object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A&gt;</ph> 메서드는 개체에 대 한 뷰 상태의 일부로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 위치를 표시 하도록 재정의 됩니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>Gets or sets the name of the class that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> object represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 개체에서 나타내는 클래스의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>A partially or fully qualified class name that identifies the type of the object that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 나타내는 개체의 형식을 식별하는 부분적으로 정규화된 클래스 이름 또는 완전히 정규화된 클래스 이름입니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>To create an instance of the object that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control binds to, the control uses reflection to load the type that is identified by the type name at run time.</source>
          <target state="translated">개체의 인스턴스를 만들는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 바인딩된, 컨트롤 리플렉션을 사용 하 여 런타임 시 형식 이름으로 식별 되는 형식을 로드 합니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>Therefore, the value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property can be a partially qualified type for code that is located in the Bin or App_Code directories or a fully qualified type name for code that is registered in the global assembly cache.</source>
          <target state="translated">따라서의 값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> Bin 또는 App_Code 디렉터리에 있는 코드는 부분적으로 정규화 된 형식 또는 전역 어셈블리 캐시에 등록 되어 있는 코드에 대 한 정규화 된 유형 이름 속성 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>If you use the global assembly cache, you must add the appropriate reference to the <ph id="ph1">`assemblies`</ph> section of the Machine.config or Web.config file.</source>
          <target state="translated">에 대 한 적절 한 참조를 추가 해야 전역 어셈블리 캐시를 사용 하는 경우는 <ph id="ph1">`assemblies`</ph> Machine.config 또는 Web.config 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>The type must have a default constructor, unless you handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> event to create an instance of it yourself.</source>
          <target state="translated">유형을 처리 하지 않는 한 기본 생성자를 있어야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 해당 형식의 인스턴스를 직접 만들어야 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>An instance of the type is created for each call to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> methods, if the methods on the type are member methods.</source>
          <target state="translated">형식의 인스턴스를 호출할 때마다 만들어집니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt;</ph> 메서드, 형식에 메서드는 멤버 메서드입니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>An instance is not created if the methods are <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic).</source>
          <target state="translated">메서드는 인스턴스 생성 되지 않습니다 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>If the type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method is called before the object is destroyed.</source>
          <target state="translated">형식을 구현 하는 경우는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 메서드는 개체가 소멸 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>The following code example demonstrates how a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control can display data by using an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control on a Web Forms page.</source>
          <target state="translated">다음 코드 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어를 사용 하 여 데이터를 표시할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> Web Forms 페이지에 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> identifies a partially or fully qualified class name with its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property and a method that is called to retrieve data with its <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 또는 부분적으로 정규화 된 클래스 이름을 식별 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성 및 메서드 데이터를 검색 하기 위해 호출 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>At run time, the object is created and the method is called using reflection.</source>
          <target state="translated">런타임 시 개체가 생성 되 고 리플렉션을 사용 하 여 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control enumerates through the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> collection that is returned by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> property, and displays the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 통해 열거는 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 에서 반환 되는 컬렉션은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph> 속성 및 해당 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.TypeName">
          <source>The following example shows the class that the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property value refers to.</source>
          <target state="translated">다음 예제에서는 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성 값을 가리킵니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>Performs an update operation by calling the method that is identified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /&gt;</ph> property and any parameters that are in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /&gt;</ph> 속성으로 식별되는 메서드와 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" /&gt;</ph> 컬렉션의 매개 변수를 호출하여 업데이트 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>A value that represents the number of rows updated in the underlying data storage.</source>
          <target state="translated">내부 데이터 저장소에서 업데이트되는 행 수를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The business object is assumed to update data one record at a time, rather than in a batch.</source>
          <target state="translated">일괄 처리 대신 한 번에 하나씩 레코드의 데이터를 업데이트 하는 비즈니스 개체 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>Before the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> operation is performed, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">하기 전에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 작업이 수행 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event to examine the values of the parameters and to perform any preprocessing before an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> operation.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트 매개 변수의 값을 검사 하 고 이전 전처리를 수행할 수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>To perform an update operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object uses reflection to create an instance of the object that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property.</source>
          <target state="translated">업데이트 작업을 수행 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 으로 식별 되는 개체의 인스턴스를 만들고 하기 위해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>It then calls the method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property, using any associated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> properties.</source>
          <target state="translated">다음으로 식별 되는 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성, 연결 된 모든를 사용 하 여 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>After the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> operation completes, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A&gt;</ph> method is called to raise the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph> event.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 작업이 완료 되 면는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A&gt;</ph> 를 발생 시키는 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph> event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph> 이벤트 모든 반환 값과 출력 매개 변수 예외를 검사 하 고 후 처리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> method delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 와 연결 된는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>For more information about parameter merging, object lifetime, and method resolution, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>.</source>
          <target state="translated">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>You should validate any parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The runtime simply substitutes the parameter value into the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property.</source>
          <target state="translated">런타임에 매개 변수 값에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>Data-Bound Controls</source>
          <target state="translated">데이터 바인딩 컨트롤</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is associated with a data-bound control, such as the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, it is not necessary to call the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> method from page code.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어와 같은 연결 된 데이터 바인딩 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 필요 없는 호출 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 페이지 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> method is invoked directly by the data-bound control instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 메서드 대신 데이터 바인딩된 컨트롤에서 직접 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The first code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and several <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> objects to update data.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤 및 여러 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The second code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예에서는 <ph id="ph1">`EmployeeLogic`</ph> 첫 번째 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and several <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls to update data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤 및 여러 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> displays the name of a Northwind employee, while the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls are used to enter and update address information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> Northwind 직원의 이름을 표시 하는 동안는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection contains a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> object that is bound to the selected value of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>, the button that raises the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> operation is enabled only after an employee is selected.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션에 포함 되어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 의 선택된 된 값에 바인딩되는 개체는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>는 단추는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 작업을 사용할 수는 직원을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.ObjectDataSource.Update">
          <source>The following code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the preceding code example.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`EmployeeLogic`</ph> 이전 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updated">
          <source>Occurs when an <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph> operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph> 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph> event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> operation has completed.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph> 하거나 이벤트를 반환 값 또는 출력 매개 변수의 값을 확인 한 후 예외가 throw 되었는지 여부를 결정 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 작업이 완료 합니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updated">
          <source>The return value, output parameters, and exception handling properties are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> object that is associated with the event.</source>
          <target state="translated">사용할 수 있는 반환 값, 출력 매개 변수 및 속성을 처리 하는 예외는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt;</ph> 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Gets or sets the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control invokes to update data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤이 데이터 업데이트를 위해 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>A string that represents the name of the method or function that the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> uses to update data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>에서 데이터를 업데이트할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The default is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control assumes that the method that is identified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property performs updates one at a time, rather than in a batch.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 하는 것으로 가정으로 식별 되는 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성 아닌 일괄 처리에서 한 번에 하나씩 업데이트를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property delegates to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성에 위임는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Make sure that the parameter names configured for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection match the column names that are returned by the select method.</source>
          <target state="translated">매개 변수 이름에 대해 구성 되었는지 확인는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션 select 메서드에 의해 반환 되는 열 이름과 일치 합니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Object Lifetime</source>
          <target state="translated">개체 수명</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The method that is identified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property can be an instance method or a <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) method.</source>
          <target state="translated">로 식별 되는 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성에는 인스턴스 메서드 일 수 또는 <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> Visual basic에서) 메서드.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If it is an instance method, the business object is created and destroyed each time the method that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> events to work with the business object before the method that is specified by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 변수로 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>You can also handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event that is raised after the method that is specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property is called.</source>
          <target state="translated">처리할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 메서드에 의해 지정 된 후에 발생 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성이 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If the business object implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface, the <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method is called before the object is destroyed.</source>
          <target state="translated">비즈니스 개체를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 메서드는 개체가 소멸 되기 전에 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If the method is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the business object is never created and you cannot handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> events.</source>
          <target state="translated">메서드가 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual basic에서), 비즈니스 개체를 만들지는 및 처리할 수 없는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Parameter Merging</source>
          <target state="translated">병합 하는 매개 변수</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Parameters are added to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection from three sources:</source>
          <target state="translated">매개 변수가에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 세 개의 원본에서 컬렉션:</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>From the data-bound control, at run time.</source>
          <target state="translated">런타임에 데이터 바인딩된 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>From the <ph id="ph1">`UpdateParameters`</ph> element, declaratively.</source>
          <target state="translated"><ph id="ph1">`UpdateParameters`</ph> 요소를 선언적으로 합니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>From the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event handler, programmatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트 처리기를 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>First, any parameters that are generated from data-bound controls are added to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection.</source>
          <target state="translated">첫째, 매개 변수를 데이터 바인딩된 컨트롤에서 생성 된에 추가 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control is bound to a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that has the columns <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph>, the parameters for <ph id="ph5">`Name`</ph> and <ph id="ph6">`Number`</ph> are added to the collection.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 바인딩되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 열이 있는 컨트롤 <ph id="ph3">`Name`</ph> 및 <ph id="ph4">`Number`</ph>, 매개 변수를 <ph id="ph5">`Name`</ph> 및 <ph id="ph6">`Number`</ph> 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The exact name of the parameter depends on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> property.</source>
          <target state="translated">정확한 이름은 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The data type of these parameters is <ph id="ph1">`string`</ph>.</source>
          <target state="translated">이러한 매개 변수의 데이터 형식이 <ph id="ph1">`string`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Next, the parameters that are listed in the <ph id="ph1">`UpdateParameters`</ph> element are added.</source>
          <target state="translated">다음에 나와 있는 매개 변수는 <ph id="ph1">`UpdateParameters`</ph> 요소가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If a parameter in the <ph id="ph1">`UpdateParameters`</ph> element is found with the same name as a parameter that is already in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection, the existing parameter is modified to match the parameter that is specified in the <ph id="ph3">`UpdateParameters`</ph> element.</source>
          <target state="translated">경우에 매개 변수는 <ph id="ph1">`UpdateParameters`</ph> 요소가 이미 있는 매개 변수의 동일한 이름으로 발견 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 기존 매개 변수 컬렉션에 지정 된 매개 변수의 이름과 일치 하도록 수정 됩니다는 <ph id="ph3">`UpdateParameters`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Typically, this is used to modify the type of the data in the parameter.</source>
          <target state="translated">일반적으로이 매개 변수에서 데이터의 유형을 수정 하도록 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Finally, you can programmatically add and remove parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event, which occurs before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> method is run.</source>
          <target state="translated">마지막으로 프로그래밍 방식으로 추가 및 제거할 수 있습니다에 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트를 발생 하기 전에 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The method is resolved after the parameters are merged.</source>
          <target state="translated">메서드는 매개 변수가 병합 된 후 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Method resolution is discussed in the next section.</source>
          <target state="translated">메서드 해상도 다음 섹션에서 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>You should validate any parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The runtime simply substitutes the parameter value into the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property.</source>
          <target state="translated">런타임에 매개 변수 값에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>Method Resolution</source>
          <target state="translated">메서드 확인</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph2">`UpdateParameters`</ph> element, and the parameters that were added in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event handler are all merged.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 메서드가 호출 되 면 데이터 바인딩된 컨트롤에서 선언적으로 생성 된 매개 변수에서 데이터 필드는 <ph id="ph2">`UpdateParameters`</ph> 요소 및에 추가 된 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트 처리기 모두 병합 합니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>(For more information, see the preceding section.) The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control then attempts to find a method to call.</source>
          <target state="translated">(자세한 내용은 이전 섹션 참조). <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 다음 시도 호출할 메서드를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>First, it looks for one or more methods with the name that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property.</source>
          <target state="translated">에 지정 된 이름 가진 하나 이상의 메서드가 먼저 찾습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If no match is found, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.</source>
          <target state="translated">일치 항목이 없는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If a match is found, it then looks for matching parameter names.</source>
          <target state="translated">일치 하는 항목이 없는 경우 일치 하는 매개 변수 이름을 찾습니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>For example, suppose a type that is specified by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> property has two methods named <ph id="ph2">`UpdateARecord`</ph>.</source>
          <target state="translated">예를 들어 지정 된 형식에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;</ph> 속성이 라는 두 가지 방법 <ph id="ph2">`UpdateARecord`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>One <ph id="ph1">`UpdateARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`UpdateARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
          <target state="translated">하나의 <ph id="ph1">`UpdateARecord`</ph> 하나의 매개 변수가 <ph id="ph2">`ID`</ph>, 다른 <ph id="ph3">`UpdateARecord`</ph> 2 개의 매개 변수가 <ph id="ph4">`Name`</ph> 및 <ph id="ph5">`Number`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection has only one parameter named <ph id="ph2">`ID`</ph>, the <ph id="ph3">`UpdateARecord`</ph> method with just the <ph id="ph4">`ID`</ph> parameter is called.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션에 명명 된 매개 변수만 <ph id="ph2">`ID`</ph>, <ph id="ph3">`UpdateARecord`</ph> 메서드 테이블만 <ph id="ph4">`ID`</ph> 매개 변수 라고 합니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The type of the parameter is not checked in resolving the methods.</source>
          <target state="translated">매개 변수 형식의 메서드 확인 과정에서 확인 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The order of the parameters does not matter.</source>
          <target state="translated">매개 변수의 순서가 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property is set, the method is resolved in a different way.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성은 메서드를 다른 방식으로 확인 됩니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> looks for a method with the name that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property that takes one parameter of the type that is specified in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 에 지정 된 이름의 메서드를 찾습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 매개 변수 유형 중 하나를 사용 하는 속성에 지정 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>In this case, the name of the parameter does not matter.</source>
          <target state="translated">이 경우 매개 변수의 이름을 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.</source>
          <target state="translated">다음 세 가지 예제는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자를 검색 하 고 Northwind 데이터베이스의 Employees 테이블의 레코드를 업데이트할 수 있도록 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The first example shows a Web page that contains two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">첫 번째 예에서는 두 개가 포함 된 웹 페이지를 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The first <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control are used to retrieve and display employee names from the database.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 검색 하 고 데이터베이스에서 직원 이름을 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The second <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤은 검색, 표시 및 사용자가 선택 되어 있는 직원 레코드의 데이터를 수정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The second example shows handlers for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> events.</source>
          <target state="translated">두 번째 예에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> event handler serializes the object that contains data that was retrieved from the Employee table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 이벤트 처리기는 Employee 테이블 로부터 검색 된 데이터를 포함 하는 개체를 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The serialized object is stored in view state.</source>
          <target state="translated">직렬화 된 개체는 뷰 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event handler deserializes the object in view state that contains the original data for the data record that is being updated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트 처리기에서 업데이트 되는 데이터 레코드에 대 한 원본 데이터를 포함 하는 뷰 상태 개체를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The object that contains the original data is passed as a parameter to the Update method.</source>
          <target state="translated">원래 데이터를 포함 하는 개체의 Update 메서드를 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.</source>
          <target state="translated">다른 프로세스에 의해 데이터가 수정 되었는지 여부를 확인 하려면 사용할 수 있도록 원래 데이터를 데이터베이스에 전달 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The third example shows the data access class that interacts with the Northwind database.</source>
          <target state="translated">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The class uses LINQ to query and update the Employees table.</source>
          <target state="translated">LINQ를 사용 하 여를 쿼리하고 Employees 테이블을 업데이트 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and Employees table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스 및 Employees 테이블을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>Gets the parameters collection that contains the parameters that are used by the method that is specified by the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /&gt;</ph> 속성으로 지정된 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> that contains the parameters used by the method that is specified by the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ParameterCollection" /&gt;</ph> 속성으로 지정된 메서드에서 사용하는 매개 변수가 포함된 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The names and types of the parameters that are contained in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection must match the names and types of the parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> method signature.</source>
          <target state="translated">이름 및 유형의에 포함 된 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션 이름 및 매개 변수 형식과 일치 해야 합니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 메서드 서명입니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The parameter names are affected by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> property and are case-sensitive.</source>
          <target state="translated">매개 변수 이름은 영향을 받는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt;</ph> 속성 및 대/소문자 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The parameters in the collection depend on the data in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically.</source>
          <target state="translated">Parameters 컬렉션의 데이터 바인딩된 컨트롤, 선언적으로 지정 된 매개 변수 및 프로그래밍 방식으로 추가 되는 매개 변수에서 데이터에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>For more information, see the "Parameter Merging" section in <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> and <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>.</source>
          <target state="translated">자세한 내용은 "매개 변수가 병합" 섹션을 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 및 <bpt id="p1">[</bpt>ObjectDataSource 컨트롤에서 매개 변수를 사용 하 여<ept id="p1">](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> property retrieves the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A&gt;</ph> property that is contained by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> object that is associated with the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 속성 검색은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A&gt;</ph> 에 포함 된 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;</ph> 연결 된 개체에는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>For more information about parameter merging, object lifetime, and method resolution, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>.</source>
          <target state="translated">매개 변수가 병합, 개체 수명 및 방법 확인 하는 방법에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>You should validate any parameter value that you receive from the client.</source>
          <target state="translated">클라이언트에서 수신 하는 모든 매개 변수 값을 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The runtime simply substitutes the parameter value into the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> property.</source>
          <target state="translated">런타임에 매개 변수 값에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The first code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and several <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> objects to update data.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤 및 여러 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 개체 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The second code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the first code example.</source>
          <target state="translated">두 번째 코드 예에서는 <ph id="ph1">`EmployeeLogic`</ph> 첫 번째 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The following code example demonstrates how to use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls, and several <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls to update data.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤 및 여러 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> displays the name of a Northwind employee, while the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> controls are used to enter and update address information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> Northwind 직원의 이름을 표시 하는 동안는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> collection contains a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> that is bound to the selected value of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>, the button that raises the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> operation is enabled only after an employee is selected.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt;</ph> 컬렉션에 포함 되어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ControlParameter&gt;</ph> 의 선택된 된 값에 바인딩된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>는 단추는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;</ph> 작업을 사용할 수는 직원을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters">
          <source>The following code example shows the <ph id="ph1">`EmployeeLogic`</ph> class that is used in the preceding code example.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`EmployeeLogic`</ph> 이전 코드 예제에 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>Occurs before an <ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /&gt;</ph> 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control performs the update operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 매개 변수 값의 유효성을 검사 하거나 하기 전에 매개 변수 값을 변경 하려면 응용 프로그램에 추가 초기화를 수행 하는 이벤트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 업데이트 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The parameters are available as an <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> collection that is accessed by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> property, which is exposed by the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> object.</source>
          <target state="translated">매개 변수는 사용할 수는 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 액세스 하는 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt;</ph> 속성에 의해 노출 되는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.</source>
          <target state="translated">다음 세 가지 예제는 웹 페이지, 코드 숨김 페이지 클래스 및 사용자를 검색 하 고 Northwind 데이터베이스의 Employees 테이블의 레코드를 업데이트할 수 있도록 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The first example shows a Web page that contains two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> controls, a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">첫 번째 예에서는 두 개가 포함 된 웹 페이지를 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The first <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control are used to retrieve and display employee names from the database.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤 검색 하 고 데이터베이스에서 직원 이름을 표시 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The second <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤은 검색, 표시 및 사용자가 선택 되어 있는 직원 레코드의 데이터를 수정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The second example shows handlers for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> events.</source>
          <target state="translated">두 번째 예에 대 한 처리기를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> event handler serializes the object that contains data that was retrieved from the Employee table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt;</ph> 이벤트 처리기는 Employee 테이블 로부터 검색 된 데이터를 포함 하는 개체를 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The serialized object is stored in view state.</source>
          <target state="translated">직렬화 된 개체는 뷰 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> event handler deserializes the object in view state that contains the original data for the data record that is being updated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 이벤트 처리기에서 업데이트 되는 데이터 레코드에 대 한 원본 데이터를 포함 하는 뷰 상태 개체를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The object that contains the original data is passed as a parameter to the Update method.</source>
          <target state="translated">원래 데이터를 포함 하는 개체의 Update 메서드를 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.</source>
          <target state="translated">다른 프로세스에 의해 데이터가 수정 되었는지 여부를 확인 하려면 사용할 수 있도록 원래 데이터를 데이터베이스에 전달 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The third example shows the data access class that interacts with the Northwind database.</source>
          <target state="translated">세 번째 예제에서는 Northwind 데이터베이스와 상호 작용 하는 데이터 액세스 클래스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The class uses LINQ to query and update the Employees table.</source>
          <target state="translated">LINQ를 사용 하 여를 쿼리하고 Employees 테이블을 업데이트 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>The example requires a LINQ to SQL class that represents the Northwind database and Employees table.</source>
          <target state="translated">이 예제에서는 LINQ to SQL 클래스 Northwind 데이터베이스 및 Employees 테이블을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.ObjectDataSource.Updating">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 만들 LINQ to SQL 클래스 웹 프로젝트에서<ept id="p1">](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>