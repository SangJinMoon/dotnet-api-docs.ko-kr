<Type Name="HierarchicalDataBoundControl" FullName="System.Web.UI.WebControls.HierarchicalDataBoundControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="564246389764cc5a65c11b93e00f2efc4afa0813" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598567" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HierarchicalDataBoundControl : System.Web.UI.WebControls.BaseDataBoundControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataBoundControl extends System.Web.UI.WebControls.BaseDataBoundControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataBoundControl&#xA;Inherits BaseDataBoundControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataBoundControl abstract : System::Web::UI::WebControls::BaseDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>계층 구조 형태로 해당 데이터를 표시하는 모든 ASP.NET 버전 2.0 데이터 바인딩된 컨트롤에 대한 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> ASP.NET 계층적 데이터 소스 컨트롤에서 데이터를 검색 하 고 컨트롤의 사용자 인터페이스 요소 표시를 위해 해당 데이터에 바인딩하는 ASP.NET 컨트롤에 사용 되는 기본 클래스입니다. <xref:System.Web.UI.WebControls.TreeView> 및 <xref:System.Web.UI.WebControls.Menu> 클래스에서 파생 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>합니다.  
  
 페이지 개발자가 사용 하지 않는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 직접; 대신 클래스,이 클래스 로부터 파생 되는 컨트롤을 사용 합니다.  
  
 구현 하는 클래스를 사용 하는 데이터 바인딩된 컨트롤을 만들려면이 클래스를 확장 하는 컨트롤 개발자는 <xref:System.Web.UI.IHierarchicalDataSource> 인터페이스 및 클래스에서 파생 되는 <xref:System.Web.UI.HierarchicalDataSourceControl> 및 <xref:System.Web.UI.HierarchicalDataSourceView> 클래스입니다. 클래스를 파생 하는 경우는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스, 재정의 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 검색 한 데이터에 컨트롤의 사용자 인터페이스 요소를 바인딩할 메서드는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 메서드. 대부분의 경우에는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 메서드는 파생된 클래스에서 재정의 하는 유일한 방법입니다.  
  
 ASP.NET 2.0 데이터 바인딩된 컨트롤에 대 한는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 메서드는 해당 하는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 실행 시 데이터를 바인딩할를 위해 호출 됩니다. <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 메서드 호출의 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 및 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 메서드.  
  
   
  
## Examples  
 클래스를 파생 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 사용자 지정 데이터 바인딩된 컨트롤을 만드는 클래스입니다. `GeneologyTree` 렌더링 한 `pre` HTML 섹션의 데이터에 대 한 텍스트 트리와 연결 된 데이터 소스 제어에서 검색 합니다.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#2)]
 [!code-vb[Samples.AspNet.GeneologyTree#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#2)]  
  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 `GeneologyTree` 이전 예제에서 정의 된 컨트롤과에 바인딩합니다는 <xref:System.Web.UI.WebControls.XmlDataSource> 제어 합니다.  
  
 [!code-aspx-csharp[Samples.AspNet.GeneologyTree#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/rootviewcs.aspx#1)]
 [!code-aspx-vb[Samples.AspNet.GeneologyTree#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/rootviewvb.aspx#1)]  
  
 코드 예제에서 액세스 하는 geneology.xml 파일에는 다음 데이터가 포함 됩니다.  
  
```  
<family>  
  <member title="great-grandfather">  
    <member title="grandfather" >  
      <member title="child" />  
      <member title="father" >  
         <member title="son" />  
      </member>  
    </member>  
  </member>  
</family>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataBoundControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataBoundControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public override string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.HierarchicalDataSourceControl))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤이 데이터 항목 목록을 검색하는 컨트롤의 ID를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤이 해당 데이터를 검색하는 데이터 원본을 나타내는 컨트롤의 ID입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HierarchicalDataSourceView GetData (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.HierarchicalDataSourceView GetData(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HierarchicalDataSourceView ^ GetData(System::String ^ viewPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">검색할 뷰의 계층 경로입니다.</param>
        <summary>데이터 바인딩된 컨트롤에서 데이터 작업을 수행하는 데 사용하는 <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> 개체를 검색합니다.</summary>
        <returns>데이터 바인딩된 컨트롤에서 데이터 작업을 수행하는 데 사용하는 <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 메서드 검색 한 <xref:System.Web.UI.HierarchicalDataSourceView> 호출 하 여 연결 된 데이터 소스 제어에서 개체는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 메서드는 검색 하는 <xref:System.Web.UI.HierarchicalDataSourceView> 연결 된 데이터 소스 제어에서 개체 방법과 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A?displayProperty=nameWithType> 메서드를 호출 하 여 데이터를 검색 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#4)]
 [!code-vb[Samples.AspNet.GeneologyTree#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정된 <paramref name="viewPath" />에 대한 <see cref="T:System.Web.UI.HierarchicalDataSourceView" />를 검색할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetDataSource">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.IHierarchicalDataSource GetDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.IHierarchicalDataSource GetDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDataSource () As IHierarchicalDataSource" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::IHierarchicalDataSource ^ GetDataSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalDataSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 바인딩된 컨트롤이 연결되어 있는 <see cref="T:System.Web.UI.IHierarchicalDataSource" />(있는 경우)를 검색합니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 속성으로 식별되는 데이터 소스를 나타내는 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData%2A> 메서드 호출에서 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource%2A> 메서드 내부적으로 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" /> 속성으로 식별되는 데이터 소스 컨트롤이 현재 컨테이너에 없는 경우  
  
 \- 또는 -  
  
 <see cref="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" /> 속성으로 식별되는 데이터 소스 컨트롤이 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 인터페이스를 구현하지 않는 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)" />
        <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
      </Docs>
    </Member>
    <Member MemberName="MarkAsDataBound">
      <MemberSignature Language="C#" Value="protected void MarkAsDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MarkAsDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MarkAsDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void MarkAsDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>뷰 상태의 컨트롤 상태를 데이터에 바인딩된 상태로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤에 현재 데이터에 바인딩되어 있는지 여부를 나타내는 뷰 상태 값을 유지 관리 합니다. <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound%2A> 메서드 값을 설정 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataPropertyChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 데이터 소스 ID 속성 중 하나가 변경되면 데이터 바인딩된 컨트롤을 해당 데이터에 다시 바인딩하기 위해 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged%2A> 때이 메서드가 호출 되는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 또는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID%2A> 페이지의 후 언제 든 지 변경 될 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 데이터 바인딩된 컨트롤을 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged%2A> 데이터 바인딩된 컨트롤이 초기화 된 후 데이터 원본을 식별 하는 속성이 변경 되 면 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#3)]
 [!code-vb[Samples.AspNet.GeneologyTree#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트의 소스인 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 개체입니다.</param>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>데이터 바인딩된 컨트롤과 함께 사용되는 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 인스턴스에서 <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" /> 이벤트를 발생시키면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 핸들 클래스는 <xref:System.Web.UI.IHierarchicalDataSource.DataSourceChanged> 설정 하는 이벤트는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Load" /> 이벤트를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 설정 하려면 Load 이벤트를 처리는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true` HTTP 요청 포스트백이 아닌 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트를 발생시킨 <see cref="T:System.Web.UI.Page" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>컨트롤이 로드되기 전에 데이터 바인딩된 컨트롤의 초기화된 상태를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad%2A> 설정는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true` 에 HTTP 요청 포스트백 및 뷰 상태를 사용할 수 있지만 데이터 바인딩된 컨트롤에 아직 바인딩되지 않았습니다. 이 시나리오는 같은 컨트롤과 일반적 <xref:System.Web.UI.WebControls.Wizard> 및 <xref:System.Web.UI.WebControls.MultiView> 런타임 시 컨트롤의 표시 유형을 변경 되는 위치입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal virtual void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PerformDataBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 데이터 소스의 데이터를 컨트롤에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대신이 메서드를 구현 하는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 에서 데이터 바인딩된 컨트롤을 파생 하는 경우 메서드는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스입니다. 컨트롤의 데이터 바인딩 논리를 배치 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 유지는 <xref:System.Web.UI.Control.DataBinding> 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> 이벤트가 잘못 된 순서로 발생 합니다.  
  
 기본 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스 구현을 제공 하지 않지만 특정이 메서드에 대 한는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 메서드는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 사용자 인터페이스 컨트롤의 값으로 검색 한 데이터를 바인딩할 메서드는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding%2A> 에서 파생 된 클래스에서 메서드가 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>합니다. `GeneologyTree` 제어 반복는 <xref:System.Web.UI.IHierarchicalEnumerable> 및 <xref:System.Web.UI.IHierarchyData> 연결에서 검색 된 개체 <xref:System.Web.UI.HierarchicalDataSourceView>에 바인딩된 데이터에 대 한 텍스트 트리 구조를 만듭니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#4)]
 [!code-vb[Samples.AspNet.GeneologyTree#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformSelect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결된 데이터 원본에서 데이터를 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect%2A> 데이터 바인딩된 컨트롤의 요소에 데이터를 바인딩할 데이터를 검색 한 후 메서드가 호출 됩니다. 파생된 형식은 기본 구현이 적절 하지 않은 경우에 데이터를 검색 하려면이 메서드를 재정의 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="ValidateDataSource">
      <MemberSignature Language="C#" Value="protected override void ValidateDataSource (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateDataSource(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateDataSource (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateDataSource(System::Object ^ dataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 속성으로 설정된 개체입니다.</param>
        <summary>데이터 바인딩된 컨트롤에 바인딩할 개체가 함께 동작 가능한 개체인지 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource%2A> 에 메서드가 호출 되는 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 에 대 한 클래스의 변경자 (setter)는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성입니다. <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스에 대해 설정 된 개체의 형식을 검사는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성의 인스턴스 인지 확인 하는 <xref:System.Web.UI.IHierarchicalEnumerable> 또는 <xref:System.Web.UI.IHierarchicalDataSource> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="dataSource" />가 <see langword="null" />이 아니고 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 또는 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 인터페이스를 구현하지 않는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.ValidateDataSource(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>