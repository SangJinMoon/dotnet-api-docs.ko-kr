<Type Name="TemplateField" FullName="System.Web.UI.WebControls.TemplateField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c66fe9c19847ff6a709316b905baf4dbaefc785" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378821" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TemplateField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TemplateField" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type TemplateField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터 바인딩된 컨트롤에서 사용자 지정 콘텐츠를 표시하는 필드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField> 클래스는 데이터 바인딩된 컨트롤에서 사용 됩니다 (같은 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>) 표시 된 각 레코드에 대 한 사용자 지정 콘텐츠를 표시 합니다. 제공 하지 않는 미리 정의 된 데이터 중 하나에 의해 제어 필드는 데이터 바인딩된 컨트롤의 내용을 표시 하려면 해야 하는 경우 (같은 <xref:System.Web.UI.WebControls.BoundField>)를 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField> 클래스를 만드는 사용자 지정 사용자 인터페이스 (UI). <xref:System.Web.UI.WebControls.TemplateField> 개체가 사용 되는 데이터 바인딩된 컨트롤에 따라 다르게 표시 됩니다. 예를 들어는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 표시는 <xref:System.Web.UI.WebControls.TemplateField> 열으로 개체와 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 행으로 표시 합니다.  
  
 여러 부분에 대 한 사용자 지정 템플릿을 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.TemplateField> 다음 표에 나열 된 템플릿을 사용 하 여 개체입니다.  
  
|템플릿|설명|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>|대체 항목에 대해 표시할 수 있는 콘텐츠를 지정 된 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>|편집 모드에 있는 항목에 대해 표시할 콘텐츠 지정는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>|콘텐츠의 바닥글 섹션에 대 한 표시를 지정 된 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>|헤더 섹션에 대해 표시할 수 있는 콘텐츠를 지정 된 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>|콘텐츠 항목의 삽입 모드에 대해 표시를 지정 된 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 이 서식 파일 에서만 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>|콘텐츠 항목에 대 한 표시를 지정 된 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
  
 숨길 수 있습니다는 <xref:System.Web.UI.WebControls.TemplateField> 설정 하 여 데이터 바인딩된 컨트롤에서 개체는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 속성을 `false`합니다.  
  
 사용자 지정을 정의 하는 대신 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> 또는 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> 서식 파일의 머리글 및 바닥글 섹션이 사용자 지정할 수는 <xref:System.Web.UI.WebControls.TemplateField> 의 다른 속성을 설정 하 여 개체는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 머리글 또는 바닥글 섹션의 캡션을 표시 하려면 설정는 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> 속성을 각각. 헤더 섹션의 텍스트를 표시 하는 대신 설정 하 여 이미지를 표시할 수는 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 속성입니다. 헤더 섹션에서 숨길 수 있습니다는 <xref:System.Web.UI.WebControls.TemplateField> 설정 하 여 개체는 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 속성을 `false`합니다.  
  
> [!NOTE]
>  일부 데이터 바인딩된 컨트롤 (같은 <xref:System.Web.UI.WebControls.GridView> 컨트롤) 표시 하거나 컨트롤의 전체 헤더 섹션을 숨길 수 있습니다. 이러한 데이터 바인딩된 컨트롤을 지원 하지 않습니다는 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 바인딩된 개별 필드에 대 한 속성입니다. 컨트롤의 사용을 표시 하거나 숨기는 데이터 바인딩된 컨트롤의 전체 헤더 섹션 하 여 `ShowHeader` 속성 (있는 경우).  
  
 또한 사용자 지정할 수 있습니다의 모양을 <xref:System.Web.UI.WebControls.TemplateField> 필드의 다른 부분에 대 한 스타일 속성을 설정 하 여 개체 (글꼴 색, 배경색, 및 등). 다음 표에서 다른 스타일 속성을 나열합니다.  
  
|스타일 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|자식 웹 서버 컨트롤에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|바닥글 섹션에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|헤더 섹션에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|데이터 항목에 대 한 스타일 설정의 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 지정을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.TemplateField> 같은 셀에서 두 필드를 표시 하는 개체입니다. 이름 및 성 필드 동일한로 결합 됩니다 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.  
  
 [!code-aspx-csharp[TemplateField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateField/CS/templatefieldcs.aspx#1)]
 [!code-aspx-vb[TemplateField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateField/VB/templatefieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.UI.WebControls.TemplateField> 클래스입니다. 이 생성자는 동적으로 만든된 데이터 바인딩된 컨트롤에 필드를 추가 하는 경우 일반적으로 사용 됩니다.  
  
 동적으로 추가 하는 <xref:System.Web.UI.WebControls.TemplateField> 데이터 바인딩된 컨트롤에 개체를 새 <xref:System.Web.UI.WebControls.TemplateField> 개체 적절 한 템플릿을 정의 하 고 데이터 바인딩된 컨트롤의 필드 컬렉션에 추가 합니다. 예를 들어, 사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 추가 합니다는 <xref:System.Web.UI.WebControls.TemplateField> 개체는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션입니다.  
  
> [!NOTE]
>  필드는 데이터 바인딩된 컨트롤에 동적으로 추가할 수 있지만 가장 좋습니다는 필드 정적으로 선언 하 고 다음 표시 하거나 숨길 수를 적절 하 게 합니다. 부모 데이터 바인딩된 컨트롤에 대 한 뷰 상태의 크기를 줄이는 모든 필드를 정적으로 선언 합니다.  
  
   
  
## Examples  
 동적으로 추가 하는 생성자를 사용 하는 방법은 다음 코드 예제는 <xref:System.Web.UI.WebControls.TemplateField> 필드 열을 한 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.  
  
 [!code-aspx-csharp[TemplateFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldCtor/CS/templatefieldctorcs.aspx#1)]
 [!code-aspx-vb[TemplateFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldCtor/VB/templatefieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체에서 교대로 반복되는 항목을 표시하기 위한 템플릿을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />에서 교대로 반복되는 항목을 표시하기 위한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 구현 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 속성에 대체 항목에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 대체 항목은 렌더링 하는 방법을 지정 하는 템플릿을 만들어 콘텐츠를 정의 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 속성은 주로 함께에서 사용 되는 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 데이터 바인딩된 컨트롤에 다른 모든 항목에 대해 서로 다른 모양을 만들 속성입니다.  
  
 서식 파일을 지정 하려면 먼저 배치 `<AlternatingItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<AlternatingItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.  
  
 서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell> 개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다. 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell> 컨트롤에 액세스 하는 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.TableCell> 개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A> 지정 된 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 속성의 대체에 대 한 사용자 지정 템플릿을 만들려면 항목에 <xref:System.Web.UI.WebControls.TemplateField> 의 필드 열은 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 서식 파일은에서 지정 된 템플릿 변형은 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 속성을 이미지로 셀의 반대쪽에 표시 되는 위치입니다.  
  
 [!code-aspx-csharp[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/CS/templatefieldalternatingitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/VB/templatefieldalternatingitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체가 바인딩된 값이 <see cref="F:System.String.Empty" />일 경우 이 값을 <see langword="null" />로 변환할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TemplateField" />가 바인딩된 값이 <see cref="F:System.String.Empty" />일 경우 이 값을 <see langword="true" />로 변환해야 하면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이 서식 파일에 작성 된 양방향 데이터 바인딩을 문이 적용 됩니다. 양방향 바인딩된 템플릿에서 값을 추출 하는 업데이트 또는 삽입 작업에 대 한 데이터 소스에 값을 전달 하기 전에 다음 변환이 수행 됩니다.  
  
 예를 들어 사용자가 빈 문자열을 입력 ("")를 업데이트 하거나 레코드를 삽입할 때 필드 값에 대 한 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull%2A> 빈 문자열 값을 자동으로 변환 되며 있는지 여부를 지정 하려면 속성 `null` 데이터 원본에서 데이터 필드가 업데이트 되는 경우.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="templateField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">현재 <see cref="T:System.Web.UI.WebControls.DataControlField" />의 속성을 복사할 대상 <see cref="T:System.Web.UI.WebControls.TemplateField" />입니다.</param>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.TemplateField" />에서 파생된 개체의 속성을 지정된 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 개체로 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.CopyProperties%2A> 메서드는 현재 속성을 복사 하는 데 사용 하는 도우미 메서드입니다 <xref:System.Web.UI.WebControls.TemplateField>-파생 개체는 <xref:System.Web.UI.WebControls.DataControlField> 메서드에서 만든 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 메서드.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="templateField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체를 만듭니다.</summary>
        <returns>항상 새 <see cref="T:System.Web.UI.WebControls.TemplateField" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.CreateField%2A> 반환할 기본 메서드를 재정의 한 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.TemplateField.CreateField" /> 파생된 클래스에서 해당 형식의 새 인스턴스를 만들고 기본 메서드를 호출 하지를 해야 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체에서 편집 모드의 항목을 표시하기 위한 템플릿을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />에서 편집 모드의 항목을 표시하기 위한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 구현 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 속성에서 편집 모드에 있는 항목에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 편집 모드에 있는 항목을 렌더링 하는 방법을 지정 하는 서식 파일을 만들어 콘텐츠를 정의 합니다. <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 속성은 일반적으로 데이터 원본에 값을 수정 하려면 사용자에 대 한 입력된 컨트롤을 포함 합니다.  
  
 서식 파일을 지정 하려면 먼저 배치 `<EditItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<EditItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.  
  
 서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell> 개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다. 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell> 컨트롤에 액세스 하는 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.TableCell> 개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A> 지정 된 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 속성에서 편집 모드에서 항목에 대 한 사용자 지정 템플릿을 만들려면는 <xref:System.Web.UI.WebControls.TemplateField> 의 필드 열은 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 서식 파일에는 사용자가 값 필드를 비워 두면 하지 못하게 하려면 유효성 검사 서버 컨트롤이 포함 되어 있습니다.  
  
 [!code-aspx-csharp[TemplateFieldEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/CS/templatefieldedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/VB/templatefieldedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="templateField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</param>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />의 텍스트나 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.TemplateField" />입니다.</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 값 중 하나입니다.</param>
        <param name="includeReadOnly">읽기 전용 필드의 값이 <c>dictionary</c> 컬렉션에 포함됨을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>현재 테이블 셀에서 하나 이상의 양방향 바인딩 문(<see langword="DataBind" />)으로 지정된 데이터 컨트롤 필드의 값을 추출하고 이 값을 지정된 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션에 추가합니다.)</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> 메서드는 파생 형식에서 구현 <xref:System.Web.UI.WebControls.DataControlField>와 같은 <xref:System.Web.UI.WebControls.TemplateField>합니다. 이 메서드는 서식 파일을 업데이트, 삽입 또는 삭제 작업에 대 한 데이터 원본에 전달 하도록 사전 채우기의 양방향 데이터 바인딩된 필드의 값을 추출 하 합니다. 필드/값 쌍은 메서드에 전달 되는 사전 컬렉션에 저장 됩니다. <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> 메서드는 `ExtractRowValues` 메서드 데이터와 같은 컨트롤 <xref:System.Web.UI.WebControls.DetailsView> 및 <xref:System.Web.UI.WebControls.GridView>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체의 바닥글 구역을 표시하기 위한 템플릿을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />의 바닥글 구역을 표시하기 위한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 구현 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> 속성의 바닥글 섹션에 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 바닥글 섹션은 렌더링 하는 방법을 지정 하는 템플릿을 만들어 콘텐츠를 정의 합니다.  
  
 서식 파일을 지정 하려면 먼저 배치 `<FooterTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<FooterTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.  
  
 서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell> 개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다. 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell> 컨트롤에 액세스 하는 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.TableCell> 개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A> 지정 된 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> 속성의 바닥글 섹션에 대 한 사용자 지정 템플릿을 만들려면는 <xref:System.Web.UI.WebControls.TemplateField> 필드 열에는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 서식 파일에 있는 값의 합계를 표시는 <xref:System.Web.UI.WebControls.TemplateField> 필드 열입니다.  
  
 [!code-aspx-csharp[TemplateFieldFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldFooterTemplate/CS/templatefieldfootertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldFooterTemplate/VB/templatefieldfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체의 머리글 구역을 표시하기 위한 템플릿을 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 <see cref="T:System.Web.UI.ITemplate" />의 머리글 구역을 표시하기 위한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 구현 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> 속성의 헤더 섹션에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 헤더 섹션을 렌더링 하는 방법을 지정 하는 서식 파일을 만들어 콘텐츠를 정의 합니다.  
  
 서식 파일을 지정 하려면 먼저 배치 `<HeaderTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<HeaderTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.  
  
 서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell> 개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다. 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell> 컨트롤에 액세스 하는 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.TableCell> 개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A> 지정 된 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> 속성의 헤더 섹션에 대 한 사용자 지정 템플릿을 만들려면는 <xref:System.Web.UI.WebControls.TemplateField> 필드 열에는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 서식 파일을 표시 하거나의 행을 숨길 수 있는 확인란이 표시는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[TemplateFieldHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/CS/templatefieldheadertemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/VB/templatefieldheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="templateField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />의 텍스트나 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataControlField" />입니다.</param>
        <param name="cellType">
          <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 값 중 하나입니다.</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" />이 포함된 행의 상태를 지정하는 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> 값 중 하나입니다.</param>
        <param name="rowIndex">
          <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />이 포함된 행의 인덱스입니다.</param>
        <summary>셀의 컨트롤 컬렉션에 텍스트 또는 컨트롤을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하는 사용자 지정 데이터 바인딩된 컨트롤을 만들 때 호출 <xref:System.Web.UI.WebControls.DataControlFieldCell> 개체는 테이블 구조 데이터 나 컨트롤의 셀을 초기화 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체에서 삽입 모드의 항목을 표시하기 위한 템플릿을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />에서 삽입 모드의 항목을 표시하기 위한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 구현 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> 속성 항목의 삽입 모드에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 삽입 모드에서 항목을 렌더링 하는 방법을 지정 하는 서식 파일을 만들어 콘텐츠를 정의 합니다.  
  
 서식 파일을 지정 하려면 먼저 배치 `<InsertItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<InsertItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.  
  
 서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell> 개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다. 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell> 컨트롤에 액세스 하는 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.TableCell> 개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A> 지정 된 속성입니다.  
  
> [!NOTE]
>  이 템플릿은와 같은 레코드를 삽입할 수 있도록 하는 데이터 바인딩된 컨트롤 에서만 지원 되며이 서식 파일을 지원 하지 않는 데이터 바인딩된 컨트롤도 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> 속성에서 삽입 모드에서 항목에 대 한 사용자 지정 템플릿을 만들려면는 <xref:System.Web.UI.WebControls.TemplateField> 필드 행에는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 서식 파일을 표시 한 <xref:System.Web.UI.WebControls.DropDownList> 를 미리 정의 된 목록에서 값을 선택할 수 있는 컨트롤입니다.  
  
 [!code-aspx-csharp[TemplateFieldInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/CS/templatefieldinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/VB/templatefieldinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에 항목을 표시하기 위한 템플릿을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />에 항목을 표시하기 위한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 구현 개체입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 속성 항목에 대해 표시 되는 사용자 지정 콘텐츠를 지정 하는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다. 콘텐츠 항목이 렌더링 되는 방식을 지정 하는 템플릿을 만들어 정의 합니다.  
  
> [!NOTE]
>  필요에 따라 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 함께에서 속성은 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 데이터 바인딩된 컨트롤에 다른 모든 항목에 대해 서로 다른 모양을 만들 속성입니다.  
  
 서식 파일을 지정 하려면 먼저 배치 `<ItemTemplate>` 여는 태그와 닫는 태그 사이 `<TemplateField>` 요소입니다. 다음에 여는 태그와 닫는 사이 있는 사용자 지정 내용을 추가 `<ItemTemplate>` 태그입니다. 콘텐츠는 일반 텍스트 만큼 간단 하거나 복잡 한 (다른 컨트롤을 포함 템플릿의 예를 들어) 될 수 있습니다.  
  
 서식 파일에 정의 된 컨트롤에 프로그래밍 방식으로 액세스 하려면 먼저 결정할 <xref:System.Web.UI.WebControls.TableCell> 개체 데이터 바인딩된 컨트롤에 컨트롤을 포함 합니다. 를 사용 하 여는 <xref:System.Web.UI.Control.Controls%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.TableCell> 컨트롤에 액세스 하는 개체입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.Control.FindControl%2A> 의 메서드는 <xref:System.Web.UI.WebControls.TableCell> 개체를 컨트롤에 있는 경우 컨트롤을 찾을 <xref:System.Web.UI.Control.ID%2A> 지정 된 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 속성의 항목에 대 한 사용자 지정 템플릿을 만들려면는 <xref:System.Web.UI.WebControls.TemplateField> 필드에 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 서식 파일에서 필드의 값이 표시 됩니다는 <xref:System.Web.UI.WebControls.RadioButtonList> 제어 합니다.  
  
 [!code-aspx-csharp[TemplateFieldItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldItemTemplate/CS/templatefielditemtemplatecs.aspx#1)]
 [!code-aspx-vb[TemplateFieldItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldItemTemplate/VB/templatefielditemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 클라이언트 입력의 유효성을 검사하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤이 클라이언트 입력의 유효성을 검사하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="templateField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> 개체에 들어 있는 컨트롤에서 페이지 콜백이 지원되는지 여부를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback%2A> 메서드가이 클래스와 항상 throw에 대 한 지원 되지 않습니다는 <xref:System.NotSupportedException> 예외입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 메서드의 기본 구현이 호출된 경우</exception>
        <block subset="none" type="overrides">
          <para>파생 된 클래스는 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 클래스 필드 콜백이 지원 하 여 포함 된 컨트롤에서 있는지 여부를 나타내기 위해이 메서드를 재정의할 수 있습니다. 콜백이 지원 나타내려면 예외를 throw 하지 않는 빈 메서드로이 메서드를 구현 그렇지 않은 경우 콜백이 지원 되지 않는 이유를 설명 하는 유용한 메시지와 함께 예외를 throw 합니다.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
  </Members>
</Type>