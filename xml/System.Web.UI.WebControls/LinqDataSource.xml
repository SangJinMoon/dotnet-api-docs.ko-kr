<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSource.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb47995a42e8b5a63458997b016e35704034a00a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb47995a42e8b5a63458997b016e35704034a00a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</source>
          <target state="translated">태그 텍스트를 통해 ASP.NET 웹 페이지에서 LINQ(Language-Integrated Query)를 사용하여 데이터 개체에서 데이터를 검색하고 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In this topic:</source>
          <target state="translated">항목 내용:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>소개<ept id="p1">](#introduction)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Order of Operations<ept id="p1">](#order_of_operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>작업 순서<ept id="p1">](#order_of_operations)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Ordering Data<ept id="p1">](#ordering_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 정렬<ept id="p1">](#ordering_data)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Grouping Data<ept id="p1">](#grouping_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 그룹화<ept id="p1">](#grouping_data)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Data Modifications<ept id="p1">](#data_modifications)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>데이터 수정<ept id="p1">](#data_modifications)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Evaluating Values at Run Time<ept id="p1">](#evaluating_value_at_run_time)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>런타임 시 값을 계산합니다.<ept id="p1">](#evaluating_value_at_run_time)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Working with Stored Procedures<ept id="p1">](#working_with_stored_procedures)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>저장된 프로시저 사용<ept id="p1">](#working_with_stored_procedures)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>선언 구문<ept id="p1">](#declarative_syntax)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Introduction</source>
          <target state="translated">소개</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</source>
          <target state="translated">통합 언어 쿼리 (LINQ)는 탐색, 필터 및 프로젝션 작업에서 선언적 방식으로 표현할 수 있도록 쿼리 연산자의 집합을 정의 하는 쿼리 구문입니다. .NET 기반 프로그래밍 언어입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The data object can be an in-memory data collection or an object that represents data from a database.</source>
          <target state="translated">데이터 개체는 메모리 내 데이터 컬렉션 또는 데이터베이스에서 데이터를 표시 하는 개체 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can retrieve or modify the data without having to write SQL commands for each operation.</source>
          <target state="translated">검색 하거나 각 작업에 대해 SQL 명령을 작성 하지 않고 데이터를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤을 사용 하면 LINQ를 태그 텍스트의 속성을 설정 하 여 ASP.NET 웹 페이지에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically generate the data commands.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 LINQ to SQL 사용 하 여 데이터 명령을 자동으로 생성 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
          <target state="translated">LINQ to SQL에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you are retrieving data from an in-memory data collection, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that contains the data collection.</source>
          <target state="translated">설정 하는 메모리 내 데이터 컬렉션에서 데이터를 검색 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 데이터 컬렉션을 포함 하는 클래스에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property or field that returns the data collection.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성을 속성 또는 필드를 데이터 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, you might have a class named <ph id="ph1">`Person`</ph> that contains a property named <ph id="ph2">`FavoriteCities`</ph> that returns an array of string values.</source>
          <target state="translated">예를 들어 라는 클래스를 할 수 있습니다 <ph id="ph1">`Person`</ph> 라는 속성이 포함 된 <ph id="ph2">`FavoriteCities`</ph> 문자열 값의 배열을 반환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In that case, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to <ph id="ph2">`Person`</ph> and set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to <ph id="ph4">`FavoriteCities`</ph>.</source>
          <target state="translated">설정 하는 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성을 <ph id="ph2">`Person`</ph> 설정 하 고는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성을 <ph id="ph4">`FavoriteCities`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you are querying a database, you must first create entity classes that represent the database and its tables.</source>
          <target state="translated">데이터베이스를 쿼리 하는 경우 먼저 데이터베이스와 테이블을 나타내는 엔터티 클래스를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can use the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph> or the SqlMetal.exe utility to generate these classes.</source>
          <target state="translated">사용할 수는 <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph> 또는 SqlMetal.exe 유틸리티를 이러한 클래스를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that represents the database and set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the database table.</source>
          <target state="translated">다음 설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 데이터베이스를 나타내는 클래스에 속성을 설정 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성을 데이터베이스 테이블을 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order of Operations</source>
          <target state="translated">작업 순서</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control applies data operations in the following order:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤은 다음과 같은 순서로 데이터 작업을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Where (specify which data records to return).</source>
          <target state="translated">여기서 (데이터 레코드를 반환할 지정).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order By (sort).</source>
          <target state="translated">Order By (정렬)입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Group By (aggregate data records that share values).</source>
          <target state="translated">Group By (값을 공유 하는 집계 데이터 레코드).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order Groups By (sort grouped data).</source>
          <target state="translated">(정렬 그룹화 된 데이터)로 그룹을 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Select (specify which fields or properties to return).</source>
          <target state="translated">(필드 또는 반환할 속성 지정)을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Auto-sort (sort data records by a property that the user has selected).</source>
          <target state="translated">(사용자가 선택한 속성에 의해 정렬 데이터 레코드)을 자동 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Auto-page (retrieve a subset of data records that were selected by the user).</source>
          <target state="translated">자동 페이지 (검색 데이터 레코드에 사용자가 선택한의 하위 집합)입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can add conditions to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter the data records that are returned from a query.</source>
          <target state="translated">에 조건을 추가할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 쿼리에서 반환 되는 데이터 레코드를 필터링 할 속성입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is not set, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves every record from the data object.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성이 설정 되어 있지는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 데이터 개체에서 모든 레코드를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Ordering Data</source>
          <target state="translated">데이터 정렬</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify the names of properties from the returned data to sort by.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성을 기준으로 정렬 하려면 반환된 된 데이터에서 속성의 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 보호로 <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> 또는 <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> 속성이 <ph id="ph5">`true`</ph>에 값을 제공 해야는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">값을 할당 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 포함 해야 모든 identity 열은 쿼리에서 반환 되는 속성 목록에 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Grouping Data</source>
          <target state="translated">데이터 그룹화</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used to consolidate data records that have the same values.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을 통해 데이터 레코드 값이 같은 통합 하는 사용 되는 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">데이터를 그룹화 할 때 포함할 수 있습니다 <ph id="ph1">`Key`</ph> 및 <ph id="ph2">`It`</ph>에 속성을 동적으로 만들어지는 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph> 속성은 속성 또는 데이터를 그룹화 하는 데 사용 된 속성의 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain all unique values in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`Key`</ph> 속성의 모든 고유 값에 포함 됩니다는 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph> 속성은 그룹화 된 데이터의에서 개별 레코드의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">반복할 수 있습니다는 <ph id="ph1">`It`</ph> 그룹화 작업에서 통합 된 개별 레코드를 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`It`</ph> 에 공통 값을 공유 하는 모든 개별 레코드를 포함 하는 속성은 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify the properties to use for sorting the grouped data.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 그룹화 된 데이터 정렬에 사용할 속성을 지정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you group data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property specifies how the individual records within the grouped data are sorted.</source>
          <target state="translated">데이터를 그룹화 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성 개별 레코드는 그룹화 된 데이터 정렬 되는 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves values for all the properties from a data object.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤이 데이터 개체에서 모든 속성에 대 한 값을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to specify which properties to return if you want to work with a subset of available properties.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 통해 사용 가능한 속성의 하위 집합을 사용 하려는 경우를 반환 하는 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The Select operation is applied after the Where, Order By, and Group By operations.</source>
          <target state="translated">Select 작업이 Where, 이후에 적용 된다는 Order By 및 Group By 작업 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</source>
          <target state="translated">따라서 Select 절에 별칭 이름을 만들 경우 별칭은 사용할 수 없는 경우 다른 절에서</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Data Modifications</source>
          <target state="translated">데이터 수정</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can specify whether data modifications are enabled by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> properties.</source>
          <target state="translated">데이터 수정 내용을 사용 하 여 사용 되는지 여부를 지정할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The user interface for modifying data from a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control is typically provided through a data-bound control, such as a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">데이터를 수정 하기 위한 사용자 인터페이스는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤은 데이터 바인딩된 컨트롤을 통해와 같이 제공 일반적으로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In addition to setting <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> to <ph id="ph4">`true`</ph>, the following conditions are required to enable automatic data modifications:</source>
          <target state="translated">설정 뿐만 아니라 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> 를 <ph id="ph4">`true`</ph>, 다음과 같은 자동 데이터 수정을 사용 하도록 설정 하는 데 필요한:</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property cannot be assigned a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성 값을 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property cannot be assigned a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성 값을 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">에 할당 하는 클래스는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성에서 파생 되어야 <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The property that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">에 할당 된 속성의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성에서 파생 되어야 <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can restrict which properties are displayed in a data-bound control in two ways.</source>
          <target state="translated">두 가지 방법으로 데이터 바인딩된 컨트롤에 표시 되는 속성을 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can either set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties, or you can define the fields for a data-bound control by adding <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> controls.</source>
          <target state="translated">설정 하거나는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성의 속성 또는 있습니다 하위 집합을 추가 하 여 데이터 바인딩된 컨트롤에 대 한 필드를 정의할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>However, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, it means that automatic update, insert, and delete operations cannot be enabled.</source>
          <target state="translated">그러나 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 의미 자동 업데이트, 삽입 및 삭제 작업을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">사용 가능한 속성의 하위 집합을 사용 하는 동안 자동으로 데이터 수정을 활성화 하려는 경우 설정 하지 않으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</source>
          <target state="translated">대신, 데이터 개체에서 모든 속성을 검색 하 고 데이터 바인딩된 컨트롤을 사용 하 여 표시 되는 속성을 관리 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> properties to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 또는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 설정 해야는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> 속성을 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>This prevents the data-bound control from automatically including buttons for editing and deleting the data.</source>
          <target state="translated">따라서 데이터 바인딩된 컨트롤을 데이터 편집 및 삭제에 대 한 단추가 자동으로 포함 수 없습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 표시 되지 않는 모든 값은 뷰 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">전달 됩니다 변경 되지 않은 데이터 원본에 데이터 업데이트를 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Evaluating Values at Run Time</source>
          <target state="translated">런타임 시 값을 계산합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collections.</source>
          <target state="translated">그룹화 값을 매개 변수를 추가할 수 있습니다 또는 필터링, 순서 지정에 대해 런타임 시 값을 평가할 수 있는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to specify default values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">기본값을 지정 하려면 매개 변수를 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to examine or modify values before the data operation is executed, you can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> events.</source>
          <target state="translated">데이터 작업이 실행 되기 전에 값을 수정 하거나 검사 하려는 경우를 처리할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</source>
          <target state="translated">데이터 작업을 취소 하거나 사용자 입력에 따라 데이터 클래스의 속성을 설정 하는 경우에 발생 한 유효성 검사 오류 검사를 이러한 이벤트를 처리할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>To examine values after the data operation has finished, handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> events.</source>
          <target state="translated">데이터 작업이 완료 된 다음 값을 검사 하려면 처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Working with Stored Procedures</source>
          <target state="translated">저장된 프로시저 사용</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from a stored procedure by creating an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">사용 하면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에 대 한 이벤트 처리기를 만들어 저장된 프로시저에서 데이터를 검색 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object.</source>
          <target state="translated">이벤트 처리기를 하면 저장된 프로시저를 나타내는 데이터 컨텍스트 클래스에서 메서드를 호출 하 고 결과를 설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
          <target state="translated">메서드에서 반환 되는 형식에 지정 된 형식과 일치 해야 사용 자동 업데이트, 삽입 및 데이터에 대 한 삭제 작업 하려는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For more information about creating data context methods, see <bpt id="p1">[</bpt>How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)<ept id="p1">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>.</source>
          <target state="translated">데이터 컨텍스트 메서드 만들기에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 저장된 프로시저 및 함수 (O/R 디자이너)에 매핑된 DataContext 만들기 메서드<ept id="p1">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Declarative Syntax</source>
          <target state="translated">선언 구문</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that retrieves data from an entity class named <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 라는 엔터티 클래스가에서 데이터를 검색 하는 컨트롤 <ph id="ph2">`Products`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The entity class could have been generated by using the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility.</source>
          <target state="translated">엔터티 클래스를 사용 하 여 생성 되었는지는 <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> 또는 SqlMetal.exe 유틸리티입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is set to return only records that have a value in the <ph id="ph2">`Price`</ph> property greater than 50.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성의 값이 있는 레코드만 반환는 <ph id="ph2">`Price`</ph> 50 보다 크므로 속성입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to display the data.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤이 바인딩되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that enables users to update, delete, and insert records in the data source.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 사용자가 업데이트, 삭제 및 데이터 원본에 레코드를 삽입할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control and enables users to see and modify the data.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤이 바인딩되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 하며 사용자가 확인 하는 데이터를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Notice that no SQL commands are required in order to select, update, delete, or insert the records.</source>
          <target state="translated">SQL 명령이 없거나 선택, 업데이트, 삭제 또는 레코드를 삽입 하기 위해 필요한 지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event that sets the data object based on a value in the Web page.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 웹 페이지의 값을 기반으로 하는 데이터 개체를 설정 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is configured to group by two columns.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 즉 제어 두 열을 기준으로 그룹화 하도록 구성 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`Key`</ph> property references an object that has two properties, <ph id="ph2">`ProductCategory`</ph> and <ph id="ph3">`Color`</ph>.</source>
          <target state="translated"><ph id="ph1">`Key`</ph> 두 속성이 있는 개체를 참조 하는 속성 <ph id="ph2">`ProductCategory`</ph> 및 <ph id="ph3">`Color`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The object represented by <ph id="ph1">`It`</ph> is renamed (aliased) to <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">개체가 나타내는 <ph id="ph1">`It`</ph> 를 이름이 바뀐된 (별칭)은 <ph id="ph2">`Products`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The renamed <ph id="ph1">`Products`</ph> object contains a collection of the individual records in a grouping.</source>
          <target state="translated">이름이 바뀐 <ph id="ph1">`Products`</ph> 개체는 그룹의 개별 레코드의 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Each instance will contain all the columns from the <ph id="ph1">`Products`</ph> table.</source>
          <target state="translated">각 인스턴스에서 모든 열이 포함 됩니다는 <ph id="ph1">`Products`</ph> 테이블입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> controls that display the data from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control in the previous example.</source>
          <target state="translated">다음 예제에서는 두 개의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> 에서 데이터를 표시 하는 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 앞의 예제에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>One <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the grouped data, and the other <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the individual names of products that belong to that group.</source>
          <target state="translated">하나의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> 그룹화 된 데이터와 다른 컨트롤 표시 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> 컨트롤에는 해당 그룹에 속하는 제품의 개별 이름이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The nested data-bound control's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property is set to <ph id="ph2">`Products`</ph>, which is the alias for the <ph id="ph3">`It`</ph> object.</source>
          <target state="translated">중첩 된 데이터 바인딩 컨트롤의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> 속성이 <ph id="ph2">`Products`</ph>에 대 한 별칭인는 <ph id="ph3">`It`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control dynamically creates an Order By clause based on values in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤이 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /&gt;</ph> 컬렉션의 값에 따라 Order By 절을 동적으로 만드는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control creates the Order By clause; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 경우는 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤 Order By 절을 만듭니다, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates an Order By clause that is based on the values in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 값을 기반으로 하는 Order By 절을 동적으로 만듭니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 첫 번째 매개 변수에서 데이터를 정렬 하 고 각 추가 매개 변수에 대 한 데이터를 추가로 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Order By clause.</source>
          <target state="translated">매개 변수를 포함 하는 <ph id="ph1">`null`</ph> 또는 빈 값은 Order By 절에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>, because the parser dynamically creates the Order By clause.</source>
          <target state="translated">설정 하지 않으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 로 설정 된 <ph id="ph3">`true`</ph>파서가 Order By 절을 동적으로 만들기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is assigned values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 하는 경우 예외를 throw는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 로 설정 된 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성 값이 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection that orders the data based on the property name that a user selects from a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">에 포함 된 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 에서 사용자 이름 속성에 따라 데이터를 정렬 하는 컬렉션을 선택는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control dynamically creates a Where clause based on values defined in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤이 <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /&gt;</ph> 컬렉션에 정의된 값을 기준으로 Where 절을 동적으로 만드는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control will create the Where clause; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤이 Where 절을 만들면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates the Where clause from the parameters in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> Where에서는 동적으로 생성 하는 컨트롤의 매개 변수에서 절은 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Each parameter that you add to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection must have its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> property set to a value that matches a property in the data object that is being queried.</source>
          <target state="translated">에 추가 하는 각 매개 변수에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션에 있어야 합니다 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> 속성은 쿼리 중인 데이터 개체의 속성을 일치 하는 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The automatically generated Where clause will check whether the value specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection equals the value of the matching property in the data object.</source>
          <target state="translated">자동으로 생성 된 위치 절에 값이 지정 되었는지 여부를 확인 합니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션 데이터 개체에 일치 하는 속성의 값과 일치 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>If you provide more than one parameter, the parameters are linked with a logical <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">둘 이상의 매개 변수를 제공 하는 경우 매개 변수는 논리적으로 연결 됩니다 <ph id="ph1">`AND`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Where clause.</source>
          <target state="translated">매개 변수를 포함 하는 <ph id="ph1">`null`</ph> Where에 빈 값이 포함 되지 않은 또는 절.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The automatically generated <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause can test only for equality and can link parameters only with the <ph id="ph2">`AND`</ph> operation.</source>
          <target state="translated">자동으로 생성 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 절 같음에 대해서만 테스트할 수 있으며, 매개 변수 에서만 연결할 수는 <ph id="ph2">`AND`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if you have to add a condition that does not test for equality or if you have to relate parameters with the <ph id="ph3">`OR`</ph> operation.</source>
          <target state="translated">설정 하지 않으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 같은지 테스트 하지 않는 조건을 추가 해야 할 경우 또는 매개 변수를 연결 해야 할 경우는 <ph id="ph3">`OR`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>You can accomplish these tasks by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`false`</ph> and adding placeholders in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for each parameter in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정 하 여 이러한 작업을 수행할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph> 의 자리 표시자를 추가 하 고는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성에서 각 매개 변수에 대해는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>In the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property, preface each placeholder name with the @ symbol.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성을 각 자리 표시자 이름 앞에 @ 기호입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, because the parser dynamically creates the Where clause.</source>
          <target state="translated">설정 하지 않으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>파서가 Where를 동적으로 만들기 때문에 절.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is assigned values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 하는 경우 예외를 throw 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성 값이 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to display the data that is returned from the query.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤이 바인딩되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 쿼리에서 반환 되는 데이터를 표시 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control is included that is populated with three values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 즉에 포함 되는지 제어 세 가지 값으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection with the name set to <ph id="ph2">`Category,`</ph> which matches one of the properties of the data object.</source>
          <target state="translated">에 포함 된 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 변수를 사용 하 여 컬렉션 <ph id="ph2">`Category,`</ph> 데이터 개체의 속성 중 하 나와 일치 하는 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Its <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A&gt;</ph> property is set to the ID of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">해당 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A&gt;</ph> 의 ID 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically creates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter records based on the value that the user selects from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 자동으로 만듭니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 에서 사용자가 선택한 값을 기반으로 하는 레코드를 필터링 할 속성의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The query returns the records whose <ph id="ph1">`Category`</ph> property matches the value that the user has selected from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">쿼리에서 반환 된 레코드 인 <ph id="ph1">`Category`</ph> 속성에서 사용자가 선택한 값과 일치 하는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control supports navigation through sections of the data at run time.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤이 런타임에 데이터의 섹션 탐색을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can page through the data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 데이터 통해 페이징할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 페이징할 수 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable paging in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 에서 페이징을 사용 하도록 설정 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">데이터를 통해 사용자를 사용 하도록 설정 하려면 페이징을 위한 인터페이스를 제공 하는 데이터 바인딩된 컨트롤을 연결 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves only enough records for one page in the data-bound control.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤이 데이터 바인딩된 컨트롤에서 한 페이지에 대 한 충분 한 레코드만 검색 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>It uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph> methods to retrieve the records for the current page.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph> 현재 페이지에 대 한 레코드를 검색 하는 메서드.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property set to <ph id="ph3">`true`</ph> and a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that is bound to the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 바인딩되는 컨트롤은 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is set to <ph id="ph3">`true`</ph> to provide the interface that lets users page through the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt;</ph> 의 속성에서 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 로 설정 되어 <ph id="ph3">`true`</ph> 데이터를 통한 사용자 페이지 수 있게 해 주는 인터페이스를 제공 하기.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control supports sorting the data at run time.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤이 런타임에 데이터 정렬을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can sort the data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자가 데이터를 정렬할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 정렬할 수 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control supports two approaches for sorting data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤은 데이터 정렬에 대 한 두 가지 방법을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to enable run-time sorting or you can set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to define the sorting at design time.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> 속성을 사용 하 여 런타임 정렬을 설정할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성을 디자인 타임에 정렬을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable sorting in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is based on the sort expression from a data-bound control.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 으로 정렬을 사용 하는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 데이터 바인딩된 컨트롤에서 정렬 식을 기반으로 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 정렬에 사용할 속성을 실행 시 선택할 수 있도록 인터페이스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>You can programmatically set the order in which data is returned by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to the property or properties used for sorting.</source>
          <target state="translated">설정 하 여 반환할 데이터의 순서를 프로그래밍 방식으로 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성을 속성 또는 정렬에 사용 되는 속성입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is set to a property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the sort expression from the data-bound control is applied after the expression in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성은 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> 속성은 <ph id="ph3">`true`</ph>, 식에 다음 데이터 바인딩된 컨트롤에서 정렬 식이 적용 되는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Therefore, this determines the final sorting of the data.</source>
          <target state="translated">따라서 최종 정렬 데이터를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property set to <ph id="ph3">`true`</ph> and a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that is bound to the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 보호로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`true`</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 바인딩되는 컨트롤은 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is set to <ph id="ph3">`true`</ph> to provide the interface that lets users sort the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 로 설정 되어 <ph id="ph3">`true`</ph> 사용자가 데이터를 정렬할 수 있는 인터페이스를 제공 하기.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>Occurs after an instance of the context type object is created.</source>
          <target state="translated">컨텍스트 형식 개체의 인스턴스가 만들어진 후에 발생합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph> event to examine the context type object or examine exceptions that are raised while the object is being created.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph> 이벤트 컨텍스트 형식 개체를 검사 하거나 개체를 만드는 동안 발생 하는 예외를 검사 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>You retrieve the context type object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is associated with this event.</source>
          <target state="translated">컨텍스트 형식 개체를 검색할는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 이 이벤트와 연결 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>You retrieve the exception that was raised during the data operation from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">데이터 작업 중에 발생 하는 예외를 검색할는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</source>
          <target state="translated">컨텍스트 형식 개체 선택, 업데이트, 삽입 및 삭제 작업 중 생성 되 고 요청이 전체에서 다시 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">이벤트가 발생 하지는 한 번이 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object during the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">프로그래밍 방식으로 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> 속성을 하는 동안 개체로 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">추가 조건을 원래 값에서 개체 또는 상태 보기에 저장할 수 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> 속성이 구현 하는 <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>Occurs before an instance of the context type object is created.</source>
          <target state="translated">컨텍스트 형식 개체의 인스턴스가 만들어지기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control creates an instance of the type that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에 지정 된 형식의 인스턴스를 만듭니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control calls the default constructor of the data context object to create an instance of the object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 개체의 인스턴스를 만드는 데이터 컨텍스트 개체의 기본 생성자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">기본이 아닌 생성자를 사용 해야 하거나에 지정 된 것과에서 다른 값과 개체를 만들어야 할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>In that case, you must handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event and manually create the data context object.</source>
          <target state="translated">처리 해야 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> 이벤트 데이터 컨텍스트 개체를 수동으로 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The context type object is created during select, update, insert, and delete operations.</source>
          <target state="translated">컨텍스트 형식 개체 선택, 업데이트, 삽입 및 삭제 작업 동안 만들어집니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">이벤트가 발생 하지는 한 번이 있습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object in an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">프로그래밍 방식으로 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> 속성에 대 한 이벤트 처리기에 있는 개체에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">추가 조건을 원래 값에서 개체 또는 상태 보기에 저장할 수 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> 속성이 구현 하는 <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The following example shows how to create the data context object by using a non-default constructor during the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event.</source>
          <target state="translated">중 기본이 아닌 생성자를 사용 하 여 데이터 컨텍스트 개체를 만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The code assigns the object to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A&gt;</ph> property.</source>
          <target state="translated">코드를 개체에 할당 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
          <source>Occurs before disposing the context type object.</source>
          <target state="translated">컨텍스트 형식 개체를 삭제하기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
          <source>You handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</source>
          <target state="translated">처리 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph> 이벤트 개체를 수동으로 삭제 하거나 개체를 제거 하기 전에 개체에 지정 된 정리를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</source>
          <target state="translated">해당 값에 검색할 데이터가 포함된 속성이 들어 있는 형식 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The name of the class to retrieve data from.</source>
          <target state="translated">데이터를 검색할 클래스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 메모리 데이터 수집 또는 데이터베이스에서 데이터를 검색 컨트롤을 두 개의 속성을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The first is a data context class that represents the data source.</source>
          <target state="translated">첫 번째는 데이터 원본을 나타내는 데이터 컨텍스트 클래스입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The second is a property in the data context class that contains the data.</source>
          <target state="translated">두 번째는 데이터가 포함 된 데이터 컨텍스트 클래스의 속성입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the data context class and you set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the data collection that contains the data.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성 데이터 컨텍스트 클래스의 이름으로 설정 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성 데이터를 포함 하는 데이터 컬렉션을 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For example, when you retrieve data from a database, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that represents the database.</source>
          <target state="translated">예를 들어 데이터베이스에서 데이터를 검색 하는 경우 설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성을 데이터베이스를 나타내는 클래스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Also set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the table in the database.</source>
          <target state="translated">설정 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성을 데이터베이스에서 테이블을 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>To generate classes from a database, use the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility to automatically generate those classes.</source>
          <target state="translated">사용 하 여 데이터베이스에서 클래스를 생성 하는 <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> 또는 SqlMetal.exe 유틸리티를 자동으로 이러한 클래스를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>When you retrieve data from an in-memory data collection such as an array, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that contains the array property.</source>
          <target state="translated">배열 등 메모리 내 데이터 컬렉션에서 데이터를 검색 하는 경우 설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성 배열 속성을 포함 하는 클래스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that gets the array.</source>
          <target state="translated">다음 설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성을 가져오는 배열의 속성입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>To enable automatic update, insert, or delete operations through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the class assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">자동으로 업데이트, 삽입 또는 삭제 작업을 통해는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 에 할당 된 클래스를 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성에서 파생 되어야 <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>In addition, the property assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">또한 속성에는 할당 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성에서 파생 되어야 <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">또는 하지 않는 필요 자동 업데이트 하기 위해 삽입, 삭제 작업을 하는 경우에 클래스를 모든 종류의 이름을 할당할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">클래스의 인스턴스에서 데이터를 선택 하는 방법에 대 한 정보를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to a class that contains an array of strings.</source>
          <target state="translated">설정 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성을 문자열의 배열을 포함 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>It also shows how to set the property to a class (generated by the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>) that represents a database.</source>
          <target state="translated">또한 클래스에 속성을 설정 하는 방법을 보여 줍니다 (에 의해 생성 된는 <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>) 데이터베이스를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The class named <ph id="ph1">`ExampleDataContext`</ph> that represents the database table is not shown in this example.</source>
          <target state="translated">이름의 클래스 <ph id="ph1">`ExampleDataContext`</ph> 나타냅니다 데이터베이스 테이블은 표시 되지 않도록이 예에서 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">이 예제가 작동 하려면이 클래스를 만들어야이 명명 된 Example.dbml 한 테이블을 끌어 라는 동영상을 LINQ To SQL 클래스를 추가 하 여는 <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>A class named <ph id="ph1">`ExampleDataContext`</ph> with a property named <ph id="ph2">`Movies`</ph> is generated.</source>
          <target state="translated">라는 클래스 <ph id="ph1">`ExampleDataContext`</ph> 라는 속성이 있는 <ph id="ph2">`Movies`</ph> 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The following example shows the class named <ph id="ph1">`MovieLibrary`</ph> that is referenced in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">다음 예에서는 라는 클래스를 보여 줍니다. <ph id="ph1">`MovieLibrary`</ph> 에서 참조 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
          <source>Returns a queryable view.</source>
          <target state="translated">쿼리 가능한 뷰를 반환합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
          <source>A queryable view.</source>
          <target state="translated">쿼리 가능한 뷰입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /&gt;</ph> class that is associated with this control.</source>
          <target state="translated">이 컨트롤에 연결된 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>An object that acts as the interface for data-bound controls.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 대한 인터페이스로 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>To provide a custom view, you can override this method in a derived class.</source>
          <target state="translated">사용자 지정 보기를 제공 하려면이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row key values for the records to be deleted.</source>
          <target state="translated">삭제할 레코드의 행 키 값입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">데이터 충돌을 감지하기 위해 계산하는 행 값입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs a delete operation.</source>
          <target state="translated">삭제 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The number of records affected by the delete operation.</source>
          <target state="translated">삭제 작업의 영향을 받는 레코드의 수입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method from your code.</source>
          <target state="translated">일반적으로 않아도 호출 하 여 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> 사용자 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>When you use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a data-bound control, the data-bound control will automatically call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when the user takes action to delete a record.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤이 데이터 바인딩된 컨트롤을 데이터 바인딩된 컨트롤에서 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> 메서드는 사용자가 레코드를 삭제할 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to create your own process for deleting data.</source>
          <target state="translated">명시적으로 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> 메서드 데이터를 삭제 하기 위한 프로세스를 직접 하려는 경우.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>For example, you can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to delete a record based on an event outside the data-bound control.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> 데이터 바인딩된 컨트롤 외부 이벤트에 따라 방법을 레코드를 삭제 하려는 경우.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>Occurs when a delete operation has finished.</source>
          <target state="translated">삭제 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> 이벤트 또는 삭제 작업에서 발생 한 예외를 catch 하는 작업이 완료 된 후에 출력 매개 변수를 검사 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>You can retrieve the output parameters from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">출력 매개 변수를 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 이벤트 처리기에 전달 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
          <source>This property is not used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated">이 속성은 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 클래스에서 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
          <source>A collection of parameters.</source>
          <target state="translated">매개 변수 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>Occurs before a delete operation.</source>
          <target state="translated">삭제 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> 을 삭제, 삭제 작업을 하기 전에 값을 변경 하거나 삭제 작업을 취소 하려면 데이터 클래스의 데이터 유효성 검사 오류를 검사 하는 개체를 검사 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control passes a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object to event handlers for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어가 전달은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> 개체에 대 한 이벤트 처리기에는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains the data that will be deleted and enables you to cancel the delete operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> 개체가 삭제 되 고 삭제 작업을 취소할 수 있도록 하는 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>If the data class throws a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> exception, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains that exception in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">데이터 클래스 throw 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> 예외는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> 개체에서 해당 예외에 포함 되어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">에 대 한 이벤트 처리기에서 예외가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> 이벤트를 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> 이벤트 (통해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 개체).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 속성 이후에 throw 되는 예외가 포함 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The code cancels the delete operation based on a property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;</ph> property and a value from the Web page.</source>
          <target state="translated">코드에서 속성에 따라 삭제 작업을 취소는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;</ph> 속성 및 웹 페이지의 값입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>In the example, when the <ph id="ph1">`OnSale`</ph> property is set to <ph id="ph2">`true`</ph>, the user must select a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph> control to confirm that a record should be deleted.</source>
          <target state="translated">예제에서는 때는 <ph id="ph1">`OnSale`</ph> 속성이 <ph id="ph2">`true`</ph>, 사용자 선택 해야는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph> 컨트롤을 레코드를 삭제할 것인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>Gets or sets a value that indicates whether data records can be deleted through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤을 통해 데이터 레코드를 삭제할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic delete operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">자동 삭제 작업을 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to delete a data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 사용자가 통해 데이터 레코드를 삭제할 수 있도록 하려는 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to delete the data.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 LINQ to SQL 사용 하 여 데이터 삭제 명령을 자동으로 만들려고 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>You must include an interface that lets users select a record to delete, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">사용자가 같은 삭제할 레코드를 선택할 수 있는 인터페이스를 포함 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic delete operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤이 자동 삭제 작업을 지원 하지 않는 경우는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if a delete operation is tried.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 삭제 작업이 시도 되 면 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 된 컨트롤을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and creates a button that lets users delete a data record.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 표시 하 고 사용자가 데이터 레코드를 삭제할 수 있는 단추를 만듭니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>Gets or sets a value that indicates whether data records can be inserted through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤을 통해 데이터 레코드를 삽입할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic insert operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">자동 삽입 작업을 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to insert a new data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 사용자가 통해 새 데이터 레코드를 삽입할 수 있도록 하려는 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to insert the data.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 LINQ to SQL 사용 하 여 데이터를 삽입 하는 명령을 자동으로 만들려고 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>You must include an interface that lets users insert a new record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">와 같은 새 레코드를 삽입 하는 사용자가 수 있는 인터페이스를 포함 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic insert operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤이 자동 삽입 작업을 지원 하지 않는 경우는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an insert operation is tried.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 삽입 작업이 시도 되 면 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 된 컨트롤을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 표시 하 고 컨트롤을 삽입 사용자가 작성 하 고 새 레코드를 저장할 수 있는 모드를 전환 하는 단추를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>Gets or sets the value that indicates whether changes to the data context object are tracked.</source>
          <target state="translated">데이터 컨텍스트 개체에 대한 변경 내용이 추적되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data context object is tracked for changes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터 컨텍스트 개체의 변경 내용이 추적될 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않을 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property is only used when selecting data from a LINQ To SQL data context object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> 속성은 데이터 컨텍스트 LINQ To SQL 개체에서 데이터를 선택할 때만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>When you are interacting with read-only data, setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property to <ph id="ph2">`false`</ph> improves performance because the data is not cached to determine if it has changed.</source>
          <target state="translated">읽기 전용 데이터와 상호 작용 하는 경우 설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph> 변경 되었는지 여부를 결정 하는 데이터가 캐시 되지 때문에 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>However, it also disables deferred query execution.</source>
          <target state="translated">그러나 지연 된 쿼리 실행도 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>This property must be set to <ph id="ph1">`true`</ph> if you want to use deferred query execution.</source>
          <target state="translated">이 속성으로 설정 되어 있어야 <ph id="ph1">`true`</ph> 지연 된 쿼리 실행을 사용 하려는 경우.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>Gets or sets a value that indicates whether data records can be updated through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 컨트롤을 통해 데이터 레코드를 업데이트할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic update operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">자동 업데이트 작업을 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to update a data record by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 사용자가 사용 하 여 데이터 레코드를 업데이트할 수 있도록 하려는 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to update the data.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 LINQ to SQL 사용 하 여 데이터를 업데이트 하는 명령을 자동으로 만들려고 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>You must include an interface that lets users update a record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">와 같은 레코드를 업데이트 하는 사용자가 수 있는 인터페이스를 포함 해야는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic update operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤이 자동 업데이트 작업을 지원 하지 않는 때는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an update operation is tried.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 업데이트 작업이 시도 되 면 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 된 컨트롤을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> 로 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and creates a button that lets users update a data record.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 데이터를 표시 하 고 사용자가 데이터 레코드를 업데이트할 수 있는 단추를 만듭니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</source>
          <target state="translated">검색된 데이터를 그룹화하는 데 사용되는 속성을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>A string that is used to create the Group By clause.</source>
          <target state="translated">Group By 절을 만드는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used for consolidating data records that have the same values.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을 통해 지정 되는 속성 값이 같은 데이터 레코드 통합에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph2">`Name`</ph>, all the records in the query that have the same <ph id="ph3">`Name`</ph> property value are returned as a single consolidated record.</source>
          <target state="translated">예를 들어, 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을 <ph id="ph2">`Name`</ph>, 동일한 쿼리에 모든 레코드 <ph id="ph3">`Name`</ph> 속성 값을 단일 통합 레코드로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can assign more than one property to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property by enclosing all the properties in the <ph id="ph2">`new`</ph> function and separating each property by using a comma.</source>
          <target state="translated">둘 이상의 속성을 할당할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성의 모든 속성을 포함 하 여는 <ph id="ph2">`new`</ph> 함수와 쉼표를 사용 하 여 각 속성을 구분 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, to group by the properties <ph id="ph1">`Name`</ph> and then <ph id="ph2">`Category`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph4">`new(Name, Category)`</ph>.</source>
          <target state="translated">속성을 기준으로 그룹화 하려면 예를 들어 <ph id="ph1">`Name`</ph> 차례로 <ph id="ph2">`Category`</ph>로 설정 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을 <ph id="ph4">`new(Name, Category)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The values in the property that are used for grouping are returned through a generated property named <ph id="ph1">`Key`</ph>.</source>
          <target state="translated">그룹화에 사용 되는 속성의 값은 생성 된 속성인 통해 반환 되 <ph id="ph1">`Key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You include the <ph id="ph1">`Key`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve the grouped values.</source>
          <target state="translated">포함 하는 <ph id="ph1">`Key`</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 그룹화 된 값을 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can set the <ph id="ph1">`Key`</ph> property to an alias by using the <ph id="ph2">`As`</ph> keyword, but you are not required to use an alias.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">`Key`</ph> 속성을 사용 하 여 별칭은 <ph id="ph2">`As`</ph> 있지만 키워드를 별칭을 사용 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, you might set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to a property named <ph id="ph2">`Category`</ph>.</source>
          <target state="translated">예를 들어 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성 이라는 속성을 <ph id="ph2">`Category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can retrieve the consolidated values from the <ph id="ph1">`Category`</ph> property by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph3">`new(Key As ProductCategory)`</ph>.</source>
          <target state="translated">통합된 된 값을 검색할 수 있습니다는 <ph id="ph1">`Category`</ph> 속성을 설정 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 <ph id="ph3">`new(Key As ProductCategory)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can access the individual records in a grouping by including the <ph id="ph1">`It`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">그룹의 개별 레코드를 포함 하 여 액세스할 수 있습니다는 <ph id="ph1">`It`</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">`It`</ph> property contains a collection of records that share a value in the grouped property.</source>
          <target state="translated"><ph id="ph1">`It`</ph> 속성 그룹화 된 속성의 값을 공유 하는 레코드의 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records.</source>
          <target state="translated">반복할 수 있습니다는 <ph id="ph1">`It`</ph> 개별 레코드를 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is often used with aggregation methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성은 집계 메서드와 함께 자주 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can use the following aggregate methods:</source>
          <target state="translated">다음과 같은 집계 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>조건<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>조건<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: LinqDataSource 웹 서버 컨트롤 개요<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 데이터 그룹화 및 집계 LinqDataSource 컨트롤을 사용 하 여<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that groups the returned data by a property named <ph id="ph2">`Category`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 라는 속성으로 반환된 된 데이터를 그룹화 하는 컨트롤 <ph id="ph2">`Category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>It returns the shared values and calculates the average price for the grouped records.</source>
          <target state="translated">공유 값을 반환 하 고 그룹화 된 레코드에 대 한 평균 가격을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is configured to group by two columns.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 즉 제어 두 열을 기준으로 그룹화 하도록 구성 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">`Key`</ph> property references an object that has two properties, <ph id="ph2">`ProductCategory`</ph> and <ph id="ph3">`Color`</ph>.</source>
          <target state="translated"><ph id="ph1">`Key`</ph> 두 속성이 있는 개체를 참조 하는 속성 <ph id="ph2">`ProductCategory`</ph> 및 <ph id="ph3">`Color`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The object represented by <ph id="ph1">`It`</ph> is renamed <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">개체가 나타내는 <ph id="ph1">`It`</ph> 이름이 <ph id="ph2">`Products`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The renamed <ph id="ph1">`Products`</ph> object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.</source>
          <target state="translated">이름이 바뀐 <ph id="ph1">`Products`</ph> 개체는 그룹의 개별 레코드의 컬렉션을 포함 하 고 각 인스턴스에 Products 테이블에서 모든 열을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> controls for displaying the data from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control in the previous example.</source>
          <target state="translated">다음 예제에서는 두 개의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> 의 데이터를 표시 하는 것에 대 한 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 앞의 예제에서 제어 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>One <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the grouped data and the other <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the individual names of products that belong to that group.</source>
          <target state="translated">하나의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> 그룹화 된 데이터 및 다른 컨트롤 표시 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> 컨트롤에는 해당 그룹에 속하는 제품의 개별 이름이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The nested data-bound control's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property is set to <ph id="ph2">`Products`</ph>, which is the alias for the <ph id="ph3">`It`</ph> object.</source>
          <target state="translated">중첩 된 데이터 바인딩 컨트롤의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> 속성이 <ph id="ph2">`Products`</ph>에 대 한 별칭인는 <ph id="ph3">`It`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Gets the collection of parameters that are used to create the Group By clause.</source>
          <target state="translated">Group By 절을 만드는 데 사용되는 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>The parameters that are used to create the Group By clause.</source>
          <target state="translated">Group By 절을 만드는 데 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to create the Group By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 매개 변수를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> 런타임 시 Group By 절을 만들 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Typically you will not use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data.</source>
          <target state="translated">일반적으로 사용 하지는 것입니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> 컬렉션 데이터를 그룹화 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Instead, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
          <target state="translated">대신 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection only when a value in the Group By clause must be set at run time and that value is not a property name.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> 런타임 시 경우 Group By 절에 값 컬렉션을 설정 해야 하며 해당 값은 속성 이름이 아닙니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>For example, use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data based on whether the <ph id="ph2">`LastName`</ph> property in the data records equals a value provided by the user.</source>
          <target state="translated">예를 들어 사용는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> 여부에 따라 데이터를 그룹화 하려면 컬렉션에서 <ph id="ph2">`LastName`</ph> 데이터 레코드의 속성에는 사용자가 제공한 값과 같으면 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
          <target state="translated">속성으로 데이터를 그룹화 하려는 경우 런타임 시 설정 하지 않아도 해당 속성에 속성 그룹화를 정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>For example, to return values from a database table grouped by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> to "LastName" without any parameters.</source>
          <target state="translated">예를 들어 데이터베이스 테이블의 값을 반환 하 여 그룹화 <ph id="ph1">`LastName`</ph>설정, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> "LastName" 매개 변수 없이 있습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>If you want to dynamically group data by a property, create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property as needed.</source>
          <target state="translated">속성에 의해 동적으로 데이터를 그룹화 하려는 경우에 대 한 이벤트 처리기를 만들는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트 및 사용자 지정의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 필요에 따라 속성입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You cannot assign the name of a property as the value for a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">속성의 이름에 매개 변수의 값으로 할당할 수 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection when you want to add a condition to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property that must be set at run time.</source>
          <target state="translated">매개 변수를 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> 조건을 추가 하려는 경우 컬렉션은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 런타임에 설정 해야 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property for that named parameter.</source>
          <target state="translated">값을 설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> 컬렉션에 각 매개 변수에 이름을 할당할 추가 하는 다음에서 자리 표시자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성에 명명 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>In the Group By clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Group By 절에 각 매개 변수 이름 앞에 @ 기호입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The row values to be inserted into the data source.</source>
          <target state="translated">데이터 소스에 삽입할 행 값입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>Performs an insert operation.</source>
          <target state="translated">삽입 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The number of rows affected by the insert operation.</source>
          <target state="translated">삽입 작업이 적용되는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method from your code.</source>
          <target state="translated">일반적으로 않아도 호출 하 여 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> 사용자 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when the user takes action to insert a new record.</source>
          <target state="translated">데이터 바인딩된 컨트롤이 자동으로 호출 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> 메서드는 사용자가 새 레코드를 삽입 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when you want to create your own process for inserting data.</source>
          <target state="translated">명시적으로 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> 데이터 삽입을 위한 프로세스를 직접 만들려는 경우 방법입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The following example shows how to programmatically insert a new record in the data source after the user clicks a button.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 사용자가 단추를 클릭 한 후 데이터 원본에 새 레코드를 삽입 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The code passes a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains default values to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">코드는 <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 값이 기본값을 포함 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The following example shows the markup for the previous example.</source>
          <target state="translated">다음 예제에서는 앞의 예제에 대 한 태그를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>Occurs when an insert operation has finished.</source>
          <target state="translated">삽입 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> 삽입 작업이 완료 된 다음 값을 확인 하려면 이벤트를 삽입 작업에서 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>You can retrieve the new values through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">통해 새 값을 검색할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 이벤트 처리기에 전달 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object to retrieve the identity property generated by a database for a new data record.</source>
          <target state="translated">예를 들어, 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 새 데이터 레코드에 대 한 데이터베이스에서 생성 된 identity 속성을 검색 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>The following example shows how to create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event that checks for exceptions and retrieves the identity property for the new record.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기를 만드는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> 예외를 확인 하 고 새 레코드에 대 한 id 속성을 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>Occurs before an insert operation.</source>
          <target state="translated">삽입 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 을 삽입할, 삽입 작업을 하기 전에 값을 변경 하거나 삽입 작업을 취소 하는 데이터 클래스의 데이터 유효성 검사 오류를 검사 하는 개체를 검사 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object passed to event handlers for this event contains the new object to insert in the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> 개체 데이터 소스에 삽입할 새 개체를 포함 하는이 이벤트에 대 한 이벤트 처리기로 전달 합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>If a validation error occurs during the insert operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">삽입 작업 중에 유효성 검사 오류가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> 개체는 데이터 클래스에 의해 throw 되는 유효성 검사 예외를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">유효성 검사 오류가 삽입할 값을 데이터 클래스에 속성의 형식과 일치 하지 않는 경우 또는 사용자 지정 유효성 검사를 통과 하지 못하면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">에 대 한 이벤트 처리기에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 이벤트에 유효성 검사 예외를 검색 하 고 적절 한 조치를 취할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">에 대 한 이벤트 처리기에서 예외가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 이벤트를 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> 이벤트 (통해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 개체).</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 속성 이후에 throw 되는 예외가 포함 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event that modifies data before the insert operation.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 삽입 작업 전에 데이터를 수정 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property is cast to a type named <ph id="ph2">`Product`</ph>.</source>
          <target state="translated">이 개체는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> 속성은 명명 된 형식으로 캐스팅 <ph id="ph2">`Product`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">`DateModified`</ph> property of the <ph id="ph2">`Product`</ph> object is set to the current date and time.</source>
          <target state="translated"><ph id="ph1">`DateModified`</ph> 의 속성은 <ph id="ph2">`Product`</ph> 개체가 현재 날짜와 시간으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event that retrieves validation exceptions.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> 유효성 검사 예외를 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The previous example retrieves validation exceptions.</source>
          <target state="translated">앞의 예제는 유효성 검사 예외를 검색합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>An exception might be thrown if a value does not match the type of the property.</source>
          <target state="translated">값 속성의 형식 일치 하지 않으면 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>It might also be thrown from a customized check such as the one in the following example.</source>
          <target state="translated">다음 예제에 대 한 것과 같은 사용자 지정된 검사에서 발생할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">`OnAgeChanging`</ph> method checks that the number for the <ph id="ph2">`Age`</ph> property is not negative.</source>
          <target state="translated"><ph id="ph1">`OnAgeChanging`</ph> 메서드를 확인 하는 대 한 숫자는 <ph id="ph2">`Age`</ph> 속성은 음수일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>Gets the collection of parameters that are used during an insert operation.</source>
          <target state="translated">삽입 작업 중에 사용되는 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The parameters that are used during an insert operation.</source>
          <target state="translated">삽입 작업 중에 사용되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>Typically the values that are needed for an insert operation are passed to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control by the data-bound control.</source>
          <target state="translated">삽입 작업에 필요한 값은에 전달 되는 일반적으로 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 데이터 바인딩된 컨트롤에 의해 제어 됩니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>You specify insert parameters when you want to provide a default value or define whether to convert empty values to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">정의할 때 지정 삽입 매개 변수는 기본값을 제공 하려는 경우 값을 빈 값 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</source>
          <target state="translated">사용자가 값을 제공 하지 때 처리 해야 하는 값에 대해서만 삽입 됩니다 하는 모든 값에 대 한 매개 변수를 제공 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The values that you provide in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection are used only for fields that are defined in the data source but that are not bound in the data control.</source>
          <target state="translated">제공 하는 값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> 컬렉션은 데이터 원본에 정의 되어 있지만 데이터 컨트롤에 바인딩되지 않는 필드에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control that is bound to the table is bound only to the Name and Address fields.</source>
          <target state="translated">예를 들어 데이터베이스 테이블에 열 이름, 주소 및 PostalCode 이라는 가정 하지만 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> 테이블에 바인딩되는 컨트롤은 이름과 주소 필드에만 바인딩되어 있습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used only for the PostalCode field.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> 컬렉션 PostalCode 필드에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>They will not be used for the Name and Address field.</source>
          <target state="translated">또한 이름과 주소 필드에 대 한 사용 되지 않습니다 됩니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>This is true even if no value is entered for those fields.</source>
          <target state="translated">이러한 필드에 대 한 입력 값이 없는 경우에 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>If the data-bound control autogenerates fields for all fields in the data source, no values from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used.</source>
          <target state="translated">원본을 하는 경우 데이터의 모든 필드에 대 한 데이터 바인딩된 컨트롤이 자동으로 생성 필드에서 값이 없는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> 컬렉션 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a parameter that provides a default value in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 에 기본값을 제공 하는 매개 변수로 제어는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>If the user does not provide a value for the <ph id="ph1">`Category`</ph> property, the default value that is provided by the parameter is saved in the database.</source>
          <target state="translated">사용자에 대 한 값을 제공 하지 않는 경우는 <ph id="ph1">`Category`</ph> 속성을 매개 변수에서 제공 되는 기본값은 데이터베이스에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 개체를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">이벤트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</source>
          <target state="translated">검색된 데이터의 순서를 지정하는 데 사용되는 필드를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>A string that is used to create the Order By clause.</source>
          <target state="translated">Order By 절을 만드는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify which properties from the returned data to use for sorting.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성에서 반환 되는 데이터 정렬에 사용할 속성 지정 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The property for sorting the data must exist in the original data source, but it does not have to be included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">데이터 정렬에 대 한 속성 데이터 원본에 있어야 하지만에 포함 될 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You can add a space and <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, or <ph id="ph4">`DESC`</ph> to a property in the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> string in order to specify how the ordered data is returned.</source>
          <target state="translated">공간을 추가할 수 있습니다 및 <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, 또는 <ph id="ph4">`DESC`</ph> 속성에 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 문자열 정렬 된 데이터 반환 되는 방법을 지정할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You can provide more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property by separating each property by using a comma.</source>
          <target state="translated">둘 이상의 속성을 제공할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 쉼표를 사용 하 여 각 속성을 구분 하 여 속성입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>For example, to order by properties named <ph id="ph1">`LastName`</ph> and <ph id="ph2">`FirstName`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to "LastName, FirstName".</source>
          <target state="translated">예를 들어 명명 된 속성으로 정렬할 수 <ph id="ph1">`LastName`</ph> 및 <ph id="ph2">`FirstName`</ph>로 설정 된 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성을 "성, 이름"입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 보호로 <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> 또는 <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> 속성이 <ph id="ph5">`true`</ph>에 값을 제공 해야는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">값을 할당 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 포함 해야 모든 identity 열은 쿼리에서 반환 되는 속성 목록에 있습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, a data-bound control can pass a sort expression to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control at run time.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, 데이터 바인딩된 컨트롤에서 정렬 식을 전달할 수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 런타임 시 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will apply the sort expression from the data-bound control after it applies the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 을 적용 한 후 제어가 데이터 바인딩된 컨트롤에서 정렬 식을 적용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>Therefore, the data is returned according to the sort expression from the data-bound control.</source>
          <target state="translated">따라서 데이터를 데이터 바인딩된 컨트롤에서에서 정렬 식에 따라 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The following example returns data in reverse alphabetical order based on values in the <ph id="ph1">`Category`</ph> property.</source>
          <target state="translated">값에 따라 반대 순으로 데이터를 반환 하는 다음 예제는 <ph id="ph1">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>Gets the collection of parameters that are used to create the Order By clause.</source>
          <target state="translated">Order By 절을 만드는 데 사용되는 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The parameters that are used for creating the Order By clause.</source>
          <target state="translated">Order By 절을 만드는 데 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection to create the Order By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 매개 변수를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 런타임 시 Order By 절을 만들 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>Typically you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you add parameters to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">일반적으로 설정 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 매개 변수를 추가 하는 경우는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, each parameter in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection is added to the Order By clause in the sequence that they are specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, 각 매개 변수에 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션에 지정 된 시퀀스에서 Order By 절에 추가 됩니다는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>, 매개 변수를 시퀀스에 적용 되 고 자리 표시자와 일치 하지 않습니다 때문에 이름을 지정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>If you do not have to set a value at run time in the Order By clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">Order By 절에서 런타임 시 값을 설정 해야 하는 경우 사용할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can define the fields to use for ordering the data in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">데이터 정렬에 사용할 필드를 정의할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>For example, to return values from a database table ordered by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> to "LastName" without any parameters.</source>
          <target state="translated">예를 들어 데이터베이스 테이블의 값을 반환 하 여 정렬 <ph id="ph1">`LastName`</ph>설정, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> "LastName" 매개 변수 없이 있습니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property, but this approach has limited application.</source>
          <target state="translated">매개 변수를 설정할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션의 자리 표시자에 매개 변수와 일치 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 속성에 있지만이 방법은 응용 프로그램을 제한적입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection cannot represent a column name.</source>
          <target state="translated">이 방법의 매개 변수를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 컬렉션 열 이름을 나타낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can set a parameter to a value and then compare that value to values in a property.</source>
          <target state="translated">매개 변수 값으로 설정할 수 있으며 다음 속성의 값에 해당 값을 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">예를 들어 속성의 값 매개 변수가 나타내는 실행 시간 값 보다 작은 지 여부에 따라 데이터를 정렬할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>로 설정된 <ph id="ph3">`true`</ph> 컨트롤을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection that orders the data based on the property name that a user selects from a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">에 포함 된 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 에서 사용자 이름 속성에 따라 데이터를 정렬 하는 컬렉션을 선택는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>Gets or sets the fields that are used for ordering grouped data.</source>
          <target state="translated">그룹화된 데이터의 순서를 지정하는 데 사용되는 필드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>A string that is used to create the Order Groups By clause.</source>
          <target state="translated">그룹 Order By 절을 만드는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify how the groups of data are sorted.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 속성을 통해 데이터 그룹의 정렬 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>For example, you can group by the <ph id="ph1">`CategoryID`</ph> property and then sort each category ID group by the average of the <ph id="ph2">`Price`</ph> property.</source>
          <target state="translated">예를 들어 하 여 그룹화 수는 <ph id="ph1">`CategoryID`</ph> 속성 및 각 범주 ID의 평균을 기준으로 그룹화 한 다음 정렬은 <ph id="ph2">`Price`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property only when you have grouped the data.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 데이터를 그룹화 한 경우에 속성입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property without setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 속성을 설정 하지 않고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 속성을는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</source>
          <target state="translated">데이터를 그룹화 하는 데 사용 되는 속성이 나 그룹화 된 데이터에 집계 함수 결과 데이터를 정렬 하는 데 사용 되는 속성 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> string.</source>
          <target state="translated">데이터를 정렬 하는 방법을 지정 하려면 추가할 수 있습니다 공백과 "오름차순", "ASC", "Descending" 또는 "DESC" 문자열에서 속성 이름에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You can specify more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">에 둘 이상의 속성을 지정할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>Separate each property by using a comma.</source>
          <target state="translated">쉼표를 사용 하 여 각 속성을 구분 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties.</source>
          <target state="translated">다음 예제에서는 두 가지 속성을 사용 하 여 데이터를 그룹화 하는 방법과 이러한 속성 중 하나를 사용 하 여 그룹화 된 데이터를 정렬 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The data from a table named <ph id="ph1">`Products`</ph> is grouped by using properties named <ph id="ph2">`CategoryID`</ph> and <ph id="ph3">`Discontinued`</ph>.</source>
          <target state="translated">명명 된 테이블의에서 데이터를 <ph id="ph1">`Products`</ph> 명명 된 속성을 사용 하 여 그룹화 <ph id="ph2">`CategoryID`</ph> 및 <ph id="ph3">`Discontinued`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The grouped data is sorted by the <ph id="ph1">`CategoryID`</ph> property.</source>
          <target state="translated">그룹화 된 데이터 정렬의 기준이 <ph id="ph1">`CategoryID`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function.</source>
          <target state="translated">다음 예제에서는 속성을 사용 하 여 데이터를 그룹화 하는 방법과 집계 함수 결과에 따라 정렬 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The data from the <ph id="ph1">`Products`</ph> table is grouped by using the <ph id="ph2">`CategoryID`</ph> property.</source>
          <target state="translated">데이터는 <ph id="ph1">`Products`</ph> 표를 사용 하 여 그룹화는 <ph id="ph2">`CategoryID`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>It is sorted based on the average of the <ph id="ph1">`UnitPrice`</ph> property within each group.</source>
          <target state="translated">평균에 따라 정렬 됩니다는 <ph id="ph1">`UnitPrice`</ph> 각 그룹 내에서 속성입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>Gets the collection of parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">Order Groups By 절을 만드는 데 사용되는 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>The parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">그룹 Order By 절을 만드는 데 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection to create the Order Groups By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 매개 변수를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> 런타임에 그룹 Order By 절을 만들 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You add values to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection only when you must set values at run time in the Order Groups By clause.</source>
          <target state="translated">값을 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> 그룹 Order By 절에서 런타임 시 값을 설정 해야 하는 경우에 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can define the fields that are used to order the data by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여 데이터를 정렬 하는 데 사용 되는 필드를 정의할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수를 설정할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> 컬렉션의 자리 표시자에 매개 변수와 일치 하 고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>However, when you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection cannot represent a column name; they must represent values.</source>
          <target state="translated">그러나 사용 하는 경우이 방법의 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> 컬렉션 열 이름을 나타낼 수 없습니다; 값을 나타내야 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can set a parameter to a value and then compare that value to a property.</source>
          <target state="translated">매개 변수 값으로 설정할 수 있으며 다음 속성에 해당 값을 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">예를 들어 속성의 값 매개 변수가 나타내는 실행 시간 값 보다 작은 지 여부에 따라 데이터를 정렬할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Gets or sets the properties and calculated values that are included in the retrieved data.</source>
          <target state="translated">검색된 데이터에 포함되는 속성 및 계산된 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>A string that is used to create the Select clause.</source>
          <target state="translated">Select 절을 만드는 데 사용되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves all the properties (data columns) from the data object.</source>
          <target state="translated">설정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 데이터 개체에서 모든 속성 (데이터 열)을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성 개체에서 속성의 하위 집합을 검색 하거나 데이터를 검색 하는 경우 새 값을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You specify which properties to retrieve by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the names of the properties that you want to include in the returned data.</source>
          <target state="translated">설정 하 여 검색 속성을 지정 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 반환된 된 데이터에 포함 하려는 속성의 이름에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you retrieve a subset of properties from the data object, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates a class that contains only the properties that you specify in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">데이터 개체에서 속성의 하위 집합을 검색 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 지정 하는 속성만 포함 하는 클래스를 동적으로 만듭니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>A class is also created dynamically if you calculate properties that are not properties in the data object.</source>
          <target state="translated">데이터 개체의 속성이 아닌 속성을 계산 하는 경우는 클래스를 동적으로 만들도 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>In these cases, the object returned from the query is not an instance of the class that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
          <target state="translated">이러한 경우 쿼리에서 반환 된 개체는 하지에 지정 된 클래스의 인스턴스는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Instead, you must use the <ph id="ph1">`new`</ph> method in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to indicate that a new class is returned from the query.</source>
          <target state="translated">를 대신 사용 해야는 <ph id="ph1">`new`</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 나타내는 새 클래스는 쿼리에서 반환 된 속성을 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, to return only the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> properties from an object that contains more than these properties, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph4">`new(FirstName, LastName)`</ph>.</source>
          <target state="translated">예를 들어만 반환 하는 <ph id="ph1">`FirstName`</ph> 및 <ph id="ph2">`LastName`</ph> 포함 하는 개체에서 속성을 두 개 이상의 이러한 속성을 설정는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 <ph id="ph4">`new(FirstName, LastName)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will dynamically create the new class that you specified in the <ph id="ph2">`new`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 지정한 새 클래스를 동적으로 만들는 <ph id="ph2">`new`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can use the <ph id="ph1">`As`</ph> keyword to assign an alias to a selected value.</source>
          <target state="translated">사용할 수는 <ph id="ph1">`As`</ph> 선택한 값에 별칭을 지정 하는 키워드입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you assign an alias, you must include the aliased properties in the <ph id="ph1">`new`</ph> method.</source>
          <target state="translated">별칭을 지정 하는 경우에 된 속성을 포함 해야는 <ph id="ph1">`new`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Any data-bound control that binds to the results from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control must refer to the property by the alias.</source>
          <target state="translated">결과에 따라 바인딩하는 데이터 바인딩된 컨트롤의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 속성의 별칭으로 참조 해야 합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph2">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, the data-bound control can access two properties, <ph id="ph3">`SalesRegion`</ph> and <ph id="ph4">`RevenueThousands`</ph>.</source>
          <target state="translated">예를 들어, 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 <ph id="ph2">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, 데이터 바인딩 컨트롤 두 속성에 액세스할 수 <ph id="ph3">`SalesRegion`</ph> 및 <ph id="ph4">`RevenueThousands`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You use the <ph id="ph1">`new`</ph> function in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property according to the conditions listed in the following table.</source>
          <target state="translated">사용 된 <ph id="ph1">`new`</ph> 함수는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 다음 표에 나열 된 조건에 따라 속성.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Select</source>
          <target state="translated">선택</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Use of new</source>
          <target state="translated">New 사용</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Example</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Single property.</source>
          <target state="translated">단일 속성입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> not needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Multiple properties.</source>
          <target state="translated">여러 속성입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 필요합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Single or multiple properties that have an alias.</source>
          <target state="translated">단일 또는 별칭이 있는 여러 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 필요합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">자동 데이터 수정을 사용 하도록 설정 하려는 데이터 개체에서 모든 속성을 표시 하지 않을 경우 설정 하지 않으면는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Instead, manage the display through the data-bound control.</source>
          <target state="translated">대신, 관리 데이터 바인딩된 컨트롤을 통해 표시 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 또는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 설정 해야는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> 속성을 <ph id="ph5">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 표시 되지 않는 모든 값은 뷰 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">전달 됩니다 변경 되지 않은 데이터 원본에 데이터 업데이트를 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you group data in the query, you can include aggregate methods in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">쿼리에서 데이터를에서 그룹화 하는 경우에 집계 메서드를 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can use the following aggregate methods:</source>
          <target state="translated">다음과 같은 집계 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>조건<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>조건<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: LinqDataSource 웹 서버 컨트롤 개요<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 데이터 그룹화 및 집계 LinqDataSource 컨트롤을 사용 하 여<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">데이터를 그룹화 할 때 포함할 수 있습니다 <ph id="ph1">`Key`</ph> 및 <ph id="ph2">`It`</ph>에 속성을 동적으로 만들어지는 있는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph> 속성은 속성 또는 데이터를 그룹화 하는 데 사용 된 속성의 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain each unique value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`Key`</ph> 속성의 각 고유 값에 포함 됩니다는 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph> 속성은 그룹화 된 데이터의에서 개별 레코드의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">반복할 수 있습니다는 <ph id="ph1">`It`</ph> 그룹화 작업에서 통합 된 개별 레코드를 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`It`</ph> 에 공통 값을 공유 하는 모든 개별 레코드를 포함 하는 속성은 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you include the <ph id="ph1">`It`</ph> keyword in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property when you group data, you must assign an alias to the <ph id="ph3">`It`</ph> keyword.</source>
          <target state="translated">포함 하는 경우는 <ph id="ph1">`It`</ph> 키워드는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성 데이터를 그룹화 할 때 별칭을 할당 해야는 <ph id="ph3">`It`</ph> 키워드입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will throw an exception if <ph id="ph2">`It`</ph> does not have an alias.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 하는 경우 예외가 throw 됩니다 <ph id="ph2">`It`</ph> 별칭에는 없습니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can assign an alias to the <ph id="ph1">`Key`</ph> keyword, but this is not required.</source>
          <target state="translated">에 대 한 별칭을 할당할 수는 <ph id="ph1">`Key`</ph> 키워드, 하지만이 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties in the data object.</source>
          <target state="translated">설정 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 데이터 개체에 속성 하위 집합입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records.</source>
          <target state="translated">다음 예제에서는 데이터를 그룹화 하는 사용 된 속성의 값을 검색 하 고 그룹화 된 레코드에 대 한 평균을 검색 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`Key`</ph> keyword contains the property that has been used for grouping data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph> 키워드 데이터 그룹화에 사용 된 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>In this example, <ph id="ph1">`Key`</ph> will contain the shared values from the <ph id="ph2">`ProductCategory`</ph> property.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`Key`</ph> 에서 공유 하는 값이 포함 됩니다는 <ph id="ph2">`ProductCategory`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>Occurs when a data retrieval operation has finished.</source>
          <target state="translated">데이터 검색 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> 이벤트 데이터 검색 작업에서 발생 한 예외를 catch 하거나 검색 작업이 완료 된 후 데이터 개체를 검사 합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>The object is available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">개체는에서 사용할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 이벤트 처리기에 전달 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Occurs before a data-retrieval operation.</source>
          <target state="translated">데이터 검색 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event in order to perform the following tasks:</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 다음 작업을 수행 하기 위해 이벤트:</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Modify parameters for data retrieval.</source>
          <target state="translated">데이터 검색에 대 한 매개 변수를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Generate the query programmatically.</source>
          <target state="translated">프로그래밍 방식으로 쿼리를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Modify the values for sorting or paging.</source>
          <target state="translated">정렬 또는 페이징에 대 한 값을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Perform custom sorting or paging.</source>
          <target state="translated">사용자 지정 정렬 또는 페이징을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Cancel the data-retrieval operation.</source>
          <target state="translated">데이터 검색 작업을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> 데이터 검색 작업에 대 한 매개 변수를 포함 하는이 이벤트에 대 한 이벤트 처리기에 전달 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>You can modify the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event handler before the query executes, or you can create a new result set and assign that to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">매개 변수를 수정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 쿼리를 실행 또는 새 결과 집합을 만들고에 할당할 수 전에 이벤트 처리기는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>.</source>
          <target state="translated">사용자 지정 정렬 또는이 이벤트에 바인딩된 컨트롤에 의해 제한 될 수 있습니다에 대 한 처리기에서 페이징을 구현 하는 기능은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>For example, when the column header of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</source>
          <target state="translated">예를 들어, 열 머리글의는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤을 클릭 하면, 컨트롤이 있는 자동 정렬 순서 대로 재정의할 설정할 수는 이벤트 처리기를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">에 대 한 이벤트 처리기에서 예외가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트를 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> 이벤트 (통해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 개체).</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 속성 이후에 throw 되는 예외가 포함 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The handler creates a query that retrieves values from an array of string values in the Web page.</source>
          <target state="translated">처리기는 웹 페이지에 있는 문자열 값의 배열에서 값을 검색 하는 쿼리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The following example shows how to assign the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property to the object that is returned from a method that represents a stored procedure.</source>
          <target state="translated">다음 예제에서는 할당 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> 속성을 저장된 프로시저를 나타내는 메서드에서 반환 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>Gets the collection of parameters that are used during a data-retrieval operation.</source>
          <target state="translated">데이터 검색 작업 중에 사용되는 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The parameters that are used to create the Select clause.</source>
          <target state="translated">Select 절을 만드는 데 사용되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to create the Select clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 매개 변수를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> 런타임 시 Select 절을 만들 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection when you want to use run-time values in the Select clause.</source>
          <target state="translated">매개 변수를 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> Select 절의 런타임 값을 사용 하려는 경우에 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>For example, you can add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property in the user's profile.</source>
          <target state="translated">예를 들어 매개 변수를 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> 사용자의 프로필에 속성을 나타내는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You can then use that property and a value from the data source to calculate a new value.</source>
          <target state="translated">새 값을 계산 하는 데이터 소스에서 해당 속성 및 값 다음 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>If you do not have to set a value at run time in the Select clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">Select 절에서 런타임 시 값을 설정 해야 하는 경우 사용 하 여 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You can define the properties to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">검색할 속성을 정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>For example, to return the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> values from a database table, set <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> to "FirstName, LastName" without any parameters.</source>
          <target state="translated">예를 들어, 반환 하는 <ph id="ph1">`FirstName`</ph> 및 <ph id="ph2">`LastName`</ph> 데이터베이스 테이블에서 값이 설정 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> "FirstName, LastName"에 매개 변수 없이 합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection, you add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property for the named parameter.</source>
          <target state="translated">값을 설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> 에 자리 표시자를 추가할 컬렉션의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 명명 된 매개 변수에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>In the Select clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Select 절에서 각 매개 변수 이름 앞에 @ 기호입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You cannot use a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property name.</source>
          <target state="translated">매개 변수를 사용할 수 없습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> 속성 이름을 나타내는 데 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>To dynamically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the name of a property, create an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property as needed.</source>
          <target state="translated">동적으로 설정 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 속성을 속성의 이름에 대 한 이벤트 처리기를 만들고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> 이벤트 및 사용자 지정는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 필요에 따라 속성.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The following example shows how to use a user-supplied value to calculate a value in the returned data.</source>
          <target state="translated">다음 예제에서는 반환된 된 데이터에 값을 계산 하는 사용자가 제공한 값을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The user can enter a value in the text box that represents the number of manufacturing days.</source>
          <target state="translated">값을 제조 일 수를 나타내는 텍스트 상자에 입력할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>That value is divided by a value from a database that represents the number of days to manufacture a product.</source>
          <target state="translated">해당 값을 제품을 제작 하는 일 수를 나타내는 데이터베이스의 값으로 나눕니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The returned value indicates how many products can be manufactured during the specified number of days.</source>
          <target state="translated">반환 된 값 제품 수를 지정 된 일 수 동안 제조할 수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The user's input is included in the Select command through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">사용자 입력을 통해 Select 명령에 포함 되어는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</source>
          <target state="translated">데이터를 업데이트 또는 삭제하기 전에 다른 프로세스에서 변경하지 않았음을 확인하기 위해 데이터 소스의 데이터를 뷰 상태에 저장해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values will be stored in view state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">값이 뷰 상태에 저장되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>By default, when update and delete operations have been enabled, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values for all the records in view state.</source>
          <target state="translated">기본적으로 업데이트 및 삭제 작업, 설정 된는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤 모든 레코드 뷰 상태에 대 한 원래 값을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores values for all primary keys and all properties not marked with <ph id="ph2">`UpdateCheck.Never`</ph> in the <ph id="ph3">`Column`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 모든 기본 키에 대 한 값을 저장 하는 컨트롤 및 모든 속성으로 표시 되지 <ph id="ph2">`UpdateCheck.Never`</ph> 에 <ph id="ph3">`Column`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>You set the <ph id="ph1">`UpdateCheck`</ph> property of the <ph id="ph2">`Column`</ph> attribute in the <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">설정한는 <ph id="ph1">`UpdateCheck`</ph> 의 속성은 <ph id="ph2">`Column`</ph> 특성에 <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</source>
          <target state="translated">LINQ to SQL 업데이트 하거나 데이터를 삭제, 전에 데이터 원본에 있는 현재 값에 대 한 뷰 상태의 값을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If the values do not match, the data source record has changed.</source>
          <target state="translated">값이 일치 하지 않는 데이터 원본 레코드 변경 되었습니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</source>
          <target state="translated">이 경우 LINQ to SQL 예외를 throw 업데이트를 계속 되거나 않는 작업을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
          <target state="translated">LINQ to SQL에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</source>
          <target state="translated">보기에 원래 값이 저장 상태 불필요 하 게 커질 하도록 페이지 크기를 발생할 수 있으며 악의적인 사용자에 게 중요 한 데이터를 노출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>You can disable storing values in view state by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">뷰 상태에 값을 설정 하 여 저장을 비활성화할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If you do this, you must provide your own way to make sure that the data has not changed.</source>
          <target state="translated">이 작업을 수행 하는 경우 데이터가 변경 되지 않은 고유 하도록 고유한 방법을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, the original values are not persisted in view state for the data-bound control.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>, 데이터 바인딩된 컨트롤에 대 한 뷰 상태에 원래 값이 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, LINQ to SQL cannot verify the integrity of the data.</source>
          <target state="translated">이 경우 LINQ to SQL 데이터의 무결성을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</source>
          <target state="translated">LINQ to SQL 데이터 원본의 데이터를에서 실제로 변경 되지 않은 경우에 데이터 충돌을 표시 하는 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</source>
          <target state="translated">데이터 원본 업데이트 하는 동안 자동으로 업데이트 하는 타임 스탬프 필드를 있으면 해당 값만 뷰 상태에 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, the timestamp property in the entity class is set to <ph id="ph1">`IsVersion=true`</ph> and all the properties are set to <ph id="ph2">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">이 경우에 타임 스탬프 엔터티 클래스에서 속성 <ph id="ph1">`IsVersion=true`</ph> 모든 속성이로 설정 되 고 <ph id="ph2">`UpdateCheck.Never`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</source>
          <target state="translated">타임 스탬프 필드는 자동으로 업데이트 되므로 데이터베이스에서 해당 레코드의 데이터가 변경 될 때마다 LINQ to SQL은 데이터가 변경 된 경우 해당 값에서 결정 합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>This helps reduce the size of view state, and no sensitive data is exposed.</source>
          <target state="translated">이렇게 하면 상태 보기의 크기를 줄일 수 및 중요 한 데이터가 노출 됩니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</source>
          <target state="translated">LINQ to SQL은 상태를 확인할 데이터 일관성에 대 한 보기에 타임 스탬프 값을 비교 하 여 데이터베이스의 타임 스탬프 값으로.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity<ept id="p1">](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연습: 타임 스탬프를 사용 하 여 데이터 무결성 검사를 LinqDataSource 컨트롤과<ept id="p1">](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>The type that is associated with the class.</source>
          <target state="translated">클래스와 연결된 형식입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>The name of the entity.</source>
          <target state="translated">엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>Gets or sets the name of the property or field in the data context class that represents a data collection.</source>
          <target state="translated">데이터 컬렉션을 나타내는 데이터 컨텍스트 클래스의 속성 또는 필드 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>A string that contains the name of the property that contains the data collection.</source>
          <target state="translated">데이터 컬렉션이 들어 있는 속성의 이름을 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that represents the data that you want to retrieve.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성을 검색 하려는 데이터를 나타내는 필드나 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>When you are connecting to a database table, the name of the property is usually the same as the name of the table.</source>
          <target state="translated">데이터베이스 테이블에 연결 하는 경우 속성의 이름은 일반적으로 테이블의 이름과 동일 합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>When you are connecting to an in-memory data collection, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that returns the data collection.</source>
          <target state="translated">메모리 내 데이터 컬렉션에 연결 하는 경우 설정 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성 데이터 컬렉션을 반환 하는 필드나 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>You can assign a property that returns any type to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property for retrieval operations.</source>
          <target state="translated">모든 형식을 반환 하는 속성을 할당할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 검색 작업에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>If the object that is represented by the property does not implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will automatically wrap the object in an instance of an <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> object.</source>
          <target state="translated">속성으로 표현 하는 개체 구현 하지 않습니다 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤이 자동으로 줄 바꿈됩니다 개체의 인스턴스에서는 <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>To enable automatic update, insert, or delete operations, the class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> and the property that is assigned to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph4">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">자동으로 업데이트, 삽입 또는 삭제 작업을 클래스에 할당 된는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> 속성에서 파생 되어야 <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> 및 속성에 할당 된는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성에서 파생 되어야 <ph id="ph4">&lt;xref:System.Data.Linq.Table%601&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">클래스의 인스턴스에서 데이터를 선택 하는 방법에 대 한 정보를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> controls.</source>
          <target state="translated">다음 예제에서는 두 개의 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>In one <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property is set to a property in a class.</source>
          <target state="translated">하나에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성이 클래스에서 속성으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>That property returns an array of strings.</source>
          <target state="translated">해당 속성 문자열의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>In the other <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property is set to a property that represents a database table.</source>
          <target state="translated">다른 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> 속성이 데이터베이스 테이블을 나타내는 속성으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The class named <ph id="ph1">`ExampleDataContext`</ph> that represents the database table is not shown in this example.</source>
          <target state="translated">이름의 클래스 <ph id="ph1">`ExampleDataContext`</ph> 나타냅니다 데이터베이스 테이블은 표시 되지 않도록이 예에서 합니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">이 예제가 작동 하려면이 클래스를 만들어야이 LINQ to SQL 클래스 Example.dbml 명명 된 한 테이블을 끌어 라는 동영상을 추가 하 여는 <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>A class named <ph id="ph1">`ExampleDataContext`</ph> with a property named <ph id="ph2">`Movies`</ph> is generated.</source>
          <target state="translated">라는 클래스 <ph id="ph1">`ExampleDataContext`</ph> 라는 속성이 있는 <ph id="ph2">`Movies`</ph> 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The following example shows the class named <ph id="ph1">`MovieLibrary`</ph> that is referenced in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">다음 예에서는 라는 클래스를 보여 줍니다. <ph id="ph1">`MovieLibrary`</ph> 에서 참조 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row key values for the records to be updated.</source>
          <target state="translated">업데이트할 레코드의 행 키 값입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values to be updated in the data source.</source>
          <target state="translated">데이터 소스에서 업데이트할 행 값입니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">데이터 충돌을 감지하기 위해 계산하는 행 값입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs an update operation.</source>
          <target state="translated">업데이트 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The number of records affected by the update operation.</source>
          <target state="translated">업데이트 작업의 영향을 받는 레코드의 수입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method from your code.</source>
          <target state="translated">일반적으로 않아도 호출 하 여 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> 사용자 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when the user takes action to update a record.</source>
          <target state="translated">데이터 바인딩된 컨트롤이 자동으로 호출 됩니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> 메서드는 사용자가 레코드를 업데이트 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when you want to create your own process for updating data.</source>
          <target state="translated">명시적으로 호출 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> 메서드 데이터를 업데이트 하기 위한 사용자가 소유한 프로세스를 만들려고 할 때입니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The following example shows how to programmatically update a record in the data source after the user clicks a button.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 사용자가 단추를 클릭 한 후 데이터 원본에서 레코드를 업데이트 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The code passes a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the key value, a <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the original values, and a <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the new values to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method.</source>
          <target state="translated">코드는 <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 키 값이 포함 된 개체는 <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 원래 값을 포함 하는 개체 및 <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 새 값을 포함 하는 개체는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The following example shows the markup for the previous example.</source>
          <target state="translated">다음 예제에서는 앞의 예제에 대 한 태그를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>Occurs when an update operation has finished.</source>
          <target state="translated">업데이트 작업이 완료되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> 업데이트 작업이 완료 된 후 업데이트 작업에서 발생 한 예외를 catch 하거나 변수의 값을 확인 하는 이벤트 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">출력 매개 변수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 이벤트 처리기에 전달 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
          <source>This collection is not used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated">이 컬렉션은 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> 클래스에서 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
          <source>A collection of parameters.</source>
          <target state="translated">매개 변수 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>Occurs before an update operation.</source>
          <target state="translated">업데이트 작업 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</source>
          <target state="translated">처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 을 업데이트, 업데이트 작업 전의 값을 변경 하거나 업데이트 작업을 취소 하는 데이터 클래스의 데이터 유효성 검사 오류를 검사 하는 개체를 검사 합니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object that is passed to event handlers contains both the original object and the updated object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> 이벤트 처리기에 전달 되는 개체는 원본 개체와 업데이트 된 개체를 모두 포함 합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If a validation error occurs during the update operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">업데이트 작업 중에 유효성 검사 오류가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> 개체는 데이터 클래스에 의해 throw 되는 유효성 검사 예외를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">유효성 검사 오류가 업데이트할 값 데이터 클래스에 속성의 형식과 일치 하지 않는 경우 또는 사용자 지정 유효성 검사를 통과 하지 못하면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">에 대 한 이벤트 처리기에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 이벤트에 유효성 검사 예외를 검색 하 고 적절 한 조치를 취할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">에 대 한 이벤트 처리기에서 예외가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 이벤트를 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> 이벤트 (통해는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> 개체).</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> 속성 이후에 throw 되는 예외가 포함 된 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The code compares properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to see whether a value has changed.</source>
          <target state="translated">코드에서 속성을 비교는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> 속성 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> 속성 값이 변경 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If the value has changed, a value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">값이 변경의 값은 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> 속성이로 설정 된 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event that retrieves validation exceptions.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> 유효성 검사 예외를 검색 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The previous example retrieves validation exceptions.</source>
          <target state="translated">앞의 예제는 유효성 검사 예외를 검색합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>An exception might be thrown if a value does not match the type of the property.</source>
          <target state="translated">값 속성의 형식 일치 하지 않으면 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>It might also be thrown from a customized check such as the one in the following example.</source>
          <target state="translated">다음 예제에 대 한 것과 같은 사용자 지정된 검사에서 발생할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">`OnAgeChanging`</ph> method checks that the number for the <ph id="ph2">`Age`</ph> property is not negative.</source>
          <target state="translated"><ph id="ph1">`OnAgeChanging`</ph> 메서드를 확인 하는 대 한 숫자는 <ph id="ph2">`Age`</ph> 속성은 음수일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</source>
          <target state="translated">레코드가 검색되는 데이터에 포함되기 위해 충족해야 하는 조건을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>A string that is used to create the Where clause.</source>
          <target state="translated">Where 절을 만드는 데 사용되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to specify the conditions for the record to be returned from a query.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 쿼리에서 반환할 레코드에 대 한 조건을 지정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The syntax for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is the same as the syntax for a LINQ Where clause in C#.</source>
          <target state="translated">에 대 한 구문에서 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성은 C#의 LINQ Where 절에 대 한 구문과 동일 합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You specify an expression that results in a Boolean value, and if the expression evaluates to <ph id="ph1">`true`</ph> for a given row, the row is included in the result set.</source>
          <target state="translated">부울 값을 반환 하는 식을 지정 하면 식이 계산 되는 경우 및 <ph id="ph1">`true`</ph> 지정된 된 행에 대 한 행은 결과 집합에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:</source>
          <target state="translated">다음 예제와 같이 열 이름, 비교 연산자 및 값을 비교할 식으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To specify multiple expressions linked by logical <ph id="ph1">`AND`</ph> or <ph id="ph2">`OR`</ph> operators, you use <ph id="ph3">`&amp;&amp;`</ph> as a logical AND operator and <ph id="ph4">`||`</ph> as a logical OR operator, as shown in the following example:</source>
          <target state="translated">논리적으로 연결 된 여러 개의 식을 지정 하려면 <ph id="ph1">`AND`</ph> 또는 <ph id="ph2">`OR`</ph> 사용할 연산자를 <ph id="ph3">`&amp;&amp;`</ph> 논리 AND 연산자와 및 <ph id="ph4">`||`</ph> 로 다음 예에서 같이 논리 OR 연산자:</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.</source>
          <target state="translated">리터럴 문자열 값에 대 한 속성을 테스트 하려면 리터럴 문자열 값은 큰따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To do this in markup, enclose the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause value in single quotation marks, as shown in the following example:</source>
          <target state="translated">태그에서이 작업을 수행 하려면 묶습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 다음 예제에서와 같이 단일 인용 부호로 절 값:</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:</source>
          <target state="translated">코드의 리터럴 문자열 값에 대해를 테스트 하려면 다음 예에서 같이 큰따옴표를 삽입 하기 위해 사용 중인 언어에 적합 한 이스케이프 문자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>If you want to test whether a string is greater than or less than another string, you must use methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class instead of using <ph id="ph2">`&lt;`</ph> or <ph id="ph3">`&gt;`</ph> operators between the column name and the string value.</source>
          <target state="translated">메서드를 사용 해야 문자열이 보다 큰지 또는 다른 문자열 보다 작은지 여부를 테스트 하려는 경우는 <ph id="ph1">&lt;xref:System.String&gt;</ph> 클래스를 사용 하는 대신 <ph id="ph2">`&lt;`</ph> 또는 <ph id="ph3">`&gt;`</ph> 열 이름 및 문자열 값 간의 연산자.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to "Sports":</source>
          <target state="translated">다음 예제, 보다 큼 또는 보다 크거나 "스포츠" 보다 작음, 작거나 작거나 같거나 범주 값을 가진 행을 선택 하는 방법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You can also use other methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class, such as <ph id="ph2">&lt;xref:System.String.StartsWith%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.String.EndsWith%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.String.Contains%2A&gt;</ph>.</source>
          <target state="translated">다른 방법으로 사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.String&gt;</ph> 클래스 같은 <ph id="ph2">&lt;xref:System.String.StartsWith%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.String.EndsWith%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.String.Contains%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about how to compare strings, see <bpt id="p1">[</bpt>Comparing Strings<ept id="p1">](~/docs/standard/base-types/comparing.md)</ept>.</source>
          <target state="translated">문자열을 비교 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>문자열 비교<ept id="p1">](~/docs/standard/base-types/comparing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about Where clause syntax, see <bpt id="p1">[</bpt>C# Operators<ept id="p1">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept> and <bpt id="p2">[</bpt>where clause<ept id="p2">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>.</source>
          <target state="translated">위치에 대 한 자세한 내용은 절 구문을 참조 <bpt id="p1">[</bpt>C# 연산자<ept id="p1">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept> 및 <bpt id="p2">[</bpt>여기서 절<ept id="p2">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.</source>
          <target state="translated">웹 페이지를 만들 때 정의 하는 정적 값을 기반으로 필터링 하는 것 외에도 런타임 시 계산 되는 동적 값에 따라 필터링 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In that case, you include a named parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property that acts as a placeholder for the value.</source>
          <target state="translated">명명된 된 매개 변수를 포함 하는 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성 값에 대 한 자리 표시자로 사용입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You then add a parameter that has the matching name to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">다음에 일치 하는 이름을 가진 매개 변수를 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Alternatively, you can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and define the parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 에 매개 변수를 정의 하 고는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, you do not have to include the named parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>에서 명명 된 매개 변수를 포함할 필요가 없습니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically generates the Where clause from the parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> property.</source>
          <target state="translated">대신,는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> Where를 자동으로 생성 하는 컨트롤의 매개 변수에서 절은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about how to filter data, see <bpt id="p1">[</bpt>Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls<ept id="p1">](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>.</source>
          <target state="translated">데이터를 필터링 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연습: 선택 및 LinqDataSource 및 GridView 컨트롤을 사용 하 여 데이터 하위 집합을 필터링<ept id="p1">](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following example shows how to filter the data returned from a query based on a static condition.</source>
          <target state="translated">다음 예제에서는 정적 조건에 따라 쿼리에서 반환 된 데이터를 필터링 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following example shows how to filter the data based on a value that is provided by the user at run time.</source>
          <target state="translated">다음 예에서는 런타임 시 사용자가 제공 하는 값에 따라 데이터를 필터링 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In this example a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control are displayed on the page.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤은 페이지에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>When the user selects one of the values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control selects from the <ph id="ph3">`Products`</ph> table only rows that have <ph id="ph4">`UserPrice`</ph> values equal to the selected value.</source>
          <target state="translated">선택의 값 중 하나는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 선택 하는 <ph id="ph3">`Products`</ph> 테이블을 가진 행만 <ph id="ph4">`UserPrice`</ph> 선택된 된 값에 값이와 합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control then displays the filtered data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤은 다음 필터링 된 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>Gets the collection of parameters that is used to create the Where clause.</source>
          <target state="translated">Where 절을 만드는 데 사용되는 매개 변수 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>A collection of the parameters that are used to create the Where clause in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /&gt;</ph> 속성에서 Where 절을 만드는 데 사용되는 매개 변수 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to create the Where clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 컨트롤에서 매개 변수를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> Where 만들 컬렉션 런타임 시 절.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection when you want to programmatically set one or more of the conditions in the Where clause.</source>
          <target state="translated">매개 변수를 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 프로그래밍 방식으로 where에서 조건 중 하나 이상을 설정 하려는 경우에 컬렉션 절.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>For example, you might search a database table for records with a last name equal to the value of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">값과 같은 성 가진 레코드에 대 한 데이터베이스 테이블을 검색할 수는 예를 들어 한 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>In that case, you add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection for the text box value.</source>
          <target state="translated">매개 변수를 추가 하는 경우에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 입력란 값에 대 한 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>If you do not have to set a value at run time in the Where clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">Where에서 런타임 시 값을 설정 하지 않은 경우 절 않아도 사용 하 여 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>You can define the fields to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
          <target state="translated">검색할 필드를 정의할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>For example, to return values from a database table where <ph id="ph1">`LastName`</ph> equals "Adams" in markup, set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to <ph id="ph3">`'LastName = "Adams"'`</ph> without any parameters.</source>
          <target state="translated">예를 들어, 데이터베이스 테이블에서 값을 반환할 위치 <ph id="ph1">`LastName`</ph> 태그의 "Adams" equals 설정는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 속성을 <ph id="ph3">`'LastName = "Adams"'`</ph> 매개 변수 없이 합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for that parameter.</source>
          <target state="translated">값을 설정 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> 컬렉션에 각 매개 변수에 이름을 할당할 추가 하는 다음에서 자리 표시자는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> 해당 매개 변수에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>In the Where clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Where에서 절, 각 매개 변수 이름 앞에 @ 기호입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to dynamically create the Where clause.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> Where를 동적으로 만들려는 컬렉션 절.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control returns all the records with a value in the <ph id="ph2">`Price`</ph> column that is greater than the value selected by the user in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> 제어가 반환 값에 있는 모든 레코드는 <ph id="ph2">`Price`</ph> 열에서 사용자가 선택한 값 보다 큰는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>