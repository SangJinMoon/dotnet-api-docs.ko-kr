<Type Name="ListViewInsertedEventArgs" FullName="System.Web.UI.WebControls.ListViewInsertedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2abf24609f2038dfb20af442556f9ed73bf24443" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36381138" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ListViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView> 발생는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트에 있는 삽입 단추는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일을 클릭 하면 이후 및는 <xref:System.Web.UI.WebControls.ListView> 데이터 소스에서 레코드를 업데이트 합니다. (삽입 단추는 단추 인 `CommandName` 속성을 "삽입"로 설정 합니다.) <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트를 사용 하면 삽입된 된 항목에 대 한 데이터베이스에서 자동 생성 된 값을 검색 하는 등의 사용자 지정 작업을 수행할 수 있습니다.  
  
 A <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 개체 삽입 된 항목 및 발생할 수 있는 예외 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 삽입 작업의 영향을 받는 항목의 수를 확인 하려면 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 속성입니다. 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> 속성 예외가 발생 한 것인지 확인 합니다. 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 속성입니다. 사용 하 여 데이터 원본에 전송 된 삽입된 된 항목의 필드 값에 액세스 해야 할 경우는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 속성입니다.  
  
 기본적으로는 <xref:System.Web.UI.WebControls.ListView> 지웁니다 제어는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 템플릿의 삽입 작업을 사용자가 새 항목을 삽입할 수에 대 한 값을 추가할 수 있습니다. 삽입 작업 중에 예외가 발생 하는 경우 보관할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 삽입 모드로 설정 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 속성을 `true`합니다. 이 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 항목을 삽입할 이전 시도에서 서식 파일의 값을 합니다.  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A> 생성자를 참조하십시오.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 이벤트의 처리기에 전달 되는 개체는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewInsertedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewInsertedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.ListViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.ListViewInsertedEventArgs (affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">삽입 작업이 적용되는 행의 수입니다.</param>
        <param name="exception">삽입 작업을 수행할 때 발생한 예외(있을 경우)입니다. 발생한 예외가 없으면 이 매개 변수에 대해 <see langword="null" />을 사용합니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 클래스입니다.  
  
> [!NOTE]
>  이벤트를 발생 시킬 때이 생성자는 주로 컨트롤 개발자가 사용 됩니다.  
  
 다음 표에서는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>|`affectedRows` 매개 변수의 값입니다.|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> 에 포함 된 개체는 `e` 매개 변수입니다.|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>|로 초기화 `false`합니다.|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>|로 초기화 `false`합니다.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 작업이 적용되는 행의 수를 가져옵니다.</summary>
        <value>삽입 작업이 적용되는 행의 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 속성을 데이터 소스 제어에서 반환 된 삽입 작업에 의해 영향을 받는 레코드 수를 결정 합니다. 이 속성은 다음과 같은 시나리오에서 일반적으로 사용 됩니다.  
  
-   에 하나의 레코드만 삽입 되었는지 확인 합니다. 때로는 잘못 작성된 된 insert 문에 여러 레코드 삽입 수 있습니다.  
  
-   레코드 삽입 작업 중에 오류가 발생 했지만 예외가 발생 하지 때문에 삽입 되지 않았음을 확인 합니다.  
  
-   충돌 감지 (낙관적 동시성) 지 원하는 데이터 소스 컨트롤에는 레코드가 삽입 되었는지 확인 하려면 해당 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성이로 설정 된 `ConflictOptions.CompareAllValues` 열거형 값입니다. 이 속성을 지 원하는 컨트롤에 포함 된 <xref:System.Web.UI.WebControls.SqlDataSource> 및 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다. 속성에이 값이 다른 사용자가 삽입 한 레코드와 같은 키 값을 설정한 경우 레코드를 삽입 하지 않을 수 있습니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 에 대 한 처리기에 전달 되는 개체는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 삽입 작업 중에 예외가 발생 했는지 여부를 결정 하는 이벤트입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 작업을 진행하는 동안 발생한 예외가 있는 경우 이 예외를 가져옵니다.</summary>
        <value>삽입 작업 과정에서 발생한 예외이거나, 예외가 발생하지 않은 경우에는 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예외가 발생 하 고 이벤트 처리기를 설정에 예외를 처리 하는 경우는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 속성을 `true`합니다. 그렇지 않은 경우는 <xref:System.Web.UI.WebControls.ListView> 컨트롤이 다시 예외를 throw 합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 에 대 한 처리기에 전달 되는 개체는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 삽입 작업 중에 예외가 발생 했는지 여부를 결정 하는 이벤트입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 작업 과정에서 발생한 예외를 이벤트 처리기에서 처리했는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>예외가 이벤트 처리기에서 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 삽입 작업 중에 예외가 발생 하는 경우 사용 된 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 예외가 처리 되었는지 여부를 이벤트 처리기를 나타내는 속성을 합니다. 이 속성이로 설정 된 경우 `true`, 예외 처리 된 것으로 간주 되어 다시 throw 되지 않습니다. 이 속성은로 설정 하는 경우 `false`, <xref:System.Web.UI.WebControls.ListView> 컨트롤 예외를 다시 throw 합니다. 발생 한 예외를 확인 하려면는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> 속성입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 이벤트의 처리기에 전달 되는 개체는 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 삽입 작업 중에 예외가 발생 했는지 여부를 결정 하는 이벤트입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자의 입력 값이 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 템플릿 내에 있는 컨트롤에 대해 유지되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자의 입력 값이 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 템플릿 내에 있는 컨트롤에 대해 유지되면 <see langword="true" />이고, 컨트롤의 기본값으로 대체되면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로는 <xref:System.Web.UI.WebControls.ListView> 컨트롤에서 컨트롤의 값이 다시 설정 된 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 삽입 작업 후 해당 기본값으로 서식 파일입니다. 그러면 사용자가 새 항목을 삽입할 수에 대 한 값을 추가할 수 있습니다. 삽입 작업 중에 예외가 발생 하는 경우 보관할 수 있습니다는 <xref:System.Web.UI.WebControls.ListView> 컨트롤을 삽입 모드로 설정 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 속성을 `true`합니다. 내부 컨트롤에 대 한 항목을 삽입 하려면 이전 시도에서 값이 유지는 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 서식 파일입니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 삽입 작업 중에 오류가 발생 하는 경우 사용자가 입력 한 값을 유지 하는 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입된 레코드에 대한 필드 이름/값 쌍을 가져옵니다.</summary>
        <value>삽입된 레코드에 대한 필드 이름/값 쌍입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 삽입된 된 레코드에 대 한 필드의 값에 액세스 하는 속성입니다. 예를 들어 삽입 된 레코드의 로그를 유지 하려면이 값을 사용할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 속성에서 반환 된 <xref:System.Collections.Specialized.OrderedDictionary> 구현 하는 개체는 <xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스입니다. <xref:System.Collections.Specialized.OrderedDictionary> 개체에 포함 되어 <xref:System.Collections.DictionaryEntry> 삽입된 된 레코드의 필드를 나타내는 개체입니다. 필드 이름에 액세스 하려면 사용 하 여는 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Collections.Specialized.OrderedDictionary> 개체입니다. 마찬가지로, 사용 하 여 필드 값에 액세스할 수 있습니다는 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=nameWithType> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다의 인덱서는 <xref:System.Collections.Specialized.OrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다. 인덱서를 사용 하 여 장점은 필드 값이 직접 반환 된다는 것입니다. 데이터 소스 필드 순서를 사용 하는 컨트롤 (예: <xref:System.Web.UI.WebControls.AccessDataSource>) 인덱스로 필드 값에 액세스할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
      </Docs>
    </Member>
  </Members>
</Type>