<Type Name="ObjectDataSourceDisposingEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f3712716bbd4c98625e981b17485d74c8219312" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37591337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceDisposingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceDisposingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceDisposingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="60f25-101">
        <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60f25-101">Provides data for the <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /> event of the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f25-102"><xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 클래스는를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 메서드를 사용 하는 데이터 작업 후 비즈니스 개체 인스턴스에 대 한 액세스를 제공는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 및 비즈니스 개체를 수행 하는 하지만 비즈니스 하기 전에 개체는 소멸 됩니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-102">The <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is used in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> method to provide access to the business object instance after any data operations that are using the <xref:System.Web.UI.WebControls.ObjectDataSource> control and business object are performed, but before the business object is destroyed.</span></span> <span data-ttu-id="60f25-103">비즈니스 개체를 사용 하 여 액세스를 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-103">The business object is accessed using the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> property.</span></span> <span data-ttu-id="60f25-104">처리 하는 대리자를 추가 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트 최종 작업을 수행 하거나 정리 비즈니스 개체의 공개적으로 노출 된 모든 멤버에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-104">By adding a delegate to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event, you can access any publicly exposed members of the business object to perform any final work or clean up.</span></span>  
  
 <span data-ttu-id="60f25-105"><xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 서 메서드를 호출 하지 않는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 메서드 데이터 작업을 수행 하는 경우이 컨트롤을 `static` 메서드.</span><span class="sxs-lookup"><span data-stu-id="60f25-105">The <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> method is not called by the <xref:System.Web.UI.WebControls.ObjectDataSource> control, if the method that performs data operations is a `static` method.</span></span> <span data-ttu-id="60f25-106">메서드가 정적이 경우 비즈니스 개체 인스턴스가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-106">No business object instance is created when the method is static.</span></span>  
  
 <span data-ttu-id="60f25-107"><xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 수명 주기에서 다양 한 시간에 기본 비즈니스 개체를 사용 하 여 작업을 처리할 수 있는 많은 이벤트를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-107">The <xref:System.Web.UI.WebControls.ObjectDataSource> control exposes many events that you can handle to work with the underlying business object at various times in its lifecycle.</span></span> <span data-ttu-id="60f25-108">다음 표에서 이벤트와 연결 된 <xref:System.EventArgs> 클래스 및 이벤트 처리기 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-108">The following table lists the events and the associated <xref:System.EventArgs> classes and event handler delegates.</span></span>  
  
|<span data-ttu-id="60f25-109">이벤트</span><span class="sxs-lookup"><span data-stu-id="60f25-109">Event</span></span>|<span data-ttu-id="60f25-110">EventArgs</span><span class="sxs-lookup"><span data-stu-id="60f25-110">EventArgs</span></span>|<span data-ttu-id="60f25-111">이벤트 처리기</span><span class="sxs-lookup"><span data-stu-id="60f25-111">EventHandler</span></span>|  
|-----------|---------------|------------------|  
|<span data-ttu-id="60f25-112"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</span><span class="sxs-lookup"><span data-stu-id="60f25-112"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</span></span><br /><br /> <span data-ttu-id="60f25-113">비즈니스 개체의 인스턴스가 만들어질 직전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-113">Occurs immediately before the instance of the business object is created.</span></span>|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<span data-ttu-id="60f25-114"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</span><span class="sxs-lookup"><span data-stu-id="60f25-114"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</span></span><br /><br /> <span data-ttu-id="60f25-115">비즈니스 개체의 인스턴스를 만든 직후에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-115">Occurs immediately after the instance of the business object is created.</span></span>|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<span data-ttu-id="60f25-116"><xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</span><span class="sxs-lookup"><span data-stu-id="60f25-116"><xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</span></span><br /><br /> <span data-ttu-id="60f25-117">데이터를 검색 하기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-117">Occurs before the data is retrieved.</span></span>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<span data-ttu-id="60f25-118"><xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></span><span class="sxs-lookup"><span data-stu-id="60f25-118"><xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</span></span><br /><br /> <span data-ttu-id="60f25-119">삽입, 업데이트 또는 삭제 작업을 수행 하기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-119">Occur before an insert, update, or delete operation is performed.</span></span>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> <span data-ttu-id="60f25-120">데이터를 검색 한 후에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-120">Occurs after the data is retrieved.</span></span>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<span data-ttu-id="60f25-121"><xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></span><span class="sxs-lookup"><span data-stu-id="60f25-121"><xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</span></span><br /><br /> <span data-ttu-id="60f25-122">삽입, 업데이트 또는 삭제 작업이 완료 되 면 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-122">Occur after the insert, update, or delete operation is completed.</span></span>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<span data-ttu-id="60f25-123"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</span><span class="sxs-lookup"><span data-stu-id="60f25-123"><xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</span></span><br /><br /> <span data-ttu-id="60f25-124">비즈니스 개체를 제거 하기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-124">Occurs before a business object is destroyed.</span></span>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="60f25-125">이 섹션에는 두 코드 예제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-125">This section contains two code examples.</span></span> <span data-ttu-id="60f25-126">첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-126">The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="60f25-127">두 번째 코드 예제에서는 첫 번째 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-127">The second code example provides the example middle-tier business object that the first code example uses.</span></span>  
  
 <span data-ttu-id="60f25-128">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-128">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="60f25-129">웹 페이지를 수행 하는 모든 데이터 작업에 대해 만들려는 (시간 또는 리소스) 측면에서 매우 비용이 많이 드는 비즈니스 개체를 사용 하 여 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-129">You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs.</span></span> <span data-ttu-id="60f25-130">비용이 많이 드는 개체를 사용 하는 한 가지 방법은 해당 인스턴스를 한 번 만들어를 만들고 모든 데이터 작업에 대 한 제거 하는 대신 다음 작업에 캐시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-130">One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</span></span> <span data-ttu-id="60f25-131">이 예제에서는이 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-131">This example demonstrates this pattern.</span></span> <span data-ttu-id="60f25-132">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 개체에 대 한 캐시를 먼저 확인 하 고 이미 캐시 되지 않습니다 하는 경우에 인스턴스를 만든 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-132">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached.</span></span> <span data-ttu-id="60f25-133">그런 다음 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 제거 하는 대신 나중에 사용할 비즈니스 개체를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-133">Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it.</span></span> <span data-ttu-id="60f25-134">이 예제에서는 <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 개체로 설정 됩니다 `true`지시를 <xref:System.Web.UI.WebControls.ObjectDataSource> 를 호출 하지 않도록를 <xref:System.IDisposable.Dispose%2A> 인스턴스에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="60f25-134">In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> object is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 <span data-ttu-id="60f25-135">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-135">The following code example provides an example middle-tier business object that the preceding code example uses.</span></span> <span data-ttu-id="60f25-136">정의한 기본 비즈니스 개체의 코드 예제는는 `EmployeeLogic` 클래스는 상태를 유지 관리 및 비즈니스 논리를 캡슐화 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-136">The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic.</span></span> <span data-ttu-id="60f25-137">전체 작업 예제를 보려면이 코드를 라이브러리로 컴파일하고 ASP 페이지에서 이러한 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-137">For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceDisposingEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceDisposingEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">
          <span data-ttu-id="60f25-138">
            <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />가 데이터 작업을 수행할 대상이 되는 비즈니스 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f25-138">The business object with which the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> interacts to perform data operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60f25-139">지정된 개체를 사용하여 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f25-139">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> class using the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60f25-140">
            <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 데이터 작업을 수행할 대상이 되는 비즈니스 개체를 나타내는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f25-140">Gets an object that represents the business object with which the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control performs data operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60f25-141">
            <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />가 데이터 작업에 사용할 비즈니스 개체이며, 그렇지 않고 <see langword="null" />이 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />에 전달된 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60f25-141">The business object the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> uses to data operations; otherwise, <see langword="null" />, if <see langword="null" /> is passed to the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60f25-142">하는 경우 데이터 작업 메서드 (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>)는 인스턴스 메서드는 인스턴스의 비즈니스 개체 메서드가 실행 되기 전에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-142">If the data operation methods (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, and <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) are instance methods, an instance of the business object is created before the method is executed.</span></span> <span data-ttu-id="60f25-143">개체를 저장 하 여 각 호출에 대해 만들어지는 비즈니스 개체를 방지할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> 속성에는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-143">You can prevent the business object from being created for each call by saving the object in the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> property in the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event handler.</span></span> <span data-ttu-id="60f25-144">후속 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 이벤트에서 비즈니스 개체를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-144">In subsequent <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> events, you can retrieve the business object from the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60f25-145">다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-145">The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information.</span></span> <span data-ttu-id="60f25-146">웹 페이지를 수행 하는 모든 데이터 작업에 대해 만들려는 (시간 또는 리소스) 측면에서 매우 비용이 많이 드는 비즈니스 개체를 사용 하 여 작업할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-146">You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs.</span></span> <span data-ttu-id="60f25-147">비용이 많이 드는 개체를 사용 하는 한 가지 방법은 해당 인스턴스를 한 번 만들어를 만들고 모든 데이터 작업에 대 한 제거 하는 대신 다음 작업에 캐시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-147">One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</span></span> <span data-ttu-id="60f25-148">이 예제에서는이 패턴을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-148">This example demonstrates this pattern.</span></span> <span data-ttu-id="60f25-149">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 개체에 대 한 캐시를 먼저 확인 하 고 이미 캐시 되지 않습니다 하는 경우에 인스턴스를 만든 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-149">You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached.</span></span> <span data-ttu-id="60f25-150">그런 다음 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 제거 하는 대신 나중에 사용할 비즈니스 개체를 캐시 합니다.</span><span class="sxs-lookup"><span data-stu-id="60f25-150">Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it.</span></span> <span data-ttu-id="60f25-151">이 예제에서는 <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 클래스로 설정 되어 `true`지시를 <xref:System.Web.UI.WebControls.ObjectDataSource> 를 호출 하지 않도록 <xref:System.IDisposable.Dispose%2A> 인스턴스에서.</span><span class="sxs-lookup"><span data-stu-id="60f25-151">In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      </Docs>
    </Member>
  </Members>
</Type>