<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectDataSourceDisposingEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5abbd86019da0147018c520e2f37d6dc68f2ab026.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abbd86019da0147018c520e2f37d6dc68f2ab026</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /&gt;</ph> event of the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /&gt;</ph> 컨트롤의 <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> class is used in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A&gt;</ph> method to provide access to the business object instance after any data operations that are using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control and business object are performed, but before the business object is destroyed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> 클래스에 사용 됩니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A&gt;</ph> 메서드를 사용 하는 데이터 작업 후에 비즈니스 개체 인스턴스에 대 한 액세스를 제공는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 제어 및 비즈니스 개체를 수행 하는 하지만 비즈니스 하기 전에 개체를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The business object is accessed using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A&gt;</ph> property.</source>
          <target state="translated">비즈니스 개체가 사용 하 여 액세스 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>By adding a delegate to handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event, you can access any publicly exposed members of the business object to perform any final work or clean up.</source>
          <target state="translated">처리 하는 대리자를 추가 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트, 마지막 작업을 수행 하거나 정리 비즈니스 개체의 공개적으로 노출 된 모든 멤버에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A&gt;</ph> method is not called by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control, if the method that performs data operations is a <ph id="ph3">`static`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A&gt;</ph> 메서드에 의해 호출 되지 않습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤이 메서드 데이터 작업을 수행 하는 경우는 <ph id="ph3">`static`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>No business object instance is created when the method is static.</source>
          <target state="translated">메서드가 정적이 때 비즈니스 개체 인스턴스가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control exposes many events that you can handle to work with the underlying business object at various times in its lifecycle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 컨트롤은 해당 수명 주기 전체에서 다양 한 시간에는 기본 비즈니스 개체와 작동 하도록 처리할 수 있는 많은 이벤트를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The following table lists the events and the associated <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> classes and event handler delegates.</source>
          <target state="translated">다음 표에서 이벤트와 연결 된 <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> 클래스와 이벤트 처리기 대리자입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Event</source>
          <target state="translated">이벤트</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>EventArgs</source>
          <target state="translated">EventArgs</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>EventHandler</source>
          <target state="translated">EventHandler</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Occurs immediately before the instance of the business object is created.</source>
          <target state="translated">비즈니스 개체의 인스턴스가 만들어질 직전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Occurs immediately after the instance of the business object is created.</source>
          <target state="translated">비즈니스 개체의 인스턴스를 만든 직후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Occurs before the data is retrieved.</source>
          <target state="translated">데이터를 검색 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Occur before an insert, update, or delete operation is performed.</source>
          <target state="translated">삽입, 업데이트 또는 삭제 작업을 수행 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Occurs after the data is retrieved.</source>
          <target state="translated">데이터를 검색 한 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt;</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Occur after the insert, update, or delete operation is completed.</source>
          <target state="translated">삽입, 업데이트 또는 삭제 작업이 완료 된 후 발생 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Occurs before a business object is destroyed.</source>
          <target state="translated">비즈니스 개체를 제거 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>This section contains two code examples.</source>
          <target state="translated">이 섹션에는 두 가지 코드 예제가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The first code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display information.</source>
          <target state="translated">첫 번째 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The second code example provides the example middle-tier business object that the first code example uses.</source>
          <target state="translated">두 번째 코드 예제에서는 첫 번째 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display information.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs.</source>
          <target state="translated">웹 페이지에서 수행 하는 모든 데이터 작업에 대 한 생성 시간 또는 리소스) (사용량이 상당히 늘어날이 비즈니스 개체를 사용 하 여 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</source>
          <target state="translated">부담이 큰 개체가 사용 하는 한 가지 방법은 해당 형식의 인스턴스를 한 번 만들고 다음 나중에 작업 만들고 모든 데이터 작업에 대 한 삭제 하는 대신 캐시 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>This example demonstrates this pattern.</source>
          <target state="translated">이 예제에서는이 패턴을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> event to check the cache for an object first, and then create an instance, only if one is not already cached.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 개체에 대 한 캐시를 먼저 확인 하 고 하나는 이미 캐시 하지 않은 경우에 다음 인스턴스를 작성 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>Then, handle the  <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event to cache the business object for future use, instead of destroying it.</source>
          <target state="translated">그런 다음 처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 않고 나중에 사용할 비즈니스 개체를 캐시 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>In this example, the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> object is set to <ph id="ph3">`true`</ph>, to direct the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> to not call the <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method on the instance.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> 개체로 설정 되어 <ph id="ph3">`true`</ph>지시는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 를 호출 하지 않도록는 <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 인스턴스의 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The following code example provides an example middle-tier business object that the preceding code example uses.</source>
          <target state="translated">다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>The code example consists of a basic business object, defined by the <ph id="ph1">`EmployeeLogic`</ph> class, which is a class that maintains state and encapsulates business logic.</source>
          <target state="translated">에 정의 된 기본 비즈니스 개체의 코드 예제는는 <ph id="ph1">`EmployeeLogic`</ph> 클래스는 상태를 유지 관리 및 비즈니스 논리를 캡슐화 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
          <source>For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.</source>
          <target state="translated">전체 작업 예제를이 코드를 라이브러리로 컴파일하고 ASP 페이지에서 이러한 클래스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)">
          <source>The business object with which the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> interacts to perform data operations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>가 데이터 작업을 수행할 대상이 되는 비즈니스 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /&gt;</ph> class using the specified object.</source>
          <target state="translated">지정된 개체를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>Gets an object that represents the business object with which the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> control performs data operations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> 컨트롤이 데이터 작업을 수행할 대상이 되는 비즈니스 개체를 나타내는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>The business object the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph> uses to data operations; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if <ph id="ph3">&lt;see langword="null" /&gt;</ph> is passed to the <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSource" /&gt;</ph>가 데이터 작업에 사용할 비즈니스 개체이며, 그렇지 않고 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /&gt;</ph>에 전달된 경우에는 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>If the data operation methods (<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>) are instance methods, an instance of the business object is created before the method is executed.</source>
          <target state="translated">하는 경우 데이터 작업 방법 (<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;</ph>) 인스턴스 메서드를 비즈니스의 인스턴스 개체는 메서드 실행 전에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>You can prevent the business object from being created for each call by saving the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event handler.</source>
          <target state="translated">비즈니스 개체의 개체를 저장 하 여 각 호출에 대해 만들어지지 않도록 방지할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>In subsequent <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> events, you can retrieve the business object from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> property.</source>
          <target state="translated">후속 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 이벤트에서 비즈니스 개체를 검색할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>The following code example demonstrates how to use an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control with a business object and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control to display information.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 비즈니스 개체를 가진 컨트롤 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs.</source>
          <target state="translated">웹 페이지에서 수행 하는 모든 데이터 작업에 대 한 생성 시간 또는 리소스) (사용량이 상당히 늘어날이 비즈니스 개체를 사용 하 여 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.</source>
          <target state="translated">부담이 큰 개체가 사용 하는 한 가지 방법은 해당 형식의 인스턴스를 한 번 만들고 다음 나중에 작업 만들고 모든 데이터 작업에 대 한 삭제 하는 대신 캐시 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>This example demonstrates this pattern.</source>
          <target state="translated">이 예제에서는이 패턴을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> event to check the cache for an object first, and then create an instance, only if one is not already cached.</source>
          <target state="translated">처리할 수는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;</ph> 개체에 대 한 캐시를 먼저 확인 하 고 하나는 이미 캐시 하지 않은 경우에 다음 인스턴스를 작성 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>Then, handle the  <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> event to cache the business object for future use, instead of destroying it.</source>
          <target state="translated">그런 다음 처리는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt;</ph> 않고 나중에 사용할 비즈니스 개체를 캐시 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance">
          <source>In this example, the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> class is set to <ph id="ph3">`true`</ph>, to direct the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> to not call <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> on the instance.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&gt;</ph> 클래스로 설정 되어 <ph id="ph3">`true`</ph>지시는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> 를 호출 하지 않도록 <ph id="ph5">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 인스턴스에서 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>