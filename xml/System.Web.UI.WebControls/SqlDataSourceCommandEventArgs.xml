<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlDataSourceCommandEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e3371dee348f132c6f03cec3bbf08b59700db6a4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3371dee348f132c6f03cec3bbf08b59700db6a4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /&gt;</ph> and <ph id="ph3">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /&gt;</ph> events of the <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" /&gt;</ph> 컨트롤의 <ph id="ph2">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /&gt;</ph>, <ph id="ph3">&lt;see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSource" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>By adding an event handler delegate to handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph>, or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> events, you can perform any additional preprocessing required or cancel the database command entirely.</source>
          <target state="translated">처리 하는 이벤트 처리기 대리자를 추가 하 여는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 이벤트에 필요한 추가 전처리 수행 하거나 완전히 데이터베이스 명령을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> class is derived from the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> class, you can cancel a pending <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> database command by setting the <ph id="ph4">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 클래스에서 파생 된는 <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> 클래스를 취소할 수 있습니다는 보류 중인 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 설정 하 여 데이터베이스 명령의 <ph id="ph4">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성을 <ph id="ph5">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>You can examine and manipulate the <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.CommandText%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Parameters%2A&gt;</ph> collection, and other command properties prior to running the command by accessing the <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object exposed by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A&gt;</ph> property.</source>
          <target state="translated">검토 하 고 조작할 수는 <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.CommandText%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Parameters%2A&gt;</ph> 컬렉션 및 기타 명령 속성에 액세스 하 여 명령을 실행 하기 전에 <ph id="ph3">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 에 의해 노출 되는 개체는 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> class is used in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> methods to provide access to a <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> database command before it is run.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 클래스에서 사용 되는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A&gt;</ph> 에 대 한 액세스를 제공 하는 메서드는 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터베이스 명령을 실행 하기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control exposes many events that you can handle to work with the underlying data objects during the course of a data operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 컨트롤 데이터 작업을 사용 하는 동안 기본 데이터 개체를 사용 하기 위해 처리할 수 있는 많은 이벤트를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>The following table lists the events and associated <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> and event handler classes, to better guide you to the various events that correspond to the lifecycle of a data operation using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">다음 표에서 이벤트를 나열 및 관련 <ph id="ph1">&lt;xref:System.EventArgs&gt;</ph> 및 사용 하 여 데이터 작업의 수명 주기에 해당 하는 다양 한 이벤트를 소개 하기 위해 이벤트 처리기 클래스는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>Event</source>
          <target state="translated">이벤트(event)</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>EventArgs</source>
          <target state="translated">EventArgs</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>EventHandler</source>
          <target state="translated">EventHandler</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> occurs before the data is retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selecting&gt;</ph> 데이터를 검색 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> occur before an insert, update, or delete operation is performed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph><ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 업데이트 또는 삭제 작업이 수행 되는 삽입 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> occur after the data retrieval, insert, update, or delete operations completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Selected&gt;</ph><ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updated&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleted&gt;</ph> 후 데이터 검색, 삽입, 업데이트 또는 삭제 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>The following code example demonstrates how to display data retrieved from a Microsoft SQL Server database in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, and update the record using a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> 컨트롤을 사용 하 여 레코드 업데이트는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
          <source>The example shows how you can use a <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> object to add transaction context when using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control to update data.</source>
          <target state="translated">예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbTransaction&gt;</ph> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 데이터를 업데이트 하는 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object that represents the cancelable <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /&gt;</ph> command.</source>
          <target state="translated">취소할 수 있는 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /&gt;</ph> 명령을 나타내는 <ph id="ph4">&lt;see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph> class, using the specified database command object.</source>
          <target state="translated">지정된 데이터베이스 명령 개체를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>Gets the pending database command.</source>
          <target state="translated">보류 중인 데이터베이스 명령을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object that represents the pending database command.</source>
          <target state="translated">보류 중인 데이터베이스 명령을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph>, or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> event to examine and manipulate the properties of the <ph id="ph4">&lt;xref:System.Data.Common.DbCommand&gt;</ph> before it is run by the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> control.</source>
          <target state="translated">처리할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Updating&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserting&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Deleting&gt;</ph> 검사 하 고 속성을 조작 하는 이벤트는 <ph id="ph4">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 하 여 실행 하기 전에 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>The connection to the underlying data source is not yet open when the event handler delegate is called.</source>
          <target state="translated">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>Therefore, you cannot cancel the database operation by calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object directly.</source>
          <target state="translated">호출 하 여 데이터베이스 작업을 취소할 수 없습니다 따라서는 <ph id="ph1">&lt;xref:System.Data.Common.DbCommand.Cancel%2A&gt;</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> 개체를 직접 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>However, you can cancel the database operation by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">그러나 설정 하 여 데이터베이스 작업을 취소할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&gt;</ph> 를 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and how to use a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control to see details of a selected row in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and as a form to insert new records.</source>
          <target state="translated">다음 코드 예제에서는 Microsoft SQL Server에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 제어 및 사용 하는 방법을 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤에서 선택한 행의 세부 정보를는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 형태로 새 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>The data is initially displayed in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, and the selected row of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is also displayed in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>.</source>
          <target state="translated">데이터에 처음 표시 되는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 컨트롤과의 선택된 된 행은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 에 표시 됩니다는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> controls use different data source controls; the one that is associated with the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> has a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> that ensure that the selected row of the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A&gt;</ph> 되도록 하는 선택된 된 행을는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>If you click the automatically-generated insert button of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> shows a different user interface, which is used to insert a new record.</source>
          <target state="translated">자동으로 생성 된 삽입 단추를 클릭 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>The example uses a stored procedure to insert records, and returns the primary key of the inserted row.</source>
          <target state="translated">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>If you insert a record, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> automatically populates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> collection with values from the bound columns and calls the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">레코드를 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 를 자동으로 채우려고는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A&gt;</ph> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> can infer the correct parameters from any <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph>, and a parameter for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> when the ASP.NET two-way data-binding syntax is used.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 에서 올바른 매개 변수를 유추할 수 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph>, 및에 대 한 매개 변수는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TemplateField&gt;</ph> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>In this example, an additional parameter is added in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> event handler to handle the primary key returned by the stored procedure.</source>
          <target state="translated">이 예제에 추가 매개 변수 추가 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A&gt;</ph> 저장된 프로시저에서 반환 하는 기본 키를 처리 하는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command">
          <source>Finally, after data is inserted by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> into the database, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> event handler is called to handle the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> event, the value of the primary key of the inserted row is displayed, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> method of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is called explicitly to refresh the data.</source>
          <target state="translated">마지막으로, 하 여 데이터를 삽입 한 후는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> 데이터베이스에는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A&gt;</ph> 처리 하기 위해 이벤트 처리기가 호출는 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.SqlDataSource.Inserted&gt;</ph> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt;</ph> 는 의메서드<ph id="ph5">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>