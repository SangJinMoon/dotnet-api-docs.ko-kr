<Type Name="SqlDataSourceCommandEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6c0bb2aef7bb096423c2be910c56b7b89d39f90" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36579069" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceCommandEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceCommandEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceCommandEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceCommandEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b89d6-101">
        <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" /> 컨트롤의 <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> 및 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b89d6-101">Provides data for the <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /> and <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> events of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89d6-102">처리 하는 이벤트 처리기 대리자를 추가 하 여는 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, 또는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 이벤트에 필요한 추가 전처리 수행 하거나 완전히 데이터베이스 명령을 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-102">By adding an event handler delegate to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> events, you can perform any additional preprocessing required or cancel the database command entirely.</span></span>  
  
 <span data-ttu-id="b89d6-103">때문에 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 클래스에서 파생 된는 <xref:System.ComponentModel.CancelEventArgs> 클래스를 취소할 수 있습니다는 보류 중인 <xref:System.Web.UI.WebControls.SqlDataSource> 설정 하 여 데이터베이스 명령의 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-103">Because the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> class is derived from the <xref:System.ComponentModel.CancelEventArgs> class, you can cancel a pending <xref:System.Web.UI.WebControls.SqlDataSource> database command by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span> <span data-ttu-id="b89d6-104">검토 하 고 조작할 수는 <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> 컬렉션 및 기타 명령 속성에 액세스 하 여 명령을 실행 하기 전에 <xref:System.Data.Common.DbCommand> 에 의해 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-104">You can examine and manipulate the <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> collection, and other command properties prior to running the command by accessing the <xref:System.Data.Common.DbCommand> object exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> property.</span></span>  
  
 <span data-ttu-id="b89d6-105"><xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 클래스에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 에 대 한 액세스를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터베이스 명령을 실행 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-105">The <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> class is used in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> methods to provide access to a <xref:System.Web.UI.WebControls.SqlDataSource> database command before it is run.</span></span> <span data-ttu-id="b89d6-106"><xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 데이터 작업을 사용 하는 동안 기본 데이터 개체를 사용 하기 위해 처리할 수 있는 많은 이벤트를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-106">The <xref:System.Web.UI.WebControls.SqlDataSource> control exposes many events that you can handle to work with the underlying data objects during the course of a data operation.</span></span> <span data-ttu-id="b89d6-107">다음 표에서 이벤트를 나열 및 관련 <xref:System.EventArgs> 및 사용 하 여 데이터 작업의 수명 주기에 해당 하는 다양 한 이벤트를 소개 하기 위해 이벤트 처리기 클래스는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-107">The following table lists the events and associated <xref:System.EventArgs> and event handler classes, to better guide you to the various events that correspond to the lifecycle of a data operation using the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
|<span data-ttu-id="b89d6-108">이벤트(event)</span><span class="sxs-lookup"><span data-stu-id="b89d6-108">Event</span></span>|<span data-ttu-id="b89d6-109">EventArgs</span><span class="sxs-lookup"><span data-stu-id="b89d6-109">EventArgs</span></span>|<span data-ttu-id="b89d6-110">이벤트 처리기</span><span class="sxs-lookup"><span data-stu-id="b89d6-110">EventHandler</span></span>|  
|-----------|---------------|------------------|  
|<span data-ttu-id="b89d6-111"><xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 데이터를 검색 하기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-111"><xref:System.Web.UI.WebControls.SqlDataSource.Selecting> occurs before the data is retrieved.</span></span>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<span data-ttu-id="b89d6-112"><xref:System.Web.UI.WebControls.SqlDataSource.Inserting><xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 업데이트 또는 삭제 작업이 수행 되는 삽입 하기 전에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-112"><xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> occur before an insert, update, or delete operation is performed.</span></span>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<span data-ttu-id="b89d6-113"><xref:System.Web.UI.WebControls.SqlDataSource.Selected><xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 후 데이터 검색, 삽입, 업데이트 또는 삭제 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-113"><xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> occur after the data retrieval, insert, update, or delete operations completes.</span></span>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="b89d6-114">다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤을 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-114">The following code example demonstrates how to display data retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control, and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="b89d6-115">예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-115">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceCommandEventArgs(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs : System.Data.Common.DbCommand -&gt; System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="b89d6-116">취소할 수 있는 <see cref="T:System.Data.Common.DbCommand" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> 또는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /> 명령을 나타내는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b89d6-116">An <see cref="T:System.Data.Common.DbCommand" /> object that represents the cancelable <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />, or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b89d6-117">지정된 데이터베이스 명령 개체를 사용하여 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b89d6-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> class, using the specified database command object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b89d6-118">보류 중인 데이터베이스 명령을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b89d6-118">Gets the pending database command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b89d6-119">보류 중인 데이터베이스 명령을 나타내는 <see cref="T:System.Data.Common.DbCommand" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b89d6-119">An <see cref="T:System.Data.Common.DbCommand" /> object that represents the pending database command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b89d6-120">처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, 또는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 검사 하 고 속성을 조작 하는 이벤트는 <xref:System.Data.Common.DbCommand> 하 여 실행 하기 전에 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-120">You can handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to examine and manipulate the properties of the <xref:System.Data.Common.DbCommand> before it is run by the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="b89d6-121">이벤트 처리기 대리자를 호출할 때 데이터 원본에 대 한 연결 열려 아직 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-121">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="b89d6-122">호출 하 여 데이터베이스 작업을 취소할 수 없습니다 따라서는 <xref:System.Data.Common.DbCommand.Cancel%2A> 에서 메서드는 <xref:System.Data.Common.DbCommand> 개체를 직접 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-122">Therefore, you cannot cancel the database operation by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object directly.</span></span> <span data-ttu-id="b89d6-123">그러나 설정 하 여 데이터베이스 작업을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성은 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-123">However, you can cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b89d6-124">다음 코드 예제에서는 Microsoft SQL Server에서 데이터를 검색에 표시 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 하는 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를는 <xref:System.Web.UI.WebControls.GridView> 및 형태로 새 레코드를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-124">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b89d6-125">데이터에 처음 표시 되는 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행은 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-125">The data is initially displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>.</span></span> <span data-ttu-id="b89d6-126"><xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 서로 다른 데이터를 사용 하 여 연결 된 하나, 소스 제어는 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 되도록 하는 선택된 된 행을는 <xref:System.Web.UI.WebControls.GridView> 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-126">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> that ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="b89d6-127">자동으로 생성 된 삽입 단추를 클릭 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-127">If you click the automatically-generated insert button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="b89d6-128">이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입된 된 행의 기본 키를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-128">The example uses a stored procedure to insert records, and returns the primary key of the inserted row.</span></span> <span data-ttu-id="b89d6-129">레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 를 자동으로 채우려고는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 바인딩된 열과 호출에서 값을 사용 하 여 컬렉션의 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b89d6-129">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="b89d6-130"><xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 <xref:System.Web.UI.WebControls.BoundField>, 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> ASP.NET 양방향 데이터 바인딩을 구문이 사용 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="b89d6-130">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField>, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="b89d6-131">이 예제에 추가 매개 변수 추가 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 하는 기본 키를 처리 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-131">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="b89d6-132">마지막으로, 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리 하기 위해 이벤트 처리기가 호출는 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트, 삽입된 된 행의 기본 키의 값이 표시 됩니다, 그리고 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 는 의메서드<xref:System.Web.UI.WebControls.GridView>컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b89d6-132">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
  </Members>
</Type>