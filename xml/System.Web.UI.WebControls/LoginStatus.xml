<Type Name="LoginStatus" FullName="System.Web.UI.WebControls.LoginStatus">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83578fd9e38bca47060c48e11658d26d879df858" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037565" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LoginStatus : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginStatus extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginStatus" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginStatus&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginStatus : System::Web::UI::WebControls::CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("LoggingOut")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginStatusDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자의 인증 상태를 검색하고 링크의 상태를 토글하여 웹 사이트에 로그인 또는 로그아웃합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.LoginStatus> 컨트롤에 두 개의 주, 웹 사이트에 로그인 및 로그 아웃에 의해 결정 되는 웹 사이트는 <xref:System.Web.HttpRequest.IsAuthenticated%2A> 의 속성은 <xref:System.Web.UI.Page> 개체의 <xref:System.Web.UI.Page.Request%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.LoginStatus> 텍스트나는 이미지 링크의 설정에 따라 컨트롤 표시는 <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> 및 <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> 속성입니다. 텍스트 또는 하나 또는 두 상태에 대 한 이미지를 표시할 수 있습니다.  
  
> [!NOTE]
>  ASP.NET에서 사용할 수 있는 login 컨트롤 집합에 익숙하지 않은 경우 참조 [ASP.NET Login 컨트롤 개요](http://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d) 계속 하기 전에. Login 컨트롤 및 멤버 자격과 관련 된 기타 항목 목록을 참조 하십시오. [멤버 자격을 사용 하 여 사용자 관리](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)합니다.  
  
 사용자가 사이트에 로그인 하지 않은 경우는 <xref:System.Web.UI.WebControls.LoginStatus> 컨트롤은 응용 프로그램 구성 설정에 정의 된 로그인 페이지에 대 한 링크를 제공 합니다. 사용자가 웹 사이트에 로그인 할 때의 <xref:System.Web.UI.WebControls.LoginStatus> 컨트롤에서 로그 아웃 웹 사이트에 대 한 링크를 제공 합니다. 로그 아웃 웹 사이트 사용자의 인증 상태 및 때 쿠키를 사용 하 여 지워집니다 사용자의 클라이언트 컴퓨터에서 쿠키를 지웁니다. 웹 사이트에 모든 후속 방문에는 <xref:System.Web.UI.WebControls.LoginStatus> 컨트롤에 로그인 하 라는 메시지가 표시 됩니다.  
  
 로그 아웃 동작에 의해 제어 되는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> 현재 페이지를 업데이트, 응용 프로그램 구성 설정에 정의 된 로그인 페이지에 사용자를 리디렉션할 또는 사용자는 로지정된페이지를리디렉션합니다하도록지정하는속성<xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A>속성입니다. 기본값은 현재 페이지를 새로 고쳐야 합니다.  
  
> [!NOTE]
>  사용자는 <xref:System.Web.UI.WebControls.LoginStatus> 에서 로그 아웃 웹 사이트를 제어, 상태 보기에 있는 모든 데이터 및 모든 게시 데이터 손실 됩니다.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:LoginStatus  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
                 Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
               Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    LoginImageUrl="uri"  
    LoginText="string"  
    LogoutAction="Refresh|Redirect|RedirectToLoginPage"  
    LogoutImageUrl="uri"  
    LogoutPageUrl="uri"  
    LogoutText="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnLoggedOut="LoggedOut event handler"  
    OnLoggingOut="LoggingOut event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginStatus();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginStatus" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginStatus" /> 컨트롤을 구성하는 자식 컨트롤을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 컨트롤을 파생 하는 경우이 구성원은 주로 컨트롤 개발자가 사용 된 <xref:System.Web.UI.WebControls.LoginStatus> 클래스입니다.  
  
 이 메서드는 ASP.NET 인프라에서 파생 된 컨트롤을 포함 하 여 컴퍼지션 기반 구현을 사용 하는 모든 컨트롤에 알리기 위해 <xref:System.Web.UI.WebControls.CompositeDataBoundControl> 및 <xref:System.Web.UI.WebControls.CompositeControl>포스트백에 대 한 준비 과정에서 모든 자식을 포함 하는 컨트롤 만들기 또는 렌더링 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggedOut">
      <MemberSignature Language="C#" Value="public event EventHandler LoggedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoggedOut" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginStatus.LoggedOut" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoggedOut;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 로그아웃 링크를 클릭하여 로그아웃 프로세스가 완료된 이후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> 이벤트는 사용자가 로그 아웃 링크를 로그 아웃 프로세스 완료 된 후 서버에서 발생 합니다.  
  
 로그 아웃 링크를 클릭할 때는 <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> 이벤트가 발생 한 후 로그 아웃 프로세스를 실행 하 고, 마지막으로 <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> 이벤트가 발생 합니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> 웹 사이트의 사용자 로그 아웃 한 후 캐시 된 데이터를 데이터베이스 연결을 정리 하거나 사용자 단위 제거와 같은 추가 프로세스를 제공 하는 이벤트입니다. 사용자의 id를 계속 하는 동안 사용할 수는 <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> 이벤트를 실행 합니다. 경우에 대 한 처리기는 <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> 이벤트를 다른 페이지로 클라이언트 브라우저를 리디렉션합니다, 인증 쿠키를 클라이언트에서 삭제 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 연결 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> 이벤트입니다. 이 예제의 이벤트 처리기가 비어 있습니다.  
  
 [!code-aspx-csharp[LoginStatusAfterLogout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusAfterLogout/CS/loginstatusafterlogoutcs.aspx#1)]
 [!code-aspx-vb[LoginStatusAfterLogout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusAfterLogout/VB/loginstatusafterlogoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginStatus.OnLoggedOut(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoggingOut">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler LoggingOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler LoggingOut" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginStatus.LoggingOut" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggingOut As LoginCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::LoginCancelEventHandler ^ LoggingOut;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 로그아웃 단추를 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> 이벤트는 로그 아웃 링크를 클릭할 때 서버에서 발생 합니다. 로그 아웃 프로세스가이 이벤트가 완료 될 때까지 발생 하지 않으며 사용자 정보를 계속 사용할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> 이벤트를 사용 하면 사용자 웹 사이트 쇼핑 카트에 항목을 구입 하거나 데이터베이스에 변경 내용을 전송 등에서 없어지기 전에 작업을 완료 해야 하는 경우 로그 아웃 프로세스를 취소할 수 있습니다. 취소할 수 있습니다는 <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> 설정 하 여 이벤트는 <xref:System.Web.UI.WebControls.LoginCancelEventArgs.Cancel%2A> 의 속성은 <xref:System.Web.UI.WebControls.LoginCancelEventArgs> 매개 변수를 `true`합니다.  
  
 사용 된 <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> 는 사이트에서 사용자가 로그온 하기 전에 사용자 데이터를 지우는 등의 추가 처리를 제공 하는 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 연결 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> 이벤트입니다. 이벤트 처리기는 폼에 필드를 업데이트 한 다음 로그 아웃 시도 취소 합니다.  
  
 [!code-aspx-csharp[LoginStatusBeforeLogout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusBeforeLogout/CS/loginstatusbeforelogoutcs.aspx#1)]
 [!code-aspx-vb[LoginStatusBeforeLogout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusBeforeLogout/VB/loginstatusbeforelogoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginImageUrl">
      <MemberSignature Language="C#" Value="public virtual string LoginImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginStatus.LoginImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 링크에 사용되는 이미지 URL을 가져오거나 설정합니다.</summary>
        <value>로그인 링크에 사용되는 이미지 URL이 포함된 문자열입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> 로그인 링크에 사용 되는 이미지의 위치를 포함 하는 속성입니다. <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> 속성은 이미지에 대 한 대체 텍스트도 사용 합니다.  
  
 경우 <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> 비어 있는 경우는 <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> 속성은 링크로 렌더링 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> 특정 이미지에는 속성입니다.  
  
 [!code-aspx-csharp[LoginStatusLoginImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusLoginImageUrl/CS/loginstatusloginimageurlcs.aspx#1)]
 [!code-aspx-vb[LoginStatusLoginImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusLoginImageUrl/VB/loginstatusloginimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginStatus.LoginText" />
      </Docs>
    </Member>
    <Member MemberName="LoginText">
      <MemberSignature Language="C#" Value="public virtual string LoginText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginStatus.LoginText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 링크에 사용되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>로그인 링크로 표시되는 문자열입니다. 기본값은 "로그인"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> 속성은 링크 텍스트로 표시 때는 <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> 속성이 비어 있습니다.  
  
 때는 <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> 속성 링크가 포함 된 <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> 속성은 이미지에 대 한 대체 텍스트도 사용 합니다.  
  
 이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[LoginStatusLoginText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusLoginText/CS/loginstatuslogintextcs.aspx#1)]
 [!code-aspx-vb[LoginStatusLoginText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusLoginText/VB/loginstatuslogintextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginStatus.LoginImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="LogoutAction">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LogoutAction LogoutAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LogoutAction LogoutAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginStatus.LogoutAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LogoutAction As LogoutAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::LogoutAction LogoutAction { System::Web::UI::WebControls::LogoutAction get(); void set(System::Web::UI::WebControls::LogoutAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LogoutAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Web.UI.WebControls.LoginStatus" /> 컨트롤을 사용하여 웹 사이트에서 로그아웃할 때 수행될 동작을 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.LogoutAction" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.LogoutAction.Refresh" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> 속성 결정에서 로그 사용 하는 경우 페이지는 사용자에 게 표시 되는 <xref:System.Web.UI.WebControls.LoginStatus> 제어 합니다.  
  
 다음 표에서 각각에 대해 수행 된 작업 설명 <xref:System.Web.UI.WebControls.LogoutAction> 값입니다.  
  
|<xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> 값|수행 작업|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------|  
|<xref:System.Web.UI.WebControls.LogoutAction.Redirect>|에 포함 된 URL로 사용자를 리디렉션하는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A> 속성입니다. 경우 <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A> 가 비어 있는 경우 사용자가 리디렉션되는 응용 프로그램 구성 설정에 정의 된 로그인 페이지에 있습니다.|  
|<xref:System.Web.UI.WebControls.LogoutAction.RedirectToLoginPage>|응용 프로그램 구성 설정에 정의 된 로그인 페이지에는 사용자를 리디렉션합니다.|  
|<xref:System.Web.UI.WebControls.LogoutAction.Refresh>|현재 페이지를 새로 고칩니다.|  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> 속성을는 <xref:System.Web.UI.WebControls.LogoutAction.RedirectToLoginPage> 로그인 페이지에 사용자를 보낼 값입니다.  
  
 [!code-aspx-csharp[LoginStatusLogoutAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusLogoutAction/CS/loginstatuslogoutactioncs.aspx#1)]
 [!code-aspx-vb[LoginStatusLogoutAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusLogoutAction/VB/loginstatuslogoutactionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 잘못된 <see cref="T:System.Web.UI.WebControls.LogoutAction" /> 값으로 설정된 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.LogoutAction" />
      </Docs>
    </Member>
    <Member MemberName="LogoutImageUrl">
      <MemberSignature Language="C#" Value="public virtual string LogoutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogoutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LogoutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LogoutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그아웃 단추에 사용되는 이미지 URL을 가져오거나 설정합니다.</summary>
        <value>로그아웃 링크에 사용되는 이미지 URL이 포함된 문자열입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> 속성 로그 아웃 링크에 사용 되는 이미지의 위치를 포함 합니다. <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> 속성은 브라우저에서 이미지에 대 한 대체 텍스트도 사용 합니다.  
  
 경우 <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> 비어 있는 경우는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> 속성은 링크로 렌더링 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> 특정 이미지에는 속성입니다.  
  
 [!code-aspx-csharp[LoginStatusLogoutImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusLogoutImageUrl/CS/loginstatuslogoutimageurlcs.aspx#1)]
 [!code-aspx-vb[LoginStatusLogoutImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusLogoutImageUrl/VB/loginstatuslogoutimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogoutPageUrl">
      <MemberSignature Language="C#" Value="public virtual string LogoutPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogoutPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LogoutPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LogoutPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그아웃 페이지의 URL을 가져오거나 설정합니다.</summary>
        <value>로그아웃 페이지의 URL이 포함된 문자열입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> 속성이 <xref:System.Web.UI.WebControls.LogoutAction.Redirect>, 사용자가을에 포함 된 URL로 리디렉션되 <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A>합니다.  
  
 경우 <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> 의 내용 다른 값으로 설정 됩니다는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A> 속성은 무시 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutPageUrl%2A> 로그 아웃 페이지에는 속성 및 <xref:System.Web.UI.WebControls.LoginStatus.LogoutAction%2A> 속성을 <xref:System.Web.UI.WebControls.LogoutAction.Redirect> 로그 아웃할 때 리디렉션될 수 있도록 합니다.  
  
 [!code-aspx-csharp[LoginStatusLogoutPageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusLogoutPageUrl/CS/loginstatuslogoutpageurlcs.aspx#1)]
 [!code-aspx-vb[LoginStatusLogoutPageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusLogoutPageUrl/VB/loginstatuslogoutpageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginStatus.LogoutAction" />
      </Docs>
    </Member>
    <Member MemberName="LogoutText">
      <MemberSignature Language="C#" Value="public virtual string LogoutText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogoutText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginStatus.LogoutText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LogoutText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LogoutText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그아웃 링크에 사용되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>로그아웃 링크로 표시되는 문자열입니다. 기본값은 "로그아웃"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> 속성은 표시 때는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> 속성이 비어 있습니다.  
  
 때는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> 속성 링크가 포함 된 <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> 속성은 이미지를 지원 하지 않는 브라우저에서 이미지에 대 한 대체 텍스트도 사용 합니다.  
  
 이 속성의 값으로 설정 하면 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 참조 <xref:System.ComponentModel.LocalizableAttribute> 및 [전역화 및 지역화](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[LoginStatusLogoutText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusLogoutText/CS/loginstatuslogouttextcs.aspx#1)]
 [!code-aspx-vb[LoginStatusLogoutText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusLogoutText/VB/loginstatuslogouttextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnLoggedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggedOut (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggedOut(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.OnLoggedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggedOut (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggedOut(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>사용자가 로그아웃 링크를 클릭하여 로그아웃 프로세스가 완료된 이후 <see cref="E:System.Web.UI.WebControls.LoginStatus.LoggedOut" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.LoginStatus.LoggedOut> 웹 사이트에서 사용자가 로그인 한 후 캐시 데이터를 데이터베이스 연결을 닫거나 사용자 단위를 정리 하는 등의 추가 프로세스를 제공 하는 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다. 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.LoginStatus.OnLoggedOut%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 연결 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.LoginStatus.OnLoggedOut%2A> 이벤트입니다. 이 예제의 이벤트 처리기가 비어 있습니다.  
  
 [!code-aspx-csharp[LoginStatusAfterLogout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusAfterLogout/CS/loginstatusafterlogoutcs.aspx#1)]
 [!code-aspx-vb[LoginStatusAfterLogout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusAfterLogout/VB/loginstatusafterlogoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.LoginStatus.OnLoggedOut(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.LoginStatus.OnLoggedOut(System.EventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoggingOut">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggingOut (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggingOut(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.OnLoggingOut(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggingOut (e As LoginCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggingOut(System::Web::UI::WebControls::LoginCancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" />입니다.</param>
        <summary>사용자가 <see cref="E:System.Web.UI.WebControls.LoginStatus.LoggingOut" /> 컨트롤에 있는 로그아웃 링크를 클릭할 때 <see cref="T:System.Web.UI.WebControls.LoginStatus" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.LoginStatus.LoggingOut> 는 사이트에서 사용자가 로그온 하기 전에 사용자 데이터를 정리 하는 등의 추가 프로세스를 제공 하는 이벤트입니다. <xref:System.Web.UI.WebControls.LoginStatus.OnLoggingOut%2A> 웹 사이트에서 없어지기 전에 쇼핑 카트 데이터베이스 변경 내용 등의 데이터를 저장 하는 옵션이 사용자 지정할 수 있는 이벤트를 취소할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.LoginStatus.OnLoggingOut%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 연결 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.LoginStatus.OnLoggingOut%2A> 이벤트입니다. 이벤트 처리기는 폼에 필드를 업데이트 한 다음 로그 아웃 시도 취소 합니다.  
  
 [!code-aspx-csharp[LoginStatusBeforeLogout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginStatusBeforeLogout/CS/loginstatusbeforelogoutcs.aspx#1)]
 [!code-aspx-vb[LoginStatusBeforeLogout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginStatusBeforeLogout/VB/loginstatusbeforelogoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.LoginStatus.OnLoggingOut(System.Web.UI.WebControls.LoginCancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.LoginStatus.OnLoggingOut(System.Web.UI.WebControls.LoginCancelEventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>사용자의 로그인 여부를 결정하고 로그인 페이지의 URL을 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.OnPreRender%2A> 메서드를 검사 하 여 사용자 기록 되는지 확인은 <xref:System.Web.HttpRequest.IsAuthenticated%2A> 속성의는 <xref:System.Web.UI.Page> 개체의 <xref:System.Web.UI.Page.Request%2A> 속성입니다. 사용자가 로그인 하는 경우는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutText%2A> 또는 <xref:System.Web.UI.WebControls.LoginStatus.LogoutImageUrl%2A> 속성, 컨트롤을 렌더링 하는 데 사용 됩니다. 사용자가 로그인 하지 않은 경우는 <xref:System.Web.UI.WebControls.LoginStatus.LoginText%2A> 또는 <xref:System.Web.UI.WebControls.LoginStatus.LoginImageUrl%2A> 속성, 컨트롤을 렌더링 하는 데 사용 됩니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.LoginStatus.OnPreRender%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.LoginStatus.OnPreRender(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.LoginStatus.OnPreRender(System.EventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML 콘텐츠를 클라이언트에 렌더링하는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LoginName" /> 컨트롤을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 컨트롤에 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML 콘텐츠를 클라이언트에 렌더링하는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</param>
        <summary>지정된 작성기에 컨트롤의 내용을 렌더링합니다. 이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginStatus.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> 컨트롤의 상태가 포함된 <see cref="T:System.Web.UI.WebControls.LoginStatus" />입니다.</param>
        <summary>기본 <see cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" /> 메서드를 재정의합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginStatus.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.LoginStatus" /> 값을 가져옵니다.</summary>
        <value>항상 <see cref="F:System.Web.UI.HtmlTextWriterTag.A" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginStatus.TagKey%2A> 속성을 사용 하면에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림을 <xref:System.Web.UI.WebControls.LoginStatus> 제어 합니다. <xref:System.Web.UI.WebControls.LoginStatus.TagKey%2A> 속성은 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>이 속성을 지정 합니다. 재정의할 수 있습니다 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 파생 된 컨트롤에 사용할 값입니다.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>