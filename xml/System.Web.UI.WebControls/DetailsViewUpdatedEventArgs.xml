<Type Name="DetailsViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4d9c139995bffdcd75c7174945d3b317de7e0aa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37593874" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DetailsViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DetailsViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DetailsViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DetailsViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fab57-101">
        <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fab57-101">Provides data for the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-102"><xref:System.Web.UI.WebControls.DetailsView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 때 업데이트 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "Update"로 설정 하는 속성) 컨트롤 내에서 클릭 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-102">The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event when an Update button (a button with its `CommandName` property set to "Update") within the control is clicked, but after the <xref:System.Web.UI.WebControls.DetailsView> control updates the record.</span></span> <span data-ttu-id="fab57-103">이 옵션을 사용 하면이 이벤트가 발생할 때마다 update 작업의 결과 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-103">This allows you to provide an event handler that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.</span></span>  
  
 <span data-ttu-id="fab57-104"><xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 개체가 영향을 받는 레코드와 발생 한 예외의 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-104">A <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> object is passed to the event handler, which allows you to determine the number of records affected and any exceptions that might have occurred.</span></span> <span data-ttu-id="fab57-105">업데이트 작업의 영향을 받는 레코드 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-105">To determine the number of records affected by the update operation, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> property.</span></span> <span data-ttu-id="fab57-106">사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> 예외도 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-106">Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property to determine whether any exceptions occurred.</span></span> <span data-ttu-id="fab57-107">예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-107">You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property.</span></span> <span data-ttu-id="fab57-108">업데이트 된 레코드에 대 한 키 필드 값에 액세스 해야 할 경우 사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-108">If you need to access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property.</span></span> <span data-ttu-id="fab57-109">원래 및 업데이트 된 키가 아닌 필드 값을 사용 하 여 액세스할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> 고 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> 속성을 각각.</span><span class="sxs-lookup"><span data-stu-id="fab57-109">The original and updated non-key field values can be accessed using the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="fab57-110">기본적으로 <xref:System.Web.UI.WebControls.DetailsView> 제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 업데이트 작업 후 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-110">By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation.</span></span> <span data-ttu-id="fab57-111">유지 하는 <xref:System.Web.UI.WebControls.DetailsView> 편집 모드에서 컨트롤을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-111">To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="fab57-112">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-112">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="fab57-113"><xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값 목록은 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A> 생성자를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="fab57-113">For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-114">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 에 대 한 이벤트 처리기에 전달 된 개체를 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 업데이트 작업 중에 예외가 발생 했는지 여부를 결정 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-114">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event to determine whether an exception occurred during an update operation.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DetailsViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.DetailsViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.DetailsViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">
          <span data-ttu-id="fab57-115">업데이트 작업의 영향을 받는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-115">The number of rows affected by the update operation.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="fab57-116">업데이트 작업이 수행되는 동안 발생한 예외를 나타내는 <see cref="T:System.Exception" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-116">An <see cref="T:System.Exception" /> that represents the exception raised when the update operation was performed.</span>
          </span>
          <span data-ttu-id="fab57-117">발생한 예외가 없으면 이 매개 변수에 대해 <see langword="null" />을 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-117">If no exception is raised, use <see langword="null" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fab57-118">
            <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-119">이 생성자의 새 인스턴스를 초기화 하는 데는 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-119">Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class.</span></span>  
  
 <span data-ttu-id="fab57-120">다음 표에서는 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-120">The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class.</span></span>  
  
|<span data-ttu-id="fab57-121">속성</span><span class="sxs-lookup"><span data-stu-id="fab57-121">Property</span></span>|<span data-ttu-id="fab57-122">초기 값</span><span class="sxs-lookup"><span data-stu-id="fab57-122">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>|<span data-ttu-id="fab57-123">`affectedRows` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-123">The value of the `affectedRows` parameter.</span></span>|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>|<span data-ttu-id="fab57-124">합니다 <xref:System.Exception?displayProperty=nameWithType> 에 포함 된 개체는 `e` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-124">The <xref:System.Exception?displayProperty=nameWithType> object contained in the `e` parameter.</span></span>|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>|<span data-ttu-id="fab57-125">로 초기화 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-125">Initialized to `false`.</span></span>|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>|<span data-ttu-id="fab57-126">로 초기화 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-126">Initialized to `false`.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="fab57-127">이 생성자는 이벤트를 발생 시킬 때 주로 컨트롤 개발자가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-127">This constructor is used primarily by control developers when raising events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab57-128">업데이트 작업의 영향을 받는 행의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-128">Gets the number of rows affected by the update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab57-129">업데이트 작업의 영향을 받는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-129">The number of rows affected by the update operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-130">사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> 업데이트 작업의 영향을 받는 행의 수를 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-130">Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> property to determine the number of rows affected by the update operation.</span></span> <span data-ttu-id="fab57-131">이 값은 적절 한 개수의 행이 업데이트 된 것을 확인 하려면 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-131">This value is commonly used to verify that the appropriate number of rows was updated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-132">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> 속성을 업데이트 작업에 영향을 받는 행의 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-132">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> property to determine the number of rows affected by an update operation.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab57-133">업데이트 작업 중에 발생한 예외(있을 경우)를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-133">Gets the exception (if any) that was raised during the update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab57-134">업데이트 작업 중에 발생한 예외를 나타내는 <see cref="T:System.Exception" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-134">An <see cref="T:System.Exception" /> that represents the exception that was raised during the update operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-135">사용 하 여는 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> (있는 경우) 예외를 확인 하려면 속성을 업데이트 작업 중에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-135">Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property to determine the exception (if any) that was raised during the update operation.</span></span> <span data-ttu-id="fab57-136">발생한 예외가 없으면 이 속성은 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-136">If no exceptions were raised, this property returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab57-137">예외가 발생 하 고 이벤트 처리기에서 예외를 처리 하려는 경우 설정 해야 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 속성을 `true`그렇지 않은 경우 예외 처리에 대 한 호출 스택에 있는 다음 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-137">If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property to `true`; otherwise, the exception is passed to the next method on the call stack for handling.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-138">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> 속성 업데이트 작업 중에 예외가 발생 한 것인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-138">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property to determine whether an exception occurred during an update operation.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab57-139">업데이트 작업 중에 발생한 예외가 이벤트 처리기에서 처리되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-139">Gets or sets a value indicating whether an exception that was raised during the update operation was handled in the event handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab57-140">예외가 이벤트 처리기에서 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-140">
              <see langword="true" /> if the exception was handled in the event handler; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fab57-141">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-141">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-142"><xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 속성 키 필드가 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-142">When an exception is raised during the update operation, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate whether the exception was handled in the event handler.</span></span> <span data-ttu-id="fab57-143">이 속성 설정 된 경우 `true`, 예외 처리 된 것으로 간주 되어 호출 스택에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-143">When this property is set to `true`, the exception is considered handled and is not passed further up the call stack.</span></span> <span data-ttu-id="fab57-144">이 속성 설정 된 경우 `false`, 예외 처리에 대 한 호출 스택에 있는 다음 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-144">If this property is set to `false`, the exception is passed to the next method on the call stack for handling.</span></span> <span data-ttu-id="fab57-145">발생 한 예외를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-145">To determine which exception was raised, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-146">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 처리을 나타내려면 예외를 이벤트 처리기는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-146">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property to indicate that the exception was handled in the event handler.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab57-147">업데이트 작업 후 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤을 편집 모드로 유지할지 여부를 나타내는 값을 가져오거나 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-147">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control should remain in edit mode after an update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab57-148">업데이트 작업 후 편집 모드로 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-148">
              <see langword="true" /> to remain in edit mode after an update operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fab57-149">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-149">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-150">기본적으로 <xref:System.Web.UI.WebControls.DetailsView> 제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 업데이트 작업 후 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-150">By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation.</span></span> <span data-ttu-id="fab57-151">사용 하 여를 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 지정 하는지 여부를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 모드로 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-151">Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> property to specify whether the <xref:System.Web.UI.WebControls.DetailsView> control should remain in edit mode.</span></span> <span data-ttu-id="fab57-152">유지 하는 <xref:System.Web.UI.WebControls.DetailsView> 편집 모드에서 컨트롤을이 속성을 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-152">To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set this property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab57-153">특정 상황에서 기본 모드를 재정의 하려는 경우이 속성을 사용할 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-153">This property should be used if you want to override the default mode at a specific occasion.</span></span> <span data-ttu-id="fab57-154">경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 기본적으로 편집 모드로 유지를 설정 해야 합니다 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 속성 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-154">If the <xref:System.Web.UI.WebControls.DetailsView> control needs to remain in edit mode by default, set the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-155">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> 유지 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 업데이트 작업 후 편집 모드에서 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-155">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> property to keep a <xref:System.Web.UI.WebControls.DetailsView> control in edit mode after an update operation.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab57-156">업데이트된 레코드에 대한 키 필드의 이름/값 쌍이 들어 있는 사전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-156">Gets a dictionary that contains the key field name/value pairs for the updated record.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab57-157">업데이트된 레코드에 대한 키 필드의 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-157">An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> that contains a dictionary of key field name/value pairs for the updated record.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-158">사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> 업데이트 된 레코드에 대 한 키 필드의 값에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-158">Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record.</span></span> <span data-ttu-id="fab57-159">예를 들어, 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-159">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="fab57-160">합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> 속성을 구현 하는 개체를 반환 합니다.는 <xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-160">The <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface.</span></span> <span data-ttu-id="fab57-161">개체에 <xref:System.Collections.DictionaryEntry> 업데이트 된 레코드의 필드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-161">The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab57-162">인덱스를 이용할 수 있습니다 가기로 <xref:System.Collections.Specialized.IOrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-162">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-163">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> 업데이트 된 레코드에 대 한 키 필드의 값에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-163">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property to access the values of the key field for an updated record.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab57-164">업데이트된 레코드의 새 필드 이름/값 쌍이 들어 있는 사전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-164">Gets a dictionary that contains the new field name/value pairs for the updated record.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab57-165">업데이트된 레코드의 새 필드 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-165">An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> that contains a dictionary of the new field name/value pairs for the updated record.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-166">사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> 업데이트 된 레코드에 대 한 새 필드 값에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-166">Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> property to access the new field values for the updated record.</span></span> <span data-ttu-id="fab57-167">예를 들어, 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-167">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="fab57-168">합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> 속성을 구현 하는 개체를 반환 합니다.는 <xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-168">The <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface.</span></span> <span data-ttu-id="fab57-169">개체에 <xref:System.Collections.DictionaryEntry> 업데이트 된 레코드의 필드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-169">The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab57-170">인덱스를 이용할 수 있습니다 가기로 <xref:System.Collections.Specialized.IOrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-170">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-171">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> 업데이트 된 레코드의 키가 아닌 필드에 대 한 사용자가 입력 한 새 값에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-171">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> property to access the new values entered by the user for the non-key fields of the updated record.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fab57-172">업데이트된 레코드의 원래 필드 이름/값 쌍이 들어 있는 사전을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-172">Gets a dictionary that contains the original field name/value pairs for the updated record.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fab57-173">업데이트된 레코드의 원래 필드 이름/값 쌍 사전이 들어 있는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fab57-173">An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> that contains a dictionary of the original field name/value pairs for the updated record.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab57-174">사용 된 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> 업데이트 된 레코드에 대 한 원래 필드 값에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-174">Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> property to access the original field values for the updated record.</span></span> <span data-ttu-id="fab57-175">예를 들어, 업데이트 된 레코드의 로그를 유지할 이러한 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-175">For example, you can use these values to keep a log of updated records.</span></span>  
  
 <span data-ttu-id="fab57-176">합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> 속성을 구현 하는 개체를 반환 합니다.는 <xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-176">The <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> property returns an object that implements the <xref:System.Collections.Specialized.IOrderedDictionary> interface.</span></span> <span data-ttu-id="fab57-177">개체에 <xref:System.Collections.DictionaryEntry> 업데이트 된 레코드의 필드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-177">The object contains <xref:System.Collections.DictionaryEntry> objects that represent the fields of the updated record.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab57-178">인덱스를 이용할 수 있습니다 가기로 <xref:System.Collections.Specialized.IOrderedDictionary> 직접 값 필드에 액세스 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-178">As a shortcut, you can also use the indexer of the <xref:System.Collections.Specialized.IOrderedDictionary> object to access the field values directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab57-179">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> 속성을 업데이트 된 레코드에 대 한 키가 아닌 필드의 원래 값에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="fab57-179">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> property to access the original values of the non-key fields for the updated record.</span></span>  
  
 [!code-aspx-csharp[DetailsViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[DetailsViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>