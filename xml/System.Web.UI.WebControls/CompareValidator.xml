<Type Name="CompareValidator" FullName="System.Web.UI.WebControls.CompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="563df817cb8f8f66bd22697bce653971ac74dc4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583701" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompareValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type CompareValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat="server" ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자가 입력 컨트롤에 입력한 값과 다른 입력 컨트롤에 입력된 값 또는 상수 값을 비교합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.CompareValidator> 제어와 같은 입력된 컨트롤에서 사용자가 입력 한 값을 비교 하는 <xref:System.Web.UI.WebControls.TextBox> 다른 입력된 컨트롤 또는 상수 값에 입력 된 값으로 제어 합니다. <xref:System.Web.UI.WebControls.CompareValidator> 입력된 컨트롤의 값으로 지정 된 기준과 일치 하면 제어가 전달 유효성 검사는 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, 및/또는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성입니다.  
  
 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.CompareValidator> 입력된 컨트롤에 입력 된 값에서 지정한 데이터 형식으로 변환할 수 있는지 여부를 나타내기 위해 컨트롤에는 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 속성입니다.  
  
 지정 된 입력된 컨트롤을 설정 하 여 유효성을 검사 하 여 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 속성입니다. 특정 입력된 컨트롤 다른 입력된 컨트롤을 비교 하려는 경우 설정 된 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성을 통해 제어와 비교할 개체를 지정 합니다.  
  
> [!NOTE]
>  값으로 지정 된 입력된 컨트롤에 입력 된 경우는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성에서 지정한 데이터 형식으로 변환할 수 없습니다는 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 속성이 아니라로 지정 된 입력된 컨트롤에 입력 된 값은 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 속성 변환할 수 있습니다 검사할 입력된 컨트롤은 유효한 것으로 간주 됩니다. 또한 배치 해야 따라서는 <xref:System.Web.UI.WebControls.CompareValidator> 또는 <xref:System.Web.UI.WebControls.RangeValidator> 로 지정 된 된 입력된 컨트롤에 대 한 제어는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성.  
  
 다른 입력 컨트롤과 입력된 컨트롤의 값을 비교 하는 대신 상수 값으로 입력된 컨트롤의 값을 비교할 수 있습니다. 설정 하 여 비교할 상수 값을 지정 된 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 속성입니다.  
  
> [!NOTE]
>  지정 된 값은 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 속성에서 지정한 데이터 형식으로 변환할 수 없습니다는 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 속성, 예외가 throw 됩니다. 에 프로그래밍 방식으로 할당 하기 전에 데이터 형식의 값을 확인 해야는 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 속성입니다.  
  
> [!NOTE]
>  둘 다 설정 하지 않으면는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 및 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 동시에는 속성입니다. 하거나 다른 입력된 컨트롤 또는 상수 값 입력된 컨트롤의 값을 비교할 수 있습니다. 두 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성이 우선 합니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 속성을 통해 수행, 보다 큼, 등 같음 비교 유형을 지정 합니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 속성을 `ValidationCompareOperator.DataTypeCheck`, <xref:System.Web.UI.WebControls.CompareValidator> 컨트롤은 무시 하는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 및 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 속성 시스템에서 지정한 데이터 형식으로 입력된 컨트롤에 입력 한 값으로 변환할 수 있는지 여부만 나타냅니다는 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 속성은 모두 비교 값의 데이터 형식을 지정 하려면 사용 합니다. 두 값이 비교 작업이 수행 되기 전에이 데이터 형식으로 자동 변환 됩니다.  
  
> [!IMPORTANT]
>  경우는 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> 속성이로 설정 되어 <xref:System.Web.UI.WebControls.ValidationDataType.Date> 및 현재 달력 형식이 그레고리오 력이 아닌, 유효성 검사기는 서버 쪽 유효성 검사를 수행 합니다. 유효성 검사기 클라이언트 스크립트 그레고리오 력만 지원합니다.  
  
 다음 표에서 비교할 수 있는 다양 한 데이터 형식을 나열 합니다.  
  
|데이터 형식|설명|  
|---------------|-----------------|  
|`String`|문자열 데이터 형식입니다.|  
|`Integer`|부호 있는 32비트 정수 데이터 형식입니다.|  
|`Double`|배정밀도 부동 소수점 숫자 데이터 형식입니다.|  
|`Date`|날짜 데이터 형식입니다.|  
|`Currency`|Decimal 데이터 형식입니다. 통화 기호를 포함할 수 없습니다.|  
  
> [!NOTE]
>  입력된 컨트롤을 선택 하지 않으면 없습니다 유효성 검사 함수는 호출 하 고 유효성 검사는 성공 합니다. 사용 하 여 한 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 컨트롤을 사용자가 입력된 컨트롤에 데이터를 입력 합니다.  
  
> [!NOTE]
>  사용 하는 경우는 <xref:System.Web.UI.WebControls.CompareValidator> 컨트롤 내부는 <xref:System.Web.UI.UpdatePanel> 검사기 컨트롤과 연결 된 컨트롤은 동일한 패널에 있어야 합니다. 사용 하는 방법에 대 한 자세한 내용은 <xref:System.Web.UI.UpdatePanel> 부분 페이지 업데이트를 제어, 참조 [부분 페이지 렌더링 개요](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.  
  
 유효성 검사 컨트롤에 대 한 자세한 내용은 참조 하십시오. <xref:System.Web.UI.WebControls.BaseValidator>합니다.  
  
## <a name="accessibility"></a>액세스 가능성  
 내게 필요한 옵션 표준을 준수 하는 태그를 생성 되도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하십시오. [Visual Studio 및 ASP.NET의 내게 필요한 옵션](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤 및내게필요한옵션](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CompareValidator> 컨트롤의 두 값을 비교할 <xref:System.Web.UI.WebControls.TextBox> 컨트롤입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.TextBox" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.Operator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.CompareValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 모든 필드를 기본값으로 초기화합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="compareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에 렌더링할 출력 스트림이 들어 있는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>클라이언트에서 렌더링하기 위한 출력 스트림에 이 컨트롤의 특성을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender%2A> 사용자 지정 서버 컨트롤에서 있도록는 <xref:System.Web.UI.WebControls.CompareValidator> 오류 메시지가 항상 굵게 표시 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorender.cs#2)]
[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="compareValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤 속성의 값이 올바른지 확인합니다.</summary>
        <returns>컨트롤 속성이 올바르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid%2A> 길이 만큼 visible 속성의 값을 항상 반환 되도록 컨트롤을 사용자 지정 서버에서 메서드는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 의 속성은 <xref:System.Web.UI.WebControls.CompareValidator> 제어 페이지에 및 포함 유효성 검사 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalid.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">대상 속성의 값을 필요한 <see cref="T:System.Type" />으로 변환할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlToCompare">
      <MemberSignature Language="C#" Value="public string ControlToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>유효성을 검사하는 입력 컨트롤과 비교할 입력 컨트롤을 가져오거나 설정합니다.</summary>
        <value>유효성을 검사하는 입력 컨트롤과 비교할 입력 컨트롤입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성 같은 입력된 컨트롤을 지정 하는 <xref:System.Web.UI.WebControls.TextBox> 유효성이 검사 되는 입력 컨트롤과 비교할 제어 합니다. 이 속성에 지정 된 입력된 컨트롤 페이지 컨트롤이 면 예외가 throw 됩니다.  
  
> [!NOTE]
>  둘 다 설정 하지 않으면는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 및 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 동시에는 속성입니다. 하거나 다른 입력된 컨트롤 또는 상수 값 입력된 컨트롤의 값을 비교할 수 있습니다. 두 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성이 우선 합니다.  
  
 자세한 내용은 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=nameWithType>을 참조하세요.  
  
> [!IMPORTANT]
>  비교할 컨트롤이 숨겨져 있거나 컨테이너 내부 경우 (같은 <xref:System.Web.UI.WebControls.Panel> 컨트롤) 표시 되지 않는, 서버 쪽 유효성 검사를 수행 하는 유효성 검사기입니다. 유효성 검사기 클라이언트 스크립트에 표시 되는 컨트롤만 지원합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성을 검사할 컨트롤과 비교할 컨트롤을 지정 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
        <altmember cref="T:System.Web.UI.WebControls.TextBox" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="compareValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생된 클래스에서 재정의되면 이 메서드는 입력 컨트롤의 값이 유효한지 여부를 확인하는 코드를 포함합니다.</summary>
        <returns>입력 컨트롤의 값이 유효하면 <see langword="true" />이고, 유효하지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid%2A> 항상 반환 되도록 컨트롤을 사용자 지정 서버에서 메서드 `true` 두 지정 된 컨트롤의 값이 동일 하는 경우 및 `false` 그렇지 않은 경우.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationCompareOperator Operator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As ValidationCompareOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationCompareOperator Operator { System::Web::UI::WebControls::ValidationCompareOperator get(); void set(System::Web::UI::WebControls::ValidationCompareOperator value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.Web.UI.WebControls.ValidationCompareOperator with get, set" Usage="System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationCompareOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>수행할 비교 작업을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 값 중 하나입니다. 기본값은 <see langword="Equal" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 속성을 통해 수행할 비교 작업을 지정 합니다. 다음 표에서 가능한 비교 작업을 나열 합니다.  
  
|작업|설명|  
|---------------|-----------------|  
|`Equal`|검사할 입력된 컨트롤을 다른 컨트롤의 값 또는 상수 값이 같은지 비교 합니다.|  
|`NotEqual`|검사할 입력된 컨트롤을 다른 컨트롤의 값 또는 상수 값이 다른 지 비교 합니다.|  
|`GreaterThan`|유효성을 검사할 입력 컨트롤과 다른 컨트롤의 값 또는 상수 값 사이의 보다 큰지 비교 합니다.|  
|`GreaterThanEqual`|유효성을 검사할 입력 컨트롤과 다른 컨트롤의 값 또는 상수 값 사이의 보다 크거나 비교 합니다.|  
|`LessThan`|보다 작은지 검사할 입력된 컨트롤을 다른 컨트롤의 값 또는 상수 값을 비교 합니다.|  
|`LessThanEqual`|보다 작거나 같으면 유효성을 검사할 입력 컨트롤과 다른 컨트롤의 값 또는 상수 값을 비교 합니다.|  
|`DataTypeCheck`|유효성을 검사할 입력된 컨트롤에 입력 한 값과 지정 된 데이터 형식 간의 데이터 형식 비교는 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 속성입니다. 유효성 검사 값을 지정 된 데이터 형식으로 변환할 수 없는 경우 실패 합니다. **참고:** 는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 및 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 속성은이 연산자를 사용 하는 경우 무시 됩니다.|  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 비교 작업을 지정 하는 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 비교 연산자가 <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
      </Docs>
    </Member>
    <Member MemberName="ValueToCompare">
      <MemberSignature Language="C#" Value="public string ValueToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>유효성 검사가 수행되는 입력에서 사용자가 입력한 값과 비교할 상수 값을 가져오거나 설정합니다.</summary>
        <value>유효성 검사가 수행되는 입력에서 사용자가 입력한 값과 비교할 상수 값입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 속성을 검사할 입력된 컨트롤에서 사용자가 입력 한 값과 비교할 상수 값을 지정 합니다. 이 속성에 지정 된 상수 값으로 지정 된 데이터 형식으로 변환 하지 못하는 경우는 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 속성, 예외가 throw 됩니다.  
  
> [!NOTE]
>  둘 다 설정 하지 않으면는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 및 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 동시에는 속성입니다. 하거나 다른 입력된 컨트롤 또는 상수 값 입력된 컨트롤의 값을 비교할 수 있습니다. 두 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 속성이 우선 합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 참조 <xref:System.Web.UI.ThemeableAttribute> 및 [ASP.NET 테마와 스킨](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 속성에서 사용자가 입력 한 값을 비교 하는 <xref:System.Web.UI.WebControls.TextBox> 상수 값으로 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>