<Type Name="LinqDataSourceView" FullName="System.Web.UI.WebControls.LinqDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c213a75d651a95e6af2d4ef0dbc20b083943800" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceView : System.Web.UI.WebControls.ContextDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceView extends System.Web.UI.WebControls.ContextDataSourceView" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceView&#xA;Inherits ContextDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceView : System::Web::UI::WebControls::ContextDataSourceView" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ContextDataSourceView</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1c47d-101">
        <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 컨트롤을 지원하고 데이터 바인딩된 컨트롤에서 LINQ 데이터 작업을 수행하는 데 필요한 인터페이스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c47d-101">Supports the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control and provides an interface for data-bound controls to perform LINQ data operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-102"><xref:System.Web.UI.WebControls.LinqDataSourceView> 클래스는 기본적으로 사용 하도록 데이터 바인딩된 컨트롤에서 및 페이지 코드에서 프로그래밍 가능한 개체로 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-102">The <xref:System.Web.UI.WebControls.LinqDataSourceView> class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.</span></span> <span data-ttu-id="1c47d-103">페이지 개발자가 일반적으로 사용 하는 <xref:System.Web.UI.WebControls.LinqDataSource> 데이터와 상호 작용을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-103">Page developers typically use the <xref:System.Web.UI.WebControls.LinqDataSource> control to interact with data.</span></span>  
  
 <span data-ttu-id="1c47d-104">ASP.NET 데이터 소스 컨트롤의 데이터를 데이터 원본 뷰 개체를 나타내는 하나 이상의 목록을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-104">ASP.NET data source controls contain one or more lists of data, represented by data source view objects.</span></span> <span data-ttu-id="1c47d-105"><xref:System.Web.UI.WebControls.LinqDataSourceView> 클래스 확장은 <xref:System.Web.UI.DataSourceView> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-105">The <xref:System.Web.UI.WebControls.LinqDataSourceView> class extends the <xref:System.Web.UI.DataSourceView> class.</span></span> <span data-ttu-id="1c47d-106">기능을 정의 <xref:System.Web.UI.WebControls.LinqDataSource> 제어 된 콘텐츠인지 연결, 및 데이터 소스 제어에 대 한 기본 데이터 기능을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-106">It defines the capabilities of the <xref:System.Web.UI.WebControls.LinqDataSource> control with which it is associated, and it implements the basic data functionality for the data source control.</span></span> <span data-ttu-id="1c47d-107"><xref:System.Web.UI.WebControls.LinqDataSourceView> 클래스가 구현 하는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A>, [업데이트](<xref:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject%2A>), [삽입](<xref:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject%2A>), 및 [삭제](<xref:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject%2A>) 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-107">The <xref:System.Web.UI.WebControls.LinqDataSourceView> class implements the <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A>, [Update](<xref:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject%2A>), [Insert](<xref:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject%2A>), and [Delete](<xref:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject%2A>) operations.</span></span> <span data-ttu-id="1c47d-108">또한 정렬, 필터링 및 설정 보기에 유지 되는 상태 관리 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-108">It also implements sorting, filtering, and managing settings that are kept in view state.</span></span>  
  
 <span data-ttu-id="1c47d-109">하지만 <xref:System.Web.UI.WebControls.LinqDataSourceView> 개체 페이지 개발자에 게 직접 노출 되지 않은, 다양 한 메서드와 속성을 통해 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-109">Although the <xref:System.Web.UI.WebControls.LinqDataSourceView> object is not directly exposed to page developers, many of its properties and methods can be accessed through the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="1c47d-110"><xref:System.Web.UI.WebControls.LinqDataSourceView> 제어는 다음과 같은 데이터 검색 메서드 및 이벤트 구현 및 페이지 개발자를 통해 연결 된 다른 호출자를 노출 <xref:System.Web.UI.WebControls.LinqDataSource> 제어:</span><span class="sxs-lookup"><span data-stu-id="1c47d-110">The <xref:System.Web.UI.WebControls.LinqDataSourceView> control implements the following data retrieval methods and events and exposes them to page developers and to other callers through the associated <xref:System.Web.UI.WebControls.LinqDataSource> control:</span></span>  
  
-   <span data-ttu-id="1c47d-111"><xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="1c47d-111">The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span>  
  
-   <span data-ttu-id="1c47d-112"><xref:System.Web.UI.WebControls.LinqDataSource.Selecting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-112">The <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span>  
  
-   <span data-ttu-id="1c47d-113"><xref:System.Web.UI.WebControls.LinqDataSource.Selected> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-113">The <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.</span></span>  
  
-   <span data-ttu-id="1c47d-114"><xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="1c47d-114">The <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method.</span></span>  
  
-   <span data-ttu-id="1c47d-115"><xref:System.Web.UI.WebControls.LinqDataSource.Updating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-115">The <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
-   <span data-ttu-id="1c47d-116"><xref:System.Web.UI.WebControls.LinqDataSource.Updated> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-116">The <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event.</span></span>  
  
-   <span data-ttu-id="1c47d-117"><xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="1c47d-117">The <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method.</span></span>  
  
-   <span data-ttu-id="1c47d-118"><xref:System.Web.UI.WebControls.LinqDataSource.Inserting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-118">The <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span>  
  
-   <span data-ttu-id="1c47d-119"><xref:System.Web.UI.WebControls.LinqDataSource.Inserted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-119">The <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span>  
  
-   <span data-ttu-id="1c47d-120"><xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="1c47d-120">The <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method.</span></span>  
  
-   <span data-ttu-id="1c47d-121"><xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-121">The <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span>  
  
-   <span data-ttu-id="1c47d-122"><xref:System.Web.UI.WebControls.LinqDataSource.Deleted> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-122">The <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event.</span></span>  
  
 <span data-ttu-id="1c47d-123">검색 하는 데이터를 정렬할 수는 <xref:System.Web.UI.WebControls.LinqDataSource> 추가 하 여 제어는 `OrderBy` 절.</span><span class="sxs-lookup"><span data-stu-id="1c47d-123">You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.LinqDataSource> control by adding an `OrderBy` clause.</span></span> <span data-ttu-id="1c47d-124">에 대 한 정렬 식을 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 설정 하 여 인스턴스는 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 의 속성은 <xref:System.Web.UI.DataSourceSelectArguments> 에 전달 되는 개체는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1c47d-124">You can provide a sort expression for the <xref:System.Web.UI.WebControls.LinqDataSourceView> instance by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> method.</span></span> <span data-ttu-id="1c47d-125">에 대 한 구문은 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 속성에 대 한 구문과 동일은 <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-125">The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c47d-126"><xref:System.Web.UI.WebControls.LinqDataSourceView> 구현 제어는 <xref:System.Web.UI.IStateManager> 인터페이스 및 사용 하 여 뷰 페이지 요청에 대해 해당 상태를 추적 하는 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-126">The <xref:System.Web.UI.WebControls.LinqDataSourceView> control implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests.</span></span> <span data-ttu-id="1c47d-127">구현에서 <xref:System.Web.UI.WebControls.QueryableDataSourceView.IsTrackingViewState%2A> 속성 및 <xref:System.Web.UI.WebControls.QueryableDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.QueryableDataSourceView.SaveViewState%2A>, 및 <xref:System.Web.UI.WebControls.QueryableDataSourceView.TrackViewState%2A> 컨트롤에 대 한 뷰 상태를 추적할 수 있도록 위한 메서드가 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-127">Implementations of the <xref:System.Web.UI.WebControls.QueryableDataSourceView.IsTrackingViewState%2A> property and the <xref:System.Web.UI.WebControls.QueryableDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.QueryableDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.QueryableDataSourceView.TrackViewState%2A> methods are provided to enable view-state tracking for the control.</span></span> <span data-ttu-id="1c47d-128">자세한 내용은 참조 [ASP.NET 상태 관리 개요](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-128">For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceView (System.Web.UI.WebControls.LinqDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As LinqDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceView(System::Web::UI::WebControls::LinqDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.LinqDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="1c47d-129">
            <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 개체와 연결된 데이터 소스 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-129">The data source control that the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object is associated with.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1c47d-130">소유하고 있는 데이터 소스 컨트롤의 범위 내에 있는 데이터 소스 뷰의 고유한 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-130">A unique name for the data source view within the scope of the data source control that owns it.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="1c47d-131">현재 <see cref="T:System.Web.HttpContext" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-131">The current <see cref="T:System.Web.HttpContext" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-132">지정된 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 컨트롤을 현재 뷰의 소유자로 설정하여 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-132">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class, setting the specified <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control as the owner of the current view.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-133"><xref:System.Web.UI.WebControls.LinqDataSourceView.%23ctor%2A> 생성자는 [LinqDataSource.GetView](<xref:System.Web.UI.WebControls.QueryableDataSource.GetView%2A>) 지정 된 데이터 원본 뷰의 새 인스턴스를 반환 하는 메서드 `name` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-133">The <xref:System.Web.UI.WebControls.LinqDataSourceView.%23ctor%2A> constructor is called by the [LinqDataSource.GetView](<xref:System.Web.UI.WebControls.QueryableDataSource.GetView%2A>) method to return a new instance of a data source view with the specified `name` parameter.</span></span> <span data-ttu-id="1c47d-134">하나의 <xref:System.Web.UI.WebControls.LinqDataSourceView> 개체에 연결 된는 <xref:System.Web.UI.WebControls.LinqDataSource> 한 번에 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-134">Only one <xref:System.Web.UI.WebControls.LinqDataSourceView> object is associated with a <xref:System.Web.UI.WebControls.LinqDataSource> control at a time.</span></span> <span data-ttu-id="1c47d-135">이름에서 <xref:System.Web.UI.WebControls.LinqDataSourceView> 개체는 항상 `DefaultView`이 명명 언제나 하지만는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어 하지 않습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-135">The name of the <xref:System.Web.UI.WebControls.LinqDataSourceView> object is always `DefaultView`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.LinqDataSource> control, not by the <xref:System.Web.UI.WebControls.LinqDataSourceView> control.</span></span> <span data-ttu-id="1c47d-136">재정의할 수 있습니다는 [LinqDataSource.GetView](<xref:System.Web.UI.WebControls.QueryableDataSource.GetView%2A>) 메서드를 다른 명명 규칙을 사용 하는 뷰를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-136">You can override the [LinqDataSource.GetView](<xref:System.Web.UI.WebControls.QueryableDataSource.GetView%2A>) method to support views that use a different naming convention.</span></span>  
  
 <span data-ttu-id="1c47d-137"><xref:System.Web.HttpContext> 전달 되는 인스턴스는 `context` 액세스 매개 변수 컬렉션에는 데이터 원본 뷰에서 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-137">The <xref:System.Web.HttpContext> instance that is passed by the `context` parameter is used by the data source view to access parameter collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-138">현재 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 개체가 삭제 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-138">Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the delete operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-139">작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-139">
              <see langword="true" /> if the operation is supported; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c47d-140">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-140">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-141"><xref:System.Web.UI.WebControls.LinqDataSourceView.CanDelete%2A> 속성에서 반환 `true` 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-141">The <xref:System.Web.UI.WebControls.LinqDataSourceView.CanDelete%2A> property returns `true` if the <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> property is set to `true`.</span></span> <span data-ttu-id="1c47d-142">그러나 연결 된 데이터 속성 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 삭제 작업이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-142">However, a delete operation can still fail if the associated data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-143">현재 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 개체가 삽입 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-143">Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the insert operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-144">작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-144">
              <see langword="true" /> if the operation is supported; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c47d-145">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-145">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-146"><xref:System.Web.UI.WebControls.LinqDataSourceView.CanInsert%2A> 속성에서 반환 `true` 경우는 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> 속성이 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-146">The <xref:System.Web.UI.WebControls.LinqDataSourceView.CanInsert%2A> property returns `true` if the <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> property is set to `true`.</span></span> <span data-ttu-id="1c47d-147">그러나 연결 된 데이터 속성 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 삽입 작업이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-147">However, an insert operation can still fail if the associated data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-148">현재 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 개체가 검색된 데이터의 페이징을 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-148">Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports paging of retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-149">
            <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-149">
              <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-150"><xref:System.Web.UI.WebControls.LinqDataSourceView> 데이터 표시 컨트롤이 페이징을 사용 하지 않는 경우에 항상 개체 페이징을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-150">The <xref:System.Web.UI.WebControls.LinqDataSourceView> object always supports paging even if the data presentation control does not use paging.</span></span> <span data-ttu-id="1c47d-151">때는 [LinqDataSourceView.AutoPage](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage%2A>) 속성이 `false`, 직접에 데이터를 페이징할 수는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-151">When the [LinqDataSourceView.AutoPage](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage%2A>) property is set to `false`, you can manually page the data in the <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-152">현재 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 개체가 데이터와 총 데이터 행 수에 대한 검색을 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-152">Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports retrieving the total number of data rows, in addition to retrieving the data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-153">
            <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-153">
              <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-154">데이터 바인딩된 컨트롤 페이징 컨트롤을 렌더링 하는 방법을 결정 하기 위해 페이징할 수 있는 행의 총 수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-154">Data-bound controls use the total number of rows that can be paged to determine how to render paging controls.</span></span> <span data-ttu-id="1c47d-155">숫자 페이저 단추의에서 렌더링할 수를 확인 하려면이 값은 사용 하는 예를 들어 한 <xref:System.Web.UI.WebControls.GridView> 호출기를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-155">For example, this value is used to determine how many numeric pager buttons to render in a <xref:System.Web.UI.WebControls.GridView> control pager.</span></span> <span data-ttu-id="1c47d-156">경우는 [LinqDataSourceView.AutoPage](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage%2A>) 속성이 `false`, 총 행 수를 수동으로 설정 해야는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-156">If the [LinqDataSourceView.AutoPage](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage%2A>) property is set to `false`, you must manually set the total row count in the <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-157">현재 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 개체가 검색된 데이터의 정렬된 뷰를 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-157">Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports a sorted view of the retrieved data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-158">
            <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-158">
              <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-159"><xref:System.Web.UI.WebControls.LinqDataSourceView> 개체는 항상 데이터 표시 컨트롤이 정렬을 사용 하지 않는 경우에 정렬을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-159">The <xref:System.Web.UI.WebControls.LinqDataSourceView> object always supports sorting even if data presentation control does not use sorting.</span></span> <span data-ttu-id="1c47d-160">때는 [LinqDataSourceView.AutoSort](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoSort%2A>) 속성이 `false`, 수동으로의 데이터를 정렬할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-160">When the [LinqDataSourceView.AutoSort](<xref:System.Web.UI.WebControls.QueryableDataSourceView.AutoSort%2A>) property is set to `false`, you can manually sort the data in the <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-161">현재 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 개체가 업데이트 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-161">Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-162">작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-162">
              <see langword="true" /> if the operation is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-163"><xref:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate%2A> 속성의 값을 반환 된 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-163">The <xref:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate%2A> property returns the value of the <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> property.</span></span> <span data-ttu-id="1c47d-164">그러나 연결 된 데이터 속성 설정 되지 않은 또는 올바르게 설정 되지 않은 경우 업데이트 작업이 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-164">However, an update operation can still fail if the associated data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ ContextCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-165">컨텍스트 형식 개체의 인스턴스가 만들어진 후에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-165">Occurs after an instance of the context type object has been created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-166">데이터 컨텍스트 개체의 유효성을 검사 하려는 경우 또는 컨텍스트를 만드는 동안 throw 된 예외를 처리 하려는 경우이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-166">Handle this event if you want to validate the data context object, or if you want to handle exceptions that were thrown during the context creation.</span></span> <span data-ttu-id="1c47d-167">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated?displayProperty=nameWithType> 이벤트를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-167">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of LinqDataSourceContextEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^&gt; ^ ContextCreating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-168">컨텍스트 형식 개체의 인스턴스가 만들어지기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-168">Occurs before an instance of the context type object is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-169">수동으로 데이터 컨텍스트 개체를 생성 하려는 경우이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-169">Handle this event if you want to manually construct the data context object.</span></span> <span data-ttu-id="1c47d-170">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating?displayProperty=nameWithType> 이벤트를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-170">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of LinqDataSourceDisposeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-171">컨텍스트 형식 개체를 삭제하기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-171">Occurs before disposing the context type object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-172">에 컨텍스트를 삭제 하려면 먼저 액세스 하거나 개체를 제거 하기 전에 개체에 지정 된 정리를 수행 하려면이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-172">Handle this event to access the context before disposal, or to perform clean-up that is specific to the object before the object is destroyed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public override Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ContextType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-173">데이터 컨텍스트 클래스의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-173">Gets the type of the data context class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-174">
            <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" /> 속성에 지정된 데이터 컨텍스트 클래스에 연결된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-174">The type that is associated with the data context class specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public override string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-175">
            <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> 속성에 지정된 필드 또는 속성이 들어 있는 데이터 컨텍스트 클래스의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-175">Gets or sets the name of the data context class that contains the field or property specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-176">데이터 컨텍스트 클래스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-176">The name of the data context class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-177">설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-177">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, that value is also set for the <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceView> control.</span></span> <span data-ttu-id="1c47d-178">자세한 내용은 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A?displayProperty=nameWithType> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-178">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="1c47d-179">하는 동안 쿼리 데이터를 제공 하지 않으면이 속성을 지정 해야 합니다는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> 이벤트 동안 컨텍스트를 수동으로 만들지 않으면 또는 <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-179">This property must be specified unless the query data is provided during the <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> event, or unless the context is created manually during the <xref:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-180">데이터 컨텍스트 형식의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-180">Creates an instance of the data context type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected virtual object CreateContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContext (contextType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateContext(Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="1c47d-181">만들 데이터 컨텍스트의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-181">The type of the data context to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-182">데이터 컨텍스트 형식의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-182">Creates an instance of the data context type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-183">데이터 컨텍스트 형식의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-183">An instance of the data context type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.ContextDataSourceContextData CreateContext (System.Web.UI.DataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.ContextDataSourceContextData CreateContext(valuetype System.Web.UI.DataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContext (operation As DataSourceOperation) As ContextDataSourceContextData" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::ContextDataSourceContextData ^ CreateContext(System::Web::UI::DataSourceOperation operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContextDataSourceContextData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.Web.UI.DataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="operation">
          <span data-ttu-id="1c47d-184">사용할 데이터 소스 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-184">The data source operation to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-185">지정된 데이터 소스 작업을 사용하여 데이터 컨텍스트 형식의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-185">Creates an instance of the data context type using the specified data source operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-186">데이터 컨텍스트의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-186">An instance of the data context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-187">삭제 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-187">Occurs when a delete operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-188">삭제 작업 중에 throw 된 예외를 catch 하거나 삭제 작업이 완료 된 후의 출력 매개 변수 값을 확인 하려면이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-188">Handle this event to catch exceptions that were thrown during the delete operation or to examine the values of output parameters after a delete operation has finished.</span></span> <span data-ttu-id="1c47d-189">출력 매개 변수를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-189">You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="DeleteDataObject">
      <MemberSignature Language="C#" Value="protected virtual void DeleteDataObject (object dataContext, object table, object oldDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteDataObject(object dataContext, object table, object oldDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DeleteDataObject (dataContext As Object, table As Object, oldDataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DeleteDataObject(System::Object ^ dataContext, System::Object ^ table, System::Object ^ oldDataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="oldDataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">
          <span data-ttu-id="1c47d-190">삭제할 개체의 데이터 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-190">The data context of the object to delete.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="1c47d-191">삭제할 개체가 들어 있는 테이블입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-191">The table that contains the object to delete.</span>
          </span>
        </param>
        <param name="oldDataObject">
          <span data-ttu-id="1c47d-192">삭제할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-192">The object to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-193">테이블에서 데이터 개체를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-193">Deletes a data object from a table.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="protected override int DeleteObject (object oldEntity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 DeleteObject(object oldEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DeleteObject (oldEntity As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int DeleteObject(System::Object ^ oldEntity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldEntity">
          <span data-ttu-id="1c47d-194">삭제할 데이터 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-194">The data object to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-195">테이블에서 데이터 개체를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-195">Deletes a data object from a table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-196">삭제된 데이터 개체의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-196">The number of data objects that were deleted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of LinqDataSourceDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^&gt; ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-197">삭제 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-197">Occurs before a delete operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-198">처리는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Deleting> 을 삭제, 삭제 작업을 하기 전에 값을 변경 또는 삭제 작업을 취소 하는 개체를 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-198">Handle the <xref:System.Web.UI.WebControls.LinqDataSourceView.Deleting> event to validate the object to be deleted, to change a value before the delete operation, or to cancel the delete operation.</span></span>  
  
 <span data-ttu-id="1c47d-199">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting?displayProperty=nameWithType> 이벤트를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-199">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="DisposeContext">
      <MemberSignature Language="C#" Value="protected override void DisposeContext (object dataContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DisposeContext(object dataContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DisposeContext (dataContext As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DisposeContext(System::Object ^ dataContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">
          <span data-ttu-id="1c47d-200">삭제할 데이터 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-200">The data context to dispose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-201">데이터 컨텍스트를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-201">Disposes the data context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-202">데이터 소스 뷰에서 행 삭제가 지원되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-202">Gets or sets a value that indicates whether the data source view supports deleting rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-203">데이터 소스 뷰에서 행 삭제가 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-203">
              <see langword="true" /> if the data source view supports deleting rows; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c47d-204">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-204">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-205">설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-205">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, that value is also set for the <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceView> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-206">데이터 소스 뷰에서 새 행 추가가 지원되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-206">Gets or sets a value that indicates whether the data source view supports adding new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-207">뷰에서 행 삽입이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-207">
              <see langword="true" /> if the view supports inserting rows; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c47d-208">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-208">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-209">설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-209">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, that value is also set for the <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceView> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableObjectTracking">
      <MemberSignature Language="C#" Value="public bool EnableObjectTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableObjectTracking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableObjectTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableObjectTracking { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-210">데이터 컨텍스트 개체에 대한 변경 내용이 추적되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-210">Gets or sets a value that indicates whether changes to the data-context object are tracked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-211">데이터 컨텍스트 개체의 변경 내용이 추적될 경우 <see langword="true" />이고, 그렇지 않을 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-211">
              <see langword="true" /> if the data-context object is tracked for changes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c47d-212">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-212">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-213">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A?displayProperty=nameWithType> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-213">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-214">데이터 소스 뷰에서 행 업데이트가 지원되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-214">Gets or sets a value that indicates whether the data source view supports updating rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-215">뷰에서 행 업데이트가 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-215">
              <see langword="true" /> if the view supports updating rows; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c47d-216">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-216">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-217">설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-217">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, that value is also set for the <xref:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceView> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="1c47d-218">삭제할 레코드의 행 키 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-218">The row key values for the records to be deleted.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="1c47d-219">데이터 충돌을 감지하기 위해 계산하는 행 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-219">The row values that are evaluated to detect data conflicts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-220">지정된 키 및 이전 값을 사용하여 삭제 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-220">Performs a delete operation by using the specified keys and old values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-221">내부 데이터 소스에서 삭제된 개체 또는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-221">The number of objects or rows that were deleted from the underlying data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-222">통해 데이터를 삭제 하는 방법에 대 한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource> 제어, 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Delete%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%29> 의 메서드는 <xref:System.Web.UI.WebControls.LinqDataSource> 클래스.</span><span class="sxs-lookup"><span data-stu-id="1c47d-222">For information about how to delete data through a <xref:System.Web.UI.WebControls.LinqDataSource> control, see the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%29> method of the <xref:System.Web.UI.WebControls.LinqDataSource> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="1c47d-223">데이터 소스에 삽입할 행 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-223">The row values to insert into the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-224">컬렉션에 지정된 값을 사용하여 삽입 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-224">Performs an insert operation by using the values specified in a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-225">데이터 소스에 삽입된 개체 또는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-225">The number of objects or rows that were inserted into the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-226">통해 데이터를 삽입 하는 방법에 대 한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource> 제어, 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Insert%28System.Collections.IDictionary%29> 의 메서드는 <xref:System.Web.UI.WebControls.LinqDataSource> 클래스.</span><span class="sxs-lookup"><span data-stu-id="1c47d-226">For information about how to insert data through a <xref:System.Web.UI.WebControls.LinqDataSource> control, see the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%28System.Collections.IDictionary%29> method of the <xref:System.Web.UI.WebControls.LinqDataSource> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="1c47d-227">기본 데이터 검색 이상의 데이터 작업을 요청하는 데 사용되는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-227">An object that is used to request operations on the data beyond basic data retrieval.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-228">데이터 검색 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-228">Performs a data retrieval operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-229">데이터 개체 또는 행의 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-229">A list of data objects or rows.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="1c47d-230">업데이트할 레코드의 행 키 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-230">The row key values for the records to update.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="1c47d-231">데이터 소스에서 업데이트할 행 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-231">The row values to update in the data source.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="1c47d-232">데이터 충돌을 감지하기 위해 계산하는 행 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-232">The row values that are evaluated in order to detect data conflicts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-233">업데이트 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-233">Performs an update operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-234">데이터 소스에서 업데이트된 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-234">The number of rows that were updated in the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-235">통해 데이터를 업데이트 하는 방법에 대 한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource> 제어, 참조는 <xref:System.Web.UI.WebControls.LinqDataSource.Update%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%2CSystem.Collections.IDictionary%29> 의 메서드는 <xref:System.Web.UI.WebControls.LinqDataSource> 클래스.</span><span class="sxs-lookup"><span data-stu-id="1c47d-235">For information about how to update data through a <xref:System.Web.UI.WebControls.LinqDataSource> control, see the <xref:System.Web.UI.WebControls.LinqDataSource.Update%28System.Collections.IDictionary%2CSystem.Collections.IDictionary%2CSystem.Collections.IDictionary%29> method of the <xref:System.Web.UI.WebControls.LinqDataSource> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="GetSource">
      <MemberSignature Language="C#" Value="protected override object GetSource (System.Web.UI.WebControls.QueryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetSource(class System.Web.UI.WebControls.QueryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSource (context As QueryContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetSource(System::Web::UI::WebControls::QueryContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.UI.WebControls.QueryContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="1c47d-236">쿼리를 적용할 데이터 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-236">The data context to apply the query to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-237">쿼리를 적용할 데이터 소스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-237">Returns the data source to apply a query to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-238">쿼리를 적용할 데이터 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-238">The data source to apply the query to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableMemberInfo">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo GetTableMemberInfo (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo GetTableMemberInfo(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTableMemberInfo (contextType As Type) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ GetTableMemberInfo(Type ^ contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="1c47d-239">데이터 컨텍스트 클래스를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-239">An object that represents the data context class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-240">데이터 컬렉션에 대한 메타데이터를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-240">Retrieves metadata about the data collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-241">데이터 컬렉션에 대한 형식 메타데이터가 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-241">An object that contains type metadata for the data collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleValidationErrors">
      <MemberSignature Language="C#" Value="protected override void HandleValidationErrors (System.Collections.Generic.IDictionary&lt;string,Exception&gt; errors, System.Web.UI.DataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleValidationErrors(class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; errors, valuetype System.Web.UI.DataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleValidationErrors (errors As IDictionary(Of String, Exception), operation As DataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleValidationErrors(System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ errors, System::Web::UI::DataSourceOperation operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;" />
        <Parameter Name="operation" Type="System.Web.UI.DataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="errors">
          <span data-ttu-id="1c47d-242">발생한 시스템 생성 필드별 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-242">The system-generated, field-specific exceptions that occurred.</span>
          </span>
        </param>
        <param name="operation">
          <span data-ttu-id="1c47d-243">예외를 발생시킨 데이터 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-243">The data operation that caused the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-244">데이터 개체가 생성되는 동안 데이터 작업이 실패할 경우 발생하는 모든 예외를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-244">Handles any exceptions that occur when a data operation fails while a data object is being created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertDataObject">
      <MemberSignature Language="C#" Value="protected virtual void InsertDataObject (object dataContext, object table, object newDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertDataObject(object dataContext, object table, object newDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertDataObject (dataContext As Object, table As Object, newDataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertDataObject(System::Object ^ dataContext, System::Object ^ table, System::Object ^ newDataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="newDataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">
          <span data-ttu-id="1c47d-245">개체의 데이터 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-245">The data context of the object.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="1c47d-246">데이터가 삽입되는 테이블입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-246">The table into which the data is inserted.</span>
          </span>
        </param>
        <param name="newDataObject">
          <span data-ttu-id="1c47d-247">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-247">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-248">데이터 개체를 테이블에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-248">Inserts a data object into a table.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-249">삽입 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-249">Occurs when an insert operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-250">삽입 작업 중에 throw 된 예외를 catch 하거나 삽입 작업이 완료 된 후에 값을 확인 하려면이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-250">Handle this event to catch exceptions that were thrown during the insert operation or to examine the values after an insert operation has completed.</span></span> <span data-ttu-id="1c47d-251">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted?displayProperty=nameWithType> 이벤트를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-251">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of LinqDataSourceInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^&gt; ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-252">삽입 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-252">Occurs before an insert operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-253">처리는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Inserting> 을 삽입할 수 삽입 작업을 하기 전에 값을 변경 하려면 하거나 삽입 작업을 취소 하는 개체를 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-253">Handle the <xref:System.Web.UI.WebControls.LinqDataSourceView.Inserting> event to validate the object to be inserted, to change a value before the insert operation, or to cancel the insert operation.</span></span> <span data-ttu-id="1c47d-254">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.Inserting?displayProperty=nameWithType> 이벤트를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-254">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinqDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="InsertObject">
      <MemberSignature Language="C#" Value="protected override int InsertObject (object newEntity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 InsertObject(object newEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InsertObject (newEntity As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int InsertObject(System::Object ^ newEntity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newEntity">
          <span data-ttu-id="1c47d-255">삽입할 데이터 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-255">The data object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-256">데이터 개체를 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 개체에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-256">Inserts a data object into a <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-257">데이터 소스 뷰에 삽입된 개체의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-257">The number of objects that were inserted into the data source view.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnContextCreated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextCreated(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextCreated (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextCreated(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-258">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-258">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-259">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-259">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" /> event</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnContextCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnContextCreating (System.Web.UI.WebControls.LinqDataSourceContextEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextCreating(class System.Web.UI.WebControls.LinqDataSourceContextEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextCreating (e As LinqDataSourceContextEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextCreating(System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceContextEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-260">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-260">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-261">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-261">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnContextDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnContextDisposing (System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextDisposing(class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextDisposing (e As LinqDataSourceDisposeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextDisposing(System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-262">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-262">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-263">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-263">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-264">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-264">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-265">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-265">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-266">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-266">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-267">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-267">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-268"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-268">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-269">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-269">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-270">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-270">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As LinqDataSourceDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-271">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-271">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-272">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-272">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-273">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-273">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-274">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-274">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-275"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-275">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-276">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-276">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-277">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-277">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" /> method in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="protected virtual void OnException (System.Web.DynamicData.DynamicValidatorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnException(class System.Web.DynamicData.DynamicValidatorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnException (e As DynamicValidatorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnException(System::Web::DynamicData::DynamicValidatorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.DynamicData.DynamicValidatorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-278">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-278">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-279">데이터 작업이 실패하면 <see cref="E:System.Web.DynamicData.IDynamicDataSource.Exception" /> 이벤트가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-279">Raises the <see cref="E:System.Web.DynamicData.IDynamicDataSource.Exception" /> event when a data operation fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-280">동적 데이터 프레임 워크를 사용 하 여는 <xref:System.Web.UI.WebControls.LinqDataSourceView.OnException%2A> 데이터를 업데이트할 때 유효성 검사 예외를 처리 하는 이벤트 처리기 또는 데이터를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-280">The dynamic data framework uses the <xref:System.Web.UI.WebControls.LinqDataSourceView.OnException%2A> event handler to handle validation exceptions when updating data or inserting data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-281">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-281">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-282">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" /> 컨트롤이 삽입 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-282">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed an insert operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-283">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-283">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-284">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-284">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-285"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnInserted%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-285">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnInserted%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-286">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-286">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-287">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-287">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.LinqDataSourceInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As LinqDataSourceInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-288">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-288">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-289">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-289">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-290">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-290">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-291">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-291">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-292"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnInserting%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-292">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnInserting%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-293">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-293">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-294">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-294">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" /> method in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-295">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-295">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-296">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" /> 컨트롤이 데이터 검색 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-296">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed a data retrieval operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-297">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-297">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-298">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-298">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-299"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnSelected%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-299">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnSelected%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-300">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-300">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-301">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-301">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.LinqDataSourceSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As LinqDataSourceSelectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-302">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-302">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-303">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" /> 컨트롤이 데이터 검색 작업을 수행하기 전에 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-303">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control performs a data-retrieval operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-304">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-304">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-305">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-305">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-306"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-306">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-307">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-307">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-308">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-308">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" /> method in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As LinqDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-309">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-309">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-310">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" /> 컨트롤이 업데이트 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-310">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed an update operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-311">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-311">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-312">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-312">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-313"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-313">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-314">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-314">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-315">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-315">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As LinqDataSourceUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1c47d-316">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-316">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-317">
            <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" /> 컨트롤이 업데이트 작업을 수행하기 전에 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-317">Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control performs an update operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-318">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-318">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1c47d-319">자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-319">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="1c47d-320"><xref:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating%2A> 메서드도 사용 하면 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-320">The <xref:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1c47d-321">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-321">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1c47d-322">재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" /> 파생된 클래스에서 호출 하 고 있는지 확인은 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" /> 메서드는 기본 클래스 등록 된 대리자가 이벤트를 받도록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="1c47d-322">When you override the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" /> in a derived class, make sure that you call the <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)" /> method for the base class so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResetDataObject">
      <MemberSignature Language="C#" Value="protected virtual void ResetDataObject (object table, object dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResetDataObject(object table, object dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ResetDataObject (table As Object, dataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ResetDataObject(System::Object ^ table, System::Object ^ dataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="dataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="1c47d-323">데이터가 들어 있는 테이블입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-323">The table that contains data.</span>
          </span>
        </param>
        <param name="dataObject">
          <span data-ttu-id="1c47d-324">데이터의 원래 상태가 들어 있는 엔터티입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-324">The entity that contains the original state of the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-325">데이터가 들어 있는 개체를 원래 상태로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-325">Resets the object that contains data to its original state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="1c47d-326">기본 데이터 검색 이상의 데이터 작업을 요청하는 데 사용되는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-326">An object that is used to request operations on the data beyond basic data retrieval.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-327">데이터 소스에서 데이터를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-327">Retrieves data from the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-328">데이터 행의 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-328">A list of data rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-329"><xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> 메서드 호출의 <xref:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29> 전달 하는 메서드는 `selectArgs` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-329">The <xref:System.Web.UI.WebControls.LinqDataSourceView.Select%2A> method calls the <xref:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect%28System.Web.UI.DataSourceSelectArguments%29> method, passing the `selectArgs` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-330">데이터 검색 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-330">Occurs when a data-retrieval operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-331">선택 작업 동안 throw 된 예외를 catch 하거나 작업이 완료 된 후에 값을 확인 하려면이 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-331">Handle this event to catch exceptions that were thrown during the select operation or to examine the values after the operation has completed.</span></span> <span data-ttu-id="1c47d-332">값을 검색할 수는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-332">You can retrieve the values from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of LinqDataSourceSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^&gt; ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-333">데이터 검색 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-333">Occurs before a data-retrieval operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-334">처리는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> 데이터 검색 작업 중 사용 되는 값을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-334">Handle the <xref:System.Web.UI.WebControls.LinqDataSourceView.Selecting> event to change values that are used during the data retrieval operation.</span></span> <span data-ttu-id="1c47d-335">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting?displayProperty=nameWithType> 이벤트를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-335">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" />
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValues">
      <MemberSignature Language="C#" Value="protected override void StoreOriginalValues (System.Collections.IList results);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StoreOriginalValues(class System.Collections.IList results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StoreOriginalValues (results As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StoreOriginalValues(System::Collections::IList ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="1c47d-336">
            <see langword="Select" /> 작업의 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-336">The result of the <see langword="Select" /> operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-337">
            <see langword="Select" /> 작업의 원래 값을 컨트롤의 뷰 상태에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-337">Stores the original values from the <see langword="Select" /> operation in the control's view state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-338">삭제 또는 업데이트 작업을 활성화한 경우 선택 작업의 원래 값이 뷰 상태에 저장됨을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-338">Gets or sets a value that indicates that original values from the select operation will be stored in view state when delete or update operations are enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-339">원래 값이 뷰 상태에 저장되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-339">
              <see langword="true" /> if original values are saved in view state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1c47d-340">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-340">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-341">설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-341">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, that value is also set for the <xref:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceView> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-342">데이터 컬렉션이 포함된 데이터 컨텍스트 클래스의 속성 또는 필드 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-342">Gets or sets the name of a property or field of the data context class that contains the data collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c47d-343">데이터 컬렉션을 나타내는 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-343">The name of the property that represents the data collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-344">설정 하는 경우는 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSource> 제어에 대 한 값도 설정 되어 있는 <xref:System.Web.UI.WebControls.LinqDataSourceView.TableName%2A> 속성의는 <xref:System.Web.UI.WebControls.LinqDataSourceView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-344">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, that value is also set for the <xref:System.Web.UI.WebControls.LinqDataSourceView.TableName%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceView> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-345">업데이트 작업이 완료되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-345">Occurs when an update operation has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-346">처리는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Updated> 이벤트 업데이트 작업이 완료 된 후의 출력 매개 변수 값 확인 또는 업데이트 작업 중에 throw 된 예외를 catch 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-346">Handle the <xref:System.Web.UI.WebControls.LinqDataSourceView.Updated> event to examine the values of output parameters after an update operation has finished or to catch exceptions that were thrown during the update operation.</span></span> <span data-ttu-id="1c47d-347">출력 매개 변수는 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-347">The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDataObject">
      <MemberSignature Language="C#" Value="protected virtual void UpdateDataObject (object dataContext, object table, object oldDataObject, object newDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateDataObject(object dataContext, object table, object oldDataObject, object newDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateDataObject (dataContext As Object, table As Object, oldDataObject As Object, newDataObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UpdateDataObject(System::Object ^ dataContext, System::Object ^ table, System::Object ^ oldDataObject, System::Object ^ newDataObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContext" Type="System.Object" />
        <Parameter Name="table" Type="System.Object" />
        <Parameter Name="oldDataObject" Type="System.Object" />
        <Parameter Name="newDataObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataContext">
          <span data-ttu-id="1c47d-348">업데이트할 데이터 컨텍스트 클래스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-348">The data context class to update.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="1c47d-349">업데이트할 개체가 들어 있는 데이터 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-349">The data collection that contains the object to update.</span>
          </span>
        </param>
        <param name="oldDataObject">
          <span data-ttu-id="1c47d-350">업데이트할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-350">The object to be updated.</span>
          </span>
        </param>
        <param name="newDataObject">
          <span data-ttu-id="1c47d-351">업데이트된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-351">The updated object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-352">데이터 개체를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-352">Updates a data object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="protected override int UpdateObject (object oldEntity, object newEntity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 UpdateObject(object oldEntity, object newEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function UpdateObject (oldEntity As Object, newEntity As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int UpdateObject(System::Object ^ oldEntity, System::Object ^ newEntity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldEntity" Type="System.Object" />
        <Parameter Name="newEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldEntity">
          <span data-ttu-id="1c47d-353">업데이트할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-353">The object to update.</span>
          </span>
        </param>
        <param name="newEntity">
          <span data-ttu-id="1c47d-354">업데이트에 사용할 새 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-354">The new object to use for the update.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-355">데이터 개체를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-355">Updates a data object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c47d-356">업데이트에 성공하면 0이고, 업데이트에 실패하면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-356">0 (zero) if the update was successful, or -1 if the update failed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of LinqDataSourceUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^&gt; ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-357">업데이트 작업 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-357">Occurs before an update operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-358">처리는 <xref:System.Web.UI.WebControls.LinqDataSourceView.Updating> 을 업데이트할 수 업데이트 작업 전의 값을 변경 하거나 업데이트 작업을 취소 하는 개체를 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-358">Handle the <xref:System.Web.UI.WebControls.LinqDataSourceView.Updating> event to validate the object to be updated, to change a value before the update operation, or to cancel the update operation.</span></span> <span data-ttu-id="1c47d-359">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.Updating?displayProperty=nameWithType> 이벤트를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-359">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.Updating?displayProperty=nameWithType> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="ValidateContextType">
      <MemberSignature Language="C#" Value="protected virtual void ValidateContextType (Type contextType, bool selecting);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateContextType(class System.Type contextType, bool selecting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateContextType (contextType As Type, selecting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateContextType(Type ^ contextType, bool selecting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="selecting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <span data-ttu-id="1c47d-360">유효성을 검사할 데이터 컨텍스트 클래스의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-360">The type of the data context class to validate.</span>
          </span>
        </param>
        <param name="selecting">
          <span data-ttu-id="1c47d-361">선택 작업이 시작될 때 메서드가 호출되었는지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-361">Specifies whether the method has been called when a select operation starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-362">데이터 컨텍스트 클래스가 <see cref="T:System.Data.Linq.DataContext" />에서 파생되었는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-362">Checks whether the data context class derives from <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-363">에 지정 된 클래스는 <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> 속성에서 파생 되어야 합니다는 <xref:System.Data.Linq.DataContext> 사용 자동 삽입, 업데이트 및 삭제 작업을 순서 대로 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-363">The class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from the <xref:System.Data.Linq.DataContext> class in order to enable automatic insert, update, and delete operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c47d-364">삽입, 업데이트 또는 삭제 작업이 수행되고 있고 데이터 컨텍스트 클래스가 <see cref="T:System.Data.Linq.DataContext" />에서 파생되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-364">An insert, update, or delete operation is being performed and the data context class does not derive from <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateDeleteSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateDeleteSupported (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateDeleteSupported(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateDeleteSupported (keys As IDictionary, oldValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateDeleteSupported(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="1c47d-365">삭제할 데이터 레코드에 대한 키 값 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-365">A dictionary of key values for the data records to delete.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="1c47d-366">삭제할 행 값이 들어 있는 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-366">A dictionary that contains row values to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-367">삭제 작업을 수행하기 위한 조건이 충족되었는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-367">Validates that the conditions exist to perform a delete operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-368">데이터를 삭제할 수 없으므로 때는 <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> 속성 또는 <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> 속성 값이 아닌 다른 포함 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-368">You cannot delete data when the <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> property or the <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> property contains a value other than `null`.</span></span> <span data-ttu-id="1c47d-369">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A?displayProperty=nameWithType> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-369">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c47d-370">
            <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy" /> 또는 <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew" /> 속성에 값이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-370">The <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy" /> or <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew" /> property contains a value.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1c47d-371">
            <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" />가 <see langword="false" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-371">
              <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" /> is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateEditSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateEditSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateEditSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateEditSupported ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateEditSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c47d-372">편집 작업을 수행하기 위한 조건이 충족되었는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-372">Validates that the conditions exist to perform an edit operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c47d-373">유효성 검사가 실패되거나 취소되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-373">The validation failed or was canceled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateInsertSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateInsertSupported (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateInsertSupported(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateInsertSupported (values As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateInsertSupported(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="1c47d-374">삽입할 행 값이 들어 있는 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-374">A dictionary that contains row values to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-375">삽입 작업을 수행하기 위한 조건이 충족되었는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-375">Validates that the conditions exist to perform an insert operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-376">데이터를 삽입할 수 없을 때는 <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> 속성 또는 <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> 속성 값이 아닌 다른 포함 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-376">You cannot insert data when the <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> property or the <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> property contains a value other than `null`.</span></span> <span data-ttu-id="1c47d-377">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A?displayProperty=nameWithType> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-377">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c47d-378">
            <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy" /> 또는 <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew" /> 속성에 값이 있거나 <paramref name="values" /> 매개 변수에 항목이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-378">The <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy" /> or <see cref="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew" /> property contains a value or the <paramref name="values" /> parameter does not contain any items.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1c47d-379">
            <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" />가 <see langword="false" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-379">
              <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" /> is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateTableType">
      <MemberSignature Language="C#" Value="protected virtual void ValidateTableType (Type tableType, bool selecting);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateTableType(class System.Type tableType, bool selecting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateTableType (tableType As Type, selecting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateTableType(Type ^ tableType, bool selecting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableType" Type="System.Type" />
        <Parameter Name="selecting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tableType">
          <span data-ttu-id="1c47d-380">유효성을 검사할 테이블 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-380">The table type to validate.</span>
          </span>
        </param>
        <param name="selecting">
          <span data-ttu-id="1c47d-381">선택 작업이 시작될 때 메서드가 호출되었는지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-381">Specifies whether the method has been called when a select operation starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-382">데이터 테이블을 나타내는 클래스의 형식이 제네릭 형식인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-382">Checks whether the type of the class that represents the data table is a generic type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c47d-383">테이블 형식이 제네릭 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-383">The type of the table is not generic.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUpdateSupported">
      <MemberSignature Language="C#" Value="protected virtual void ValidateUpdateSupported (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateUpdateSupported(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateUpdateSupported (keys As IDictionary, values As IDictionary, oldValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateUpdateSupported(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="1c47d-384">업데이트할 데이터 레코드에 대한 키 값 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-384">A dictionary of key values for the data records to update.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="1c47d-385">업데이트 작업에 사용할 새 행 값이 들어 있는 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-385">A dictionary that contains new row values for the update operation.</span>
          </span>
        </param>
        <param name="oldValues">
          <span data-ttu-id="1c47d-386">업데이트 작업에 사용할 기존 행 값이 들어 있는 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-386">A dictionary that contains the old row values for the update operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c47d-387">업데이트 작업을 수행하기 위한 조건이 충족되었는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-387">Validates that the conditions exist to perform an update operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c47d-388">데이터를 업데이트할 수 없을 때는 <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> 속성 또는 <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> 속성 값이 아닌 다른 포함 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1c47d-388">You cannot update data when the <xref:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy%2A> property or the <xref:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew%2A> property contains a value other than `null`.</span></span> <span data-ttu-id="1c47d-389">자세한 내용은 <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A?displayProperty=nameWithType> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1c47d-389">For more information, see the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1c47d-390">업데이트 작업이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c47d-390">The update operation is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>