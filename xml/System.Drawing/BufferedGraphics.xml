<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8eb376f4bda7764bd0c534a86c20b084960c4a7d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0307b-101">이중 버퍼링을 위한 그래픽 버퍼를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0307b-101">Provides a graphics buffer for double buffering.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0307b-102"><xref:System.Drawing.BufferedGraphics> 클래스를 사용 하면 해당 그래픽에 대 한 사용자 지정 이중 버퍼링을 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="0307b-103">버퍼에 쓸 출력 장치에 해당 콘텐츠를 렌더링 하는 데 사용할 수 있는 메서드를 제공 하는 그래픽 버퍼에 대 한 래퍼를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="0307b-104">이중 버퍼링을 사용 하는 그래픽 줄이거나 깜빡임을 표시 화면을 그려서 발생 하는 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="0307b-105">이중 버퍼링을 사용 하면 업데이트 된 그래픽 먼저 메모리에 버퍼에 그려지고이 버퍼의 내용이 표시 된 화면의 일부 또는 전부에 신속 하 게 기록 다음 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="0307b-106">표시 된 그래픽이 상대적으로 간단 하 게 덮어쓰는 일반적으로 줄이거나 없앨 수 깜빡임을 가끔씩 그래픽을 업데이트할 때 발생 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0307b-107">설정 하는 이중 버퍼링을 사용 하는 가장 간단한 방법은 <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> 컨트롤 사용 하 여 컨트롤 스타일 플래그는 <xref:System.Windows.Forms.Control.SetStyle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0307b-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="0307b-108">설정 된 <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> 컨트롤 추가 코드가 필요 없이 기본 그래픽 버퍼를 통해 컨트롤에 대 한 모든 그리기를 리디렉션할에 대 한 플래그를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="0307b-109">이 플래그가로 설정 되어 `true` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="0307b-110"><xref:System.Drawing.BufferedGraphics> 클래스도 작성 되어야 하며 public 생성자가 없습니다는 <xref:System.Drawing.BufferedGraphicsContext> 사용 하 여 응용 프로그램 도메인에 대 한 해당 <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0307b-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="0307b-111">검색할 수 있습니다는 <xref:System.Drawing.BufferedGraphicsContext> 정적에서은 현재 어플리케이션 도메인에 대 한 <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0307b-112"><xref:System.Drawing.BufferedGraphics.Graphics%2A> 그래픽 버퍼에 그리기에 대 한 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="0307b-113">이 속성에 대 한 액세스를 제공 된 <xref:System.Drawing.Graphics> 이 할당 된 그래픽 버퍼에 그릴 수 있는 개체 <xref:System.Drawing.BufferedGraphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="0307b-114"><xref:System.Drawing.BufferedGraphics.Render%2A> 화면으로 그래픽의 내용을 버퍼 인수 그리기 없는 메서드는 버퍼를 할당할 때 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="0307b-115">다른 오버 로드는 <xref:System.Drawing.BufferedGraphics.Render%2A> 메서드를 사용 하면 지정할 수는 <xref:System.Drawing.Graphics> 개체 또는 <xref:System.IntPtr> 장치 컨텍스트를 그릴 그래픽 버퍼의 내용을를 가리키는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="0307b-116">이중 버퍼링 된 그래픽 그리기에 대 한 자세한 내용은 참조 [이중 버퍼링 그래픽](~/docs/framework/winforms/advanced/double-buffered-graphics.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0307b-117">다음 코드 예제는 <xref:System.Drawing.BufferedGraphics> 몇 가지 유형의 버퍼링 구현을 사용 하 여 그래픽을 그릴 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="0307b-118">클릭 폼 또는 시작 되 고 그리기 업데이트를 발생 하는 타이머를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="0307b-119">그리기 업데이트를 통해 이중 버퍼링의 결과 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="0307b-120">폼에 대 한 순환 다음과 같은 그리기 모드를 마우스 오른쪽 단추로 클릭 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="0307b-121">에 직접 그리기는 <xref:System.Windows.Forms.Control.Handle%2A> 에 대 한는 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="0307b-122">재정의 하 여 그리기는 <xref:System.Windows.Forms.Form.OnPaint%2A> 메서드를 사용 하는 <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> 스타일을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="0307b-123">재정의 하 여 그리기는 <xref:System.Windows.Forms.Form.OnPaint%2A> 사용 하지 않고 양식 메서드에 대 한 메서드는 <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> 스타일을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="0307b-124">각 모드는 현재 모드를 식별 하 고 각 마우스 단추를 누를 때 발생 하는 동작을 설명 하는 텍스트를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0307b-125">
        <see cref="T:System.Drawing.BufferedGraphics" /> 클래스는 스레드로부터 안전하지 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0307b-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span>
      </span>
      <span data-ttu-id="0307b-126">그래픽 버퍼를 별도 스레드에서 액세스할 때에 충돌을 방지 하려면 스레드 액세스 제어 메커니즘을 사용 해야 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0307b-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0307b-127">해당 <see cref="T:System.Drawing.BufferedGraphics" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-127">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0307b-128">호출 <xref:System.Drawing.BufferedGraphics.Dispose%2A> 완료 되 면 사용 하는 <xref:System.Drawing.BufferedGraphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-128">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="0307b-129"><xref:System.Drawing.BufferedGraphics.Dispose%2A> 메서드는 <xref:System.Drawing.BufferedGraphics> 불안정 한 상태가 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-129">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="0307b-130">호출한 후 <xref:System.Drawing.BufferedGraphics.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.Drawing.BufferedGraphics> 개체는 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.BufferedGraphics> 개체 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-130">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="0307b-131">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-131">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0307b-132">항상 호출 <xref:System.Drawing.BufferedGraphics.Dispose%2A> 에 대 한 마지막 참조를 해제 하기 전에 <xref:System.Drawing.BufferedGraphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-132">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="0307b-133">이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.BufferedGraphics> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-133">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0307b-134">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-134">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0307b-135">그래픽 버퍼에 출력하는 <see cref="T:System.Drawing.Graphics" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-135">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0307b-136">그래픽 버퍼에 출력하는 <see cref="T:System.Drawing.Graphics" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-136">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0307b-137">이 속성은 제공 된 <xref:System.Drawing.Graphics> 이 할당 된 그래픽 버퍼에 그릴 수 있는 개체 <xref:System.Drawing.BufferedGraphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-137">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0307b-138">그래픽 버퍼의 내용을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-138">Writes the contents of the graphics buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0307b-139">그래픽 버퍼의 내용을 기본 장치에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-139">Writes the contents of the graphics buffer to the default device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0307b-140">이 메서드를 호출 하 여 지정 된 장치를 그래픽 버퍼의 내용을 작성는 <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> 의 메서드는 <xref:System.Drawing.BufferedGraphicsContext> 만드는 데 사용한 <xref:System.Drawing.BufferedGraphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-140">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="0307b-141">그래픽 버퍼의 내용을 쓸 대상 <see cref="T:System.Drawing.Graphics" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-141">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0307b-142">그래픽 버퍼의 내용을 지정된 <see cref="T:System.Drawing.Graphics" /> 개체에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-142">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0307b-143">이 메서드를 지정 된 그래픽 버퍼의 내용을 씁니다 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-143">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0307b-144">다음 코드 예제에서는 지정 된 그래픽 버퍼의 내용을 렌더링 하는 방법을 보여 줍니다 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-144">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="0307b-145">이 코드는에 대해 제공 된 큰 예제의 일부는 <xref:System.Drawing.BufferedGraphics> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-145">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC">
          <span data-ttu-id="0307b-146">그래픽 버퍼의 내용을 쓸 대상 장치 컨텍스트를 가리키는 <see cref="T:System.IntPtr" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-146">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0307b-147">그래픽 버퍼의 내용을 지정된 <see cref="T:System.IntPtr" /> 핸들과 연결된 장치 컨텍스트에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-147">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0307b-148">이 메서드는 지정 된 연결 된 장치 컨텍스트에 그래픽 버퍼의 내용을 씁니다 <xref:System.IntPtr> 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-148">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0307b-149">다음 코드 예제에서는 그래픽 버퍼의 내용을 렌더링 하는 방법을 보여 줍니다. `grafx` 지정 된 장치 컨텍스트를 합니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-149">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="0307b-150">이 코드는에 대해 제공 된 큰 예제의 일부는 <xref:System.Drawing.BufferedGraphics> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0307b-150">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0307b-151">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-151">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="0307b-152">열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0307b-152">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IntPtr" />
      </Docs>
    </Member>
  </Members>
</Type>