<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedGraphics.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58eb376f4bda7764bd0c534a86c20b084960c4a7d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eb376f4bda7764bd0c534a86c20b084960c4a7d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Provides a graphics buffer for double buffering.</source>
          <target state="translated">이중 버퍼링을 위한 그래픽 버퍼를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스를 사용 하면 해당 그래픽에 대 한 사용자 지정 이중 버퍼링을 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated">버퍼에 쓸 출력 장치에 해당 콘텐츠를 렌더링 하는 데 사용할 수 있는 메서드를 제공 하는 그래픽 버퍼에 대 한 래퍼를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">이중 버퍼링을 사용 하는 그래픽 줄이거나 깜빡임을 표시 화면을 그려서 발생 하는 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</source>
          <target state="translated">이중 버퍼링을 사용 하면 업데이트 된 그래픽 먼저 메모리에 버퍼에 그려지고이 버퍼의 내용이 표시 된 화면의 일부 또는 전부에 신속 하 게 기록 다음 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</source>
          <target state="translated">표시 된 그래픽이 상대적으로 간단 하 게 덮어쓰는 일반적으로 줄이거나 없앨 수 깜빡임을 가끔씩 그래픽을 업데이트할 때 발생 하 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The simplest way to use double buffering is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">설정 하는 이중 버퍼링을 사용 하는 가장 간단한 방법은 <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> 컨트롤 사용 하 여 컨트롤 스타일 플래그는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> 컨트롤 추가 코드가 필요 없이 기본 그래픽 버퍼를 통해 컨트롤에 대 한 모든 그리기를 리디렉션할에 대 한 플래그를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">이 플래그가로 설정 되어 <ph id="ph1">`true`</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class has no public constructor and must be created by the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for an application domain using its <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스도 작성 되어야 하며 public 생성자가 없습니다는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 사용 하 여 응용 프로그램 도메인에 대 한 해당 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>You can retrieve the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 정적에서은 현재 어플리케이션 도메인에 대 한 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> property can be used for drawing to the graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> 그래픽 버퍼에 그리기에 대 한 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This property provides access to the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">이 속성에 대 한 액세스를 제공 된 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 이 할당 된 그래픽 버퍼에 그릴 수 있는 개체 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> 화면으로 그래픽의 내용을 버퍼 인수 그리기 없는 메서드는 버퍼를 할당할 때 지정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Other overloads of the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method allow you to specify a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object or an <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> object that points to a device context to which to draw the contents of the graphics buffer.</source>
          <target state="translated">다른 오버 로드는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> 메서드를 사용 하면 지정할 수는 <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체 또는 <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> 장치 컨텍스트를 그릴 그래픽 버퍼의 내용을를 가리키는 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>For more information about drawing double-buffered graphics, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>.</source>
          <target state="translated">이중 버퍼링 된 그래픽 그리기에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이중 버퍼링 그래픽<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object to draw graphics using several types of buffering implementations.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 몇 가지 유형의 버퍼링 구현을 사용 하 여 그래픽을 그릴 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Clicking the form alternately starts and stops a timer that causes draw updates.</source>
          <target state="translated">클릭 폼 또는 시작 되 고 그리기 업데이트를 발생 하는 타이머를 중지 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The draw updates allow you to observe the effect of double buffering.</source>
          <target state="translated">그리기 업데이트를 통해 이중 버퍼링의 결과 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Right-clicking the form cycles through the following drawing modes:</source>
          <target state="translated">폼에 대 한 순환 다음과 같은 그리기 모드를 마우스 오른쪽 단추로 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">에 직접 그리기는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">재정의 하 여 그리기는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 메서드를 사용 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> 스타일을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method for the form method without using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">재정의 하 여 그리기는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 사용 하지 않고 양식 메서드에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> 스타일을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</source>
          <target state="translated">각 모드는 현재 모드를 식별 하 고 각 마우스 단추를 누를 때 발생 하는 동작을 설명 하는 텍스트를 그립니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> class is not thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> 클래스는 스레드로부터 안전하지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</source>
          <target state="translated">그래픽 버퍼를 별도 스레드에서 액세스할 때에 충돌을 방지 하려면 스레드 액세스 제어 메커니즘을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> object.</source>
          <target state="translated">해당 <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> 개체에서 사용하는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> 완료 되 면 사용 하는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 불안정 한 상태가 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체는 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">항상 호출 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> 에 대 한 마지막 참조를 해제 하기 전에 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated">그래픽 버퍼에 출력하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated">그래픽 버퍼에 출력하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>This property provides a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">이 속성은 제공 된 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 이 할당 된 그래픽 버퍼에 그릴 수 있는 개체 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Writes the contents of the graphics buffer.</source>
          <target state="translated">그래픽 버퍼의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>Writes the contents of the graphics buffer to the default device.</source>
          <target state="translated">그래픽 버퍼의 내용을 기본 장치에 씁니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>This method writes the contents of the graphics buffer to the device specified by calling the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> used to create this <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">이 메서드를 호출 하 여 지정 된 장치를 그래픽 버퍼의 내용을 작성는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 만드는 데 사용한 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object to which to write the contents of the graphics buffer.</source>
          <target state="translated">그래픽 버퍼의 내용을 쓸 대상 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>Writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object.</source>
          <target state="translated">그래픽 버퍼의 내용을 지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 개체에 씁니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This method writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">이 메서드를 지정 된 그래픽 버퍼의 내용을 씁니다 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>The following code example demonstrates rendering the contents of the graphics buffer to a specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">다음 코드 예제에서는 지정 된 그래픽 버퍼의 내용을 렌더링 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">이 코드는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that points to the device context to which to write the contents of the graphics buffer.</source>
          <target state="translated">그래픽 버퍼의 내용을 쓸 대상 장치 컨텍스트를 가리키는 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> handle.</source>
          <target state="translated">그래픽 버퍼의 내용을 지정된 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> 핸들과 연결된 장치 컨텍스트에 씁니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This method writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> handle.</source>
          <target state="translated">이 메서드는 지정 된 연결 된 장치 컨텍스트에 그래픽 버퍼의 내용을 씁니다 <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> 처리 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>The following code example demonstrates how to render the contents of the graphics buffer <ph id="ph1">`grafx`</ph> to a specified device context.</source>
          <target state="translated">다음 코드 예제에서는 그래픽 버퍼의 내용을 렌더링 하는 방법을 보여 줍니다. <ph id="ph1">`grafx`</ph> 지정 된 장치 컨텍스트를 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">이 코드는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">비관리 코드에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">열거형 관련: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>