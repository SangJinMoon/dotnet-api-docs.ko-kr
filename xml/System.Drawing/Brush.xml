<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Brush.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c5e77bdc235cb944224dda9d793e336d594e73a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c5e77bdc235cb944224dda9d793e336d594e73a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Brush">
          <source>Defines objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.</source>
          <target state="translated">사각형, 타원, 파이, 다각형 및 경로와 같은 그래픽 도형의 내부를 채우는 데 사용할 개체를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Brush">
          <source>This is an abstract base class and cannot be instantiated.</source>
          <target state="translated">이 클래스는 추상 기본 클래스 및 인스턴스화할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Brush">
          <source>To create a brush object, use classes derived from <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>, such as <ph id="ph2">&lt;xref:System.Drawing.SolidBrush&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.TextureBrush&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush&gt;</ph>.</source>
          <target state="translated">파생 된 클래스를 사용 하 여 브러시 개체를 만들려면 <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>와 같은 <ph id="ph2">&lt;xref:System.Drawing.SolidBrush&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.TextureBrush&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.LinearGradientBrush&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Brush">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> class, you must override the <ph id="ph2">&lt;see cref="M:System.Drawing.Brush.Clone" /&gt;</ph> method.</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> 재정의 해야 클래스는 <ph id="ph2">&lt;see cref="M:System.Drawing.Brush.Clone" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.Clone">
          <source>When overridden in a derived class, creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>.</source>
          <target state="translated">파생된 클래스에 재정의할 때 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>와 정확하게 일치하는 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.Clone">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that this method creates.</source>
          <target state="translated">이 메서드가 만드는 새 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Drawing.Brush">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> 개체에서 사용하는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph> 이 사용 하는 리소스 <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> 다른 용도에 다시 할당 될 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.Brush&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Drawing.Brush&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Brush.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Brush.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
          <source>A pointer to the <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> brush object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 브러시 개체에 대한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
          <source>In a derived class, sets a reference to a <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> brush object.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 브러시 개체에 대한 참조를 설정합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>