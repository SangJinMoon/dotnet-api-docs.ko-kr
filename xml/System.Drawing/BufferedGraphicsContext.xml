<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedGraphicsContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56cebe4384e5215400e3718cf0dc794274c63580a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cebe4384e5215400e3718cf0dc794274c63580a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Provides methods for creating graphics buffers that can be used for double buffering.</source>
          <target state="translated">이중 버퍼링에 사용할 수 있는 그래픽 버퍼를 만드는 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 클래스를 사용 하면 해당 그래픽에 대 한 사용자 지정 이중 버퍼링을 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">이중 버퍼링을 사용 하는 그래픽 줄이거나 깜빡임을 표시 화면을 그려서 발생 하는 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The simplest way to use double buffering is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">설정 하는 이중 버퍼링을 사용 하는 가장 간단한 방법은 <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> 컨트롤 사용 하 여 컨트롤 스타일 플래그는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> 컨트롤 스타일 플래그는 컨트롤에 대 한 코드를 추가 하지 않고도 기본 그래픽 버퍼를 통해 컨트롤에 대 한 모든 그리기를 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">이 플래그가로 설정 되어 <ph id="ph1">`true`</ph> 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class provides methods for creating and configuring a graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 클래스 만들고 그래픽 버퍼를 구성 하기 위한 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드를 만듭니다는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>, 변수인도 버퍼에 쓸 출력 장치에 해당 콘텐츠를 렌더링 하는 데 사용할 메서드를 제공 하는 그래픽 버퍼에 대 한 래퍼입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>You can retrieve the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 정적에서은 현재 어플리케이션 도메인에 대 한 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>For graphically intensive applications such as animation, you can create a dedicated <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> using the constructor, but for most applications the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property will be sufficient.</source>
          <target state="translated">애니메이션 같은 그래픽 위주의 응용 프로그램을 만들 수 있습니다 전용 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 생성자를 사용 하지만 대부분의 응용 프로그램에 대 한는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> 속성 만으로도 충분 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>For more information on drawing buffered graphics and custom buffering implementations, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept> and <bpt id="p2">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p2">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.</source>
          <target state="translated">그리기 버퍼링 된 그래픽 및 버퍼링을 사용자 지정 구현에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>이중 버퍼링 그래픽<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 버퍼링 된 그래픽 수동 관리<ept id="p2">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The following code example demonstrates how to acquire the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain.</source>
          <target state="translated">다음 코드 예제에서는 확보 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 은 현재 어플리케이션 도메인에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">이 코드는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> instead of the default instance provided by the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>.</source>
          <target state="translated">애니메이션 같은 그래픽 위주의 응용 프로그램에 대 한 경우에 따라 성능을 개선할 수 있습니다 전용을 사용 하 여 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 에서 제공 하는 기본 인스턴스 대신는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>This allows you to create and manage graphics buffers individually.</source>
          <target state="translated">이 통해 만들고 그래픽 버퍼를 개별적으로 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>You should always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you finish using a dedicated <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">항상 호출 해야 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> 전용을 사용 하 여 완료 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>For more information about dedicated graphics buffers, see <bpt id="p1">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.</source>
          <target state="translated">전용된 그래픽 버퍼에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 버퍼링 된 그래픽 수동 관리<ept id="p1">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Creates a graphics buffer.</source>
          <target state="translated">그래픽 버퍼를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to match the pixel format for the new buffer to.</source>
          <target state="translated">새 버퍼의 픽셀 형식을 일치시킬 대상 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> indicating the size of the buffer to create.</source>
          <target state="translated">만들 버퍼의 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>의 픽셀 형식을 사용하여 지정된 크기의 그래픽 버퍼를 만듭니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">지정된 크기의 버퍼를 그리는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드 값을 초과 하는 필요에 따라 크기가 사각형과는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> 속성, 임시 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 버퍼를 할당 하 고 버퍼의 임시 컨텍스트를 제공 하기 위해 만들어집니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The new <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 와 다릅니다.는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 응용 프로그램에 대 한 도메인은 자동으로 삭제 시기는 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드가 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code example demonstrates creating a graphics buffer using the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 사용 하 여 그래픽 버퍼를 만드는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">이 코드는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> to a device context to match the pixel format of the new buffer to.</source>
          <target state="translated">새 버퍼의 픽셀 형식을 일치시킬 대상 장치 컨텍스트에 대한 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> indicating the size of the buffer to create.</source>
          <target state="translated">만들 버퍼의 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>의 픽셀 형식을 사용하여 지정된 크기의 그래픽 버퍼를 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">지정된 크기의 버퍼를 그리는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드 값을 초과 하는 필요에 따라 크기가 사각형과는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> 속성, 임시 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 버퍼를 할당 하 고 버퍼의 임시 컨텍스트를 제공 하기 위해 만들어집니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>The new <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 와 다릅니다.는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 응용 프로그램에 대 한 도메인은 자동으로 삭제 시기는 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드가 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>The following code example demonstrates creating a graphics buffer using the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 사용 하 여 그래픽 버퍼를 만드는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">이 코드는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>for access to unmanaged code.</source>
          <target state="translated">비관리 코드에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연관 된 열거: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Invalidate">
          <source>Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</source>
          <target state="translated">버퍼가 할당된 후 아직 삭제되지 않았으면 현재 그래픽 버퍼를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Invalidate">
          <source>If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</source>
          <target state="translated">그래픽 버퍼를 사용 하는 경우 표시 됩니다 삭제 되는 무료; 즉시 그렇지 않으면 삭제 됩니다 즉시 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>Gets or sets the maximum size of the buffer to use.</source>
          <target state="translated">사용할 버퍼의 최대 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> indicating the maximum size of the buffer dimensions.</source>
          <target state="translated">버퍼의 최대 크기를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</source>
          <target state="translated">이 속성을 사용 하면 메모리에 유지 해야 하는 버퍼에 대 한 최대 크기를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>You can allocate a buffer of any size, however any buffer with dimensions greater than the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> size will be used temporarily and then discarded when the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object is released.</source>
          <target state="translated">하지만 버퍼 크기 보다 큰 모든 크기의 버퍼를 할당할 수는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> 크기를 일시적으로 사용 하 고 때 삭제는 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 개체를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>The following example demonstrates setting the maximum size for the buffer for a <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">다음 예제에 대 한 버퍼에 대 한 최대 크기를 설정 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">이 코드는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>The height or width of the size is less than or equal to zero.</source>
          <target state="translated">크기의 높이나 너비가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>for allowing user access to all windows.</source>
          <target state="translated">모든 창에 대 한 사용자 액세스를 허용 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연관 된 열거: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>