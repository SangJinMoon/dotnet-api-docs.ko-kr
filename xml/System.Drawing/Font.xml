<Type Name="Font" FullName="System.Drawing.Font">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71f6dfb728a4ff8e3675a178340a5096df561f76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410617" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Font : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Font extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Font" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Font&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Font sealed : MarshalByRefObject, ICloneable, IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.FontEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>글꼴, 크기 및 스타일 특성을 포함하여 텍스트의 특정 형식을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 글꼴을 만드는 방법에 대 한 자세한 내용은 참조 [하는 방법: 글꼴 패밀리를 생성 및 글꼴](~/docs/framework/winforms/advanced/how-to-construct-font-families-and-fonts.md)합니다. Windows Forms 응용 프로그램 트루타입 글꼴을 지원 하 고 제한 된 OpenType 글꼴에 대 한 지원을 제공 합니다. 지원 되지 않는 글꼴을 사용 하려고 하면 글꼴은 응용 프로그램을 실행 하는 컴퓨터에 설치 되어 있지 않거나, Microsoft Sans Serif 글꼴 대체 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font.%23ctor%2A> 생성자 및 <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, 및 <xref:System.Drawing.Font.Unit%2A> 속성입니다. 포함 된 Windows Form에서 사용 되는이 예제는 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1` 있는 채워집니다 문자열 "클수록" 및 "작게"와 <xref:System.Windows.Forms.Label> 라는 `Label1`합니다. 폼에 다음 코드를 붙여 넣고 연결할는 `ComboBox1_SelectedIndexChanged` 메서드는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 의 이벤트는 <xref:System.Windows.Forms.ComboBox> 제어 합니다.  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 기존 <see cref="T:System.Drawing.Font" /> 및 <see cref="T:System.Drawing.FontStyle" />을 사용하는 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.Font prototype, System.Drawing.FontStyle newStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Font prototype, valuetype System.Drawing.FontStyle newStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (prototype As Font, newStyle As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::Font ^ prototype, System::Drawing::FontStyle newStyle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prototype" Type="System.Drawing.Font" />
        <Parameter Name="newStyle" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="prototype">새 <see cref="T:System.Drawing.Font" />를 만들 기존 <see cref="T:System.Drawing.Font" />입니다.</param>
        <param name="newStyle">새 <see cref="T:System.Drawing.Font" />에 적용할 <see cref="T:System.Drawing.FontStyle" />입니다. <see cref="T:System.Drawing.FontStyle" /> 열거형의 여러 값은 <see langword="OR" /> 연산자와 함께 사용할 수 있습니다.</param>
        <summary>지정된 기존 <see cref="T:System.Drawing.Font" /> 및 <see cref="T:System.Drawing.FontStyle" /> 열거형을 사용하는 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기반으로 하는 지역화 된 응용 프로그램의 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 및 글꼴을 지정 하는 이전 릴리스와 `prototype` 경우 해당 글꼴 설치가 되어 있지 않습니다 응용 프로그램을 작성 하는 데 사용 되는 컴퓨터에 Microsoft Sans Serif 글꼴을 사용 하면 대신 합니다. 이 동작에 종속 되는 응용 프로그램을.NET Framework 3.0에 대 한 응용 프로그램을 다시 컴파일해야 하는 경우에 Microsoft Sans Serif 글꼴을 지정 해야 `prototype`합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Drawing.Color.op_Inequality%2A> 연산자는 <xref:System.Drawing.Font.%23ctor%2A> 생성자 및 <xref:System.Drawing.Font.Bold%2A> 속성입니다. 이 예제는 이라는 버튼을 포함 하는 Windows Form에 사용할 `Button2`합니다. 폼에 다음 코드를 붙여 넣고 연결할는 `Button2_Click` 메서드는 단추의 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.CharacterRangeExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
        <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
        <summary>지정된 크기를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 되는 글꼴에 해당 <xref:System.Drawing.Font.Style%2A> 속성이로 설정 <xref:System.Drawing.FontStyle.Regular> 및 해당 <xref:System.Drawing.Font.Unit%2A> 속성이로 설정 <xref:System.Drawing.GraphicsUnit.Point>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
        <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
        <summary>지정된 크기를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 되는 글꼴에 해당 <xref:System.Drawing.Font.Style%2A> 속성이로 설정 <xref:System.Drawing.FontStyle.Regular?displayProperty=nameWithType> 및 해당 <xref:System.Drawing.Font.Unit%2A> 속성이로 설정 <xref:System.Drawing.GraphicsUnit.Point?displayProperty=nameWithType>합니다. Windows Forms 응용 프로그램 트루타입 글꼴을 지원 하 고 제한 된 OpenType 글꼴에 대 한 지원을 제공 합니다. 경우는 `familyName` 매개 변수 지정 Microsoft Sans Serif 글꼴을 응용 프로그램을 실행 하는 컴퓨터에 설치 되어 있지 않거나 지원 되지 않는 대체 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font.%23ctor%2A> 생성자입니다. 이 예제는 Windows Form에서 사용 되는 설계 되었으며 필요는 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트입니다.  
  
 [!code-csharp[System.Drawing.Misc3#ConstructFontWithString](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#constructfontwithstring)]
 [!code-vb[System.Drawing.Misc3#ConstructFontWithString](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#constructfontwithstring)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
        <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <summary>지정된 크기 및 스타일을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 되는 글꼴에 해당 <xref:System.Drawing.Font.Unit%2A> 속성이로 설정 <xref:System.Drawing.GraphicsUnit.Point>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font> 속성을 새로 만들었거나, 굵게 스타일 단추의 <xref:System.Drawing.Font>합니다. 이 예제는 이라는 버튼을 포함 하는 Windows Form에 사용할 `Button1`합니다. 폼에 다음 코드를 붙여 넣고 연결할는 `Button1_Click` 메서드는 단추의 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.MiscExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.MiscExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.MiscExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::GraphicsUnit unit);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <summary>지정된 크기 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다. 스타일을 <see cref="F:System.Drawing.FontStyle.Regular" />로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 되는 글꼴에 해당 <xref:System.Drawing.Font.Style%2A> 속성이로 설정 <xref:System.Drawing.FontStyle.Regular?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
        <param name="emSize">새 글꼴의 em size(포인트)입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <summary>지정된 크기 및 스타일을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 되는 글꼴에 해당 <xref:System.Drawing.Font.Unit%2A> 속성이로 설정 <xref:System.Drawing.GraphicsUnit.Point>합니다. Windows Forms 응용 프로그램 트루타입 글꼴을 지원 하 고 제한 된 OpenType 글꼴에 대 한 지원을 제공 합니다. 경우는 `familyName` 매개 변수 지정 Microsoft Sans Serif 글꼴을 응용 프로그램을 실행 하는 컴퓨터에 설치 되어 있지 않거나 지원 되지 않는 대체 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::GraphicsUnit unit);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <summary>지정된 크기 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다. 스타일은 <see cref="F:System.Drawing.FontStyle.Regular" />로 설정됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 되는 글꼴에 해당 <xref:System.Drawing.Font.Style%2A> 속성이로 설정 <xref:System.Drawing.FontStyle.Regular?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <summary>지정된 크기, 스타일 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <summary>지정된 크기, 스타일 및 단위를 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Forms 응용 프로그램 트루타입 글꼴을 지원 하 고 제한 된 OpenType 글꼴에 대 한 지원을 제공 합니다. 경우는 `familyName` 매개 변수 지정 Microsoft Sans Serif 글꼴을 응용 프로그램을 실행 하는 컴퓨터에 설치 되어 있지 않거나 지원 되지 않는 대체 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font.%23ctor%2A> 생성자입니다. 이 예제는 Windows Forms에서 사용 되는 설계 합니다. 이 예제를 실행 하려면 이라는 버튼을 포함 하는 폼에이 코드를 붙여 `Button2`, 연결는 `Button2_Click` 메서드는 <xref:System.Windows.Forms.Control.Click> 단추의 이벤트가 합니다.  
  
 [!code-cpp[System.Drawing.FontsExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#3)]
 [!code-csharp[System.Drawing.FontsExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.FontsExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <param name="gdiCharSet">새 글꼴에 사용할 <see cref="T:System.Byte" /> 문자 집합을 지정하는  
  
 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]입니다.</param>
        <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet` 매개 변수에 WinGDI.h의 Windows SDK 헤더 파일에 정의 된 목록에서 값을 사용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <param name="gdiCharSet">이 글꼴에 사용할 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 문자 집합을 지정하는 <see cref="T:System.Byte" />입니다.</param>
        <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet` 매개 변수에 WinGDI.h의 Windows SDK 헤더 파일에 정의 된 목록에서 값을 사용 합니다. Windows Forms 응용 프로그램 트루타입 글꼴을 지원 하 고 제한 된 OpenType 글꼴에 대 한 지원을 제공 합니다. 경우는 `familyName` 매개 변수 지정 Microsoft Sans Serif 글꼴을 응용 프로그램을 실행 하는 컴퓨터에 설치 되어 있지 않거나 지원 되지 않는 대체 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet, bool gdiVerticalFont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte, gdiVerticalFont As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
        <Parameter Name="gdiVerticalFont" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="family">새 <see cref="T:System.Drawing.Font" />의 <see cref="T:System.Drawing.FontFamily" />입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <param name="gdiCharSet">새 글꼴에 사용할 <see cref="T:System.Byte" /> 문자 집합을 지정하는  
  
 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]입니다.</param>
        <param name="gdiVerticalFont">새 글꼴이 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 세로 방향 글꼴에서 파생되었는지 여부를 나타내는 부울 값입니다.</param>
        <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet` 매개 변수에 WinGDI.h의 Windows SDK 헤더 파일에 정의 된 목록에서 값을 사용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet, bool gdiVerticalFont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte, gdiVerticalFont As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
        <Parameter Name="gdiVerticalFont" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="familyName">새 <see cref="T:System.Drawing.Font" />에 대한 <see cref="T:System.Drawing.FontFamily" />의 문자열 표현입니다.</param>
        <param name="emSize">
          <c>단위</c> 매개 변수에서 지정하는 단위로 측정된 새 글꼴의 em-size입니다.</param>
        <param name="style">새 글꼴의 <see cref="T:System.Drawing.FontStyle" />입니다.</param>
        <param name="unit">새 글꼴의 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</param>
        <param name="gdiCharSet">이 글꼴에 사용할 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 문자 집합을 지정하는 <see cref="T:System.Byte" />입니다.</param>
        <param name="gdiVerticalFont">새 <see cref="T:System.Drawing.Font" />가 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 세로 방향 글꼴에서 파생되었는지 여부를 나타내는 부울 값입니다.</param>
        <summary>지정된 크기, 스타일, 단위 및 문자 집합을 사용하여 새 <see cref="T:System.Drawing.Font" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet` 매개 변수에 WinGDI.h의 Windows SDK 헤더 파일에 정의 된 목록에서 값을 사용 합니다. 경우는 `familyName` 매개 변수 지정 Microsoft Sans Serif 글꼴을 응용 프로그램을 실행 하는 컴퓨터에 설치 되어 있지 않거나 지원 되지 않는 대체 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" />가 0보다 작거나 같거나, 무한대로 계산되거나, 잘못된 수인 경우</exception>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName="Bold">
      <MemberSignature Language="C#" Value="public bool Bold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Bold" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Bold" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Bold { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />가 볼드인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          이 <see cref="T:System.Drawing.Font" />가 볼드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 <xref:System.Drawing.Color.op_Inequality%2A> 연산자는 <xref:System.Drawing.Font.%23ctor%2A> 생성자 및 <xref:System.Drawing.Font.Bold%2A> 속성입니다. 이 예제는 이라는 버튼을 포함 하는 Windows Form에 사용할 `Button2`합니다. 폼에 다음 코드를 붙여 넣고 연결할는 `Button2_Click` 메서드는 단추의 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.CharacterRangeExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 정확한 복사본을 만듭니다.</summary>
        <returns>이 메서드가 만들고 <see cref="T:System.Object" />로 캐스팅되는 <see cref="T:System.Drawing.Font" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 코드를 복제 하는 <xref:System.Drawing.Font> 해당 글꼴 텍스트를 그립니다.  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicFontsExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />에서 사용하는 리소스를 모두 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Drawing.Font.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Font> 다른 용도에 다시 할당 될 수 있습니다.  
  
 <xref:System.Drawing.Font.Dispose%2A> 사용을 마치면 <xref:System.Drawing.Font>를 호출합니다. <xref:System.Drawing.Font.Dispose%2A> 메서드를 사용하면 <xref:System.Drawing.Font>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.Drawing.Font.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.Drawing.Font> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Font> 차지한 합니다. 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Font.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Drawing.Font>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.Font> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">테스트할 개체입니다.</param>
        <summary>지정된 개체가 <see cref="T:System.Drawing.Font" />이고 이 <see cref="T:System.Drawing.Font" />와 같은 <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" /> 및 <see cref="P:System.Drawing.Font.Unit" /> 속성 값을 갖고 있는지 여부를 나타냅니다.</summary>
        <returns>
          <paramref name="obj" /> 매개 변수가 <see cref="T:System.Drawing.Font" />이고 이 <see cref="T:System.Drawing.Font" />와 같은 <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" /> 및 <see cref="P:System.Drawing.Font.Unit" /> 속성 값을 갖고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 코드에서는 두 개의 <xref:System.Drawing.Font> 개체와 같은지 여부를 테스트 합니다.  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicFontsExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Font ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Font ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Drawing.FontFamily FontFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.FontFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::FontFamily ^ FontFamily { System::Drawing::FontFamily ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.FontFamily" />와 연결된 <see cref="T:System.Drawing.Font" />를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Drawing.FontFamily" />와 연결된 <see cref="T:System.Drawing.Font" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.FontFamily> 비슷한 글꼴 들에 게 다양 한 크기 및 스타일 (예를 들어, Arial, Times New Roman 및 Verdana) 할 수 있는 글꼴의 그룹을 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromHdc(IntPtr hdc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc">장치 컨텍스트에 대한 핸들입니다.</param>
        <summary>장치 컨텍스트에 대한 지정된 창 핸들에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
        <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 방법을 사용 하려면에 대 한는 `hdc` 매개 변수는 글꼴을 선택 하는 장치 컨텍스트에 대 한 핸들을 포함 해야 합니다. 이 메서드가 작동 하지 것입니다는 `hdc` 에서 핸들을 가져올는 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> 때문에 개체는 `hdc` 핸들이 선택 된 글꼴 되어 있지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">지정된 디바이스 컨텍스트의 글꼴이 트루타입 글꼴이 아닌 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHfont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromHfont (IntPtr hfont);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromHfont(native int hfont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromHfont(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHfont (hfont As IntPtr) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromHfont(IntPtr hfont);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hfont" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hfont">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 글꼴에 대한 창 핸들입니다.</param>
        <summary>지정된 창 핸들에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
        <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   에 대 한 핸들을 가져옵니다는 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 글꼴입니다.  
  
-   만듭니다는 <xref:System.Drawing.Font> 해당 핸들에서 합니다.  
  
-   새를 사용 하 여 화면에 텍스트를 그립니다 <xref:System.Drawing.Font>합니다.  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicFontsExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hfont" />가 트루타입 글꼴이 아닌 개체를 가리키는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromLogFont">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromLogFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromLogFont (object lf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromLogFont(object lf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromLogFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLogFont (lf As Object) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromLogFont(System::Object ^ lf);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lf" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="lf">
          <see cref="T:System.Drawing.Font" />를 만들 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>지정된 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
        <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `LOGFONT`, 논리 글꼴은 특정 글꼴을 설명 하는 14 속성을 포함 하는 구조 또는 합니다. 자세한 내용은 Windows 개발 설명서에서 "The 논리 글꼴" 참조 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromLogFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromLogFont (object lf, IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromLogFont(object lf, native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLogFont (lf As Object, hdc As IntPtr) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromLogFont(System::Object ^ lf, IntPtr hdc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lf" Type="System.Object" />
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="lf">
          <see cref="T:System.Drawing.Font" />를 만들 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <param name="hdc">
          <c>lf</c> 구조체에 대한 추가 정보가 포함되어 있는 장치 컨텍스트의 핸들입니다.</param>
        <summary>지정된 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체에서 <see cref="T:System.Drawing.Font" />를 만듭니다.</summary>
        <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Font" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `LOGFONT`, 논리 글꼴은 특정 글꼴을 설명 하는 14 속성을 포함 하는 구조 또는 합니다. 자세한 내용은 Windows 개발 설명서에서 "The 논리 글꼴" 참조 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">글꼴이 트루타입 글꼴이 아닌 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GdiCharSet">
      <MemberSignature Language="C#" Value="public byte GdiCharSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 GdiCharSet" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.GdiCharSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GdiCharSet As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte GdiCharSet { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />가 사용하는 GDI 문자 집합을 지정하는 바이트 값을 가져옵니다.</summary>
        <value>이 <see cref="T:System.Drawing.Font" />가 사용하는 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 문자 집합을 지정하는 바이트 값입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 다른 문자 집합을 지정 하지 않으면 1을 반환 된 <xref:System.Drawing.Font.%23ctor%28System.String%2CSystem.Single%2CSystem.Drawing.FontStyle%2CSystem.Drawing.GraphicsUnit%2CSystem.Byte%29> 생성자입니다. 이 속성은 WinGDI.h의 Windows SDK 헤더 파일에 정의 된 목록에서 값을 사용 합니다. 문자 집합 및 바이트 값은 다음 표에 나열 됩니다.  
  
|문자 집합|값|  
|-------------------|-----------|  
|ANSI|0|  
|DEFAULT|1|  
|기호|2|  
|SHIFTJIS|128|  
|HANGEUL|129|  
|한글|129|  
|GB2312|134|  
|CHINESEBIG5|136|  
|OEM|255|  
|조합|130|  
|히브리어|177|  
|아랍어|178|  
|그리스어|161|  
|터키어|162|  
|베트남어|163|  
|THAI|222|  
|동유럽|238|  
|러시아어|204|  
|MAC|77|  
|발트어|186|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GdiVerticalFont">
      <MemberSignature Language="C#" Value="public bool GdiVerticalFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GdiVerticalFont" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.GdiVerticalFont" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GdiVerticalFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GdiVerticalFont { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />가 GDI 세로 방향 글꼴에서 파생되었는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
        <value>
          이 <see cref="T:System.Drawing.Font" />가 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 세로 방향 글꼴에서 파생되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 글꼴 유니코드가 아닌 플랫폼에서 네이티브 Win32 컨트롤와 호환 되는지 확인 하려면이 속성을 사용 합니다.  
  
 <xref:System.Drawing.Font.GdiVerticalFont%2A> 만 반환 `true` 클래식 GDI에서이 글꼴을 만든 경우  
  
 LOGFONT 또는 HFONT 처럼 글꼴 정의입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 해시 코드를 가져옵니다.</summary>
        <returns>이 <see cref="T:System.Drawing.Font" />에 대한 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   
          <xref:System.Drawing.Font>을 만듭니다.  
  
-   해당 글꼴에 대 한 해시 코드를 가져옵니다.  
  
-   해시 코드의 값이 있는 메시지 상자를 표시합니다.  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicFontsExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHeight">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 글꼴의 줄 간격을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public float GetHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHeight" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHeight () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetHeight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 글꼴의 줄 간격(픽셀)을 반환합니다.</summary>
        <returns>이 글꼴의 줄 간격(픽셀)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 줄 간격은 <xref:System.Drawing.Font> 텍스트의 연속 된 두 줄 사이의 세로 거리입니다. 따라서 줄 간격에는 문자 자체의 높이 함께 줄 사이 공백이 포함 되어 있습니다.  
  
 경우는 <xref:System.Drawing.Font.Unit%2A> 글꼴의 속성이 아닌 다른 값으로 설정 되어 <xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>, 화면 디스플레이의 수직 해상도 사용 하 여 높이 픽셀 단위로 계산 됩니다. 예를 들어 글꼴 단위는 인치가 고 글꼴 크기는 0.3 가정 합니다. 또한 해당 글꼴 패밀리 em 높이 2048 고 줄 간격은 2355를 가정 합니다. 화면 표시 되는 96dpi의 수직 해상도 가진에 대 한 높이 다음과 같이 계산할 수 있습니다.  
  
 2355*(0.3/2048)\*96 = 33.11719  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public float GetHeight (System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetHeight(class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetHeight(System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="graphics">디스플레이 장치의 수직 해상도(인치당 도트 수)와 페이지 단위 및 페이지 배율에 대한 설정을 보유하는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>이 글꼴의 줄 간격을 지정된 <see cref="T:System.Drawing.Graphics" />의 현재 단위로 반환합니다.</summary>
        <returns>이 글꼴의 줄 간격(픽셀)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 줄 간격은 <xref:System.Drawing.Font> 텍스트의 연속 된 두 줄 사이의 세로 거리입니다. 따라서 줄 간격에는 문자 자체의 높이 함께 줄 사이 공백이 포함 되어 있습니다.  
  
 경우는 <xref:System.Drawing.Font.Unit%2A> 글꼴의 속성이 아닌 다른 값으로 설정 되어 <xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>, 높이 픽셀 단위로 지정 된 수직 해상도 사용 하 여 계산 됩니다 <xref:System.Drawing.Graphics> 개체입니다. 예를 들어 글꼴 단위는 인치가 고 글꼴 크기는 0.3 가정 합니다. 또한 해당 글꼴 패밀리 em 높이 2048 고 줄 간격은 2355를 가정 합니다. 경우는 <xref:System.Drawing.Graphics> 개체에는 <xref:System.Drawing.Font.Unit%2A> 속성 값이 <xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType> 및 <xref:System.Drawing.Graphics.DpiY%2A> 96dpi 인치, 높이의 속성 값은 다음과 같이 계산 됩니다.  
  
 2355*(0.3/2048)\*96 = 33.1171875  
  
 동일한 예에서 가정는 <xref:System.Drawing.Font.Unit%2A> 속성의는 <xref:System.Drawing.Graphics> 개체로 설정 됩니다 <xref:System.Drawing.GraphicsUnit.Millimeter?displayProperty=nameWithType> 대신 <xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>합니다. (1 인치는 25.4 밀리미터 사용) 한 후의 높이 밀리미터 단위로 다음과 같이 계산 됩니다.  
  
 2355*(0.3/2048)25.4 = 8.762256  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   
          <xref:System.Drawing.Font>을 만듭니다.  
  
-   New를 사용 하 여 화면에 텍스트 줄을 그립니다 <xref:System.Drawing.Font>합니다.  
  
-   글꼴의 높이 가져옵니다.  
  
-   두 번째 텍스트 줄의 첫 번째 줄 바로 아래를 그립니다.  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicFontsExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public float GetHeight (float dpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetHeight(float32 dpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHeight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHeight (dpi As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetHeight(float dpi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dpi">글꼴의 높이를 계산하는 데 사용되는 수직 해상도(인치당 도트 수)입니다.</param>
        <summary>지정된 수직 해상도를 가진 장치에 그리는 경우 이 <see cref="T:System.Drawing.Font" />의 높이(픽셀)를 반환합니다.</summary>
        <returns>이 <see cref="T:System.Drawing.Font" />의 높이(픽셀)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Drawing.Font.Unit%2A> 글꼴의 속성이 아닌 다른 값으로 설정 되어 <xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>, 화면 디스플레이의 수직 해상도 사용 하 여 높이 픽셀 단위로 계산 됩니다. 예를 들어 글꼴 단위는 인치가 고 글꼴 크기는 0.3 가정 합니다. 또한 해당 글꼴 패밀리 em 높이 2048 고 줄 간격은 2355를 가정 합니다. 지정된 된 수직 해상도 96dpi, 높이 다음과 같이 계산 됩니다.  
  
 2355*(0.3/2048)\*96 = 33.1171875  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 글꼴의 줄 간격을 가져옵니다.</summary>
        <value>이 글꼴의 줄 간격(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 줄 간격은 텍스트에 있는 연속된 두 줄 사이의 세로 거리입니다. 따라서 줄 간격에는 문자 자체의 높이 함께 줄 사이 공백이 포함 되어 있습니다.  
  
 경우는 <xref:System.Drawing.Font.Unit%2A> 글꼴의 속성이 아닌 다른 값으로 설정 되어 <xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>, 화면 디스플레이의 수직 해상도 사용 하 여 높이 픽셀 단위로 계산 됩니다. 예를 들어 글꼴 단위는 인치가 고 글꼴 크기는 0.3 가정 합니다. 또한 해당 글꼴 패밀리 em 높이 2048 고 줄 간격은 2355를 가정 합니다. 화면 표시 되는 96dpi의 수직 해상도 가진에 대 한 높이 다음과 같이 계산할 수 있습니다.  
  
 2355*(0.3/2048)\*96 = 33.11719  
  
 반환 된 값의 <xref:System.Drawing.Font.GetHeight%2A> 방법을 33.11719, 수 및 반환 값의 <xref:System.Drawing.Font.Height%2A> 속성 34 것입니다. <xref:System.Drawing.Font.Height%2A> 속성에서 반환한 값은 <xref:System.Drawing.Font.GetHeight%2A>, 가장 가까운 정수로 반올림 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemFont">
      <MemberSignature Language="C#" Value="public bool IsSystemFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystemFont" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.IsSystemFont" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSystemFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSystemFont { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>글꼴이 <see cref="T:System.Drawing.SystemFonts" />의 멤버인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          글꼴이 <see cref="T:System.Drawing.SystemFonts" />의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자가 시스템 글꼴을 변경 하는 경우는 <xref:System.Drawing.Font.IsSystemFont%2A> 속성을 반환할 수 `true`실제로 시스템 글꼴이 없는 경우에, 합니다. 이 경우 응용 프로그램에서 시스템 글꼴을 사용 하는 경우를 방지 하려면 문제를 추적 해야 사용자 기본 설정 변경을 처리 하 여는 <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> 또는 <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public bool Italic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Italic" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Italic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Italic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Italic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 글꼴에 기울임꼴 스타일이 적용되었는지를 나타내는 값을 가져옵니다.</summary>
        <value>
          이 글꼴에 기울임꼴 스타일이 적용되었음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Drawing.Font.Style" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.FontNameEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter/FontNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 글꼴 이름을 가져옵니다.</summary>
        <value>이 <see cref="T:System.Drawing.Font" />의 글꼴 이름 문자열 표현입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font.%23ctor%2A> 생성자 및 <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, <xref:System.Drawing.Font.Name%2A>, <xref:System.Drawing.Font.Style%2A>, 및 <xref:System.Drawing.Font.Unit%2A> 속성입니다. 포함 된 Windows Form에서 사용 되는이 예제는 한 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1` 는 채워집니다 문자열 "클수록" 및 "소형"입니다. 폼에 다음 코드를 붙여 넣고 연결할는 `ComboBox1_SelectedIndexChanged` 메서드는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 의 이벤트는 <xref:System.Windows.Forms.ComboBox> 제어 합니다.  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalFontName">
      <MemberSignature Language="C#" Value="public string OriginalFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalFontName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.OriginalFontName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalFontName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>원래 지정된 글꼴의 이름을 가져옵니다.</summary>
        <value>원래 지정된 글꼴의 이름을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 실제 글꼴 이름 및 글꼴 이름을 원래 다를 수 있습니다. 시스템 요구 사항 이외의 원래 지정 된 글꼴의 사용이 될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public float Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Size { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Font" /> 속성에서 지정하는 단위로 측정된 이 <see cref="P:System.Drawing.Font.Unit" />의 em-size를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Drawing.Font" />의 em-size입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font.%23ctor%2A> 생성자 및 <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, 및 <xref:System.Drawing.Font.Unit%2A> 속성입니다. 포함 된 Windows Form에서 사용 되는이 예제는 한 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1` 는 채워집니다 문자열 "클수록" 및 "소형"입니다. 폼에 다음 코드를 붙여 넣고 연결할는 `ComboBox1_SelectedIndexChanged` 메서드는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 의 이벤트는 <xref:System.Windows.Forms.ComboBox> 제어 합니다.  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeInPoints">
      <MemberSignature Language="C#" Value="public float SizeInPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SizeInPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.SizeInPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SizeInPoints As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float SizeInPoints { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 em-size(포인트)를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Drawing.Font" />의 em-size(포인트)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font.%23ctor%2A> 생성자 및 <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, 및 <xref:System.Drawing.Font.Unit%2A> 속성입니다. 포함 된 Windows Form에서 사용 되는이 예제는 한 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1` 는 채워집니다 문자열 "클수록" 및 "소형"입니다. 폼에 다음 코드를 붙여 넣고 연결할는 `ComboBox1_SelectedIndexChanged` 메서드는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 의 이벤트는 <xref:System.Windows.Forms.ComboBox> 제어 합니다.  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strikeout">
      <MemberSignature Language="C#" Value="public bool Strikeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Strikeout" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Strikeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Strikeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Strikeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />가 글꼴을 통과하는 가로줄을 지정하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          이 <see cref="T:System.Drawing.Font" />에 글꼴을 통과하는 가로줄이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Drawing.FontStyle Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.FontStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::FontStyle Style { System::Drawing::FontStyle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 스타일 정보를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Drawing.Font" />의 스타일 정보를 포함하는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font> 단추를 사용 하 여 새 굵은 글꼴의 속성은 <xref:System.Drawing.FontStyle> 열거형입니다. 이 예제는 Windows Forms에서 사용 되는 설계 합니다. 이라는 버튼을 포함 하는 양식을 만듭니다 `Button1` 을 다음 코드를 붙여 넣습니다. 연결 된 `Button1_Click` 메서드는 단추의 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.MiscExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.MiscExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.MiscExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
        <param name="context">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
        <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemFontName">
      <MemberSignature Language="C#" Value="public string SystemFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemFontName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.SystemFontName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemFontName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Drawing.Font.IsSystemFont" /> 속성이 <see langword="true" />를 반환하는 경우 시스템 글꼴의 이름을 가져옵니다.</summary>
        <value>
          <see cref="P:System.Drawing.Font.IsSystemFont" />가 <see langword="true" />를 반환하면 시스템 글꼴의 이름이고, 그렇지 않으면 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 되는 <xref:System.Drawing.Font.SystemFontName%2A> 속성의 멤버 중 하나가 됩니다는 <xref:System.Drawing.SystemFonts>문자열로 변환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHfont">
      <MemberSignature Language="C#" Value="public IntPtr ToHfont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int ToHfont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToHfont" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHfont () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr ToHfont();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 핸들을 반환합니다.</summary>
        <returns>이 <see cref="T:System.Drawing.Font" />에 대한 창 핸들입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하면 결과 삭제 해야 `Hfont` 를 사용 하는 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` 메서드는 리소스를 해제 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Drawing.Font> 보유 하 고 있는에 대 한 핸들을 가져옵니다 <xref:System.Drawing.Font>합니다. 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicFontsExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">작업에 실패한 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLogFont">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />에서 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLogFont">
      <MemberSignature Language="C#" Value="public void ToLogFont (object logFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToLogFont(object logFont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToLogFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToLogFont (logFont As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToLogFont(System::Object ^ logFont);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logFont" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="logFont">이 메서드가 만드는 <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Font" />에서 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 설정의 `logFont` 글꼴 변환의 결과를 매개 변수입니다. 논리 글꼴에 대 한 자세한 내용은 참조 [LOGFONT 구조](http://msdn.microsoft.com/library/dd145037.aspx)합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ToLogFont">
      <MemberSignature Language="C#" Value="public void ToLogFont (object logFont, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToLogFont(object logFont, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToLogFont(System::Object ^ logFont, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logFont" Type="System.Object" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="logFont">이 메서드가 만드는 <see langword="LOGFONT" /> 구조체를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <param name="graphics">
          <see langword="LOGFONT" /> 구조체에 대한 추가 정보를 제공하는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Font" />에서 GDI 논리 글꼴(<c>LOGFONT</c>) 구조체를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 설정의 `logFont` 글꼴 변환의 결과를 매개 변수입니다. 논리 글꼴에 대 한 자세한 내용은 참조 [LOGFONT 구조](http://msdn.microsoft.com/library/dd145037.aspx)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" />가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연관 된 열거: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 사람이 인식할 수 있는 문자열 표현을 반환합니다.</summary>
        <returns>이 <see cref="T:System.Drawing.Font" />를 나타내는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 문자열에 다음 형식은 같습니다.  
  
 [Font: Name=*fontName*, Size=*size*, Units=*units*, GDiCharSet=*gdiCharSet*, GdiVerticalFont=*boolean*]  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   
          <xref:System.Drawing.Font>을 만듭니다.  
  
-   글꼴을 나타내는 문자열을 가져옵니다.  
  
-   메시지 상자에 문자열을 표시 합니다.  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicFontsExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public bool Underline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Underline" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Underline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Underline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Underline { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />에 밑줄이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          이 <see cref="T:System.Drawing.Font" />에 밑줄이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unit">
      <MemberSignature Language="C#" Value="public System.Drawing.GraphicsUnit Unit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.GraphicsUnit Unit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Unit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unit As GraphicsUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::GraphicsUnit Unit { System::Drawing::GraphicsUnit get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter/FontUnitConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.GraphicsUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Font" />의 단위를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Drawing.Font" />의 단위를 나타내는 <see cref="T:System.Drawing.GraphicsUnit" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Font.%23ctor%2A> 생성자 및 <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, 및 <xref:System.Drawing.Font.Unit%2A> 속성입니다. 포함 된 Windows Form에서 사용 되는이 예제는 한 <xref:System.Windows.Forms.ComboBox> 라는 `ComboBox1` 는 채워집니다 문자열 "클수록" 및 "소형"입니다. 폼에 다음 코드를 붙여 넣고 연결할는 `ComboBox1_SelectedIndexChanged` 메서드는 <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> 의 이벤트는 <xref:System.Windows.Forms.ComboBox> 제어 합니다.  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>