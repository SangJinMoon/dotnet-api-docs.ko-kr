<Type Name="IconConverter" FullName="System.Drawing.IconConverter">
  <TypeSignature Language="C#" Value="public class IconConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IconConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.IconConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class IconConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class IconConverter : System::ComponentModel::ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e411a-101"><see cref="T:System.Drawing.Icon" /> 개체를 한 데이터 형식에서 다른 것으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-101">Converts an <see cref="T:System.Drawing.Icon" /> object from one data type to another.</span></span> <span data-ttu-id="e411a-102"><see cref="T:System.ComponentModel.TypeDescriptor" /> 개체를 통해 이 클래스에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IconConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e411a-103"><see cref="T:System.Drawing.IconConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-103">Initializes a new instance of the <see cref="T:System.Drawing.IconConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e411a-104">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="e411a-105">변환할 원본 형식을 지정하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="e411a-106">이 <see cref="T:System.Drawing.IconConverter" />에서 지정된 컨텍스트를 사용하여 지정된 형식의 인스턴스를 <see cref="T:System.Drawing.Icon" />로 변환할 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-106">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Icon" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="e411a-107">이 <see cref="T:System.Drawing.IconConverter" />가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411a-108">이 메서드가 반환 `true` 경우에만 `sourceType` 바이트 배열로 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e411a-109">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e411a-110">변환할 대상 형식을 지정하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="e411a-111">이 <see cref="T:System.Drawing.IconConverter" />에서 지정된 컨텍스트를 사용하여 <see cref="T:System.Drawing.Icon" />를 지정된 형식의 인스턴스로 변환할 수 있는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-111">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an <see cref="T:System.Drawing.Icon" /> to an instance of a specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="e411a-112">이 <see cref="T:System.Drawing.IconConverter" />가 변환을 수행할 수 있으면 이 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411a-113">이 메서드가 반환 `true` 경우에만 `destinationType` 은 바이트 배열 또는 문자열과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-113">This method returns `true` only if `destinationType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e411a-114">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="e411a-115">특정 문화권에 대한 정보를 보관하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span></span></param>
        <param name="value"><span data-ttu-id="e411a-116">변환될 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-116">The <see cref="T:System.Object" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="e411a-117">지정된 개체를 <see cref="T:System.Drawing.Icon" />로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-117">Converts a specified object to an <see cref="T:System.Drawing.Icon" />.</span></span></summary>
        <returns><span data-ttu-id="e411a-118">이 메서드는 성공하면 지정된 개체를 변환하여 만든 <see cref="T:System.Drawing.Icon" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Icon" /> that it created by converting the specified object.</span></span> <span data-ttu-id="e411a-119">그렇지 않으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-119">Otherwise, it throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e411a-120">변환을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e411a-120">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e411a-121">형식 컨텍스트를 제공하는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-121">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="e411a-122">특정 문화에서 사용된 형식 지정 규칙을 지정하는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-122">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span></span></param>
        <param name="value"><span data-ttu-id="e411a-123">변환할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-123">The object to convert.</span></span> <span data-ttu-id="e411a-124">이 개체는 아이콘 형식이거나 <see cref="T:System.Drawing.Icon" />으로 캐스팅될 수 있는 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-124">This object should be of type icon or some type that can be cast to <see cref="T:System.Drawing.Icon" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e411a-125">아이콘을 변환할 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-125">The type to convert the icon to.</span></span></param>
        <summary><span data-ttu-id="e411a-126"><see cref="T:System.Drawing.Icon" /> 또는 <see cref="T:System.Drawing.Icon" />으로 캐스팅할 수 있는 개체를 지정된 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-126">Converts an <see cref="T:System.Drawing.Icon" /> (or an object that can be cast to an <see cref="T:System.Drawing.Icon" />) to a specified type.</span></span></summary>
        <returns><span data-ttu-id="e411a-127">이 메서드는 변환된 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-127">This method returns the converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411a-128">기본 구현 호출은 <xref:System.Object.ToString%2A> 개체의 메서드는 개체가 올바른지와 대상 형식이 `string`합니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-128">The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`.</span></span> <span data-ttu-id="e411a-129">이 메서드가 대상 형식으로 변환할 수 없는 경우 throw 한 <xref:System.NotSupportedException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="e411a-129">If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e411a-130">변환을 수행할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="e411a-130">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>