<Type Name="Image" FullName="System.Drawing.Image">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1baa4fa01ae9a4afded78e0e700c0057ae65b944" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37657120" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Image extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Image" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Image&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Image abstract : MarshalByRefObject, ICloneable, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Image = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.ImageEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An abstract base class that provides functionality for the <see cref="T:System.Drawing.Bitmap" /> and <see cref="T:System.Drawing.Imaging.Metafile" /> descended classes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그릴를 <xref:System.Drawing.Image> Windows 폼에 사용 해야 중 하나는 <xref:System.Drawing.Graphics.DrawImage%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms를 사용 하 여 사용을 위해 설계 되었습니다. 에 대 한 처리기를 <xref:System.Windows.Forms.Control.Paint> 이벤트입니다. <xref:System.Drawing.Graphics> 개체 이벤트에 전달 되 고 폼에 이미지를 그리는 데 사용 됩니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   예제 라는 파일에서 이미지를 만듭니다. 이 파일은 응용 프로그램 실행 파일과 동일한 폴더에 있어야 합니다.  
  
-   이미지의 왼쪽 위 모퉁이 그릴 점을 만듭니다.  
  
-   폼의 실제 크기의 이미지를 그립니다.  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#55)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#55)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#55)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="image.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an exact copy of this <see cref="T:System.Drawing.Image" />.</summary>
        <returns>The <see cref="T:System.Drawing.Image" /> this method creates, cast as an object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Releases all resources used by this <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Drawing.Image.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Drawing.Image>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.Image> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="image.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources used by this <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출을 <xref:System.Drawing.Image.Dispose%2A> 방법을 사용 하는이 리소스를 사용 하면 <xref:System.Drawing.Image> 다른 용도로 다시 할당 될 수 있습니다.  
  
 <xref:System.Drawing.Image.Dispose%2A> 사용을 마치면 <xref:System.Drawing.Image>를 호출합니다. <xref:System.Drawing.Image.Dispose%2A> 메서드를 사용하면 <xref:System.Drawing.Image>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.Drawing.Image.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Drawing.Image> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Image> 차지한 합니다. 자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Image.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Drawing.Image>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.Image> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="image.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:System.Drawing.Image" /> and optionally releases the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Drawing.Image.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Drawing.Image>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.Image> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Image ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Image ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="image.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public int Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Flags { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : int" Usage="System.Drawing.Image.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets attribute flags for the pixel data of this <see cref="T:System.Drawing.Image" />.</summary>
        <value>비트 조합을 나타내는 정수입니다 <see cref="T:System.Drawing.Imaging.ImageFlags" /> 이 <see cref="T:System.Drawing.Image" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에서 반환 되는 정수 값의 합계에 해당 <xref:System.Drawing.Imaging.ImageFlags>다음 표에 설명 된 대로 합니다.  
  
|ImageFlag 값|정수 표현|  
|---------------------|----------------------------|  
|`ImageFlagsNone`|0|  
|`ImageFlagsScalable`|1|  
|`ImageFlagsHasAlpha`|2|  
|`ImageFlagsHasTranslucent`|4|  
|`ImageFlagsPartiallyScalable`|8|  
|`ImageFlagsColorSpaceRGB`|16|  
|`ImageFlagsColorSpaceCMYK`|32|  
|`ImageFlagsColorSpaceGRAY`|64|  
|`ImageFlagsColorSpaceYCBCR`|128|  
|`ImageFlagsColorSpaceYCCK`|256|  
|`ImageFlagsHasRealDPI`|4096|  
|`ImageFlagsHasRealPixelSize`|8192|  
|`ImageFlagsReadOnly`|65536|  
|`ImageFlagsCaching`|131072|  
  
 예를 들어 경우는 <xref:System.Drawing.Image.Flags%2A> 이미지에 대 한 속성 77960을 반환 합니다 <xref:System.Drawing.Imaging.ImageFlags> 이미지에 대 한 <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, 및 <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameDimensionsList">
      <MemberSignature Language="C#" Value="public Guid[] FrameDimensionsList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid[] FrameDimensionsList" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.FrameDimensionsList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameDimensionsList As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Guid&gt; ^ FrameDimensionsList { cli::array &lt;Guid&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameDimensionsList : Guid[]" Usage="System.Drawing.Image.FrameDimensionsList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of GUIDs that represent the dimensions of frames within this <see cref="T:System.Drawing.Image" />.</summary>
        <value>이 프레임의 크기를 지정 하는 Guid의 배열을 <see cref="T:System.Drawing.Image" /> 에서 가장 중요 하지 않은에 가장 중요 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 두 가지 스타일 다중 프레임 이미지에 대 한 정보를 반환 합니다: 여러 페이지 및 여러 해결 합니다.  
  
 다중 페이지 이미지는 둘 이상의 이미지가 포함 된 이미지. 각 페이지는 단일 이미지 (또는 프레임)을 포함합니다. 이러한 페이지 (이미지, 또는 프레임)를 연속 해 서 나오는 애니메이션된.gif 파일을 같은 애니메이션된 시퀀스를 생성 하기 위해 일반적으로 표시 됩니다.  
  
 다중 해상도 이미지를 이미지 해상도 서로 다른 이미지 복사본을 여러 개를 포함 하는 경우 이 일반적으로 사용 MIP 매핑을 통해 표시 되는 이미지 크기를 그리기에 사용 되는 이미지의 해상도 결정 하는 위치입니다. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 임의 개수의 해상도와 임의 개수의 페이지 (또는 이미지 또는 프레임)를 지원할 수 있습니다. 속성으로 정의 된 크기는 <xref:System.Drawing.Imaging.FrameDimension>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified file.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (filename As String) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromFile(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="static member FromFile : string -&gt; System.Drawing.Image" Usage="System.Drawing.Image.FromFile filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" />.</param>
        <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified file.</summary>
        <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관리 GDI + 기본 제공 인코더 및 디코더는 다음 파일 형식을 지 원하는 있습니다.  
  
-   BMP  
  
-   GIF  
  
-   JPEG  
  
-   PNG  
  
-   TIFF  
  
 파일이 계속 잠겨까지 <xref:System.Drawing.Image> 삭제 됩니다.  
  
 파일에 올바른 이미지 형식이 없는 경우 또는 경우 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 픽셀 형식을 지원 하지 않는 파일의이 메서드는 다음과 같이 throw 됩니다.는 <xref:System.OutOfMemoryException> 예외입니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> 클래스 비트맵의 알파 투명도 지원 하지 않습니다. 알파 투명도 사용 하도록 설정 하려면 픽셀당 32 비트를 사용 하 여 PNG 이미지를 사용 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Drawing.Image.FromFile%2A> <xref:System.Drawing.Image.GetPropertyItem%2A> 고 <xref:System.Drawing.Image.SetPropertyItem%2A> 메서드. 이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다. 이 예제를 실행 하려면 폼에 붙여 넣습니다 하 고 폼의 처리 <xref:System.Windows.Forms.Control.Paint> 를 호출 하 여 이벤트를 `DemonstratePropertyItem` 메서드를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">The file does not have a valid image format.  -or-  [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The specified file does not exist.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> is a <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromFile(string filename, bool useEmbeddedColorManagement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (filename As String, useEmbeddedColorManagement As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromFile(System::String ^ filename, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="F#" Value="static member FromFile : string * bool -&gt; System.Drawing.Image" Usage="System.Drawing.Image.FromFile (filename, useEmbeddedColorManagement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">Set to <see langword="true" /> to use color management information embedded in the image file; otherwise, <see langword="false" />.</param>
        <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified file using embedded color management information in that file.</summary>
        <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관리 GDI + 기본 제공 인코더 및 디코더는 다음 파일 형식을 지 원하는 있습니다.  
  
-   BMP  
  
-   GIF  
  
-   JPEG  
  
-   PNG  
  
-   TIFF  
  
 파일에 올바른 이미지 형식이 없는 경우 또는 경우 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 픽셀 형식을 지원 하지 않는 파일의이 메서드는 다음과 같이 throw 됩니다.는 <xref:System.OutOfMemoryException> 예외입니다.  
  
 파일이 계속 잠겨까지 <xref:System.Drawing.Image> 삭제 됩니다.  
  
 합니다 `useEmbeddedColorManagement` 매개 변수를 지정 하는지 여부를 새 <xref:System.Drawing.Image> 이미지 파일에 포함 된 색 관리 정보에 따라 색 보정을 적용 합니다. 포함 된 정보는 International Color Consortium (ICC) 프로필, 감마 값 및 chromaticity 정보에 포함할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> 클래스 비트맵의 알파 투명도 지원 하지 않습니다. 알파 투명도 사용 하도록 설정 하려면 픽셀당 32 비트를 사용 하 여 PNG 이미지를 사용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하 여 새 비트맵을 가져오는 방법을 보여 줍니다는 <xref:System.Drawing.Image.FromFile%2A> 메서드. 또한 보여 줍니다는 <xref:System.Drawing.TextureBrush>합니다.  
  
 이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다. 라는 단추가 포함 된 양식을 만드는 `Button2`합니다. 폼에 코드를 붙여 넣고 연결 합니다 `Button2_Click` 단추를 사용 하 여 메서드 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">The file does not have a valid image format.  -or-  [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file.</exception>
        <exception cref="T:System.IO.FileNotFoundException">The specified file does not exist.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> is a <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from a Windows handle.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHbitmap">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHbitmap(native int hbitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromHbitmap(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHbitmap (hbitmap As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHbitmap(IntPtr hbitmap);" />
      <MemberSignature Language="F#" Value="static member FromHbitmap : nativeint -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Image.FromHbitmap hbitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hbitmap" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hbitmap">The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from a handle to a GDI bitmap.</summary>
        <returns>The <see cref="T:System.Drawing.Bitmap" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.FromHbitmap%2A> 메서드의 복사본을 만듭니다는 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 비트맵; 들어오는 해제할 수 있도록 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 를 사용 하 여 비트맵을 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` 새 만든 후 즉시 메서드 <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHbitmap">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHbitmap(native int hbitmap, native int hpalette) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHbitmap (hbitmap As IntPtr, hpalette As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHbitmap(IntPtr hbitmap, IntPtr hpalette);" />
      <MemberSignature Language="F#" Value="static member FromHbitmap : nativeint * nativeint -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Image.FromHbitmap (hbitmap, hpalette)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hbitmap" Type="System.IntPtr" />
        <Parameter Name="hpalette" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hbitmap">The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="hpalette">A handle to a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] palette used to define the bitmap colors if the bitmap specified in the <c>hBitmap</c> parameter is not a device-independent bitmap (DIB).</param>
        <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from a handle to a GDI bitmap and a handle to a GDI palette.</summary>
        <returns>The <see cref="T:System.Drawing.Bitmap" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.FromHbitmap%2A> 메서드의 복사본을 만듭니다는 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 비트맵; 들어오는 해제할 수 있도록 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 를 사용 하 여 비트맵을 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` 새 만든 후 즉시 메서드 <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromStream">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member FromStream : System.IO.Stream -&gt; System.Drawing.Image" Usage="System.Drawing.Image.FromStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Image" />.</param>
        <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream.</summary>
        <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두어야 스트림 열기의 수명 동안는 <xref:System.Drawing.Image>합니다.  
  
 이 메서드는 동일한 스트림을 사용 하 여 연속적으로 호출 하는 경우 스트림의 0으로 다시 설정 됩니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> 클래스 비트맵의 알파 투명도 지원 하지 않습니다. 알파 투명도 사용 하도록 설정 하려면 픽셀당 32 비트를 사용 하 여 PNG 이미지를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The stream does not have a valid image format  -or-  <paramref name="stream" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream, bool useEmbeddedColorManagement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="F#" Value="static member FromStream : System.IO.Stream * bool -&gt; System.Drawing.Image" Usage="System.Drawing.Image.FromStream (stream, useEmbeddedColorManagement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">
          <see langword="true" /> to use color management information embedded in the data stream; otherwise, <see langword="false" />.</param>
        <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream, optionally using embedded color management information in that stream.</summary>
        <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두어야 스트림 열기의 수명 동안는 <xref:System.Drawing.Image>합니다.  
  
 합니다 `useEmbeddedColorManagement` 매개 변수를 지정 하는지 여부를 새 <xref:System.Drawing.Image> 데이터 스트림에 포함 된 색 관리 정보에 따라 색 보정을 적용 합니다. 포함 된 정보는 International Color Consortium (ICC) 프로필, 감마 값 및 chromaticity 정보에 포함할 수 있습니다.  
  
 이 메서드는 동일한 스트림을 사용 하 여 연속적으로 호출 하는 경우 스트림의 0으로 다시 설정 됩니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> 클래스 비트맵의 알파 투명도 지원 하지 않습니다. 알파 투명도 사용 하도록 설정 하려면 픽셀당 32 비트를 사용 하 여 PNG 이미지를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The stream does not have a valid image format  -or-  <paramref name="stream" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream, bool useEmbeddedColorManagement, bool validateImageData);" />
      <MemberSignature Language="F#" Value="static member FromStream : System.IO.Stream * bool * bool -&gt; System.Drawing.Image" Usage="System.Drawing.Image.FromStream (stream, useEmbeddedColorManagement, validateImageData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
        <Parameter Name="validateImageData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">
          <see langword="true" /> to use color management information embedded in the data stream; otherwise, <see langword="false" />.</param>
        <param name="validateImageData">
          <see langword="true" /> to validate the image data; otherwise, <see langword="false" />.</param>
        <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream, optionally using embedded color management information and validating the image data.</summary>
        <returns>The <see cref="T:System.Drawing.Image" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `useEmbeddedColorManagement` 매개 변수를 지정 하는지 여부를 새 <xref:System.Drawing.Image> 데이터 스트림에 포함 된 색 관리 정보에 따라 색 보정을 적용 합니다. 포함 된 정보는 International Color Consortium (ICC) 프로필, 감마 값 및 chromaticity 정보에 포함할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> 클래스 비트맵의 알파 투명도 지원 하지 않습니다. 알파 투명도 사용 하도록 설정 하려면 픽셀당 32 비트를 사용 하 여 PNG 이미지를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The stream does not have a valid image format.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(valuetype System.Drawing.GraphicsUnit&amp; pageUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (ByRef pageUnit As GraphicsUnit) As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::GraphicsUnit % pageUnit);" />
      <MemberSignature Language="F#" Value="member this.GetBounds :  -&gt; System.Drawing.RectangleF" Usage="image.GetBounds pageUnit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageUnit" Type="System.Drawing.GraphicsUnit&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pageUnit">One of the <see cref="T:System.Drawing.GraphicsUnit" /> values indicating the unit of measure for the bounding rectangle.</param>
        <summary>Gets the bounds of the image in the specified unit.</summary>
        <returns>The <see cref="T:System.Drawing.RectangleF" /> that represents the bounds of the image, in the specified unit.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서 비트맵을 로드 하는 방법에 설명를 <xref:System.Drawing.Icon> 사용 하 여 처리를 <xref:System.Drawing.GraphicsUnit> 열거형을 사용 하는 방법의 <xref:System.Drawing.Rectangle.Round%2A> 비트맵의 사각형 범위를 그리는 방법.  
  
 이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다. 라는 단추가 있는 양식을 만드는 `Button2`합니다. 양식에 코드를 붙여넣고 단추를 사용 하 여이 메서드를 연결 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.BitmapMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.BitmapMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BitmapMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoderParameterList">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.EncoderParameters GetEncoderParameterList(valuetype System.Guid encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncoderParameterList (encoder As Guid) As EncoderParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::EncoderParameters ^ GetEncoderParameterList(Guid encoder);" />
      <MemberSignature Language="F#" Value="member this.GetEncoderParameterList : Guid -&gt; System.Drawing.Imaging.EncoderParameters" Usage="image.GetEncoderParameterList encoder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="encoder">A GUID that specifies the image encoder.</param>
        <summary>Returns information about the parameters supported by the specified image encoder.</summary>
        <returns>An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that contains an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects. Each <see cref="T:System.Drawing.Imaging.EncoderParameter" /> contains information about one of the parameters supported by the specified image encoder.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrameCount">
      <MemberSignature Language="C#" Value="public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFrameCount(class System.Drawing.Imaging.FrameDimension dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFrameCount (dimension As FrameDimension) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFrameCount(System::Drawing::Imaging::FrameDimension ^ dimension);" />
      <MemberSignature Language="F#" Value="member this.GetFrameCount : System.Drawing.Imaging.FrameDimension -&gt; int" Usage="image.GetFrameCount dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Drawing.Imaging.FrameDimension" />
      </Parameters>
      <Docs>
        <param name="dimension">A <see cref="T:System.Drawing.Imaging.FrameDimension" /> that specifies the identity of the dimension type.</param>
        <summary>Returns the number of frames of the specified dimension.</summary>
        <returns>The number of frames in the specified dimension.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 두 가지 스타일 다중 프레임 이미지에 대 한 정보를 반환 합니다: 여러 페이지 및 여러 해결 합니다.  
  
 다중 페이지 이미지는 둘 이상의 이미지가 포함 된 이미지. 각 페이지는 단일 이미지 (또는 프레임)을 포함합니다. 이러한 페이지 (이미지, 또는 프레임)를 연속 해 서 나오는 애니메이션된.gif 파일을 같은 애니메이션된 시퀀스를 생성 하기 위해 일반적으로 표시 됩니다.  
  
 다중 해상도 이미지를 이미지 해상도 서로 다른 이미지 복사본을 여러 개를 포함 하는 경우 이 일반적으로 사용 MIP 매핑을 통해 표시 되는 이미지 크기를 그리기에 사용 되는 이미지의 해상도 결정 하는 위치입니다. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 임의 개수의 해상도와 임의 개수의 페이지 (또는 이미지 또는 프레임)를 지원할 수 있습니다. 속성으로 정의 된 크기는 <xref:System.Drawing.Imaging.FrameDimension>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelFormatSize">
      <MemberSignature Language="C#" Value="public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPixelFormatSize(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPixelFormatSize (pixfmt As PixelFormat) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetPixelFormatSize(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberSignature Language="F#" Value="static member GetPixelFormatSize : System.Drawing.Imaging.PixelFormat -&gt; int" Usage="System.Drawing.Image.GetPixelFormatSize pixfmt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> member that specifies the format for which to find the size.</param>
        <summary>Returns the color depth, in number of bits per pixel, of the specified pixel format.</summary>
        <returns>The color depth of the specified pixel format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyItem">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.PropertyItem GetPropertyItem(int32 propid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetPropertyItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyItem (propid As Integer) As PropertyItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::PropertyItem ^ GetPropertyItem(int propid);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyItem : int -&gt; System.Drawing.Imaging.PropertyItem" Usage="image.GetPropertyItem propid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PropertyItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propid">The ID of the property item to get.</param>
        <summary>Gets the specified property item from this <see cref="T:System.Drawing.Image" />.</summary>
        <returns>The <see cref="T:System.Drawing.Imaging.PropertyItem" /> this method gets.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 항목 Id 및 추가 정보 링크의 목록을 참조 하세요. <xref:System.Drawing.Imaging.PropertyItem.Id%2A>합니다.  
  
 때문에 속성 항목을 설정 하기 어려운 것은 <xref:System.Drawing.Imaging.PropertyItem> 클래스에 public 생성자가 없는 합니다. 이 제한을 해결 하는 한 가지 방법은 가져오는 방법은 <xref:System.Drawing.Imaging.PropertyItem> 검색 하 여는 <xref:System.Drawing.Image.PropertyItems%2A> 속성 값 또는 호출 합니다 <xref:System.Drawing.Image.GetPropertyItem%2A> 메서드의 <xref:System.Drawing.Image> 속성 항목을 이미 있는 합니다. 필드를 설정할 수 있습니다 합니다 <xref:System.Drawing.Imaging.PropertyItem> 시키고 <xref:System.Drawing.Image.SetPropertyItem%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Drawing.Image.GetPropertyItem%2A> 고 <xref:System.Drawing.Image.SetPropertyItem%2A> 메서드. 이 예제에서는 호출 <xref:System.Drawing.Image.GetPropertyItem%2A> ID 값을 전달 합니다. ID의 목록을 참조, 값에 대 한 <xref:System.Drawing.Imaging.PropertyItem.Id%2A>합니다. 이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다. 이 예제를 실행 하려면 폼에 붙여 넣습니다 하 고 폼의 처리 <xref:System.Windows.Forms.Control.Paint> 를 호출 하 여 이벤트를 `DemonstratePropertyItem` 메서드를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The image format of this image does not support property items.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetThumbnailImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetThumbnailImage(int32 thumbWidth, int32 thumbHeight, class System.Drawing.Image/GetThumbnailImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetThumbnailImage (thumbWidth As Integer, thumbHeight As Integer, callback As Image.GetThumbnailImageAbort, callbackData As IntPtr) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetThumbnailImage(int thumbWidth, int thumbHeight, System::Drawing::Image::GetThumbnailImageAbort ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.GetThumbnailImage : int * int * System.Drawing.Image.GetThumbnailImageAbort * nativeint -&gt; System.Drawing.Image" Usage="image.GetThumbnailImage (thumbWidth, thumbHeight, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thumbWidth" Type="System.Int32" />
        <Parameter Name="thumbHeight" Type="System.Int32" />
        <Parameter Name="callback" Type="System.Drawing.Image+GetThumbnailImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="thumbWidth">The width, in pixels, of the requested thumbnail image.</param>
        <param name="thumbHeight">The height, in pixels, of the requested thumbnail image.</param>
        <param name="callback">A <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> delegate.  **Note** You must create a delegate and pass a reference to the delegate as the <c>callback</c> parameter, but the delegate is not used.</param>
        <param name="callbackData">Must be <see cref="F:System.IntPtr.Zero" />.</param>
        <summary>Returns a thumbnail for this <see cref="T:System.Drawing.Image" />.</summary>
        <returns>An <see cref="T:System.Drawing.Image" /> that represents the thumbnail.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Drawing.Image> 포함된 된 미리 보기 이미지가 들어이 메서드는 포함 된 미리 보기를 검색 하 고 요청된 된 크기를 조정 합니다. 경우는 <xref:System.Drawing.Image> 포함된 된 미리 보기 이미지가 없습니다.이 메서드는 기본 이미지를 확장 하 여 썸네일 이미지를 만듭니다.  
  
 <xref:System.Drawing.Image.GetThumbnailImage%2A> 메서드 요청한 축소판 그림 이미지 약 120x120 픽셀 크기를 갖는 경우 잘 작동 합니다. 큰 축소판 그림 이미지 (예: 300 x 300)를 요청 하는 경우는 <xref:System.Drawing.Image> 는 포함 된 축소판 그림을 미리 보기 이미지의 품질의 크게 떨어질 수 있습니다. 이 예제는 포함 된 Windows Forms에 사용할를 <xref:System.Drawing.Graphics.DrawImage%2A> , 하 고  라는 ,  및 각각.  
  
   
  
## Examples  
 다음 코드 예제에서는 만들고 축소판 이미지를 표시 합니다. 이 대리자가 호출 되지 않습니다.  
  
 [!code-csharp[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#getthumbnail)]
 [!code-vb[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#getthumbnail)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="System.Drawing.Image.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height, in pixels, of this <see cref="T:System.Drawing.Image" />.</summary>
        <value>이 <see cref="T:System.Drawing.Image" />의 높이(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 파일에서 새 비트맵을 생성 하는 방법을 보여 줍니다.를 사용 하는 <xref:System.Drawing.Bitmap.GetPixel%2A> 및 <xref:System.Drawing.Bitmap.SetPixel%2A> 이미지 다시 칠하기 방법입니다. 또한를 사용 합니다 <xref:System.Drawing.Image.PixelFormat%2A> 및 <xref:System.Drawing.Image.Height%2A> 속성입니다.  
  
 이 예제는 포함 된 Windows Forms에 사용할를 <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, 및 <xref:System.Windows.Forms.Button> 라는 `Label1`를 `PictureBox1`, 및 `Button1`, 각각. 폼에 코드를 붙여 넣고 연결 합니다 `Button1_Click` 단추를 사용 하 여 메서드 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalResolution">
      <MemberSignature Language="C#" Value="public float HorizontalResolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HorizontalResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.HorizontalResolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalResolution As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HorizontalResolution { float get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalResolution : single" Usage="System.Drawing.Image.HorizontalResolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the horizontal resolution, in pixels per inch, of this <see cref="T:System.Drawing.Image" />.</summary>
        <value>이 인치당 픽셀의 가로 해상도 <see cref="T:System.Drawing.Image" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlphaPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAlphaPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAlphaPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAlphaPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberSignature Language="F#" Value="static member IsAlphaPixelFormat : System.Drawing.Imaging.PixelFormat -&gt; bool" Usage="System.Drawing.Image.IsAlphaPixelFormat pixfmt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> to test.</param>
        <summary>Returns a value that indicates whether the pixel format for this <see cref="T:System.Drawing.Image" /> contains alpha information.</summary>
        <returns>
          <see langword="true" /> if <paramref name="pixfmt" /> contains alpha information; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCanonicalPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCanonicalPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCanonicalPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberSignature Language="F#" Value="static member IsCanonicalPixelFormat : System.Drawing.Imaging.PixelFormat -&gt; bool" Usage="System.Drawing.Image.IsCanonicalPixelFormat pixfmt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> to test.</param>
        <summary>Returns a value that indicates whether the pixel format is 32 bits per pixel.</summary>
        <returns>
          <see langword="true" /> if <paramref name="pixfmt" /> is canonical; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정식 픽셀 형식이 픽셀당 32 비트의 픽셀 형식을 나타냅니다. 이 형식은 24 비트 색 농도 8 비트 알파 채널을 지정합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExtendedPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsExtendedPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsExtendedPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExtendedPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberSignature Language="F#" Value="static member IsExtendedPixelFormat : System.Drawing.Imaging.PixelFormat -&gt; bool" Usage="System.Drawing.Image.IsExtendedPixelFormat pixfmt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration to test.</param>
        <summary>Returns a value that indicates whether the pixel format is 64 bits per pixel.</summary>
        <returns>
          <see langword="true" /> if <paramref name="pixfmt" /> is extended; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.ColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.ColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::ColorPalette ^ Palette { System::Drawing::Imaging::ColorPalette ^ get(); void set(System::Drawing::Imaging::ColorPalette ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Palette : System.Drawing.Imaging.ColorPalette with get, set" Usage="System.Drawing.Image.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color palette used for this <see cref="T:System.Drawing.Image" />.</summary>
        <value>A <see cref="T:System.Drawing.Imaging.ColorPalette" /> 이 사용 되는 색상표를 나타내는 <see cref="T:System.Drawing.Image" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 복사본을 반환 합니다 <xref:System.Drawing.Imaging.ColorPalette> 이 사용 되는 개체 <xref:System.Drawing.Image>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalDimension">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF PhysicalDimension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF PhysicalDimension" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PhysicalDimension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalDimension As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::SizeF PhysicalDimension { System::Drawing::SizeF get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalDimension : System.Drawing.SizeF" Usage="System.Drawing.Image.PhysicalDimension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width and height of this image.</summary>
        <value>A <see cref="T:System.Drawing.SizeF" /> 구조체의 높이 너비를 나타내는 <see cref="T:System.Drawing.Image" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이미지는 비트맵, 너비와 높이 픽셀 단위로 반환 됩니다. 메타 파일 이미지 이면 너비와 높이 0.01mm) 단위로 반환 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PixelFormat PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.PixelFormat PixelFormat" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PixelFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelFormat As PixelFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::PixelFormat PixelFormat { System::Drawing::Imaging::PixelFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelFormat : System.Drawing.Imaging.PixelFormat" Usage="System.Drawing.Image.PixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the pixel format for this <see cref="T:System.Drawing.Image" />.</summary>
        <value>A <see cref="T:System.Drawing.Imaging.PixelFormat" /> 이 대 한 픽셀 형식을 나타내는 <see cref="T:System.Drawing.Image" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 파일에서 새 비트맵을 생성 하는 방법을 보여 줍니다.를 사용 하는 <xref:System.Drawing.Bitmap.GetPixel%2A> 및 <xref:System.Drawing.Bitmap.SetPixel%2A> 이미지 다시 칠하기 방법입니다. 또한 사용 하 여는 <xref:System.Drawing.Image.PixelFormat%2A> 속성입니다.  
  
 이 예제는 포함 하는 Windows 폼을 사용 하 여 사용할 수는 <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> 및 <xref:System.Windows.Forms.Button> 라는 `Label1`, `PictureBox1`, 및 `Button1`각각. 폼에 코드를 붙여 넣고 연결 합니다 `Button1_Click` 단추를 사용 하 여 메서드 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyIdList">
      <MemberSignature Language="C#" Value="public int[] PropertyIdList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PropertyIdList" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PropertyIdList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyIdList As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PropertyIdList { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyIdList : int[]" Usage="System.Drawing.Image.PropertyIdList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets IDs of the property items stored in this <see cref="T:System.Drawing.Image" />.</summary>
        <value>이 이미지에 저장된 각 속성 항목에 대한 속성 ID의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이미지 속성 항목이 있는 경우 또는 이미지 형식이 속성 항목을 지원 하지 않는 경우는 <xref:System.Drawing.Image.PropertyIdList%2A> 속성 빈 배열 (즉, 길이가 0 인 배열)를 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.PropertyItem[] PropertyItems" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PropertyItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyItems As PropertyItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Imaging::PropertyItem ^&gt; ^ PropertyItems { cli::array &lt;System::Drawing::Imaging::PropertyItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyItems : System.Drawing.Imaging.PropertyItem[]" Usage="System.Drawing.Image.PropertyItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PropertyItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets all the property items (pieces of metadata) stored in this <see cref="T:System.Drawing.Image" />.</summary>
        <value>배열을 <see cref="T:System.Drawing.Imaging.PropertyItem" /> 개체, 항목 이미지에 저장 된 각 속성에 대 한 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이미지 속성 항목이 있는 경우 또는 이미지 형식이 속성 항목을 지원 하지 않는 경우 <xref:System.Drawing.Image.PropertyItems%2A> 빈 배열 (즉, 길이가 0 인 배열)를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 읽고 사용 하 여 이미지 파일에서 메타 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Imaging.PropertyItem?displayProperty=nameWithType> 클래스 및 <xref:System.Drawing.Image.PropertyItems%2A> 속성입니다.  
  
 이 예제는 하도록 설계 되었습니다 가져오는 Windows 폼을 사용 합니다 <xref:System.Drawing.Imaging?displayProperty=nameWithType> 네임 스페이스입니다. 양식에 코드를 붙여넣고 대 한 경로가 변경 `fakePhoto.jpg` 시스템에서 이미지 파일을 가리키도록 합니다. 호출을 `ExtractMetaData` 폼을 처리 하는 경우 메서드 <xref:System.Windows.Forms.Control.Paint> 이벤트를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ImageExample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ImageExample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawFormat">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.ImageFormat RawFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.ImageFormat RawFormat" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.RawFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawFormat As ImageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::ImageFormat ^ RawFormat { System::Drawing::Imaging::ImageFormat ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawFormat : System.Drawing.Imaging.ImageFormat" Usage="System.Drawing.Image.RawFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ImageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the file format of this <see cref="T:System.Drawing.Image" />.</summary>
        <value>합니다 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 이 파일 형식을 나타내는 <see cref="T:System.Drawing.Image" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyItem">
      <MemberSignature Language="C#" Value="public void RemovePropertyItem (int propid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyItem(int32 propid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.RemovePropertyItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyItem (propid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyItem(int propid);" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyItem : int -&gt; unit" Usage="image.RemovePropertyItem propid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propid">The ID of the property item to remove.</param>
        <summary>Removes the specified property item from this <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 속성 항목을 설정 하기 어려운 것은 <xref:System.Drawing.Imaging.PropertyItem> 클래스에 public 생성자가 없는 합니다. 이 제한을 해결 하는 한 가지 방법은 가져오는 방법은 <xref:System.Drawing.Imaging.PropertyItem> 검색 하 여는 <xref:System.Drawing.Image.PropertyItems%2A> 속성 값 또는 호출 합니다 <xref:System.Drawing.Image.GetPropertyItem%2A> 메서드의 <xref:System.Drawing.Image> 속성 항목을 이미 있는 합니다. 필드를 설정할 수 있습니다 합니다 <xref:System.Drawing.Imaging.PropertyItem> 시키고 <xref:System.Drawing.Image.SetPropertyItem%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The image does not contain the requested property item.  -or-  The image format for this image does not support property items.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateFlip">
      <MemberSignature Language="C#" Value="public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateFlip(valuetype System.Drawing.RotateFlipType rotateFlipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateFlip(System::Drawing::RotateFlipType rotateFlipType);" />
      <MemberSignature Language="F#" Value="member this.RotateFlip : System.Drawing.RotateFlipType -&gt; unit" Usage="image.RotateFlip rotateFlipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotateFlipType" Type="System.Drawing.RotateFlipType" />
      </Parameters>
      <Docs>
        <param name="rotateFlipType">A <see cref="T:System.Drawing.RotateFlipType" /> member that specifies the type of rotation and flip to apply to the image.</param>
        <summary>Rotates, flips, or rotates and flips the <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.RotateFlip%2A> 메서드는 이미지를 시계 방향 회전 합니다.  
  
 회전 된 후에 이미지를 그릴 원한다 면 항상 검색 해야 새 그래픽 개체 이미지에서 예외가 발생할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Drawing.Image.RotateFlip%2A> 메서드는 <xref:System.Drawing.Image> 및 <xref:System.Drawing.RotateFlipType> 열거형입니다.  
  
 이 예제는 포함 하는 Windows 폼을 사용 하 여 사용할 수는 <xref:System.Windows.Forms.PictureBox> 라는 `PictureBox1` 이라는 단추가 `Button1`합니다. 폼 호출 코드를 붙여넣고 `InitializeBitmap` 폼의 생성자에서 연결 `Button1_Click` 단추를 사용 하 여 <xref:System.Windows.Forms.Control.Click> 이벤트입니다. 비트맵에 파일 경로 시스템에 올바른지를 확인 합니다.  
  
 [!code-cpp[System.Drawing.BitmapMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.BitmapMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#3)]
 [!code-vb[System.Drawing.BitmapMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Saves this image to the specified stream in the specified format.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="image.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
        <summary>Saves this <see cref="T:System.Drawing.Image" /> to the specified file or stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이미지의 파일 형식에 대 한 없는 인코더 있으면 그래픽 PNG (이동식 네트워크) 인코더 사용 됩니다. 사용 하는 경우는 <xref:System.Drawing.Image.Save%2A> 그래픽 이미지를 Windows 메타 파일 형식 (WMF) 또는 확장 메타 파일 형식 (EMF) 파일, 결과 파일을 저장 하는 메서드는 PNG 이동식 네트워크 그래픽 () 파일로 저장 됩니다. 때문에이 문제가 발생 합니다 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 구성 요소는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] .wmf 또는.emf 파일로 파일을 저장 하는 데 사용할 수 있는 인코더에는 없습니다.  
  
 생성 된 동일한 파일에 이미지를 저장할 허용 되지 않습니다 하 고 예외를 throw 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Drawing.Image.Save%2A> 메서드. 이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다. 라는 단추가 있는 양식을 만드는 `Button5`합니다. 양식에 코드를 붙여넣고 메서드 버튼의 연결 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ImageExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ImageExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> is <see langword="null." /></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.  -or-  The image was saved to the same file it was created from.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="image.Save (stream, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="stream">The <see cref="T:System.IO.Stream" /> where the image will be saved.</param>
        <param name="format">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> that specifies the format of the saved image.</param>
        <summary>Saves this image to the specified stream in the specified format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이미지를 생성 하는 데 사용 된 동일한 스트림에 저장 하지 마십시오. 이렇게 하면 스트림이 손상 될 수 있습니다.  
  
 오프셋 0에서 스트림으로 이미지를 저장 해야 합니다. 이미지를 저장 하기 전에 추가 데이터를 스트림에 쓰여졌는지, 스트림에서 이미지 데이터를 손상 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> or <paramref name="format" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String, format As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="image.Save (filename, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="filename">A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
        <param name="format">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> for this <see cref="T:System.Drawing.Image" />.</param>
        <summary>Saves this <see cref="T:System.Drawing.Image" /> to the specified file in the specified format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 형식에서 비트맵을 생성 하는 방법 및 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Image.Save%2A> 메서드. 이 예제를 실행 하려면 Windows 형태로 코드를 붙여넣습니다. 양식의 처리할 <xref:System.Windows.Forms.Control.Paint> 이벤트 및 호출 합니다 `ConstructFromResourceSaveAsGif` 메서드를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> or <paramref name="format" /> is <see langword="null." /></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.  -or-  The image was saved to the same file it was created from.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Drawing.Imaging.ImageCodecInfo encoder, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageCodecInfo ^ encoder, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream * System.Drawing.Imaging.ImageCodecInfo * System.Drawing.Imaging.EncoderParameters -&gt; unit" Usage="image.Save (stream, encoder, encoderParams)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoder" Type="System.Drawing.Imaging.ImageCodecInfo" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="stream">The <see cref="T:System.IO.Stream" /> where the image will be saved.</param>
        <param name="encoder">The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> for this <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that specifies parameters used by the image encoder.</param>
        <summary>Saves this image to the specified stream, with the specified encoder and image encoder parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이미지는 이미지를 생성 하는 데 사용 된 동일한 스트림에 저장 하지 마십시오. 이렇게 하면 스트림이 손상 될 수 있습니다.  
  
 오프셋 0에서 스트림으로 이미지를 저장 해야 합니다. 이미지를 저장 하기 전에 추가 데이터를 스트림에 쓰여졌는지, 스트림에서 이미지 데이터를 손상 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename, class System.Drawing.Imaging.ImageCodecInfo encoder, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String, encoder As ImageCodecInfo, encoderParams As EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename, System::Drawing::Imaging::ImageCodecInfo ^ encoder, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Drawing.Imaging.ImageCodecInfo * System.Drawing.Imaging.EncoderParameters -&gt; unit" Usage="image.Save (filename, encoder, encoderParams)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoder" Type="System.Drawing.Imaging.ImageCodecInfo" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="filename">A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoder">The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> for this <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> to use for this <see cref="T:System.Drawing.Image" />.</param>
        <summary>Saves this <see cref="T:System.Drawing.Image" /> to the specified file, with the specified encoder and image-encoder parameters.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 된 동일한 파일에 이미지를 저장할 허용 되지 않습니다 하 고 예외를 throw 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Drawing.Bitmap> BMP 파일에서 개체입니다. 코드는 각각 다른 품질 수준으로 세 개의 JPEG 파일에 비트맵을 저장합니다.  
  
 [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> or <paramref name="encoder" /> is <see langword="null." /></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">The image was saved with the wrong image format.  -or-  The image was saved to the same file it was created from.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveAdd">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds the information in the specified <see cref="T:System.Drawing.Image" /> to this <see cref="T:System.Drawing.Image" />. The specified <see cref="T:System.Drawing.Imaging.EncoderParameters" /> determine how the new information is incorporated into the existing image.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveAdd">
      <MemberSignature Language="C#" Value="public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAdd(class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAdd (encoderParams As EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAdd(System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberSignature Language="F#" Value="member this.SaveAdd : System.Drawing.Imaging.EncoderParameters -&gt; unit" Usage="image.SaveAdd encoderParams" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that holds parameters required by the image encoder that is used by the save-add operation.</param>
        <summary>Adds a frame to the file or stream specified in a previous call to the <see cref="Overload:System.Drawing.Image.Save" /> method. Use this method to save selected frames from a multiple-frame image to another multiple-frame image.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAdd">
      <MemberSignature Language="C#" Value="public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAdd(class System.Drawing.Image image, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAdd(System::Drawing::Image ^ image, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberSignature Language="F#" Value="member this.SaveAdd : System.Drawing.Image * System.Drawing.Imaging.EncoderParameters -&gt; unit" Usage="image.SaveAdd (image, encoderParams)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="image">An <see cref="T:System.Drawing.Image" /> that contains the frame to add.</param>
        <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that holds parameters required by the image encoder that is used by the save-add operation.</param>
        <summary>Adds a frame to the file or stream specified in a previous call to the <see cref="Overload:System.Drawing.Image.Save" /> method.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectActiveFrame">
      <MemberSignature Language="C#" Value="public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SelectActiveFrame(class System.Drawing.Imaging.FrameDimension dimension, int32 frameIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectActiveFrame (dimension As FrameDimension, frameIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SelectActiveFrame(System::Drawing::Imaging::FrameDimension ^ dimension, int frameIndex);" />
      <MemberSignature Language="F#" Value="member this.SelectActiveFrame : System.Drawing.Imaging.FrameDimension * int -&gt; int" Usage="image.SelectActiveFrame (dimension, frameIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Drawing.Imaging.FrameDimension" />
        <Parameter Name="frameIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">A <see cref="T:System.Drawing.Imaging.FrameDimension" /> that specifies the identity of the dimension type.</param>
        <param name="frameIndex">The index of the active frame.</param>
        <summary>Selects the frame specified by the dimension and index.</summary>
        <returns>Always returns 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가능한 값은 `dimensionID` 매개 변수는 속성의는 <xref:System.Drawing.Imaging.FrameDimension>합니다. 이러한 시간, 확인 또는 페이지 번호의 이미지를 식별 하 사용할 수 있습니다.  
  
 이 메서드를 호출 하면 모든 변경 이전 프레임으로 삭제 됩니다. 다른 프레임을 선택 하기 전에 픽셀 값 및 속성 변경을 비롯 한 현재 프레임에 대 한 모든 변경 내용을 저장 합니다. 경우에 대 한 호출을 <xref:System.Drawing.Image.SelectActiveFrame%2A> 메서드는 성공 (예외가 발생 하지 않으면) 메서드는 0을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyItem">
      <MemberSignature Language="C#" Value="public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyItem(class System.Drawing.Imaging.PropertyItem propitem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyItem (propitem As PropertyItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyItem(System::Drawing::Imaging::PropertyItem ^ propitem);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyItem : System.Drawing.Imaging.PropertyItem -&gt; unit" Usage="image.SetPropertyItem propitem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propitem" Type="System.Drawing.Imaging.PropertyItem" />
      </Parameters>
      <Docs>
        <param name="propitem">The <see cref="T:System.Drawing.Imaging.PropertyItem" /> to be stored.</param>
        <summary>Stores a property item (piece of metadata) in this <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이미지 형식이 속성 항목을 지원 하지 않으면이 메서드에서 throw <xref:System.ArgumentException> "속성이 지원 되지 않습니다." 메시지와 함께 이미지 형식이 속성 항목을 지원 하지만 설정 하려는 특정 속성을 지원 하지 않는 경우이 메서드는 시도 무시 되지만 예외를 throw 하지 않습니다.  
  
 때문에 속성 항목을 설정 하기 어려운 것은 <xref:System.Drawing.Imaging.PropertyItem> 클래스에 public 생성자가 없는 합니다. 이 제한을 해결 하는 한 가지 방법은 가져오는 방법은 <xref:System.Drawing.Imaging.PropertyItem> 검색 하 여는 <xref:System.Drawing.Image.PropertyItems%2A> 속성 값 또는 호출 합니다 <xref:System.Drawing.Image.GetPropertyItem%2A> 메서드의 <xref:System.Drawing.Image> 속성 항목을 이미 있는 합니다. 필드를 설정할 수 있습니다 합니다 <xref:System.Drawing.Imaging.PropertyItem> 시키고 <xref:System.Drawing.Image.SetPropertyItem%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Drawing.Image.GetPropertyItem%2A> 고 <xref:System.Drawing.Image.SetPropertyItem%2A> 메서드. 이 예제에서는 Windows Forms를 사용 하 여 사용 하도록 설계 되었습니다. 이 예제를 실행 하려면 폼에 붙여 넣습니다 하 고 폼의 처리 <xref:System.Windows.Forms.Control.Paint> 를 호출 하 여 이벤트를 `DemonstratePropertyItem` 메서드를 전달 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The image format of this image does not support property items.</exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size" Usage="System.Drawing.Image.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width and height, in pixels, of this image.</summary>
        <value>
          <see cref="T:System.Drawing.Size" /> 이 이미지의 픽셀에서 높이 너비를 나타내는 구조체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
        <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Drawing.Image.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an object that provides additional data about the image.</summary>
        <value>
          <see cref="T:System.Object" /> 이미지에 대 한 추가 데이터를 제공 하는 합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalResolution">
      <MemberSignature Language="C#" Value="public float VerticalResolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 VerticalResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.VerticalResolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalResolution As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float VerticalResolution { float get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalResolution : single" Usage="System.Drawing.Image.VerticalResolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the vertical resolution, in pixels per inch, of this <see cref="T:System.Drawing.Image" />.</summary>
        <value>이 인치당 픽셀에 세로 해상도 <see cref="T:System.Drawing.Image" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="System.Drawing.Image.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width, in pixels, of this <see cref="T:System.Drawing.Image" />.</summary>
        <value>너비 (픽셀)가 <see cref="T:System.Drawing.Image" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 새 생성 하는 방법을 보여 줍니다 <xref:System.Drawing.Bitmap> 파일에서 사용 하는 <xref:System.Drawing.Bitmap.GetPixel%2A> 및 <xref:System.Drawing.Bitmap.SetPixel%2A> 이미지 다시 칠하기 방법. 또한를 사용 합니다 <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, 및 <xref:System.Drawing.Image.Height%2A> 속성입니다.  
  
 이 예제는 포함 된 Windows Forms에 사용할를 <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> 하 고 <xref:System.Windows.Forms.Button> 라는 `Label1`, `PictureBox1` 및 `Button1`각각. 폼에 코드를 붙여 넣고 연결 합니다 `Button1_Click` 단추를 사용 하 여 메서드 <xref:System.Windows.Forms.Control.Click> 이벤트입니다.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>