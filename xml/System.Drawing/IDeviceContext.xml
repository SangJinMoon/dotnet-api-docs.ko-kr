<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDeviceContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e8759d59e176dedf61d9e3331ac8035cf835e072.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8759d59e176dedf61d9e3331ac8035cf835e072</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.IDeviceContext">
          <source>Defines methods for obtaining and releasing an existing handle to a Windows device context.</source>
          <target state="translated">Windows 장치 컨텍스트의 기존 핸들을 가져오고 해제하는 데 사용되는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.IDeviceContext">
          <source>A device context defines the graphics object for drawing on a Windows-based device.</source>
          <target state="translated">장치 컨텍스트에 Windows 기반 장치에 그리는 대 한 그래픽 개체를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.IDeviceContext">
          <source>An example of a class that implements the <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext&gt;</ph> interface is the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> class.</source>
          <target state="translated">구현 하는 클래스의 예는 <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext&gt;</ph> 인터페이스는는 <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Drawing.IDeviceContext.GetHdc">
          <source>Returns the handle to a Windows device context.</source>
          <target state="translated">Windows 장치 컨텍스트의 핸들을 반환합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Drawing.IDeviceContext.GetHdc">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> representing the handle of a device context.</source>
          <target state="translated">장치 컨텍스트의 핸들을 나타내는 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IDeviceContext.GetHdc">
          <source><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> are two methods that allow you to get and release the handle for a Windows-based device.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> 가져오고 Windows 기반 장치에 대 한 핸들을 해제할 수 있도록 하는 두 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IDeviceContext.GetHdc">
          <source>You should always follow a call to <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> when you are finished with the Windows handle.</source>
          <target state="translated">에 대 한 호출을 항상 따라야 <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> 을 호출 하 여 <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> 마치면 Windows 핸들을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IDeviceContext.GetHdc">
          <source><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> is not designed to obtain handles created using Windows GDI methods such as <ph id="ph2">`CreateDC`</ph> or <ph id="ph3">`CreateCompatibleDC`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> 와 같은 Windows GDI 메서드를 사용 하 여 만든 핸들을 가져오는 데 설계 되지 않았습니다 <ph id="ph2">`CreateDC`</ph> 또는 <ph id="ph3">`CreateCompatibleDC`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.IDeviceContext.ReleaseHdc">
          <source>Releases the handle of a Windows device context.</source>
          <target state="translated">Windows 장치 컨텍스트의 핸들을 해제합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IDeviceContext.ReleaseHdc">
          <source><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> are two methods that allow you to get and release the handle for a Windows-based device.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> 가져오고 Windows 기반 장치에 대 한 핸들을 해제할 수 있도록 하는 두 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.IDeviceContext.ReleaseHdc">
          <source>You should always follow a call to <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> when you are finished with the Windows handle.</source>
          <target state="translated">에 대 한 호출을 항상 따라야 <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> 을 호출 하 여 <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> 마치면 Windows 핸들을 포함 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>