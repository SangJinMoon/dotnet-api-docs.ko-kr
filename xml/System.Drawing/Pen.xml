<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Pen.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d37fac39a424f3b42adab08f5106dc3d3cc57f2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d37fac39a424f3b42adab08f5106dc3d3cc57f2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Defines an object used to draw lines and curves.</source>
          <target state="translated">선과 곡선을 그리는 데 사용되는 개체를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws a line of specified width and style.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 지정 된 너비 및 스타일 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property to draw several varieties of dashed lines.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> 를 그리는 파선의 다양 한 변형을 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The line drawn by a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can be filled in a variety of fill styles, including solid colors and textures.</source>
          <target state="translated">그려진 선은 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 다양 한 단색, 질감을 포함 하 여 채우기 스타일으로 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The fill style depends on brush or texture that is used as the fill object.</source>
          <target state="translated">채우기 스타일은 채우기 개체로 사용 되는 브러시 또는 질감에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 생성 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> 및 설정의 효과 <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> 속성에는 <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowLineJoin`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">지정된 색을 사용하여 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the fill properties of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 채우기 속성을 결정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> property determines how the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> draws lines.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> 속성 결정 방법을 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Lines are drawn as if they are filled rectangles, with the characteristics of the specified <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">지정 된 특성을 갖는 채워진 사각형과 마치 선이 그려 졌 <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> is set to 1 (the default).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 새 속성 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 1 (기본값)로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 생성 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> 및 설정의 효과 <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> 속성에는 <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowLineJoin`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">지정된 색을 사용하여 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> 속성으로 지정 된 색으로 설정 되는 <ph id="ph2">`color`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to 1 (the default).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 속성이 1 (기본값)로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 특성을 결정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The width of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 너비입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>를 사용하여 <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> is set to the color specified in the <ph id="ph2">`brush`</ph> parameter, the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph4">`width`</ph> parameter, and the units are set to <ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> 에 지정 된 색으로 설정 된 <ph id="ph2">`brush`</ph> 매개 변수를는 <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 속성에 지정 된 값으로 설정 되어는 <ph id="ph4">`width`</ph> 매개 변수 및 단위로 설정 되어 <ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Note that the <ph id="ph1">`brush`</ph> parameter also specifies the <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> property of this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`brush`</ph> 매개 변수 지정는 <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> 속성 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">A <ph id="ph1">`width`</ph> 0 됩니다는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 너비가 1 인 것 처럼 그릴 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and demonstrates the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 설정의 효과 보여 줍니다.는 <ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> 속성에는 <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowStartAndEndCaps`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A value indicating the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 너비를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> properties.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> 속성을 사용하여 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> 속성으로 지정 된 색으로 설정 되는 <ph id="ph2">`color`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph2">`width`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 속성에 지정 된 값으로 설정 되는 <ph id="ph2">`width`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">A <ph id="ph1">`width`</ph> 0 됩니다는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 너비가 1 인 것 처럼 그릴 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 만드는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 및 설정의 효과 <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing e as <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼과 호출 코드를 붙여넣습니다는 <ph id="ph1">`ShowPensAndSmoothingMode`</ph> 메서드는 폼을 처리 하는 경우 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> e로 전달할 <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>Gets or sets the alignment for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 맞춤을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph> that represents the alignment for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 맞춤을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>This property determines how the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws closed curves and polygons.</source>
          <target state="translated">이 속성은 결정 방법을 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 폐곡선 및 다각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph> enumeration specifies five values; however, only two values—<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>—will change the appearance of a drawn line.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph> 열거형 5 개 값을 지정 합니다. 즉 두 개의 값-<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>-그려진된 선은의 모양을 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> 이 속성에 대 한 기본 값 이며 펜의 너비는 가운데 곡선 또는 다각형의 개요에는 지정 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> 에이 속성의 펜 너비 곡선 또는 다각형의 개요 내 임을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The other three values, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>, will result in a pen that is centered.</source>
          <target state="translated">다른 세 가지 값, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>, 가운데 표시 되는 펜을 발생 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> that has its alignment set to <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 로 설정 맞춤이 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> 경우에 따라 삽입 된 위치 및 경우도 고 가운데 위치에 그리기, 신뢰할 수 없는 결과 생성 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> dash caps.</source>
          <target state="translated">또한 삽입 펜 복합 선을 그리는 데 사용할 수 없습니다 하며 파선된 선 그리기 없습니다 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> 대시 캡입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>.</source>
          <target state="translated">지정된 값이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>의 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 특성을 결정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 특성을 결정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>Assigning this property causes the pen to draw filled lines and curves.</source>
          <target state="translated">이 속성을 할당 하면를 채워진 선과 곡선을 그리는 펜입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>It overrides the <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 정확한 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast to a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>으로 캐스팅될 수 있는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a copy of that pen.</source>
          <target state="translated">펜의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Draws a line to the screen, using the copy of the pen.</source>
          <target state="translated">펜의 복사본을 사용 하 여 화면에는 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>Gets or sets the color of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Color">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Gets or sets an array of values that specifies a compound pen.</source>
          <target state="translated">복합 펜을 지정하는 값 배열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound pen draws a compound line made up of parallel lines and spaces.</source>
          <target state="translated">복합 펜은 평행선과 공백으로 이루어진 복합 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>An array of real numbers that specifies the compound array.</source>
          <target state="translated">복합 배열을 지정하는 실수의 배열입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The elements in the array must be in increasing order, not less than 0, and not greater than 1.</source>
          <target state="translated">배열의 요소는 0보다 작지 않고 1보다 크지 않아야 하며 오름차순이어야 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound line is made up of alternating parallel lines and spaces of varying widths.</source>
          <target state="translated">복합 선은의 평행선과 공백으로 너비가 다양 한 대체 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The values in the array specify the starting points of each component of the compound line relative to the pen's width.</source>
          <target state="translated">배열의 값 펜의 너비를 기준으로 복합 줄의 각 구성 요소 시작 지점을 지정합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</source>
          <target state="translated">펜의 너비에 가로로 첫 번째 구성 요소 (행) 거리의 부분으로 시작 하는 위치를 지정 하는 배열의 첫 번째 값입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</source>
          <target state="translated">배열에서 두 번째 값의 펜 너비에 가로로 거리의 부분으로 다음 구성 요소 (공백)의 시작 부분을 지정합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The final value in the array specifies where the last component ends.</source>
          <target state="translated">배열의 마지막 값 마지막 구성 요소 끝나는 위치를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</source>
          <target state="translated">두 줄을 구분 하는 간격 너비는 펜의 50%의 첫 번째 줄은 너비 펜의 너비의 20% 인 두 개의 병렬 선을 그리는 펜 한다고 가정 ' s 너비 및 두 번째 줄의 너비는 펜의 30%가 너비.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Start by creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and an array of real numbers.</source>
          <target state="translated">만들어 시작는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 및 실수의 배열입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</source>
          <target state="translated">이 속성에 값이 0.0, 0.2, 0.7과 1.0을 사용 하 여 배열을 전달 하 여 복합 배열을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Do not set this property if the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">경우이 속성을 설정 하지 마십시오는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 가 해당 <ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> 속성이로 설정 <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>Gets or sets a custom cap to use at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 끝에 사용할 사용자 지정 단면을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 끝에 사용되는 단면을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>Gets or sets a custom cap to use at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 시작에 사용할 사용자 지정 단면을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 시작에 사용되는 단면을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 파선을 구성하는 대시의 끝에 사용되는 단면 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 파선을 구성하는 대시의 시작과 끝에 사용되는 단면 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Do not set this property to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> if the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">이 속성을 설정 하지 마십시오 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> 경우는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 가 해당 <ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> 속성이로 설정 <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 만드는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 및 설정의 효과 <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowPensAndSmoothingMode`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>.</source>
          <target state="translated">지정된 값이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>의 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">선의 시작에서 대시 패턴의 시작까지의 거리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashOffset">
          <source>The distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">선의 시작에서 대시 패턴의 시작까지의 거리입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>Gets or sets an array of custom dashes and spaces.</source>
          <target state="translated">사용자 지정 대시와 공백의 배열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</source>
          <target state="translated">파선에서 교대로 반복되는 대시와 공백의 길이를 지정하는 실수의 배열입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Assigning a value other than <ph id="ph1">`null`</ph> to this property will set the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property for this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>.</source>
          <target state="translated">이외의 다른 값을 할당 <ph id="ph1">`null`</ph> 이 속성에 설정 됩니다는 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> 이 대 한 속성 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> 를 <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The elements in the <ph id="ph1">`dashArray`</ph> array set the length of each dash and space in the dash pattern.</source>
          <target state="translated">요소는 <ph id="ph1">`dashArray`</ph> 배열 대시 패턴에서 각 대시와의 길이 설정 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</source>
          <target state="translated">대시의 길이 설정 하는 첫 번째 요소, 두 번째 요소는 공간의 길이 설정, 대시 및 등의 길이 설정 하는 세 번째 요소.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Consequently, each element should be a non-zero positive number.</source>
          <target state="translated">따라서 각 요소는 0이 아닌 양수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">각 대시와 대시 패턴에서의 길이가 배열의 요소 값의 제품과의 너비는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowPensAndSmoothingMode`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>Gets or sets the style used for dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 파선에 사용되는 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph> that represents the style used for dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 파선에 사용되는 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> for this property specifies that a custom pattern of dashes and spaces, defined by the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property, makes up lines drawn with this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> 대시와 공백의 사용자 지정 패턴에 의해 정의이 속성 지정에 대 한는 <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> 속성을 사용 하 여 그리는 선을 모여 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>If the value of this property is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> and the value of the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property is <ph id="ph3">`null`</ph>, the pen draws solid lines.</source>
          <target state="translated">이 속성의 값이 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> 의 값과는 <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> 속성은 <ph id="ph3">`null`</ph>, 펜이 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에서 사용하는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> 이 사용 하는 리소스 <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> 다른 용도에 다시 할당 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties, and shows how to call the <ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method for a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> 속성을 호출 하는 방법을 보여 줍니다.는 <ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> 에 대 한 메서드는 <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowLineJoin`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>Gets or sets the cap style used at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 끝에 사용되는 단면 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 끝에 사용되는 단면 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowStartAndEndCaps`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">지정된 값이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>의 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>Gets or sets the join style for the ends of two consecutive lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 두 개의 연속선 끝에 사용되는 이음 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> that represents the join style for the ends of two consecutive lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 두 개의 연속선 끝에 사용되는 이음 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A line join is the common area that is formed by two lines whose ends meet or overlap.</source>
          <target state="translated">선 조인은 두 줄 끝 부분이 만나거나 겹칠으로 구성 되는 일반 영역입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>There are three line join styles: miter, bevel, and round.</source>
          <target state="translated">선 조인 스타일 세 가지: 마이터, 빗면 및 반올림 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>When you specify a line join style for a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object, that join style will be applied to all the connected lines in any <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object drawn using that pen.The following illustration shows the results of the beveled line join example.</source>
          <target state="translated">선 조인 스타일을 지정 하는 경우는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 개체에 연결 된 모든 행에는 음 스타일 적용 됨 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> 개체 펜을 사용 하 여 그려집니다. 다음 그림에서는 빗면된 선 조인 예제 결과 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source><bpt id="p1">![</bpt>Pens<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>Pens<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>펜<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>펜<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> .</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowLineJoin`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>Gets or sets the limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">각 이음 모퉁이의 이음 두께 제한을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">각 이름 모퉁이의 이름 두께 제한입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</source>
          <target state="translated">이음이 길이는 조인 밖에의 교차점으로 조인의 내부에 줄 벽의 교집합에서 거리입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length can be large when the angle between two lines is small.</source>
          <target state="translated">두 줄 사이의 각도 작을 때 이음이 길이 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter limit is the maximum allowed ratio of miter length to stroke width.</source>
          <target state="translated">이음이 제한은 스트로크 너비에 대 한 이음이 길이의 허용 된 최대 비율입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The default value is 10.0f.</source>
          <target state="translated">기본값은 10.0 f.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</source>
          <target state="translated">교차 조인 이음이 길이 부분의 한계를 초과 하면 조인 교차 조인 제한 내에서 유지 하 입체 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 대한 변환 매트릭스와 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 곱합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> object by which to multiply the transformation matrix.</source>
          <target state="translated">변환 매트릭스를 곱하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 대한 변환 매트릭스와 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 곱합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>This method prepends the multiplication matrix specified in the <ph id="ph1">`matrix`</ph> parameter to the transformation matrix for the multiplication operation.</source>
          <target state="translated">이 메서드에 지정 된 곱하기 매트릭스 앞에 추가 <ph id="ph1">`matrix`</ph> 곱하기 작업에 대 한 변형 매트릭스에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line to the screen.</source>
          <target state="translated">화면에는 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">펜의 변형 매트릭스와 지정 된 매트릭스를 곱합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">변환 된 펜 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to multiply the transformation matrix.</source>
          <target state="translated">변환 매트릭스를 곱하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order in which to perform the multiplication operation.</source>
          <target state="translated">곱셈 연산을 수행하는 순서입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 대한 변환 매트릭스와 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 지정된 순서로 곱합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>This method uses the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> enumeration element (either prepend or append) specified by the <ph id="ph2">`order`</ph> parameter to carry out the multiplication operation.</source>
          <target state="translated">이 메서드는 사용 된 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> 열거형 요소 (앞에 추가 또는 추가)에 지정 된는 <ph id="ph2">`order`</ph> 매개 변수를 곱하기 연산을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line to the screen.</source>
          <target state="translated">화면에는 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">펜의 변형 매트릭스와 지정 된 매트릭스를 곱합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">변환 된 펜 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.PenType">
          <source>Gets the style of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 스타일을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph> enumeration that specifies the style of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 스타일을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph> enumeration.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 실선, 채워진된 선 또는의 멤버에 의해 지정 된 스타일에 따라 질감된 줄을 그릴 수는 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the geometric transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to identity.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 대한 기하학적 변환 매트릭스를 항등으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</source>
          <target state="translated">X-축 방향으로 2 배 크기를 조정 하는 데 펜의 변형 매트릭스를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a line to the screen.</source>
          <target state="translated">화면에는 선을 그립니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the transformation matrix to identity.</source>
          <target state="translated">변형 매트릭스 id로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a second line to the screen.</source>
          <target state="translated">화면에 두 번째 줄을 그립니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">로컬 기하학적 변형을 지정된 각도만큼 회전합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">이 메서드는 회전을 변형 앞에 추가합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The angle of rotation.</source>
          <target state="translated">회전 각도입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">로컬 기하학적 변형을 지정된 각도만큼 회전합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">이 메서드는 회전을 변형 앞에 추가합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">펜의 모양이 순환 이기 때문에 회전 않아도 시각적인 변화 펜 x 또는 y 축 방향으로 조정 된 경우가 아니면 됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">펜을 사용 하 여 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">X-축 방향으로 2 배 펜 배율로 조정합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">펜 시계 방향으로 90도 회전합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">차이 보여 주기 위해 두 번째 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle of rotation.</source>
          <target state="translated">회전 각도입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the rotation matrix.</source>
          <target state="translated">회전 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the local geometric transformation by the specified angle in the specified order.</source>
          <target state="translated">로컬 기하학적 변형을 지정된 각도만큼 지정된 순서로 회전합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">펜의 모양이 순환 이기 때문에 회전 않아도 시각적인 변화 펜 x 또는 y 축 방향으로 조정 된 경우가 아니면 됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">X-축 방향으로 2 배 펜 배율로 조정합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">펜을 사용 하 여 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">펜 시계 방향으로 90도 회전합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">차이 보여 주기 위해 두 번째 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">지정된 인수만큼 로컬 기하학적 변형의 크기를 조정합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">이 메서드는 크기 조정 매트릭스를 변형 앞에 추가합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">x-축 방향으로 변형의 크기를 조정하는 인수입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">y-축 방향으로 변형의 크기를 조정하는 인수입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">지정된 인수만큼 로컬 기하학적 변형의 크기를 조정합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">이 메서드는 크기 조정 매트릭스를 변형 앞에 추가합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">펜을 사용 하 여 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">X-축 방향으로 2 배 펜 배율로 조정합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">차이 보여 주기 위해 두 번째 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">x-축 방향으로 변형의 크기를 조정하는 인수입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">y-축 방향으로 변형의 크기를 조정하는 인수입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the scaling matrix.</source>
          <target state="translated">크기 조정 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the local geometric transformation by the specified factors in the specified order.</source>
          <target state="translated">지정된 순서로 지정된 인수만큼 로컬 기하학적 변형의 크기를 조정합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>을 만듭니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">펜을 사용 하 여 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">X-축 방향으로 2 배 펜 배율로 조정합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">차이 보여 주기 위해 두 번째 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 시작에 사용할 단면 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 끝에 사용할 단면 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning or end of dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 파선의 시작 또는 끝에 사용할 단면 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>Sets the values that determine the style of cap used to end lines drawn by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선을 끝내는 데 사용되는 단면 스타일을 결정하는 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>의 매개 변수는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and sets it to draw arrow anchor caps at the beginning of lines:</source>
          <target state="translated">코드는 만듭니다는 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 줄의 시작 부분에 화살표 앵커 캡을 그릴 수 설정:</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>Gets or sets the cap style used at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 시작에 사용되는 단면 스타일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>을 사용하여 그리는 선의 시작에 사용되는 단면 스타일을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowStartAndEndCaps`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">지정된 값이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>의 멤버가 아닌 경우</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>Gets or sets a copy of the geometric transformation for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 대한 기하학적 변환의 복사본을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the geometric transformation for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 대한 기하학적 변환을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This property defines an elliptical shape for the pen tip.</source>
          <target state="translated">이 속성은 펜 팁에 대 한 타원 모양을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This ellipse is obtained from the default circular shape by applying the transformation matrix.</source>
          <target state="translated">변형 매트릭스에 적용 하 여이 타원 기본 원 모양에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Note that the translation portion of the matrix is ignored.</source>
          <target state="translated">참고 행렬의 변환 부분은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Because the matrix returned and by the <ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</source>
          <target state="translated">반환 하는 매트릭스 및 여는 <ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph> 속성 펜의 기하학적 변환의 복사본은, 더 이상 필요 행렬은 삭제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">로컬 기하학적 변형을 지정된 크기만큼 이동합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">이 메서드는 이동을 변형 앞에 추가합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in x.</source>
          <target state="translated">x-축으로의 이동 값입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in y.</source>
          <target state="translated">y-축으로의 이동 값입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">로컬 기하학적 변형을 지정된 크기만큼 이동합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">이 메서드는 이동을 변형 앞에 추가합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in x.</source>
          <target state="translated">x-축으로의 이동 값입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in y.</source>
          <target state="translated">y-축으로의 이동 값입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order (prepend or append) in which to apply the translation.</source>
          <target state="translated">이동을 적용할 순서(앞에 추가 또는 뒤에 추가)입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Translates the local geometric transformation by the specified dimensions in the specified order.</source>
          <target state="translated">지정된 순서로 지정된 크기만큼 로컬 기하학적 변형을 이동합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>Gets or sets the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, in units of the <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object used for drawing.</source>
          <target state="translated">그리는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 개체의 단위로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 너비를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 너비입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>You can access the unit of measure of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object using its <ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> property.</source>
          <target state="translated">측정 단위에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체 사용 하 여 해당 <ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The unit of measure is typically pixels.</source>
          <target state="translated">측정 단위는 일반적으로 픽셀입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> were 1.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 0 됩니다는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 그리기 처럼는 <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 1입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 설정의 효과 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">폼 호출에 코드를 붙여 넣습니다.는 <ph id="ph1">`ShowLineJoin`</ph> 메서드 폼의 처리할 때 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달할 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> 클래스에서 반환된 것과 같은 변경 불가능한 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>에 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>