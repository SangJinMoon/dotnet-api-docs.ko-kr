<Type Name="Region" FullName="System.Drawing.Region">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46b513f444c6805ff26cff96b1d21b5210268219" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410597" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Region : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Region extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Region" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Region&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Region sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>사각형과 경로로 구성된 그래픽 모양의 내부를 설명합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 세계 좌표에서 지정 된 좌표 때문에 영역은 확장 가능 합니다. 그러나 그리기 화면에서 해당 내부 크기와 모양을 나타내는 픽셀에 따라 달라 집니다. 응용 프로그램 영역을 사용 하 여 그리기 작업의 출력을 잘라 수 있습니다. 이러한 영역은 클리핑 영역 이라고 합니다. 클리핑 영역을 사용 하 여에 대 한 자세한 내용은 참조 하십시오. [하는 방법: 영역과 함께 사용 하 여 클리핑](~/docs/framework/winforms/advanced/how-to-use-clipping-with-a-region.md)합니다.  
  
 응용 프로그램 영역 점 또는 사각형 영역을 교차 하는지 여부를 확인 하는 등의 적중 테스트 작업에 사용할 수도 있습니다. 적중 테스트에 대 한 영역을 사용 하 여에 대 한 자세한 내용은 참조 하십시오. [하는 방법: 영역으로 사용 하 여 적중 테스트](~/docs/framework/winforms/advanced/how-to-use-hit-testing-with-a-region.md)합니다.  
  
 응용 프로그램 사용 하 여 영역을 채울 수는 <xref:System.Drawing.Graphics.FillRegion%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Drawing.Brush> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.  이 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Drawing.Drawing2D.RegionData.Data%2A> 하나에서 <xref:System.Drawing.Drawing2D.RegionData> 설정할 개체는 <xref:System.Drawing.Drawing2D.RegionData.Data%2A> 다른 <xref:System.Drawing.Drawing2D.RegionData>합니다.  
  
 [!code-cpp[System.Drawing.MiscExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.MiscExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.MiscExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#13)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Rectangle" />
    <altmember cref="T:System.Drawing.Drawing2D.GraphicsPath" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 <see cref="T:System.Drawing.Region" />를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>새 <see cref="T:System.Drawing.Region" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 새 <xref:System.Drawing.Region> 으로 무한 바꿉니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">새 <see cref="T:System.Drawing.Region" />을 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 새 <see cref="T:System.Drawing.Region" />를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 만드는 새 <xref:System.Drawing.Region> 와 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다. 새 영역의 내부로 정의 된는 <xref:System.Drawing.Drawing2D.GraphicsPath> 에 지정 된는 `path` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Drawing2D.RegionData rgnData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.RegionData rgnData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgnData As RegionData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Drawing2D::RegionData ^ rgnData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgnData" Type="System.Drawing.Drawing2D.RegionData" />
      </Parameters>
      <Docs>
        <param name="rgnData">새 <see cref="T:System.Drawing.Region" />의 내부를 정의하는 <see cref="T:System.Drawing.Drawing2D.RegionData" />입니다.</param>
        <summary>지정된 데이터에서 새 <see cref="T:System.Drawing.Region" />을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 만드는 새 <xref:System.Drawing.Region> 와 기존에 정의 된 내부 <xref:System.Drawing.Region>합니다. `rgnData` 매개 변수는 기존 정의 포함 하는 배열을 <xref:System.Drawing.Region>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rgnData" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Rectangle rect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">새 <see cref="T:System.Drawing.Rectangle" />의 내부를 정의하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체에서 새 <see cref="T:System.Drawing.Rectangle" />을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 만드는 새 <xref:System.Drawing.Region> 으로 사각형 바꿉니다. 내부도 정의 되는 `rect` 매개 변수입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Region.%23ctor%2A> 생성자 및 <xref:System.Drawing.Region.MakeEmpty%2A> 메서드. 이 예제는 Windows Forms에서 사용 되는 설계 합니다. 폼을 만들고 다음 코드를 붙여 넣습니다. 호출 된 `FillEmptyRegion` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-cpp[System.Drawing.MiscExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.MiscExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.MiscExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::RectangleF rect);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">새 <see cref="T:System.Drawing.RectangleF" />의 내부를 정의하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체에서 새 <see cref="T:System.Drawing.RectangleF" />을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 만드는 새 <xref:System.Drawing.Region> 으로 사각형 바꿉니다. 내부도 정의 되는 `rect` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Region ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Region" />의 정확한 복사본을 만듭니다.</summary>
        <returns>이 메서드가 만드는 <see cref="T:System.Drawing.Region" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complement">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.RectangleF" /> 구조체의 일부로 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">이 <see cref="T:System.Drawing.Region" />을 보완할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 일부를 포함하도록 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   사각형을 만들어 검은색으로 화면에 그립니다.  
  
-   첫 번째와 교차을 화면에에서 그립니다 있는 두 번째 사각형을 만듭니다.  
  
-   첫 번째 사각형을 사용 하 여 영역을 만듭니다.  
  
-   만듭니다는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 두 번째 사각형을 추가 합니다.  
  
-   와 결합 될 때의 보수를 가져옵니다는 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.  
  
-   보수 영역 파랑으로 채우고 화면에 그립니다.  
  
 영역입니다.는 <xref:System.Drawing.Drawing2D.GraphicsPath> 과 교차 하지 않는 지역이 파란색으로 표시 됩니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.Rectangle" />을 보충하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>
          <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.Rectangle" /> 구조체의 일부가 들어 있는 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 예를 들어 참조는 <xref:System.Drawing.Region.Complement%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.RectangleF" />을 보충하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>
          <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.RectangleF" /> 구조체의 일부가 들어 있는 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   사각형을 만들어 검은색으로 화면에 그립니다.  
  
-   첫 번째와 교차을 화면에에서 그립니다 있는 두 번째 사각형을 만듭니다.  
  
-   첫 번째 사각형을 사용 하 여 영역을 만듭니다.  
  
-   두 번째 사각형을 결합 되는 영역의 보수를 가져옵니다.  
  
-   보수 영역 파랑으로 채우고 화면에 그립니다.  
  
 영역과 교차 하지 않는 두 번째 사각형 영역 색이 파랑은 확인 합니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">이 <see cref="T:System.Drawing.Region" /> 개체를 보완할 <see cref="T:System.Drawing.Region" /> 개체입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Region" />과 교차하지 않는 지정된 <see cref="T:System.Drawing.Region" />의 일부를 포함하도록 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   사각형을 만들어 검은색으로 화면에 그립니다.  
  
-   첫 번째와 교차을 화면에에서 그립니다 있는 두 번째 사각형을 만듭니다.  
  
-   하나의 영역 직사각형을 사용 하 여 만들고 두 번째 사각형을 사용 하 여 두 번째 영역을 만듭니다.  
  
-   두 번째 영역을 함께 사용 하면 해당 첫 번째 지역의 보수를 가져옵니다.  
  
-   보수 영역 파랑으로 채우고 화면에 그립니다.  
  
 첫 번째 영역을 사용 하 여 교차 하지 않는 두 번째 영역 영역 색이 파랑은 확인 합니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Region" />에서 사용하는 리소스를 모두 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Drawing.Region.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Region> 다른 용도에 다시 할당 될 수 있습니다.  
  
 <xref:System.Drawing.Region.Dispose%2A> 사용을 마치면 <xref:System.Drawing.Region>를 호출합니다. <xref:System.Drawing.Region.Dispose%2A> 메서드를 사용하면 <xref:System.Drawing.Region>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.Drawing.Region.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.Drawing.Region> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Drawing.Region> 차지한 합니다. 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.Drawing.Region.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Drawing.Region>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Drawing.Region> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Drawing.Region.%23ctor%2A> 생성자 및 <xref:System.Drawing.Region.Exclude%2A> 및 <xref:System.Drawing.Region.Dispose%2A> 메서드.  
  
 이 예제는 Windows Forms에서 사용 되는 설계 합니다. 폼 호출에 코드를 붙여 넣습니다.는 `FillRegionExcludingPath` 메서드 폼의 처리할 때 <xref:System.Windows.Forms.Control.Paint> 전달할 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-cpp[System.Drawing.GraphicsProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.GraphicsProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#1)]
 [!code-vb[System.Drawing.GraphicsProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Drawing.Region region, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Drawing.Region region, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Drawing::Region ^ region, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="region">테스트할 <see cref="T:System.Drawing.Region" />입니다.</param>
        <param name="g">그리기 화면을 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />이 지정된 그리기 화면에 있는 이 <see cref="T:System.Drawing.Region" />과 같은지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="g" /> 매개 변수와 연관된 변환이 적용될 때 영역의 내부가 이 영역의 내부와 같은 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 변환을 그래픽 컨텍스트의 `g` 그리기 화면에서 영역 내부를 계산 하는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> 또는 <paramref name="region" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exclude">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 교차하지 않는 이 개체 내부의 일부로 이 <see cref="T:System.Drawing.Rectangle" />을 업데이트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에서 제외할 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 <xref:System.Drawing.Region.%23ctor%2A> 생성자 및 <xref:System.Drawing.Region.Exclude%2A> 및 <xref:System.Drawing.Region.Dispose%2A> 메서드.  
  
 이 예제는 Windows Forms에서 사용 되는 설계 합니다. 폼 호출에 코드를 붙여 넣습니다.는 `FillRegionExcludingPath` 메서드 폼의 처리할 때 <xref:System.Windows.Forms.Control.Paint> 전달할 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-cpp[System.Drawing.GraphicsProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.GraphicsProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#1)]
 [!code-vb[System.Drawing.GraphicsProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.Rectangle" />에서 제외할 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.Rectangle" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Exclude%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.RectangleF" />에서 제외할 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.RectangleF" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   사각형을 만들어 검은색으로 화면에 그립니다.  
  
-   첫 번째와 교차을 화면에에서 그립니다 있는 두 번째 사각형을 만듭니다.  
  
-   첫 번째 사각형을 사용 하 여 영역을 만듭니다.  
  
-   두 번째 사각형을 결합 될 때의 사각형과 영역을 가져옵니다.  
  
-   파랑으로 채우고 영역을 채우는 화면으로 그립니다.  
  
 사각형을 교차 하지 않는 영역의 영역에서 영역 색이 파랑은 확인 합니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">
          <see cref="T:System.Drawing.Region" />에서 제외할 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />와 교차하지 않는 이 개체 내부의 일부만 들어 있는 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제에 대 한 참조는 <xref:System.Drawing.Region.Exclude%28System.Drawing.RectangleF%29> 및 <xref:System.Drawing.Region.Complement%28System.Drawing.Region%29> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Region ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Region ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHrgn">
      <MemberSignature Language="C#" Value="public static System.Drawing.Region FromHrgn (IntPtr hrgn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Region FromHrgn(native int hrgn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.FromHrgn(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHrgn (hrgn As IntPtr) As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Region ^ FromHrgn(IntPtr hrgn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hrgn" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hrgn">기존 <see cref="T:System.Drawing.Region" />에 대한 핸들입니다.</param>
        <summary>핸들에서 지정된 기존 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 영역으로 새 <see cref="T:System.Drawing.Region" />을 초기화합니다.</summary>
        <returns>새 <see cref="T:System.Drawing.Region" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 만드는 새 <xref:System.Drawing.Region> 와 기존에 정의 된 내부 <xref:System.Drawing.Region> 에 핸들에서 참조 하는 `hrgn` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 열거형 관련 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />합니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (g As Graphics) As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" />이 그려질 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>
          <see cref="T:System.Drawing.RectangleF" /> 개체의 그리기 화면에서 이 <see cref="T:System.Drawing.Region" />의 경계가 되는 사각형을 나타내는 <see cref="T:System.Drawing.Graphics" /> 구조체를 가져옵니다.</summary>
        <returns>지정된 그리기 화면에서 이 <see cref="T:System.Drawing.RectangleF" />의 경계 사각형을 나타내는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 계산에서 그리기 화면 영역 내부에 사용 됩니다. 항상 경계 사각형은 현재 변환에 따라 가능한 가장 작은 경계 사각형 아닙니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   만듭니다는 <xref:System.Drawing.Drawing2D.GraphicsPath> 를 타원에 추가 합니다.  
  
-   파랑으로 경로 채우고 화면으로 그립니다.  
  
-   사용 하는 영역을 만듭니다는 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.  
  
-   두 번째 사각형을 결합 될 때의 사각형과 영역을 가져옵니다.  
  
-   해당 지역에 대해 경계 사각형을 가져옵니다을 화면에에서 그립니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHrgn">
      <MemberSignature Language="C#" Value="public IntPtr GetHrgn (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHrgn(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHrgn (g As Graphics) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHrgn(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" />이 그려질 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>지정된 그래픽 컨텍스트에서 <see cref="T:System.Drawing.Region" />에 대한 창 핸들을 반환합니다.</summary>
        <returns>이 <see cref="T:System.Drawing.Region" />에 대한 창 핸들입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegionData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.RegionData GetRegionData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.RegionData GetRegionData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetRegionData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegionData () As RegionData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::RegionData ^ GetRegionData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.RegionData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Drawing2D.RegionData" />을 설명하는 정보를 나타내는 <see cref="T:System.Drawing.Region" />를 반환합니다.</summary>
        <returns>
          <see cref="T:System.Drawing.Drawing2D.RegionData" />을 설명하는 정보를 나타내는 <see cref="T:System.Drawing.Region" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Region> 클래스를 사용 하는 사용자 지정 모양을 정의할 수 있습니다. 선, 다각형 및 곡선의 모양 구성 될 수 있습니다. <xref:System.Drawing.Region.GetRegionData%2A> 이에 포함 된 셰이프를 기술 <xref:System.Drawing.Region>합니다.  
  
   
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다.  이 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Drawing.Drawing2D.RegionData.Data%2A> 하나에서 <xref:System.Drawing.Drawing2D.RegionData> 설정할 개체는 <xref:System.Drawing.Drawing2D.RegionData.Data%2A> 다른 <xref:System.Drawing.Drawing2D.RegionData>합니다.  
  
 [!code-cpp[System.Drawing.MiscExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.MiscExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.MiscExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionScans">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF[] GetRegionScans (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF[] GetRegionScans(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::RectangleF&gt; ^ GetRegionScans(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">영역에 적용되는 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</param>
        <summary>지정된 매트릭스 변환을 적용한 후 이 <see cref="T:System.Drawing.RectangleF" />과 유사한 <see cref="T:System.Drawing.Region" /> 구조체 배열을 반환합니다.</summary>
        <returns>지정된 매트릭스 변환을 적용한 후 이 <see cref="T:System.Drawing.RectangleF" />과 유사한 <see cref="T:System.Drawing.Region" /> 구조체 배열입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="matrix" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.Region" />의 교차 부분으로 업데이트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 교차 부분으로 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제에 대 한 참조는 <xref:System.Drawing.RectangleF.Intersect%28System.Drawing.RectangleF%29?displayProperty=nameWithType> 및 <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.Rectangle" /> 구조입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.Rectangle" /> 구조의 교차 부분으로 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Intersect%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.RectangleF" /> 구조입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.RectangleF" /> 구조의 교차 부분으로 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   첫 번째 사각형을 만들어 검은색으로 화면에 그립니다.  
  
-   두 번째 사각형을 만들어 빨간색으로 화면에 그립니다.  
  
-   첫 번째 사각형에서 영역을 만듭니다.  
  
-   두 번째 사각형을 함께 사용 하면 영역에 대 한 교차 영역을을 가져옵니다.  
  
-   파랑으로 교차 영역을 채우고 화면으로 그립니다.  
  
 파란색 영역 및 사각형에 대 한 겹치는 영역에만 표시 됩니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">이 <see cref="T:System.Drawing.Region" />과 교차하는 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>이 <see cref="T:System.Drawing.Region" />을 지정된 <see cref="T:System.Drawing.Region" />의 교차 부분으로 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제에 대 한 참조는 <xref:System.Drawing.Region.Intersect%28System.Drawing.RectangleF%29> 및 <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> 메서드`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty (g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">그리기 화면을 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 그리기 화면에서 이 <see cref="T:System.Drawing.Region" />의 내부가 비었는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="g" />와 연관된 변환이 적용될 때 이 <see cref="T:System.Drawing.Region" />의 내부가 비어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 변환을 그래픽 컨텍스트의 `g` 그리기 화면에서 영역 내부를 계산 하는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInfinite">
      <MemberSignature Language="C#" Value="public bool IsInfinite (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInfinite(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInfinite (g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInfinite(System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">그리기 화면을 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 그리기 화면에서 이 <see cref="T:System.Drawing.Region" />의 내부 제한이 없는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="g" />와 연관된 변환이 적용될 때 이 <see cref="T:System.Drawing.Region" />의 내부 제한이 없는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 변환을 그래픽 컨텍스트의 `g` 그리기 화면에서 영역 내부를 계산 하는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 사각형이 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">테스트할 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Point" /> 구조체가 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">테스트할 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.PointF" /> 구조체가 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">테스트할 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Rectangle" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="rect" />의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 이 메서드에서는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">테스트할 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.RectangleF" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="rect" />의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   첫 번째 사각형을 만들어 파란색으로 화면에 그립니다.  
  
-   두 번째 사각형을 만들어 빨간색으로 화면에 그립니다.  
  
-   첫 번째 사각형에서 영역을 만듭니다.  
  
-   사각형의 일부 영역과 교차 하는 경우를 결정 합니다.  
  
-   표시는 `true` 또는 `false` 화면에는 결과입니다.  
  
 사각형 영역을 교차 결과 통지 `true`합니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="point">테스트할 <see cref="T:System.Drawing.Point" /> 구조체입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Point" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 시작점 좌표 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="point">테스트할 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.PointF" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체가 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="point" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 시작점 좌표 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="rect">테스트할 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Rectangle" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="rect" />의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 사각형 좌표로 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="rect">테스트할 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.RectangleF" />를 사용하여 그릴 때 지정된 <see cref="T:System.Drawing.Region" /> 구조체의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          <paramref name="rect" />가 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 사각형 좌표로 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">테스트할 점의 x좌표입니다.</param>
        <param name="y">테스트할 점의 y좌표입니다.</param>
        <summary>지정된 점이 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 점이 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">테스트할 점의 x좌표입니다.</param>
        <param name="y">테스트할 점의 y좌표입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 개체를 사용하여 그릴 때 지정된 점이 이 <see cref="T:System.Drawing.Graphics" /> 개체에 들어 있는지 여부를 검사합니다.</summary>
        <returns>
          지정된 점이 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 시작점 좌표 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">테스트할 점의 x좌표입니다.</param>
        <param name="y">테스트할 점의 y좌표입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />를 사용하여 그릴 때 지정된 점이 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 점이 이 <see cref="T:System.Drawing.Region" />에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 시작점 좌표 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
        <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
        <param name="width">테스트할 사각형의 너비입니다.</param>
        <param name="height">테스트할 사각형의 높이입니다.</param>
        <summary>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
        <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
        <param name="width">테스트할 사각형의 너비입니다.</param>
        <param name="height">테스트할 사각형의 높이입니다.</param>
        <summary>지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" /> 개체에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
        <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
        <param name="width">테스트할 사각형의 너비입니다.</param>
        <param name="height">테스트할 사각형의 높이입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />를 사용하여 그릴 때 지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 사각형 좌표로 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height, System::Drawing::Graphics ^ g);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">테스트할 사각형의 왼쪽 위 모퉁이에 대한 x좌표입니다.</param>
        <param name="y">테스트할 사각형의 왼쪽 위 모퉁이에 대한 y좌표입니다.</param>
        <param name="width">테스트할 사각형의 너비입니다.</param>
        <param name="height">테스트할 사각형의 높이입니다.</param>
        <param name="g">그래픽 컨텍스트를 나타내는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />를 사용하여 그릴 때 지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Graphics" />에 들어 있는지 여부를 테스트합니다.</summary>
        <returns>
          지정된 사각형의 일부라도 이 <see cref="T:System.Drawing.Region" />에 들어 있는 경우 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그래픽 컨텍스트의 현재 변환은 영역 내부와 그리기 화면에서 사각형 좌표로 계산 하는 데 사용 됩니다.  
  
   
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeEmpty">
      <MemberSignature Language="C#" Value="public void MakeEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.MakeEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Region" />을 빈 내부로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Drawing.Region.%23ctor%2A> 생성자 및 <xref:System.Drawing.Region.MakeEmpty%2A> 메서드. 이 예제는 Windows Forms에서 사용 되는 설계 합니다. 폼을 만들고 다음 코드를 붙여 넣습니다. 호출 된 `FillEmptyRegion` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-cpp[System.Drawing.MiscExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.MiscExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.MiscExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeInfinite">
      <MemberSignature Language="C#" Value="public void MakeInfinite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeInfinite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.MakeInfinite" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeInfinite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeInfinite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Region" /> 개체를 제한이 없는 내부로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Drawing.Region.MakeInfinite%2A> 메서드를 사용하는 방법을 보여 줍니다. 이 예제는 Windows Forms에서 사용 되는 설계 합니다. 폼을 만들고 다음 코드를 붙여 넣습니다. 호출 된 `FillEmptyRegion` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 하는 이벤트 처리 메서드를 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.  
  
 [!code-cpp[System.Drawing.MiscExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.MiscExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.MiscExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHrgn">
      <MemberSignature Language="C#" Value="public void ReleaseHrgn (IntPtr regionHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHrgn(native int regionHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHrgn (regionHandle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHrgn(IntPtr regionHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="regionHandle">
          <see cref="T:System.Drawing.Region" />에 대한 핸들입니다.</param>
        <summary>
          <see cref="T:System.Drawing.Region" />의 핸들을 해제합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="regionHandle" />가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 열거형 관련 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />합니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환하는 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />을 변환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   사각형을 만들어 파란색으로 화면에 그립니다.  
  
-   사각형에서 영역을 만듭니다.  
  
-   변환 매트릭스를 만들고 45도를 설정 합니다.  
  
-   영역에 변환을 적용 합니다.  
  
-   빨간색으로 변환 된 영역을 채우는 하 고 빨간색으로 화면에는 변환 된 영역을 그립니다.  
  
 빨간색 직사각형 파란색으로 표시 된 원래 사각형이에서 45도 회전된 표시 됩니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="matrix" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 크기로 이 <see cref="T:System.Drawing.Region" />의 좌표를 오프셋합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Translate(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (dx As Integer, dy As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(int dx, int dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx">
          <see cref="T:System.Drawing.Region" />을 가로 방향으로 오프셋할 크기입니다.</param>
        <param name="dy">
          <see cref="T:System.Drawing.Region" />을 세로 방향으로 오프셋할 크기입니다.</param>
        <summary>지정된 크기로 이 <see cref="T:System.Drawing.Region" />의 좌표를 오프셋합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   사각형을 만들어 파란색으로 화면에 그립니다.  
  
-   사각형에서 영역을 만듭니다.  
  
-   지역에 변환을 적용 합니다.  
  
-   빨간색으로 번역 된 영역을 채우는 하 고 빨간색으로 화면에 번역 된 영역을 그립니다.  
  
 원래 사각형이 오른쪽 아래 및 파란색으로 표시 된 빨간색 직사각형 이동 확인 합니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float dx, float dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <see cref="T:System.Drawing.Region" />을 가로 방향으로 오프셋할 크기입니다.</param>
        <param name="dy">
          <see cref="T:System.Drawing.Region" />을 세로 방향으로 오프셋할 크기입니다.</param>
        <summary>지정된 크기로 이 <see cref="T:System.Drawing.Region" />의 좌표를 오프셋합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Translate%28System.Single%2CSystem.Single%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 업데이트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 통합하는 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> 및 <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.Rectangle" />과 통합하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.Rectangle" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.RectangleF" />과 통합하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.RectangleF" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`합니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   첫 번째 사각형을 만들어 검은색으로 화면에 그립니다.  
  
-   두 번째 사각형을 만들어 빨간색으로 화면에 그립니다.  
  
-   첫 번째 사각형을 사용 하 여 영역을 만듭니다.  
  
-   에 대 한 공용 구조체의 영역을 가져옵니다 `myRegion` 함께 사용 하면 `complementRect`합니다.  
  
-   파랑으로 칠 공용 구조체의 영역을 채우는 화면으로 그립니다.  
  
 두 개의 사각형이 중첩 영역을 포함 하 여 파랑으로 채워졌는지 확인 합니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">
          <see cref="T:System.Drawing.Region" />과 통합하는 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> 및 <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Xor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" /> 개체와 통합되게 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 개체를 업데이트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 <see cref="Overload:System.Drawing.Region.Xor" />하는 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> 및 <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.Rectangle" />과 <see cref="Overload:System.Drawing.Region.Xor" />하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.Rectangle" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.RectangleF" />과 <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" />하는 <see cref="T:System.Drawing.Region" /> 구조체입니다.</param>
        <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" /> 구조체와 통합되게 이 <see cref="T:System.Drawing.RectangleF" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수는 <xref:System.Windows.Forms.Control.Paint> 이벤트 처리기입니다. 이 코드에서는 다음 작업을 수행합니다.  
  
-   첫 번째 사각형을 만들어 검은색으로 화면에 그립니다.  
  
-   두 번째 사각형을 만들어 빨간색으로 화면에 그립니다.  
  
-   첫 번째 사각형을 사용 하 여 영역을 만듭니다.  
  
-   가져옵니다는 <xref:System.Drawing.Region.Xor%2A> 에 대 한 영역 `myRegion` 함께 사용 하면 `complementRect`합니다.  
  
-   채웁니다는 <xref:System.Drawing.Region.Xor%2A> 영역을 파랑으로 화면에 그립니다.  
  
 두 개의 사각형이 중첩 영역을 제외 하 고 파랑으로 채워졌는지 확인 합니다.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Region ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">
          <see cref="T:System.Drawing.Region" />과 <see cref="Overload:System.Drawing.Region.Xor" />하는 <see cref="T:System.Drawing.Region" />입니다.</param>
        <summary>교차 부분을 제외하고 지정된 <see cref="T:System.Drawing.Region" />와 통합되게 이 <see cref="T:System.Drawing.Region" />을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 코드 예제를 참조 하십시오.는 <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> 및 <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="region" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>