<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JumpList.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac574aa001f1c38814158e52e258f21e0c410fc563a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74aa001f1c38814158e52e258f21e0c410fc563a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Shell.JumpList">
          <source>Represents a list of items and tasks displayed as a menu on a Windows 7 taskbar button.</source>
          <target state="translated">Windows 7 작업 표시줄 단추에 메뉴로 표시되는 항목 및 작업의 목록을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar provides enhanced functionality for starting programs directly from the taskbar button by using Jump Lists.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> 작업 표시줄 점프 목록을 사용 하 여 작업 표시줄 단추가에서 직접 프로그램을 시작 하는 향상 된 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Jump Lists are also used in the <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> Start menu.</source>
          <target state="translated">점프 목록에도 사용 되는 <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> 시작 메뉴.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You access a Jump List by right-clicking a taskbar button or by clicking the arrow next to a program in the Start menu.</source>
          <target state="translated">점프 목록 작업 표시줄 단추를 마우스 오른쪽 단추로 클릭 하거나 시작 메뉴에서 프로그램 옆의 화살표를 클릭 하 여 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>For more information about Jump Lists, see the <bpt id="p1">[</bpt>Taskbar<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=178478)</ept> section of the Windows User Experience Interaction Guidelines.</source>
          <target state="translated">점프 목록에 대 한 자세한 내용은 참조는 <bpt id="p1">[</bpt>작업 표시줄<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=178478)</ept> Windows 사용자 환경 상호 작용 지침의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class provides a managed wrapper for the Jump List functionality in the <ph id="ph2">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar and manages the data passed to the <ph id="ph3">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 점프 목록 기능에 대 한 관리 되는 래퍼를 제공 하는 클래스는 <ph id="ph2">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> 작업 표시줄에 전달 되는 데이터를 관리 하 고는 <ph id="ph3">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 셸 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The functionality exposed by the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class is not available in versions of <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> earlier than <ph id="ph3">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>.</source>
          <target state="translated">노출 하는 기능은 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 버전의에서 사용할 수 없는 <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 이전의 <ph id="ph3">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Applications that use the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class will run in other versions of <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph>, but the Jump List will not be available.</source>
          <target state="translated">사용 하는 응용 프로그램의 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스의 다른 버전에서 실행 됩니다 <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph>, 있지만 점프 목록 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>For more information about the Windows shell and native Jump List APIs, see <bpt id="p1">[</bpt>Taskbar Extensions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=178479)</ept>.</source>
          <target state="translated">Windows 셸 및 네이티브 점프 목록 Api에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>작업 표시줄 확장<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=178479)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The following illustration shows the Jump List for Windows Media Player, with items in the <bpt id="p1">**</bpt>Tasks<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> categories.</source>
          <target state="translated">다음 그림과 점프 목록에 대 한 Windows Media Player의 항목과 <bpt id="p1">**</bpt>작업<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 범주입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source><bpt id="p1">![</bpt>Windows Media Player Jump List<ept id="p1">]</ept><bpt id="p2">(~/add/media/wpfshell-jumplist.png "</bpt>Windows Media Player Jump List<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Windows Media Player 점프 목록<ept id="p1">]</ept><bpt id="p2">(~/add/media/wpfshell-jumplist.png "</bpt>Windows Media Player 점프 목록<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Windows Media Player Jump List</source>
          <target state="translated">Windows Media Player 점프 목록</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Configuring a Jump List</source>
          <target state="translated">점프 목록 구성</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Jump Lists can contain two types of items, a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph>.</source>
          <target state="translated">점프 목록에는 두 가지 유형의 항목을 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> is a link to a program and a <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> is a link to a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 프로그램에 대 한 링크가 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> 파일에 대 한 링크가 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You can visually separate items in a Jump List by creating a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> that does not have a <ph id="ph2">&lt;xref:System.Windows.Shell.JumpTask.Title%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Shell.JumpItem.CustomCategory%2A&gt;</ph> specified.</source>
          <target state="translated">만들어서 점프 목록에서 항목을 시각적으로 구분할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 가지고 있지 않은 한 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpTask.Title%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpItem.CustomCategory%2A&gt;</ph> 지정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>This empty <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> will be displayed as a horizontal line in the Jump List.</source>
          <target state="translated">이 빈 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 점프 목록에는 가로 선으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>If the type of the file specified in a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> is not registered with your application, the file will not appear in the Jump List.</source>
          <target state="translated">파일의 형식에 지정 된 경우는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> 등록 되지 않은 응용 프로그램 파일 점프 목록에 표시 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>For example, if you add a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> that points to a .txt file, your application must be registered to handle .txt files.</source>
          <target state="translated">예를 들어, 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> .txt 파일을 가리키는,.txt 파일을 처리 하도록 응용 프로그램을 등록 해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>For more information, see <bpt id="p1">[</bpt>Introduction to File Associations<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=178480)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>파일 연결 소개<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=178480)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Jump items are placed into categories in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>.</source>
          <target state="translated">점프 항목이 배치 되는 범주에는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>By default, a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpItem&gt;</ph> is displayed in the <bpt id="p1">**</bpt>Tasks<ept id="p1">**</ept> category.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpItem&gt;</ph> 에 표시 되는 <bpt id="p1">**</bpt>작업<ept id="p1">**</ept> 범주입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Alternatively, you can specify a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpItem.CustomCategory%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpItem&gt;</ph>.</source>
          <target state="translated">지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpItem.CustomCategory%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You can specify whether the standard <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> categories are displayed in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A&gt;</ph> properties.</source>
          <target state="translated">지정할 수 있는지 여부를 표준 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 범주에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 설정 하 여는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The contents of these categories are managed by the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell.</source>
          <target state="translated">이러한 범주의 내용을 통해 관리 되는 <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 셸 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Because these categories might contain much of the same data, you typically display one or the other in your <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>, but not both.</source>
          <target state="translated">이러한 범주는 대부분의 동일한 데이터가 포함 될 수 있습니다, 때문에 일반적으로 표시할 있습니다 하나 또는 다른 프로그램 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>, 둘 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> automatically manages recent items if they are opened through a common file dialog box or used to open an application through file type association.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 공용 파일 대화 상자를 통해 열거나 파일 형식 연결을 통해 응용 프로그램을 여는 데 사용 하는 경우 최근 항목을 자동으로 관리 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>When an item is accessed through the Jump List, you can notify the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell to add the item to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category by calling the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A&gt;</ph> method.</source>
          <target state="translated">점프 목록을 통해 액세스 하는 항목에 알릴 수 있습니다는 <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 셸 항목을 추가 하는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 호출 하 여 범주는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Applying a Jump List to the Windows Shell</source>
          <target state="translated">Windows 셸에 점프 목록 적용</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You cannot access the shell’s Jump List directly or read its contents into the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class.</source>
          <target state="translated">셸 점프 목록에 직접 액세스 하거나 내용을 읽을 수 없습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class provides a representation of a Jump List that you can work with, and then apply to the <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell.</source>
          <target state="translated">대신,는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스를 사용 하 고 다음에 적용 하는 점프 목록의 표현을 제공는 <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 셸 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You typically create a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> and set it one time when the application is first run.</source>
          <target state="translated">일반적으로 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 응용 프로그램을 처음 실행할 때 한 번 설정 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>However, you can modify or replace the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> at run time.</source>
          <target state="translated">그러나 수정 하거나 바꿀 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 런타임 시.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>When you have set the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> properties, you must apply the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to the Windows shell before its contents appear in the taskbar Jump List.</source>
          <target state="translated">설정한 경우는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 적용 해야 속성을는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 점프 목록 작업 표시줄에 해당 내용이 표시 되기 전에 Windows 셸에 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>This is done automatically when the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is first attached to an application, either in XAML or in a call to the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> method.</source>
          <target state="translated">이 되 면 자동으로 수행 된 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> XAML 또는 호출 응용 프로그램에 처음 연결는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>If you modify the contents of the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> at run time, you must call the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> method to apply its current contents to the Windows shell.</source>
          <target state="translated">내용을 수정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 런타임 시 호출 해야 합니다는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> Windows 셸에 현재 내용을 적용 하는 메서드.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Setting a Jump List in XAML</source>
          <target state="translated">XAML에서 점프 목록 설정</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is not automatically attached to an <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 에 자동으로 연결 되지 않은 프로그램 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You attach a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to an <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object in XAML by using the attached property syntax.</source>
          <target state="translated">연결 하는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 연결 된 속성 구문을 사용 하 여 XAML에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> interface to support XAML declaration of a <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스가 구현 하는 <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> 의 XAML 선언을 지원에 대 한 인터페이스는 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is declared in XAML and attached to the current <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph>, it is automatically applied to the <ph id="ph3">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell when the <ph id="ph4">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is initialized.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> XAML에서 선언 되 고 현재 연결 된 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph>, 자동으로 적용 되는 <ph id="ph3">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 때 셸는 <ph id="ph4">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 초기화 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Setting and Modifying a Jump List in Code</source>
          <target state="translated">설정 하 고 코드에서 점프 목록 수정</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You attach a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to an <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object in code by calling the static <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> method.</source>
          <target state="translated">연결 하는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 정적을 호출 하 여 코드에서 개체 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>This also applies the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to the <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell.</source>
          <target state="translated">이 적용 됩니다.는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 에 <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 셸 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>To modify a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> at run time, you call the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.GetJumpList%2A&gt;</ph> method to get the <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> that is currently attached to an <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>.</source>
          <target state="translated">수정 하는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 호출 실행 시의 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.GetJumpList%2A&gt;</ph> 가져올 메서드를는 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재에 연결 되어는 <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>After you have modified the properties of the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>, you must call the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> method to apply the changes to the Windows shell.</source>
          <target state="translated">속성을 수정한 후는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>를 호출 해야 합니다는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> 메서드는 변경 내용을 Windows 셸에 적용 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>You typically create one <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> that is attached to the <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> and applied to the <ph id="ph3">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell.</source>
          <target state="translated">일반적으로 만들 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 에 연결 된는 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> 에 적용 된 <ph id="ph3">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 셸 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>However, you can create multiple <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> objects.</source>
          <target state="translated">그러나 만들 수 있습니다 여러 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Only one <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> at a time can be applied to the <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> shell, and only one <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> at a time can be associated with an <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>.</source>
          <target state="translated">하나의 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 에 한 번에 적용할 수는 <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph> 셸과 하나만 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 한 번에 연결할 수 있는 <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The .NET Framework does not require that these be the same <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>.</source>
          <target state="translated">.NET Framework 하지 않아도 이러한 동일 하 게 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>This class contains a link demand at the class level that applies to all members.</source>
          <target state="translated">이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 링크 요청을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the immediate caller does not have full-trust permission.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> 직접 실행 호출자에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>For more information about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">보안 요청에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>링크 요청<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> 및 <bpt id="p2">[</bpt>상속 요청<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The following example shows an application with a Jump List.</source>
          <target state="translated">다음 예제에서는 점프 목록으로 응용 프로그램을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The application has three buttons that enable you to add a task to the current Jump List, clear the contents of the Jump List, and apply a new Jump List to the application.</source>
          <target state="translated">응용 프로그램에 현재 점프 목록에 작업 추가 점프 목록의 내용을 지우고 새 점프 목록 응용 프로그램에 적용할 수 있도록 하는 세 개의 단추가 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The following example shows how to declare a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> in markup.</source>
          <target state="translated">선언 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 태그에 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> contains two <ph id="ph2">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> links and one <ph id="ph3">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 에 두 개의 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 링크와 하나의 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Applying the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> to the shell will fail if the application is not registered to handle the .txt file name extension.</source>
          <target state="translated">적용 된 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> 셸에.txt 파일 이름 확장명을 처리 하는 응용 프로그램 등록 되지 않은 경우 실패 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The following example shows the code-behind page for <ph id="ph1">`App.xaml`</ph>.</source>
          <target state="translated">다음 예제에 대 한 코드 숨김 페이지에서는 <ph id="ph1">`App.xaml`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>This code handles the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> events.</source>
          <target state="translated">이 코드에서는 처리는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The following example shows the markup used to create the application user interface.</source>
          <target state="translated">다음 예제에서는 응용 프로그램 사용자 인터페이스를 만들기 위해 사용 되는 태그를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>The following example shows the code-behind page for <ph id="ph1">`MainWindow.xaml`</ph>.</source>
          <target state="translated">다음 예제에 대 한 코드 숨김 페이지에서는 <ph id="ph1">`MainWindow.xaml`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>This code demonstrates how to modify, clear, and create a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> in procedural code.</source>
          <target state="translated">이 코드에서는 수정 및 만들 하 한 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 프로시저 코드에서.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>For the new Jump List, the static <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> method is called to associate the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> with the current application and apply the <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to the Windows shell.</source>
          <target state="translated">새 점프 목록, 정적 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> 메서드는 연결 하는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재 응용 프로그램 적용는 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> Windows 셸에 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>for full access to modify the Windows shell.</source>
          <target state="translated">Windows 셸 수정에 대 한 전체 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Shell.JumpList">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Windows.Shell.JumpList">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.#ctor">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.#ctor">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>The collection of <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpItem" /&gt;</ph> objects that are displayed in the Jump List.</source>
          <target state="translated">점프 목록에 표시되는 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpItem" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>A value that indicates whether frequently used items are displayed in the Jump List.</source>
          <target state="translated">점프 목록에 자주 사용되는 항목이 표시되는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>A value that indicates whether recently used items are displayed in the Jump List.</source>
          <target state="translated">점프 목록에 최근에 사용한 항목이 표시되는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">지정된 매개 변수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>The <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> categories often contain many of the same jump items.</source>
          <target state="translated"><bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 범주 종종 같은 점프 항목이 여러 개 포함 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>As a result, applications typically display either the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> or the <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> category in the Jump List, but not both.</source>
          <target state="translated">결과적으로, 응용 프로그램 일반적으로 표시 하거나는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 점프 목록 중 하나만의 범주입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="T:System.Windows.Shell.JumpList">
          <source>Adds the specified item to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category of the Jump List.</source>
          <target state="translated">점프 목록의 <bpt id="p1">**</bpt>최근에 사용한 항목<ept id="p1">**</ept> 범주에 지정된 항목을 추가합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>The path to add to the Jump List.</source>
          <target state="translated">점프 목록에 추가할 경로입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>Adds the specified item path to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category of the Jump List.</source>
          <target state="translated">점프 목록의 <bpt id="p1">**</bpt>최근에 사용한 항목<ept id="p1">**</ept> 범주에 지정된 항목 경로를 추가합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>The contents of the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category are managed by the Windows shell.</source>
          <target state="translated">콘텐츠는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 범주 Windows 셸에 의해 관리 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>To display recently used items in the Jump List, set the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">점프 목록에 최근에 사용한 항목을 표시 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29&gt;</ph> method to request that the Windows shell add an item path to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> items list.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29&gt;</ph> 를 요청 하 여 Windows 셸에 대 한 항목 경로를 추가 하는 메서드는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 항목 목록입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>If your application is not registered to handle the file type of the item, it will not appear in the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> list and calls to <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29&gt;</ph> will fail silently.</source>
          <target state="translated">항목의 파일 형식을 처리 하도록 응용 프로그램 등록 되어 있지 않으면에 나타나지 것입니다는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 목록 및에 대 한 호출 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29&gt;</ph> 자동으로 실패 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpPath" /&gt;</ph> to add to the Jump List.</source>
          <target state="translated">점프 목록에 추가할 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>Adds the specified jump path to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category of the Jump List.</source>
          <target state="translated">점프 목록의 <bpt id="p1">**</bpt>최근에 사용한 항목<ept id="p1">**</ept> 범주에 지정된 점프 경로를 추가합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>The contents of the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category are managed by the Windows shell.</source>
          <target state="translated">콘텐츠는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 범주 Windows 셸에 의해 관리 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>To display recently used items in the Jump List, set the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">점프 목록에 최근에 사용한 항목을 표시 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29&gt;</ph> method to request that the Windows shell add the specified jump path to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> items list.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29&gt;</ph> Windows 셸 하의 지정 된 이동 경로를 추가 하도록 요청할 메서드는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 항목 목록입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>If your application is not registered to handle the file type of the item, it will not appear in the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> list and calls to <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29&gt;</ph> will fail silently.</source>
          <target state="translated">항목의 파일 형식을 처리 하도록 응용 프로그램 등록 되어 있지 않으면에 나타나지 것입니다는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 목록 및에 대 한 호출 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29&gt;</ph> 자동으로 실패 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpTask" /&gt;</ph> to add to the Jump List.</source>
          <target state="translated">점프 목록에 추가할 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpTask" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
          <source>Adds the specified jump task to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category of the Jump List.</source>
          <target state="translated">점프 목록의 <bpt id="p1">**</bpt>최근에 사용한 항목<ept id="p1">**</ept> 범주에 지정된 점프 작업을 추가합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
          <source>The contents of the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category are managed by the Windows shell.</source>
          <target state="translated">콘텐츠는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 범주 Windows 셸에 의해 관리 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
          <source>To display recently used items in the Jump List, set the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">점프 목록에 최근에 사용한 항목을 표시 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29&gt;</ph> method to request that the Windows shell add the specified jump task to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> items list.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29&gt;</ph> 하 여 Windows 셸에 추가 지정한 점프 작업을 요청 하는 메서드는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 항목 목록입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>Sends the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> to the Windows shell in its current state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph>의 현재 상태를 Windows 셸에 보냅니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> method sends the content of the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to the Windows shell in its current state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> 메서드의 내용을 보냅니다는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재 상태에서 Windows 셸에 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>After this call is complete, the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> property is modified to contain only those items that the Windows shell successfully added to its taskbar Jump List.</source>
          <target state="translated">이 호출이 완료 된 후의 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 속성 Windows 셸 점프 목록의 작업 표시줄에 성공적으로 추가 된 항목만 포함 하도록 수정 됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>You can access the lists of removed items through event handlers for the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> events.</source>
          <target state="translated">에 대 한 이벤트 처리기를 통해 제거 된 항목의 목록에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>The following example shows how to get the current <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> and clear the contents of the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> collection.</source>
          <target state="translated">다음 예제에는 현재를 가져오는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 내용의 선택을 취소 하 고는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> method is then called to apply the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> changes to the Windows shell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> 적용할 메서드가 호출 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> Windows 셸으로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> is not completely initialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph>가 완전히 초기화되지 않은 경우</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.Apply">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.BeginInit">
          <source>Signals the start of the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> initialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 초기화가 시작되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> interface to support XAML declaration of a <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스가 구현 하는 <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> 의 XAML 선언을 지원에 대 한 인터페이스는 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.BeginInit%2A&gt;</ph> method is only called when the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is declared in XAML and attached to an <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph> by using the attached property syntax.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.BeginInit%2A&gt;</ph> 만 때 메서드가 호출 된는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> XAML에 선언 되며에 연결 된 프로그램 <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph> 연결 된 속성 구문을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.BeginInit">
          <source>You do not call this method from your code.</source>
          <target state="translated">사용자 코드에서이 메서드를 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.BeginInit">
          <source>This call to <ph id="ph1">&lt;see cref="M:System.Windows.Shell.JumpList.BeginInit" /&gt;</ph> is nested in a previous call to <ph id="ph2">&lt;see cref="M:System.Windows.Shell.JumpList.BeginInit" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Shell.JumpList.BeginInit" /&gt;</ph>에 대한 이 호출은 <ph id="ph2">&lt;see cref="M:System.Windows.Shell.JumpList.BeginInit" /&gt;</ph>에 대한 이전 호출에 중첩됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>Signals the end of the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> initialization.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 초기화가 끝났음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> interface to support XAML declaration of a <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스가 구현 하는 <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> 의 XAML 선언을 지원에 대 한 인터페이스는 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> method is only called when the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is declared in XAML and attached to an <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph> by using the attached property syntax.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> 만 때 메서드가 호출 된는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> XAML에 선언 되며에 연결 된 프로그램 <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph> 연결 된 속성 구문을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>You do not call this method from your code.</source>
          <target state="translated">사용자 코드에서이 메서드를 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> method has the same effect as the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> 것과 동일한 결과가 메서드는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> sends the content of the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to the Windows shell in its current state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> 콘텐츠를 보냅니다는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재 상태에서 Windows 셸에 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>After this call is complete, the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> property is modified to contain only those items that the Windows shell successfully added to its Jump List.</source>
          <target state="translated">이 호출이 완료 된 후의 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 속성 Windows 셸 성공적으로 점프 목록에 추가 된 항목만 포함 하도록 수정 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>You can access the lists of removed items through event handlers for the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> events.</source>
          <target state="translated">에 대 한 이벤트 처리기를 통해 제거 된 항목의 목록에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.EndInit">
          <source>This call to <ph id="ph1">&lt;see cref="M:System.Windows.Shell.JumpList.EndInit" /&gt;</ph> is not paired with a call to <ph id="ph2">&lt;see cref="M:System.Windows.Shell.JumpList.BeginInit" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Shell.JumpList.EndInit" /&gt;</ph>에 대한 이 호출은 <ph id="ph2">&lt;see cref="M:System.Windows.Shell.JumpList.BeginInit" /&gt;</ph>에 대한 호출과 쌍을 이룹니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>The application associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph>와 연결된 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> object associated with an application.</source>
          <target state="translated">응용 프로그램과 연결된 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> object associated with the specified application.</source>
          <target state="translated">지정된 응용 프로그램과 연결된 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.GetJumpList%2A&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> currently associated with an <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph>.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.GetJumpList%2A&gt;</ph> 가져올 메서드를는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재 연결 된는 <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>The .NET Framework does not require that this be the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> that is currently applied to the Windows shell.</source>
          <target state="translated">.NET Framework에는이 수 필요 하지 않습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> Windows 셸에 현재 적용 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>The following example shows how to get the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> associated with the current application.</source>
          <target state="translated">다음 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재 응용 프로그램에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> collection and added to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 에 추가 되는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 컬렉션에 추가 하 고는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 범주입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> method is called to apply the updated <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> to the Windows shell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> 메서드를 호출 하 여 업데이트 된 적용 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> Windows 셸에 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpItem" /&gt;</ph> objects that are displayed in the Jump List.</source>
          <target state="translated">점프 목록에 표시되는 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpItem" /&gt;</ph> 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>The collection of <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpItem" /&gt;</ph> objects displayed in the Jump List.</source>
          <target state="translated">점프 목록에 표시되는 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpItem" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>The default is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>Jump Lists can contain two types of items, a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph>.</source>
          <target state="translated">점프 목록에는 두 가지 유형의 항목을 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> is a link to a program and a <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> is a link to a file.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 프로그램에 대 한 링크가 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> 파일에 대 한 링크가 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> collection is empty.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 만들어지면는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 컬렉션은 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>You can add any <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> objects to the collection.</source>
          <target state="translated">추가할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpTask&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpPath&gt;</ph> 개체를 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>The collection will only contain items that have been added by your program.</source>
          <target state="translated">컬렉션에는 프로그램에 의해 추가 된 항목이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> has been passed to the Windows shell by a successful call to either the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> methods, the <ph id="ph4">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> collection will contain only the items that were successfully added to the taskbar Jump List.</source>
          <target state="translated">후는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 는 성공적으로 호출 하 여 Windows 셸에 전달 되었는지는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.EndInit%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> 메서드는 <ph id="ph4">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 컬렉션 점프 목록 작업 표시줄에 추가 된 항목만 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>Items that were not successfully added are removed from the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> collection.</source>
          <target state="translated">성공적으로 추가 되지 않은 항목에서 제거 되 고 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>You can access the lists of removed items through event handlers for the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> events.</source>
          <target state="translated">에 대 한 이벤트 처리기를 통해 제거 된 항목의 목록에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>The following example shows how to get the current <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> and clear the contents of the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> collection.</source>
          <target state="translated">다음 예제에는 현재를 가져오는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 내용의 선택을 취소 하 고는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> method is then called to apply the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> changes to the Windows shell.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.Apply%2A&gt;</ph> 적용할 메서드가 호출 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> Windows 셸으로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.JumpItems">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="E:System.Windows.Shell.JumpList.JumpItemsRejected">
          <source>Occurs when jump items are not successfully added to the Jump List by the Windows shell.</source>
          <target state="translated">Windows 셸에서 점프 항목을 점프 목록에 추가하지 못한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRejected">
          <source>After the contents of the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> are applied to the Windows shell, the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> property is modified to contain only those items that the Windows shell successfully added to its Jump List.</source>
          <target state="translated">내용는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> Windows 셸에 적용 되는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 속성 Windows 셸 성공적으로 점프 목록에 추가 된 항목만 포함 하도록 수정 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRejected">
          <source>You can access the lists of removed items through event handlers for the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> events.</source>
          <target state="translated">에 대 한 이벤트 처리기를 통해 제거 된 항목의 목록에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRejected">
          <source>The following example shows how to handle the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> event to display the rejected items in a message box.</source>
          <target state="translated">다음 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> 메시지 상자에 거부 된 항목을 표시 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRejected">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
          <source>Occurs when jump items previously in the Jump List are removed from the list by the user.</source>
          <target state="translated">사용자가 점프 목록의 기존 점프 항목을 목록에서 제거할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
          <source>After the contents of the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> are applied to the Windows shell, the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> property is modified to contain only those items that the Windows shell successfully added to its Jump List.</source>
          <target state="translated">내용는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> Windows 셸에 적용 되는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItems%2A&gt;</ph> 속성 Windows 셸 성공적으로 점프 목록에 추가 된 항목만 포함 하도록 수정 됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
          <source>You can access the lists of removed items through event handlers for the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> events.</source>
          <target state="translated">에 대 한 이벤트 처리기를 통해 제거 된 항목의 목록에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRejected&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
          <source>The following example shows how to handle the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> event to display the rejected items in a message box.</source>
          <target state="translated">다음 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser&gt;</ph> 메시지 상자에 거부 된 항목을 표시 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>The application associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph>와 연결된 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> to associate with the application.</source>
          <target state="translated">응용 프로그램과 연결할 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> object associated with an application.</source>
          <target state="translated">응용 프로그램과 연결된 <ph id="ph1">&lt;see cref="T:System.Windows.Shell.JumpList" /&gt;</ph> 개체를 설정합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>You can create multiple <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> objects.</source>
          <target state="translated">여러 개 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>However, only one <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> at a time can be associated with an <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph>.</source>
          <target state="translated">그러나 하나의 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 한 번에 연결할 수 있는 프로그램 <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> method to set the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> currently associated with an <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph>.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> 설정 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재 연결 된는 <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> in code.</source>
          <target state="translated">만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 코드에서입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>The static <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> method is called to associate the <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> with the current application.</source>
          <target state="translated">정적 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.SetJumpList%2A&gt;</ph> 메서드는 연결 하는 <ph id="ph2">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 현재 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> is automatically applied to the Windows shell when it is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 설정 되어 있는 경우에 Windows 셸 자동으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>Gets or sets a value that indicates whether frequently used items are displayed in the Jump List.</source>
          <target state="translated">점프 목록에 자주 사용되는 항목이 표시되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if frequently used items are displayed in the Jump List; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">점프 목록에 자주 사용되는 항목이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>The contents of the <bpt id="p1">**</bpt>Frequent<ept id="p1">**</ept> category are managed by the Windows shell.</source>
          <target state="translated">콘텐츠는 <bpt id="p1">**</bpt>빈도<ept id="p1">**</ept> 범주 Windows 셸에 의해 관리 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>To display frequently used items in the Jump List, set the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">점프 목록에 자주 사용 되는 항목을 표시 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>The <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> categories often contain many of the same jump items.</source>
          <target state="translated"><bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 범주 종종 같은 점프 항목이 여러 개 포함 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>As a result, applications typically display either the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> or the <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> category in the Jump List, but not both.</source>
          <target state="translated">결과적으로, 응용 프로그램 일반적으로 표시 하거나는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 점프 목록 중 하나만의 범주입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> configured to show the <bpt id="p1">**</bpt>Frequent<ept id="p1">**</ept> category.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 표시 하도록 구성 된 <bpt id="p1">**</bpt>빈도<ept id="p1">**</ept> 범주입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>Gets or sets a value that indicates whether recently used items are displayed in the Jump List.</source>
          <target state="translated">점프 목록에 최근에 사용한 항목이 표시되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if recently used items are displayed in the Jump List; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">점프 목록에 최근에 사용한 항목이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>The contents of the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category are managed by the Windows shell.</source>
          <target state="translated">콘텐츠는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 범주 Windows 셸에 의해 관리 됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>To display frequently used items in the Jump List, set the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">점프 목록에 자주 사용 되는 항목을 표시 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>The <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> categories often contain many of the same jump items.</source>
          <target state="translated"><bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 범주 종종 같은 점프 항목이 여러 개 포함 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>As a result, applications typically display either the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> or the <bpt id="p2">**</bpt>Frequent<ept id="p2">**</ept> category in the Jump List, but not both.</source>
          <target state="translated">결과적으로, 응용 프로그램 일반적으로 표시 하거나는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>빈도<ept id="p2">**</ept> 점프 목록 중 하나만의 범주입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>You can call the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A&gt;</ph> method to request that the Windows shell add items to the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> items list.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A&gt;</ph> 하 여 Windows 셸에 추가 항목을 요청 하는 메서드는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 항목 목록입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>If your application is not registered to handle the file name type of the item, it will not appear in the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> list and calls to <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A&gt;</ph> will fail silently.</source>
          <target state="translated">항목의 파일 이름 형식을 처리 하도록 응용 프로그램 등록 되어 있지 않으면에 나타나지 것입니다는 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 목록 및에 대 한 호출 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A&gt;</ph> 자동으로 실패 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> configured to show the <bpt id="p1">**</bpt>Recent<ept id="p1">**</ept> category.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 표시 하도록 구성 된 <bpt id="p1">**</bpt>최근<ept id="p1">**</ept> 범주.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Shell.JumpList.ShowRecentCategory">
          <source>This example is part of a larger example available in the <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> class overview.</source>
          <target state="translated">이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Shell.JumpList&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>