<Namespace Name="System.ComponentModel.Design.Serialization">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a00e1219743debba9734b13b4ea4797337e29dbe" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30725947" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.ComponentModel.Design.Serialization" /> 네임스페이스는 디자인 타임에 사용자 지정하고 serialization을 제어할 수 있는 형식을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 네임 스페이스의 클래스는 다음과 같은 범주로 나눌 수 있습니다.  
  
-   특정 형식에 사용할 serializer를 나타내기 위해 사용할 수 있는 직렬화 특성: <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>; 특정 형식에 사용할 serializer를 나타내기 위해 및 <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>루트 디자이너에 사용할 기본 serializer를 나타내기 위해.  
  
-   디자이너는 serialization을 사용자 지정 하기 위해 구현할 수 있는 클래스: <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>, serialize 된 상태이 던; 디자이너 문서를 로드 하기 위한 및 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, 외부 구성 요소와 비동기 로드 관련 된 경우 디자이너 문서 로드에 대 한 합니다.  
  
-   디자이너는 serialization 프로세스를 관리 하는 데 사용할 수 있는 인터페이스: <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>를 등록 하거나 사용자 지정 serializer; 검색 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>, serializer를 사용할 수 있도록는 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>; 및 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>, serialization 및 deserialization을 호출할 메서드를 제공 합니다.  
  
-   디자이너의 로드 프로세스를 사용자 지정 하려면 구현할 수 있는 인터페이스: <xref:System.ComponentModel.Design.Serialization.DesignerLoader>합니다.  
  
-   디자이너를 다시 로드를 최적화 하기 위해 사용할 수 있는 인터페이스: <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>합니다.  
  
-   다른 도우미 클래스: <xref:System.ComponentModel.Design.Serialization.INameCreationService>, 생성 되는 개체에 대 한 고유 이름에 대 한 인터페이스 <xref:System.ComponentModel.Design.Serialization.ContextStack>, serializer;로 serialization 컨텍스트 정보를 공유 하는 데 유용한 데이터 구조 및 <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>, 직렬화 가능 개체를 설명할 수 있는 개체입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>