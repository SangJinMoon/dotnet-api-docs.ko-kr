<Namespace Name="System.ComponentModel.Design.Serialization">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a00e1219743debba9734b13b4ea4797337e29dbe" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30725947" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="75b08-101">
        <see cref="N:System.ComponentModel.Design.Serialization" /> 네임스페이스는 디자인 타임에 사용자 지정하고 serialization을 제어할 수 있는 형식을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75b08-101">The <see cref="N:System.ComponentModel.Design.Serialization" /> namespace provides types that support customization and control of serialization at design time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75b08-102">이 네임 스페이스의 클래스를 다음 범주로 나눌 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75b08-102">The classes in this namespace can be divided into the following categories:</span></span>  
  
-   <span data-ttu-id="75b08-103">특정 형식에 사용할 serializer를 나타내기 위해 사용할 수 있는 직렬화 특성: <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>는 특정 형식에 사용할 serializer를 나타내기 위해 및 <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>, 루트 디자이너에 사용할 기본 serializer를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="75b08-103">Serialization attributes that can be used to indicate the serializer to use for a specific type: <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>, to indicate the serializer to use for a particular type; and <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>, to indicate the base serializer to use for the root designer.</span></span>  
  
-   <span data-ttu-id="75b08-104">디자이너 serialization을 사용자 지정 하기 위해 구현할 수 있는 클래스: <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>, 된 serialize 된 상태에서 디자이너 문서를 로드 하는 것에 대 한 및 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, 외부 구성 요소와 비동기 로드 관련 된 경우 디자이너 문서를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="75b08-104">Classes that a designer can implement to customize serialization: <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>, for loading a designer document from a serialized state; and <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, for loading a designer document when external components and asynchronous loading are involved.</span></span>  
  
-   <span data-ttu-id="75b08-105">디자이너 serialization 프로세스를 관리 하는 데 사용할 수 있는 인터페이스: <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>하 여 등록 하거나 사용자 지정 직렬 변환기; 검색 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>직렬 변환기를 사용할 수 있도록 하는 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>; 및 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>, serialization 및 deserialization을 호출할 메서드를 제공 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="75b08-105">Interfaces that a designer can use to manage the serialization process: <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>, to register or retrieve custom serializers; <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>, to make a serializer available to an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>; and <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>, which provides methods to invoke serialization and deserialization.</span></span>  
  
-   <span data-ttu-id="75b08-106">디자이너 로드 프로세스를 사용자 지정을 구현할 수 있는 인터페이스: <xref:System.ComponentModel.Design.Serialization.DesignerLoader>합니다.</span><span class="sxs-lookup"><span data-stu-id="75b08-106">An interface that can be implemented to customize the loading process of a designer: <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.</span></span>  
  
-   <span data-ttu-id="75b08-107">디자이너의 재 로딩을 최적화 하기 위해 사용할 수 있는 인터페이스: <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>합니다.</span><span class="sxs-lookup"><span data-stu-id="75b08-107">An interface that can be used to optimize the reloading of a designer: <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>.</span></span>  
  
-   <span data-ttu-id="75b08-108">다른 도우미 클래스: <xref:System.ComponentModel.Design.Serialization.INameCreationService>, 개체에 대 한 고유한 이름을 생성 하기 위한 인터페이스 <xref:System.ComponentModel.Design.Serialization.ContextStack>, serializer;를 사용 하 여 serialization 컨텍스트 정보를 공유 하는 것에 대 한 유용한 데이터 구조 및 <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>, 직렬화 가능 개체를 설명할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75b08-108">Other helper classes: <xref:System.ComponentModel.Design.Serialization.INameCreationService>, an interface for generating unique names for objects; <xref:System.ComponentModel.Design.Serialization.ContextStack>, a data structure useful for sharing serialization context information with serializers; and <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>, an object that can describe a serializable object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>