<Type Name="PeerResolverMode" FullName="System.ServiceModel.PeerResolvers.PeerResolverMode">
  <TypeSignature Language="C#" Value="public enum PeerResolverMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerResolverMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolvers.PeerResolverMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerResolverMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerResolverMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="55984-101">사용 중인 피어 확인자 형식을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="55984-101">Determines the type of peer resolver being used.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55984-102">지정된 피어 확인자를 사용할 수 없을 경우 확인자를 사용하려는 시도가 있을 때 <xref:System.InvalidOperationException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55984-102">If the specified peer resolver is unavailable, a <xref:System.InvalidOperationException> will be thrown when an attempt to use the resolver is made.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.PeerResolvers.PeerResolverMode Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.PeerResolverMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="55984-103">바인딩의 정보 집합에서 사용할 확인자 형식을 자동으로 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="55984-103">Automatically determines the type of resolver to use from the information set on the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55984-104">가능한 경우 사용자 지정 확인자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55984-104">If available, a custom resolver is used.</span></span>  <span data-ttu-id="55984-105">하나를 사용할 수 없으면 PNRP 피어 확인자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55984-105">If one is unavailable, the PNRP peer resolver is used.</span></span> <span data-ttu-id="55984-106">피어 확인자에 <xref:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Address%2A> 및 <xref:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding%2A> 속성이 설정되어 있으면 피어 확인자가 "사용 가능한" 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="55984-106">A peer resolver is considered "available" if the <xref:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Address%2A> and <xref:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding%2A> properties are set on it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.PeerResolvers.PeerResolverMode Custom = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.PeerResolverMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="55984-107">사용자 지정 확인자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55984-107">A custom resolver is used.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Pnrp">
      <MemberSignature Language="C#" Value="Pnrp" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.PeerResolvers.PeerResolverMode Pnrp = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Pnrp" />
      <MemberSignature Language="VB.NET" Value="Pnrp" />
      <MemberSignature Language="C++ CLI" Value="Pnrp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.PeerResolverMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="55984-108">PNRP 확인자를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55984-108">The PNRP resolver is used.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>