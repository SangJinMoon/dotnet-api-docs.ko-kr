<Type Name="PageSettings" FullName="System.Drawing.Printing.PageSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a139cdec887cdcd1dcabffa0c3e2ccfbfd71c3a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410197" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PageSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PageSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class PageSettings&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageSettings : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>한면 인쇄 페이지에 적용할 설정을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PageSettings> 클래스는 페이지 인쇄 하는 방법을 수정 하는 설정을 지정 하는 데 사용 됩니다. 통해 인쇄할 모든 페이지에 대 한 기본 설정을 설정 하는 일반적으로 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType> 속성입니다. 설정을 지정 하려면 페이지 단위로 별로 처리는 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 또는 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings?displayProperty=nameWithType> 이벤트 및 수정는 <xref:System.Drawing.Printing.PageSettings> 에 포함 된 인수는 <xref:System.Drawing.Printing.PrintPageEventArgs> 또는 <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>각각.  
  
 처리에 대 한 자세한 내용은 <xref:System.Drawing.Printing.PrintDocument> 이벤트 참조는 <xref:System.Drawing.Printing.PrintDocument> 클래스 개요입니다. 인쇄에 대 한 자세한 내용은 참조는 <xref:System.Drawing.Printing> 네임 스페이스 개요입니다.  
  
   
  
## Examples  
 다음 예제에서는 처리는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트 및 검사는 <xref:System.Drawing.Printing.PageSettings> 의 인수 <xref:System.Drawing.Printing.PrintPageEventArgs>합니다. 이 코드를 사용 하려면 추가 <xref:System.Drawing.Printing.PrintDocument> 라는 구성 요소가 `PrintDocument1` Windows Form과 연결 하려면 해당 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 사용 하 여 이벤트는 `printDocument1_PrintPage` 예제의 메서드.  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Printing.PrintDocument" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PageSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>기본 프린터를 사용하여 <see cref="T:System.Drawing.Printing.PageSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 모든 필드를 기본값으로 초기화 합니다.  
  
 일반적으로 만들지 않으면 인스턴스의 <xref:System.Drawing.Printing.PageSettings>을 사용 하 여는 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType> 모든 페이지에 대 한 설정을 지정 하려면.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings (System.Drawing.Printing.PrinterSettings printerSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Printing.PrinterSettings printerSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageSettings(System::Drawing::Printing::PrinterSettings ^ printerSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printerSettings" Type="System.Drawing.Printing.PrinterSettings" />
      </Parameters>
      <Docs>
        <param name="printerSettings">사용할 프린터를 설명하는 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 클래스입니다.</param>
        <summary>지정된 프린터를 사용하여 <see cref="T:System.Drawing.Printing.PageSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PageSettings.%23ctor%2A> 생성자의 새 인스턴스를 초기화 하는 것과 비슷합니다 <xref:System.Drawing.Printing.PageSettings> 설정는 <xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> 속성으로 지정한 페이지 방향을 고려하여 페이지의 크기를 가져옵니다.</summary>
        <value>페이지의 길이와 너비(1/100인치)를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Drawing.Printing.PageSettings.Bounds%2A> 와 함께 속성은 <xref:System.Drawing.Printing.PageSettings.Margins%2A> 속성 페이지에 대 한 인쇄 면적을 계산 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Margins" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Printing.PageSettings" />의 복사본을 만듭니다.</summary>
        <returns>이 개체의 복사본입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public bool Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Color { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지를 컬러로 인쇄할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          페이지를 컬러로 인쇄해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다. 기본값은 프린터에 따라 다릅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Drawing.Printing.PrinterSettings.SupportsColor%2A?displayProperty=nameWithType> 프린터에서 컬러 인쇄를 지원 하는지 확인 하는 속성입니다. 프린터 색을 지원 하지만 컬러 인쇄를 설정 하지 않을 경우는 <xref:System.Drawing.Printing.PageSettings.Color%2A> 속성을 `false`합니다. 기본은 것 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프린터 지 원하는 경우 색상으로 첫 번째 페이지를 사용 하 여 문서를 인쇄 합니다. 예제를 실행 하려면 한 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 만들어진 및 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 및 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 이벤트가 처리 됩니다.  
  
 사용 하 여는 <xref:System.Drawing> 및 <xref:System.Drawing.Printing> 이 예제에 대 한 네임 스페이스입니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="CopyToHdevmode">
      <MemberSignature Language="C#" Value="public void CopyToHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyToHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyToHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyToHdevmode(IntPtr hdevmode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</param>
        <summary>
          <see cref="T:System.Drawing.Printing.PageSettings" />에서 지정된 <see langword="DEVMODE" /> 구조체로 관련 정보를 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출의 <xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A> 관련 정보를 복사 하는 메서드는 `DEVMODE` 에서 구조체는 <xref:System.Drawing.Printing.PageSettings>합니다. 이 메서드는 필요로 하는 관리 되지 않는 Win32 호출을 수행 하려는 경우에 유용는 `DEVMODE`합니다.  
  
 정보를 복사 하는 `DEVMODE` 구조체는 <xref:System.Drawing.Printing.PageSettings>, 호출 <xref:System.Drawing.Printing.PageSettings.SetHdevmode%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형의 경우: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="HardMarginX">
      <MemberSignature Language="C#" Value="public float HardMarginX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardMarginX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HardMarginX { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 왼쪽에 있는 하드 여백의 X 좌표(1/100인치)를 가져옵니다.</summary>
        <value>왼쪽 하드 여백의 X 좌표(1/100인치)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하드 여백을, 컬러 실제 여백을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">모든 프린터에 대 한 전체 액세스 합니다. 연관 된 열거: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HardMarginY">
      <MemberSignature Language="C#" Value="public float HardMarginY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardMarginY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HardMarginY { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 위쪽에 있는 하드 여백의 Y 좌표(1/100인치)를 가져옵니다.</summary>
        <value>페이지 위쪽에 있는 하드 여백의 Y 좌표(1/100인치)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하드 여백을, 컬러 실제 여백을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 열거형 관련: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">모든 프린터에 대 한 전체 액세스 합니다. 연관 된 열거: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Landscape">
      <MemberSignature Language="C#" Value="public bool Landscape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Landscape" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Landscape" />
      <MemberSignature Language="VB.NET" Value="Public Property Landscape As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Landscape { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지를 가로 또는 세로 방향으로 인쇄할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          페이지를 가로 방향으로 인쇄해야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다. 기본값은 프린터에 따라 다릅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Drawing.Printing.PrinterSettings.LandscapeAngle%2A?displayProperty=nameWithType> 속성을 세로 방향 가로 방향으로 회전 되 각도로 각도 결정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 문서의 기본 페이지 방향을 통해 가로로 설정는 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType> 속성, 문서를 인쇄 합니다. 이 예제는 세 가지 필수 구성 요소:  
  
-   라는 변수 `filePath` 인쇄 하는 파일의 경로를 설정 합니다.  
  
-   라는 메서드 `pd_PrintPage`를 처리 하는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트에 정의 되어 있습니다.  
  
-   라는 변수 `printer` 프린터의 이름으로 설정 되었습니다.  
  
 사용 하 여는 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스입니다.  
  
 [!code-cpp[Classic PageSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      </Docs>
    </Member>
    <Member MemberName="Margins">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Margins Margins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.Margins Margins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Margins" />
      <MemberSignature Language="VB.NET" Value="Public Property Margins As Margins" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::Margins ^ Margins { System::Drawing::Printing::Margins ^ get(); void set(System::Drawing::Printing::Margins ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Margins</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 페이지에 대한 여백을 가져오거나 설정합니다.</summary>
        <value>페이지의 여백(1/100인치)을 나타내는 <see cref="T:System.Drawing.Printing.Margins" />입니다. 여백 기본값은 네 곳 모두 1인치입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리 하는 경우는 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 이벤트와 함께이 속성을 사용할 수 있습니다는 <xref:System.Drawing.Printing.PageSettings.Bounds%2A> 속성 페이지에 대 한 인쇄 면적을 계산 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 기본 문서에 대 한 페이지 설정을 1 인치 여백을를 각 면에서 설정 합니다. 이 예제는 세 가지 필수 구성 요소:  
  
-   라는 변수 `filePath` 인쇄 하는 파일의 경로를 설정 합니다.  
  
-   라는 메서드 `pd_PrintPage`를 처리 하는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트에 정의 되어 있습니다.  
  
-   라는 변수 `printer` 프린터의 이름으로 설정 되었습니다.  
  
 사용 하 여는 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스입니다.  
  
 [!code-cpp[Classic PageSettings.Margins Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings.Margins Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings.Margins Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings.Margins Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
        <altmember cref="T:System.Drawing.Printing.Margins" />
      </Docs>
    </Member>
    <Member MemberName="PaperSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSize PaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSize PaperSize" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PaperSize As PaperSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PaperSize ^ PaperSize { System::Drawing::Printing::PaperSize ^ get(); void set(System::Drawing::Printing::PaperSize ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지에 대한 용지 크기를 가져오거나 설정합니다.</summary>
        <value>용지 크기를 나타내는 <see cref="T:System.Drawing.Printing.PaperSize" />입니다. 기본값은 프린터의 기본 용지 크기입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Printing.PaperSize> 통해 용지 크기를 나타내는 <xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=nameWithType> 속성 중 하나를 포함 하는 <xref:System.Drawing.Printing.PaperKind> 값입니다.  
  
 설정의 <xref:System.Drawing.Printing.PageSettings.PaperSize%2A> 속성을 유효한 페이지에 대 한 <xref:System.Drawing.Printing.PaperSize>통해 사용할 수 있는 <xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A?displayProperty=nameWithType> 컬렉션입니다.  
  
 사용자 지정 용지 크기를 지정 하는 방법에 대 한 정보를 참조 하십시오.는 <xref:System.Drawing.Printing.PaperSize.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 선택한 크기에 따라 용지 크기를 포함 하 여 문서의 기본 페이지에 대 한 세 가지 속성을 설정 하는 다음 코드 예제는 `comboPaperSize` 콤보 상자에서 다음을 사용 하 여 문서를 인쇄는 <xref:System.Drawing.Printing.PrintDocument.Print%2A> 메서드. 예제를 실행 하려면는 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 존재 및 특정 콤보 상자 존재 합니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Height" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Kind" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Width" />
      </Docs>
    </Member>
    <Member MemberName="PaperSource">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSource PaperSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSource PaperSource" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSource" />
      <MemberSignature Language="VB.NET" Value="Public Property PaperSource As PaperSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PaperSource ^ PaperSource { System::Drawing::Printing::PaperSource ^ get(); void set(System::Drawing::Printing::PaperSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지의 용지 공급을 가져오거나 설정합니다(예: 프린터의 상단 용지함).</summary>
        <value>용지 공급을 지정하는 <see cref="T:System.Drawing.Printing.PaperSource" />입니다. 기본값은 프린터의 기본 용지 공급입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Printing.PaperSource> 통해 용지의 소스를 나타내는 <xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=nameWithType> 속성 중 하나를 포함 하는 <xref:System.Drawing.Printing.PaperSourceKind> 값입니다.  
  
 설정의 <xref:System.Drawing.Printing.PageSettings.PaperSource%2A> 속성을 유효한 페이지에 대 한 <xref:System.Drawing.Printing.PaperSource>통해 사용할 수 있는 <xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A?displayProperty=nameWithType> 컬렉션입니다.  
  
   
  
## Examples  
 선택한 소스에 따라 용지 공급을 포함 하 여 문서의 기본 페이지에 대 한 세 가지 속성을 설정 하는 다음 코드 예제는 `comboPaperSource` 콤보 상자에서 다음을 사용 하 여 문서를 인쇄는 <xref:System.Drawing.Printing.PrintDocument.Print%2A> 메서드. 예제를 실행 하려면는 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 존재 및 특정 콤보 상자 존재 합니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="P:System.Drawing.Printing.PaperSource.Kind" />
        <altmember cref="T:System.Drawing.Printing.PaperSourceKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintableArea">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF PrintableArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF PrintableArea" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrintableArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableArea As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF PrintableArea { System::Drawing::RectangleF get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프린터에서 인쇄할 수 있는 페이지 영역의 경계를 가져옵니다.</summary>
        <value>프린터에서 인쇄할 수 있는 영역의 길이와 너비(1/100인치)를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PageSettings.PrintableArea%2A> 용지 방향을 가로 또는 세로 인지 속성에 올바른 값을 반환 합니다.  
  
 이 속성을 인쇄할 수 있는 영역 내에서 하지만 페이지의 여백을 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrinterResolution">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterResolution PrinterResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterResolution PrinterResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterResolution As PrinterResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterResolution ^ PrinterResolution { System::Drawing::Printing::PrinterResolution ^ get(); void set(System::Drawing::Printing::PrinterResolution ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지에 대한 프린터 해상도를 가져오거나 설정합니다.</summary>
        <value>페이지의 프린터 해상도를 지정하는 <see cref="T:System.Drawing.Printing.PrinterResolution" />입니다. 기본값은 프린터의 기본 해상도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Printing.PrinterResolution> 프린터 통해의 해상도 나타냅니다는 <xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=nameWithType> 속성 중 하나를 포함 하는 <xref:System.Drawing.Printing.PrinterResolutionKind> 값입니다.  
  
 설정의 <xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A> 속성을 유효한 페이지에 대 한 <xref:System.Drawing.Printing.PrinterResolution>통해 사용할 수 있는 <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A?displayProperty=nameWithType> 컬렉션입니다.  
  
   
  
## Examples  
 선택한 해상도 기반으로 프린터의 해상도 포함 하 여 문서의 기본 페이지에 대 한 세 가지 속성을 설정 하는 다음 코드 예제는 `comboPrintResolution` 콤보 상자에서 다음을 사용 하 여 문서를 인쇄는 <xref:System.Drawing.Printing.PrintDocument.Print%2A> 메서드. 예제를 실행 하려면는 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 존재 및 특정 콤보 상자 존재 합니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="P:System.Drawing.Printing.PrinterResolution.Kind" />
        <altmember cref="T:System.Drawing.Printing.PrinterResolutionKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterSettings As PrinterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings ^ PrinterSettings { System::Drawing::Printing::PrinterSettings ^ get(); void set(System::Drawing::Printing::PrinterSettings ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 페이지와 관련된 프린터 설정을 가져오거나 설정합니다.</summary>
        <value>해당 페이지와 관련된 프린터 설정을 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 찾는 기본 페이지의 설정 되지 않은 속성에 대 한 프린터 설정을 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevmode(IntPtr hdevmode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</param>
        <summary>지정된 <see langword="DEVMODE" /> 구조체에서 <see cref="T:System.Drawing.Printing.PageSettings" />로 관련 정보를 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관련 정보를 복사 하려면이 메서드를 사용 하 여 한 `DEVMODE` 구조체는 <xref:System.Drawing.Printing.PageSettings>합니다.  
  
 정보를 복사 하는 <xref:System.Drawing.Printing.PageSettings> 에 `DEVMODE`, 호출 <xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">프린터 핸들이 잘못된 경우</exception>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없거나 설치된 기본 프린터가 없는 경우</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형의 경우: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PageSettings" />를 문자열 형식으로 변환합니다.</summary>
        <returns>
          <see cref="T:System.Drawing.Printing.PageSettings" />의 다양한 속성 설정을 나타내는 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>