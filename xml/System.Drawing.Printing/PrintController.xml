<Type Name="PrintController" FullName="System.Drawing.Printing.PrintController">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d31d702fa4f54d10328da1c65b2013e1811ed7e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30409597" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PrintController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PrintController extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrintController" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PrintController" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintController abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Windows Forms 응용 프로그램에서 인쇄하는 문서의 인쇄 방식을 제어합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 클래스에서 구현 되는 경우 <xref:System.Drawing.Printing.PrintController> 컨트롤 어떻게는 <xref:System.Drawing.Printing.PrintDocument> 인쇄 됩니다. <xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=nameWithType> 인쇄 컨트롤러를 호출 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A>, <xref:System.Drawing.Printing.PrintController.OnEndPrint%2A>, <xref:System.Drawing.Printing.PrintController.OnStartPage%2A>, 및 <xref:System.Drawing.Printing.PrintController.OnEndPage%2A> 메서드는 문서를 인쇄 하는 방법을 프린터에 알려 줍니다. 인쇄 미리 보기 기능에서는 특수화 된 <xref:System.Drawing.Printing.PrintController>합니다. 인쇄 미리 보기에 지정 된 인쇄 컨트롤러의 예제를 참조 하십시오.는 <xref:System.Drawing.Printing.PreviewPrintController>합니다.  
  
 <xref:System.Drawing.Printing.PrintController> 사용 하는 <xref:System.Drawing.Printing.PrintDocument>, 하지 일반적으로 직접 사용 합니다.  
  
 파생 된 세 명의 인쇄 컨트롤러를 포함 하는.NET Framework <xref:System.Drawing.Printing.PrintController> 데 도움이 되는 일반적인 작업을 수행 합니다. <xref:System.Drawing.Printing.StandardPrintController> 프린터에 문서를 인쇄 합니다. <xref:System.Drawing.Printing.PreviewPrintController> 문서 모양을 인쇄 및에서 사용 하는 경우의 미리 보기 생성의 <xref:System.Windows.Forms.PrintPreviewControl> 및 <xref:System.Windows.Forms.PrintPreviewDialog> 클래스입니다. <xref:System.Windows.Forms.PrintControllerWithStatusDialog> 인쇄 중 인쇄 상태 대화 상자를 제공 합니다.  
  
 Windows forms 인쇄에 대 한 자세한 내용은 참조는 <xref:System.Drawing.Printing> 네임 스페이스 개요입니다. Windows Presentation Foundation 응용 프로그램에서 인쇄 하려는 경우 참조는 <xref:System.Printing> 네임 스페이스입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Printing.PrintDocument" />
    <altmember cref="T:System.Drawing.Printing.StandardPrintController" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrintController ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintController.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PrintController();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PrintController" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">제한 된 대화 상자에서 안전 하 게 인쇄 합니다. 연결 된 열거형의 경우: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsPreview">
      <MemberSignature Language="C#" Value="public virtual bool IsPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreview" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintController.IsPreview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPreview { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PrintController" />가 인쇄 미리 보기에 사용되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          모든 경우에 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPage">
      <MemberSignature Language="C#" Value="public virtual void OnEndPage (System.Drawing.Printing.PrintDocument document, System.Drawing.Printing.PrintPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEndPage(class System.Drawing.Printing.PrintDocument document, class System.Drawing.Printing.PrintPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnEndPage (document As PrintDocument, e As PrintPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnEndPage(System::Drawing::Printing::PrintDocument ^ document, System::Drawing::Printing::PrintPageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Drawing.Printing.PrintDocument" />
        <Parameter Name="e" Type="System.Drawing.Printing.PrintPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
        <summary>파생된 클래스에서 재정의하는 경우 문서 페이지의 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintController.OnEndPage%2A> 직후 호출는 <xref:System.Drawing.Printing.PrintDocument> 발생는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트입니다. 내에서 예외가 throw 되는 경우는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 의 이벤트는 <xref:System.Drawing.Printing.PrintDocument>, <xref:System.Drawing.Printing.PrintController.OnEndPage%2A> 호출 되지 않습니다.  
  
 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 만듭니다는 <xref:System.Drawing.Graphics> 프린터에 보내집니다. 후 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 호출 됩니다는 <xref:System.Drawing.Printing.PrintController.OnStartPage%2A> 메서드 집합은 <xref:System.Drawing.Graphics> 단일 페이지의 그래픽으로 합니다. (사용 된 <xref:System.Drawing.Printing.PrintController.OnStartPage%2A> 문서에서 페이지를 인쇄 하는 방법을 설정 하는 메서드. 예를 들어 각 페이지 별로 페이지 설정을 조정할 수 있습니다.) <xref:System.Drawing.Printing.PrintController.OnEndPage%2A> 메서드 지웁니다는 <xref:System.Drawing.Graphics>, 동안는 <xref:System.Drawing.Printing.PrintController.OnEndPrint%2A> 메서드 개체 할당을 취소 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEndPrint">
      <MemberSignature Language="C#" Value="public virtual void OnEndPrint (System.Drawing.Printing.PrintDocument document, System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEndPrint(class System.Drawing.Printing.PrintDocument document, class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnEndPrint (document As PrintDocument, e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnEndPrint(System::Drawing::Printing::PrintDocument ^ document, System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Drawing.Printing.PrintDocument" />
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
        <summary>파생된 클래스에서 재정의하는 경우 문서 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 완료합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintController.OnEndPrint%2A> 직후 호출는 <xref:System.Drawing.Printing.PrintDocument> 발생는 <xref:System.Drawing.Printing.PrintDocument.EndPrint> 이벤트입니다.  
  
 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 만듭니다는 <xref:System.Drawing.Graphics> 프린터에 보내집니다. 후 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 호출 됩니다는 <xref:System.Drawing.Printing.PrintController.OnStartPage%2A> 메서드 집합은 <xref:System.Drawing.Graphics> 단일 페이지의 그래픽으로 합니다. (사용 하 여는 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 시기 및 문서를 인쇄 하는 방법을 결정 하는 메서드. 예를 들어 있습니다 수 지연 30 분에 대 한 인쇄 하거나 문서에 대 한 프린터 설정을 조정 합니다.) <xref:System.Drawing.Printing.PrintController.OnEndPage%2A> 메서드 지웁니다는 <xref:System.Drawing.Graphics>, 동안는 <xref:System.Drawing.Printing.PrintController.OnEndPrint%2A> 메서드 개체 할당을 취소 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStartPage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Graphics OnStartPage (System.Drawing.Printing.PrintDocument document, System.Drawing.Printing.PrintPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Graphics OnStartPage(class System.Drawing.Printing.PrintDocument document, class System.Drawing.Printing.PrintPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnStartPage (document As PrintDocument, e As PrintPageEventArgs) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Graphics ^ OnStartPage(System::Drawing::Printing::PrintDocument ^ document, System::Drawing::Printing::PrintPageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Drawing.Printing.PrintDocument" />
        <Parameter Name="e" Type="System.Drawing.Printing.PrintPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</param>
        <summary>파생된 클래스에서 재정의하는 경우 문서 페이지의 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
        <returns>
          <see cref="T:System.Drawing.Graphics" />의 페이지를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintController.OnStartPage%2A> 바로 전에 호출 됩니다는 <xref:System.Drawing.Printing.PrintDocument> 발생는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트입니다.  
  
 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 만듭니다는 <xref:System.Drawing.Graphics> 프린터에 보내집니다. 후 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 호출 됩니다는 <xref:System.Drawing.Printing.PrintController.OnStartPage%2A> 메서드 집합은 <xref:System.Drawing.Graphics> 단일 페이지의 그래픽으로 합니다. <xref:System.Drawing.Printing.PrintController.OnEndPage%2A> 메서드 지웁니다는 <xref:System.Drawing.Graphics>, 동안는 <xref:System.Drawing.Printing.PrintController.OnEndPrint%2A> 메서드 개체 할당을 취소 합니다.  
  
 사용 된 <xref:System.Drawing.Printing.PrintController.OnStartPage%2A> 문서에서 페이지를 인쇄 하는 방법을 설정 하는 메서드. 예를 들어, 각 페이지 별로 페이지 설정을 조정할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStartPrint">
      <MemberSignature Language="C#" Value="public virtual void OnStartPrint (System.Drawing.Printing.PrintDocument document, System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartPrint(class System.Drawing.Printing.PrintDocument document, class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnStartPrint (document As PrintDocument, e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnStartPrint(System::Drawing::Printing::PrintDocument ^ document, System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Drawing.Printing.PrintDocument" />
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="document">현재 인쇄 중인 문서를 나타내는 <see cref="T:System.Drawing.Printing.PrintDocument" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</param>
        <summary>파생된 클래스에서 재정의하는 경우 문서 인쇄 시기 및 방법을 결정하는 컨트롤 시퀀스를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 직후 호출는 <xref:System.Drawing.Printing.PrintDocument> 발생는 <xref:System.Drawing.Printing.PrintDocument.BeginPrint> 이벤트입니다.  
  
 사용 하 여는 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 시기 및 문서를 인쇄 하는 방법을 결정 하는 메서드. 예를 들어 30 분에 대 한 인쇄를 지연 하거나 문서에 대 한 프린터 설정을 조정할 수 있습니다. <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 만듭니다는 <xref:System.Drawing.Graphics> 프린터에 보내집니다. 후 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 호출 되는 <xref:System.Drawing.Printing.PrintController.OnStartPage%2A> 메서드 설정은 <xref:System.Drawing.Graphics> 단일 페이지 중 하나에 있습니다. <xref:System.Drawing.Printing.PrintController.OnEndPage%2A> 메서드 지웁니다는 <xref:System.Drawing.Graphics>, 동안는 <xref:System.Drawing.Printing.PrintController.OnEndPrint%2A> 메서드 개체 할당을 취소 합니다.  
  
 <xref:System.Drawing.Printing.PrintController.OnStartPrint%2A> 메서드 되어 있는지 확인 하는 데는 <xref:System.Drawing.Printing.PrinterSettings> 유효 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)" />
        <altmember cref="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>