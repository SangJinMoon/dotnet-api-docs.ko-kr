<Type Name="PrintDocument" FullName="System.Drawing.Printing.PrintDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e64e5cdaae4a21b3476f64e1b85160c58ae9ef4a" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52918983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintDocument : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDocument extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrintDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDocument&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDocument : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type PrintDocument = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("PrintPage")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="324c9-101">Windows Forms 응용 프로그램에서 인쇄할 때 프린터로 출력을 보내는 재사용 가능한 개체를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="324c9-101">Defines a reusable object that sends output to a printer, when printing from a Windows Forms application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-102">인스턴스를 만들 수는 일반적으로 <xref:System.Drawing.Printing.PrintDocument> 클래스와 같은 속성을 설정 합니다는 <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> 및 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>를 호출는 <xref:System.Drawing.Printing.PrintDocument.Print%2A> 인쇄 프로세스를 시작 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="324c9-102">Typically, you create an instance of the <xref:System.Drawing.Printing.PrintDocument> class, set properties such as the <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> and <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>, and call the <xref:System.Drawing.Printing.PrintDocument.Print%2A> method to start the printing process.</span></span> <span data-ttu-id="324c9-103">처리를 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 를 인쇄 하려면를 사용 하 여 출력을 지정 하는 이벤트를 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> <xref:System.Drawing.Graphics> 의 속성을 <xref:System.Drawing.Printing.PrintPageEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="324c9-103">Handle the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event where you specify the output to print, by using the <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Graphics> property of the <xref:System.Drawing.Printing.PrintPageEventArgs>.</span></span>  
  
 <span data-ttu-id="324c9-104">Windows Form 응용 프로그램에서 인쇄 하는 방법에 대 한 자세한 내용은 참조는 [Windows Forms 인쇄 지원](~/docs/framework/winforms/advanced/windows-forms-print-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-104">For more information about printing from a Windows Form application, see the [Windows Forms Print Support](~/docs/framework/winforms/advanced/windows-forms-print-support.md).</span></span> <span data-ttu-id="324c9-105">Windows Presentation Foundation 응용 프로그램에서 인쇄 하려는 경우 참조는 <xref:System.Printing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-105">If you wish to print from a Windows Presentation Foundation application, see the <xref:System.Printing> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-106">다음 코드 예제는 기본 프린터에서 C:\My Documents\MyFile.txt 라는 파일을 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-106">The following code example prints the file named C:\My Documents\MyFile.txt on the default printer.</span></span> <span data-ttu-id="324c9-107">예제를 실행 하려면 새 Windows Forms 프로젝트를 만들고 파일 내용을 바꾸는 양식 예제 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-107">To run the example, create a new Windows Forms project and paste the example code into the form, replacing the file contents.</span></span> <span data-ttu-id="324c9-108">C#의 경우 Form1.Designer.cs 파일을 삭제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-108">For C#, you will need to delete the Form1.Designer.cs file.</span></span> <span data-ttu-id="324c9-109">또한 인쇄 하려는 파일에 경로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-109">Also, change the path to the file you want to print.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="324c9-110">이 예제에서는 각 줄 페이지 너비에 맞게는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-110">The example requires that each line fits within the page width.</span></span>  
  
 <span data-ttu-id="324c9-111">사용 합니다 <xref:System.ComponentModel>, <xref:System.Windows.Forms>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-111">Use the <xref:System.ComponentModel>, <xref:System.Windows.Forms>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Graphics" />
    <altmember cref="T:System.Drawing.Printing.PageSettings" />
    <altmember cref="T:System.Drawing.Printing.PrintController" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
    <related type="Article" href="https://msdn.microsoft.com/library/362427f8-03d4-4826-b49f-60ab066ad322">
      <span data-ttu-id="324c9-112">방법: Windows Forms에서 다중 페이지 텍스트 파일 인쇄</span>
      <span class="sxs-lookup">
        <span data-stu-id="324c9-112">How to: Print a Multi-Page Text File in Windows Forms</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="324c9-113">
            <see cref="T:System.Drawing.Printing.PrintDocument" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-113">Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintDocument" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-114">기본 생성자는 기본 프린터를 따라 하는 모든 필드를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-114">The default constructor initializes all fields based upon the default printer.</span></span> <span data-ttu-id="324c9-115">일반적으로 만들면 새 <xref:System.Drawing.Printing.PrintDocument>를 통해 출력에 영향을 주는 프린터 및 페이지 설정을 설정 하는 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> 및 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> 속성을 각각.</span><span class="sxs-lookup"><span data-stu-id="324c9-115">Typically, after creating a new <xref:System.Drawing.Printing.PrintDocument>, you set printer and page settings that affect the output through the <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> and <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-116">다음 코드 예제를 가로 보기로 문서의 페이지 방향을 설정 하는 문서를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-116">The following code example sets a document's page orientation to landscape, and prints the document.</span></span>  
  
 <span data-ttu-id="324c9-117">사용 된 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스.</span><span class="sxs-lookup"><span data-stu-id="324c9-117">Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler BeginPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler BeginPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ BeginPrint;" />
      <MemberSignature Language="F#" Value="member this.BeginPrint : System.Drawing.Printing.PrintEventHandler " Usage="member this.BeginPrint : System.Drawing.Printing.PrintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-118">
            <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 메서드가 호출될 때 문서의 첫 페이지가 인쇄되기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-118">Occurs when the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and before the first page of the document prints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-119">일반적으로 처리 하는 <xref:System.Drawing.Printing.PrintDocument.BeginPrint> 글꼴, 파일 스트림 및 인쇄 프로세스 중에 사용 하는 다른 리소스를 초기화 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-119">Typically, you handle the <xref:System.Drawing.Printing.PrintDocument.BeginPrint> event to initialize fonts, file streams, and other resources used during the printing process.</span></span>  
  
 <span data-ttu-id="324c9-120">이벤트를 이벤트 처리기를 연결 하려면 인스턴스를 추가 합니다 <xref:System.Drawing.Printing.PrintEventHandler> 이벤트에 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-120">To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.PrintEventHandler> delegate to the event.</span></span> <span data-ttu-id="324c9-121">이벤트 처리기는 이벤트가 발생할 때마다 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-121">The event handler is called whenever the event occurs.</span></span> <span data-ttu-id="324c9-122">대리자를 사용 하 여 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-122">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPageSettings As PageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PageSettings ^ DefaultPageSettings { System::Drawing::Printing::PageSettings ^ get(); void set(System::Drawing::Printing::PageSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPageSettings : System.Drawing.Printing.PageSettings with get, set" Usage="System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-123">인쇄할 모든 페이지에 대해 기본값으로 사용되는 페이지 설정을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-123">Gets or sets page settings that are used as defaults for all pages to be printed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="324c9-124">문서의 기본 페이지 설정을 지정하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-124">A <see cref="T:System.Drawing.Printing.PageSettings" /> that specifies the default page settings for the document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-125">통해 몇 가지 기본 페이지 설정을 지정할 수 있습니다는 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-125">You can specify several default page settings through the <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> property.</span></span> <span data-ttu-id="324c9-126">예를 들어,를 <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType> 속성 페이지를 컬러로 인쇄할지 여부를 지정 합니다 <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType> 속성에는 가로 또는 세로 방향으로 지정 및 <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> 속성 페이지의 여백을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-126">For example, the <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType> property specifies whether the page prints in color, the <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType> property specifies landscape or portrait orientation, and the <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> property specifies the margins of the page.</span></span>  
  
 <span data-ttu-id="324c9-127">페이지 별로 기준 설정을 지정 하려면 처리를 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 또는 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 이벤트 및 수정 합니다 <xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> 인수에 포함 된를 <xref:System.Drawing.Printing.PrintPageEventArgs> 또는 <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>각각.</span><span class="sxs-lookup"><span data-stu-id="324c9-127">To specify settings on a page-by-page basis, handle the <xref:System.Drawing.Printing.PrintDocument.PrintPage> or <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> event and modify the <xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> argument included in the <xref:System.Drawing.Printing.PrintPageEventArgs> or <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="324c9-128">페이지 설정을 통해 인쇄가 시작 된 후 변경 된 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> 속성 페이지를 인쇄 하 고 영향을 주지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-128">After printing has started, changes to page settings through the <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> property will not affect pages being printed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-129">다음 코드 예제를 가로 보기로 문서의 페이지 방향을 설정 하는 문서를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-129">The following code example sets a document's page orientation to landscape, and prints the document.</span></span> <span data-ttu-id="324c9-130">예제에서는 세 가지 가정을 만들어: 명명 된 `filePath` ; 인쇄 하는 파일의 경로를 설정한 메서드는 `pd_PrintPage`, 처리를 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트를 정의한; 및 명명 된 `printer` 되었습니다 프린터의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-130">The example makes three assumptions: that a variable named `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.</span></span>  
  
 <span data-ttu-id="324c9-131">사용 된 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스.</span><span class="sxs-lookup"><span data-stu-id="324c9-131">Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="DocumentName">
      <MemberSignature Language="C#" Value="public string DocumentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentName : string with get, set" Usage="System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue("document")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-132">문서를 인쇄하는 동안 표시(예: [인쇄 상태] 대화상자 또는 프린터 큐에 표시)할 문서 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-132">Gets or sets the document name to display (for example, in a print status dialog box or printer queue) while printing the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="324c9-133">문서 인쇄 중에 표시할 문서 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-133">The document name to display while printing the document.</span>
          </span>
          <span data-ttu-id="324c9-134">기본값은 "문서"입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-134">The default is "document".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-135"><xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> 속성 인쇄할 파일을 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-135">The <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> property does not specify the file to print.</span></span> <span data-ttu-id="324c9-136">출력을 처리 하 여 인쇄를 지정 하는 대신는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-136">Rather, you specify the output to print by handling the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event.</span></span> <span data-ttu-id="324c9-137">예를 들어 참조 된 <xref:System.Drawing.Printing.PrintDocument> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-137">For an example, see the <xref:System.Drawing.Printing.PrintDocument> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-138">프린터가 지 원하는 및 설정 하는 경우 다음 코드 예제에서는 색의 첫 번째 페이지를 사용 하 여 문서를 인쇄 합니다 <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> 친숙 한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-138">The following code example prints a document with the first page in color, if the printer supports it, and sets the <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> to a user-friendly name.</span></span> <span data-ttu-id="324c9-139">예제를 실행 하려면를 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 생성 된 및 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 및 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-139">The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.</span></span>  
  
 <span data-ttu-id="324c9-140">사용 된 <xref:System.Drawing> 및 <xref:System.Drawing.Printing> 이 예제에 대 한 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-140">Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.</span></span>  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="EndPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler EndPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler EndPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.EndPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ EndPrint;" />
      <MemberSignature Language="F#" Value="member this.EndPrint : System.Drawing.Printing.PrintEventHandler " Usage="member this.EndPrint : System.Drawing.Printing.PrintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-141">문서의 마지막 페이지가 인쇄되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-141">Occurs when the last page of the document has printed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-142">일반적으로 처리 하는 <xref:System.Drawing.Printing.PrintDocument.EndPrint> 글꼴, 파일 스트림 및 인쇄 프로세스 중 사용 되는 다른 리소스를 해제 하는 이벤트 같은 글꼴입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-142">Typically, you handle the <xref:System.Drawing.Printing.PrintDocument.EndPrint> event to release fonts, file streams, and other resources used during the printing process, like fonts.</span></span>  
  
 <span data-ttu-id="324c9-143">설정 하 여 인쇄할 페이지가 더 이상 있는지를 나타내는 합니다 <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType> 속성을 `false` 에 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-143">You indicate that there are no more pages to print by setting the <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType> property to `false` in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event.</span></span> <span data-ttu-id="324c9-144"><xref:System.Drawing.Printing.PrintDocument.EndPrint> 이벤트는 인쇄 프로세스 취소 되거나 인쇄 프로세스 중에 예외가 발생 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-144">The <xref:System.Drawing.Printing.PrintDocument.EndPrint> event also occurs if the printing process is canceled or an exception occurs during the printing process.</span></span>  
  
 <span data-ttu-id="324c9-145">이벤트를 이벤트 처리기를 연결 하려면 인스턴스를 추가 합니다 <xref:System.Drawing.Printing.PrintEventHandler> 이벤트에 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-145">To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.PrintEventHandler> delegate to the event.</span></span> <span data-ttu-id="324c9-146">이벤트 처리기는 이벤트가 발생할 때마다 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-146">The event handler is called whenever the event occurs.</span></span> <span data-ttu-id="324c9-147">대리자를 사용 하 여 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-147">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OnBeginPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit&#xA;override this.OnBeginPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit" Usage="printDocument.OnBeginPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="324c9-148">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-148">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="324c9-149">
            <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-149">Raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> event.</span>
          </span>
          <span data-ttu-id="324c9-150">
            <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 메서드가 호출된 후, 문서의 첫 페이지가 인쇄되기 전에 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-150">It is called after the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and before the first page of the document prints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-151"><xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> 메서드를 사용 하면 파생된 클래스가 대리자를 연결 하지 않고 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-151">The <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> method allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="324c9-152">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-152">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 <span data-ttu-id="324c9-153">파생된 클래스를 호출 하는 경우는 <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> 메서드를 발생 시킵니다는 <xref:System.Drawing.Printing.PrintDocument.BeginPrint> 대리자를 통해 이벤트 처리기를 호출 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-153">When a derived class calls the <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> method, it raises the <xref:System.Drawing.Printing.PrintDocument.BeginPrint> event by invoking the event handler through a delegate.</span></span> <span data-ttu-id="324c9-154">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-154">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="324c9-155">파생 클래스에서 <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="324c9-155">When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
            <span data-ttu-id="324c9-156">이 메서드는 초기화 하는 것이 좋습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="324c9-156">This method is a good place for initialization.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEndPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEndPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit&#xA;override this.OnEndPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit" Usage="printDocument.OnEndPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="324c9-157">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-157">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="324c9-158">
            <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-158">Raises the <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event.</span>
          </span>
          <span data-ttu-id="324c9-159">문서의 마지막 페이지가 인쇄되면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-159">It is called when the last page of the document has printed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-160"><xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> 메서드를 사용 하면 파생된 클래스가 대리자를 연결 하지 않고 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-160">The <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> method allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="324c9-161">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-161">This is the preferred technique for handling the event in a derived class.</span></span> <span data-ttu-id="324c9-162"><xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> 메서드는 인쇄 프로세스 취소 되거나 인쇄 프로세스 중에 예외가 발생 하는 경우에 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-162">The <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> method is also called if the printing process is canceled or an exception occurs during the printing process.</span></span>  
  
 <span data-ttu-id="324c9-163">파생된 클래스를 호출 하는 경우는 <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> 메서드를 발생 시킵니다는 <xref:System.Drawing.Printing.PrintDocument.EndPrint> 대리자를 통해 이벤트 처리기를 호출 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-163">When a derived class calls the <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> method, it raises the <xref:System.Drawing.Printing.PrintDocument.EndPrint> event by invoking the event handler through a delegate.</span></span> <span data-ttu-id="324c9-164">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-164">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="324c9-165">파생 클래스에서 <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="324c9-165">When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
            <span data-ttu-id="324c9-166">이 메서드는 초기화 하는 것이 좋습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="324c9-166">This method is a good place for uninitialization.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPrintPage">
      <MemberSignature Language="C#" Value="protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrintPage(class System.Drawing.Printing.PrintPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrintPage (e As PrintPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrintPage(System::Drawing::Printing::PrintPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrintPage : System.Drawing.Printing.PrintPageEventArgs -&gt; unit&#xA;override this.OnPrintPage : System.Drawing.Printing.PrintPageEventArgs -&gt; unit" Usage="printDocument.OnPrintPage e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="324c9-167">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-167">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="324c9-168">
            <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-168">Raises the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</span>
          </span>
          <span data-ttu-id="324c9-169">페이지가 인쇄되기 전에 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-169">It is called before a page prints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-170"><xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> 메서드를 사용 하면 파생된 클래스가 대리자를 연결 하지 않고 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-170">The <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> method allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="324c9-171">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-171">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 <span data-ttu-id="324c9-172">파생된 클래스를 호출 하는 경우는 <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> 메서드를 발생 시킵니다는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 대리자를 통해 이벤트 처리기를 호출 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-172">When a derived class calls the <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> method, it raises the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event by invoking the event handler through a delegate.</span></span> <span data-ttu-id="324c9-173">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-173">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="324c9-174">파생 클래스에서 <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="324c9-174">When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryPageSettings">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryPageSettings(class System.Drawing.Printing.QueryPageSettingsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryPageSettings (e As QueryPageSettingsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryPageSettings(System::Drawing::Printing::QueryPageSettingsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventArgs -&gt; unit&#xA;override this.OnQueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventArgs -&gt; unit" Usage="printDocument.OnQueryPageSettings e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.QueryPageSettingsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="324c9-175">이벤트 데이터를 포함하는 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-175">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="324c9-176">
            <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-176">Raises the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event.</span>
          </span>
          <span data-ttu-id="324c9-177">각 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 이벤트 직전에 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-177">It is called immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-178">또한 <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-178">The <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="324c9-179">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-179">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 <span data-ttu-id="324c9-180">파생된 클래스를 호출 하는 경우는 <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> 메서드를 발생 시킵니다는 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 대리자를 통해 이벤트 처리기를 호출 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-180">When a derived class calls the <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> method, it raises the <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> event by invoking the event handler through a delegate.</span></span> <span data-ttu-id="324c9-181">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-181">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="324c9-182">파생 클래스에서 <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="324c9-182">When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OriginAtMargins">
      <MemberSignature Language="C#" Value="public bool OriginAtMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OriginAtMargins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginAtMargins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OriginAtMargins { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OriginAtMargins : bool with get, set" Usage="System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-183">페이지와 관련된 그래픽 개체의 위치가 사용자가 지정한 여백 내에 있는지 아니면 페이지 인쇄 가능 영역의 왼쪽 위 구석에 있는지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-183">Gets or sets a value indicating whether the position of a graphics object associated with a page is located just inside the user-specified margins or at the top-left corner of the printable area of the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="324c9-184">그래픽 원점이 페이지 여백에서 시작하면 <see langword="true" />이고, 그래픽 원점이 인쇄 가능 페이지의 왼쪽 위 구석에 있으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-184">
              <see langword="true" /> if the graphics origin starts at the page margins; <see langword="false" /> if the graphics origin is at the top-left corner of the printable page.</span>
          </span>
          <span data-ttu-id="324c9-185">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-185">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-186">백서, 페이지의 여백을의 실제 크기 및 위치를 알고 있으면 필요 인쇄할 수 있는 영역을 계산 합니다 <xref:System.Drawing.Graphics> 원본 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-186">Calculating the area available to print requires knowing the physical size of the paper, the margins for the page, and the location of the <xref:System.Drawing.Graphics> object origin.</span></span> <span data-ttu-id="324c9-187">때 <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> 는 `true`, <xref:System.Drawing.Graphics> 개체 위치를 고려 합니다 <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> 속성 값 및 페이지의 인쇄 가능한 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-187">When <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> is `true`, the <xref:System.Drawing.Graphics> object location takes into account the <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> property value and the printable area of the page.</span></span> <span data-ttu-id="324c9-188">때 <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> 은 `false`, 인쇄 영역의 페이지의 위치를 결정 하는 합니다 <xref:System.Drawing.Graphics> 원본 개체는 <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-188">When <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> is `false`, only the printable area of the page is used to determine the location of the <xref:System.Drawing.Graphics> object origin, the <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> value is ignored.</span></span>  
  
 <span data-ttu-id="324c9-189">예를 들어 경우 <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> 는 `true`, 및 <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> 각 변의 설정은 1 인치입니다 합니다 <xref:System.Drawing.Graphics> 에 포함 된 개체를 <xref:System.Drawing.Printing.PrintPageEventArgs> 는 왼쪽에서 페이지 위쪽에 있는 1 인치입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-189">For example, if <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> is `true`, and <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType> is set for 1 inch on each side, the <xref:System.Drawing.Graphics> object included in the <xref:System.Drawing.Printing.PrintPageEventArgs> is located 1 inch from the left and top of the page.</span></span> <span data-ttu-id="324c9-190">페이지의 인쇄 가능한 영역은 양쪽 인치로 경우 및 <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> 됩니다 `false`, <xref:System.Drawing.Graphics> 설정 되 고 왼쪽 페이지의 위쪽에서 인치입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-190">If the printable area of the page is .25 of an inch on each side and <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> is `false`, the <xref:System.Drawing.Graphics> object is located .25 of an inch from the left and top of the page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="324c9-191">페이지의 인쇄 가능 영역의 프린터 마다 다르며 대칭 되도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-191">The printable area of a page varies from printer to printer and is not guaranteed to be symmetrical.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberSignature Language="F#" Value="member this.Print : unit -&gt; unit" Usage="printDocument.Print " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="324c9-192">문서의 인쇄를 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-192">Starts the document's printing process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-193">출력을 처리 하 여 인쇄 하도록 지정 합니다 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트를 사용 하 여는 <xref:System.Drawing.Graphics> 에 포함 된를 <xref:System.Drawing.Printing.PrintPageEventArgs>입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-193">Specify the output to print by handling the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event and by using the <xref:System.Drawing.Graphics> included in the <xref:System.Drawing.Printing.PrintPageEventArgs>.</span></span>  
  
 <span data-ttu-id="324c9-194">사용 된 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType> 속성을 통해 문서를 인쇄할 프린터를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-194">Use the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType> property to specify which printer should print the document.</span></span>  
  
 <span data-ttu-id="324c9-195"><xref:System.Drawing.Printing.PrintDocument.Print%2A> 인쇄 대화 상자를 사용 하지 않고 문서를 인쇄 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="324c9-195">The <xref:System.Drawing.Printing.PrintDocument.Print%2A> method prints the document without using a print dialog.</span></span> <span data-ttu-id="324c9-196">사용 된 <xref:System.Windows.Forms.PrintDialog> 사용자 인쇄 설정을 선택 하는 기능을 제공 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="324c9-196">Use a <xref:System.Windows.Forms.PrintDialog> when you want to offer the user the ability to choose print settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="324c9-197">경우에서 처리 되지 않은 예외는 <xref:System.Drawing.Printing.PrintDocument.Print%2A> 인쇄 하는 동안 발생 하는 메서드, 문서 인쇄를 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-197">If an exception that is not handled by the <xref:System.Drawing.Printing.PrintDocument.Print%2A> method is thrown during printing, the printing of the document is aborted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-198">다음 코드 예제를 기본 프린터로 명령줄을 통해 지정 된 파일을 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-198">The following code example prints the file that is specified through the command line to the default printer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="324c9-199">이 예제에서는 각 줄 페이지 너비에 맞게는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-199">The example requires that each line fits within the page width.</span></span>  
  
 <span data-ttu-id="324c9-200">사용 합니다 <xref:System.ComponentModel>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, <xref:System.IO>, 및 <xref:System.Windows.Forms> 이 예제에 대 한 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-200">Use the <xref:System.ComponentModel>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, <xref:System.IO>, and <xref:System.Windows.Forms> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <span data-ttu-id="324c9-201">
            <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-201">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist.</span>
          </span>
        </exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">
          <span data-ttu-id="324c9-202">제한 된 대화 상자에서 안전 하 게 인쇄 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-202">for safe printing from a restricted dialog box.</span>
          </span>
          <span data-ttu-id="324c9-203">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-203">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PrintController">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintController PrintController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintController PrintController" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintController As PrintController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintController ^ PrintController { System::Drawing::Printing::PrintController ^ get(); void set(System::Drawing::Printing::PrintController ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintController : System.Drawing.Printing.PrintController with get, set" Usage="System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-204">인쇄를 하도록 도와줄 인쇄 컨트롤러를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-204">Gets or sets the print controller that guides the printing process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="324c9-205">인쇄를 하도록 도와줄 <see cref="T:System.Drawing.Printing.PrintController" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-205">The <see cref="T:System.Drawing.Printing.PrintController" /> that guides the printing process.</span>
          </span>
          <span data-ttu-id="324c9-206">기본값은 <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> 클래스의 새 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-206">The default is a new instance of the <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-207">인쇄 컨트롤러를 여러 가지 방법으로 인쇄 프로세스를 안내합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-207">A print controller guides the printing process in several ways.</span></span> <span data-ttu-id="324c9-208">예를 들어, 문서 인쇄를 변환 해야 하는 <xref:System.Drawing.Graphics> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-208">For example, to print a document, you need to convert it to a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="324c9-209"><xref:System.Drawing.Printing.PrintController> 그래픽 실제 문서를 인쇄 하는 프린터 또는 인쇄 미리 보기에 대 한 이미지를 그릴 위치를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-209">A <xref:System.Drawing.Printing.PrintController> specifies where to draw the graphic in an image for a print preview or on a printer to actually print the document.</span></span> <span data-ttu-id="324c9-210">인쇄 컨트롤러 문서를 즉시 인쇄 또는 지정된 된 간격을 대기를 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-210">A print controller can also specify whether to print a document immediately, or wait a specified interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-211">인스턴스를 만든 다음 코드 예제에서는 필요 합니다 <xref:System.Drawing.Printing.PrintDocument> 이라는 클래스가 `myPrintDocument`합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-211">The following code example requires that you have created an instance of the <xref:System.Drawing.Printing.PrintDocument> class that is named `myPrintDocument`.</span></span> <span data-ttu-id="324c9-212">예제의 새 인스턴스를 만듭니다는 <xref:System.Drawing.Printing.PrintController> 클래스에 할당 합니다 <xref:System.Drawing.Printing.PrintDocument.PrintController%2A> 의 속성 `myPrintDocument`, 문서를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-212">The example creates a new instance of the <xref:System.Drawing.Printing.PrintController> class, assigns it to the <xref:System.Drawing.Printing.PrintDocument.PrintController%2A> property of `myPrintDocument`, and prints the document.</span></span>  
  
 <span data-ttu-id="324c9-213">사용 된 <xref:System.Drawing.Printing> 및 <xref:System.Windows.Forms> 이 예제에 대 한 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-213">Use the <xref:System.Drawing.Printing> and <xref:System.Windows.Forms> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintController Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">
          <span data-ttu-id="324c9-214">제한 된 대화 상자에서 안전 하 게 인쇄 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-214">for safe printing from a restricted dialog box.</span>
          </span>
          <span data-ttu-id="324c9-215">연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-215">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="T:System.Drawing.Printing.PreviewPrintController" />
        <altmember cref="T:System.Drawing.Printing.PrintController" />
        <altmember cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
        <altmember cref="T:System.Drawing.Printing.StandardPrintController" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterSettings As PrinterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings ^ PrinterSettings { System::Drawing::Printing::PrinterSettings ^ get(); void set(System::Drawing::Printing::PrinterSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterSettings : System.Drawing.Printing.PrinterSettings with get, set" Usage="System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-216">문서를 인쇄할 프린터를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-216">Gets or sets the printer that prints the document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="324c9-217">문서 인쇄 위치 및 방법을 지정하는 <see cref="T:System.Drawing.Printing.PrinterSettings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-217">A <see cref="T:System.Drawing.Printing.PrinterSettings" /> that specifies where and how the document is printed.</span>
          </span>
          <span data-ttu-id="324c9-218">기본값은 해당 속성이 기본값으로 설정된 <see cref="T:System.Drawing.Printing.PrinterSettings" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-218">The default is a <see cref="T:System.Drawing.Printing.PrinterSettings" /> with its properties set to their default values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-219">통해 여러 프린터 설정을 지정할 수 있습니다는 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-219">You can specify several printer settings through the <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> property.</span></span> <span data-ttu-id="324c9-220">사용 예를 들어를 <xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=nameWithType> 속성을 인쇄할 매수를 지정 하는 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType> 속성을 사용 하려면 프린터 지정을 및 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=nameWithType> 인쇄할 페이지 범위를 지정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-220">For example, use the <xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=nameWithType> property to specify the number of copies you want to print, the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType> property to specify the printer to use, and the <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=nameWithType> property to specify the range of pages you want to print.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-221">다음 코드 예제에서는 지정된 된 프린터에서 문서를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-221">The following code example prints a document on the specified printer.</span></span> <span data-ttu-id="324c9-222">예제에서는 세 가지 가정을 만들어:는 변수 이름 `filePath` ; 인쇄 하는 파일의 경로를 설정한 메서드는 `pd_PrintPage`, 처리를 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트를 정의한; 및 명명 된 `printer` 되었습니다 프린터의 이름으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-222">The example makes three assumptions: that a variable names `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.</span></span>  
  
 <span data-ttu-id="324c9-223">사용 된 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스.</span><span class="sxs-lookup"><span data-stu-id="324c9-223">Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="PrintPage">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintPageEventHandler PrintPage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintPageEventHandler PrintPage" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PrintPage As PrintPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintPageEventHandler ^ PrintPage;" />
      <MemberSignature Language="F#" Value="member this.PrintPage : System.Drawing.Printing.PrintPageEventHandler " Usage="member this.PrintPage : System.Drawing.Printing.PrintPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-224">현재 페이지에 대해 인쇄할 출력이 필요할 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-224">Occurs when the output to print for the current page is needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-225">인쇄 출력을 지정 하려면 사용 합니다 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> 의 속성은 <xref:System.Drawing.Printing.PrintPageEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-225">To specify the output to print, use the <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> property of the <xref:System.Drawing.Printing.PrintPageEventArgs>.</span></span> <span data-ttu-id="324c9-226">예를 들어 인쇄 해야 하는 텍스트 줄을 지정 하려면 사용 하 여 텍스트를 그릴는 <xref:System.Drawing.Graphics.DrawString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="324c9-226">For example, to specify a line of text that should be printed, draw the text using the <xref:System.Drawing.Graphics.DrawString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="324c9-227">출력을 지정 하는 것 외에도 지정할 수 있습니다 추가 인쇄할 페이지를 설정 하 여 많은 경우 합니다 <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-227">In addition to specifying the output, you can indicate if there are additional pages to print by setting the <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType> property to `true`.</span></span> <span data-ttu-id="324c9-228">기본값은 `false`를 인쇄 하려면 페이지가 더 이상 없는지 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-228">The default is `false`, which indicates that there are no more pages to print.</span></span> <span data-ttu-id="324c9-229">통해 개별 페이지 설정을 수정할 수도 있습니다는 <xref:System.Drawing.Printing.PageSettings> 설정 하 여 인쇄 작업을 취소할 수 있습니다 합니다 <xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=nameWithType> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-229">Individual page settings can also be modified through the <xref:System.Drawing.Printing.PageSettings> and the print job can be canceled by setting the <xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=nameWithType> property to `true`.</span></span> <span data-ttu-id="324c9-230">다양 한 페이지 설정을 사용 하 여 문서의 각 페이지를 인쇄 하려면 처리는 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-230">To print each page of a document using different page settings, handle the <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> event.</span></span>  
  
 <span data-ttu-id="324c9-231">이벤트를 이벤트 처리기를 연결 하려면 인스턴스를 추가 합니다 <xref:System.Drawing.Printing.PrintPageEventHandler> 이벤트에 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-231">To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.PrintPageEventHandler> delegate to the event.</span></span> <span data-ttu-id="324c9-232">이벤트 처리기는 이벤트가 발생할 때마다 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-232">The event handler is called whenever the event occurs.</span></span> <span data-ttu-id="324c9-233">대리자를 사용 하 여 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-233">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="324c9-234">다음 코드 예제에서는 처리 된 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-234">The following code example demonstrates handling the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event.</span></span>  
  
 <span data-ttu-id="324c9-235">다른 예제를 보려면 [방법: Windows Forms에서 다중 페이지 텍스트 파일 인쇄](~/docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-235">For another example, see [How to: Print a Multi-Page Text File in Windows Forms](~/docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="324c9-236">사용 된 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스.</span><span class="sxs-lookup"><span data-stu-id="324c9-236">Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintPageEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="https://msdn.microsoft.com/library/362427f8-03d4-4826-b49f-60ab066ad322">
          <span data-ttu-id="324c9-237">방법: Windows Forms에서 다중 페이지 텍스트 파일 인쇄</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-237">How to: Print a Multi-Page Text File in Windows Forms</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/a4a2960c-eb70-48e2-b641-cfb222704e46">
          <span data-ttu-id="324c9-238">Windows Forms 인쇄 지원</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-238">Windows Forms Print Support</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="QueryPageSettings">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryPageSettings As QueryPageSettingsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::QueryPageSettingsEventHandler ^ QueryPageSettings;" />
      <MemberSignature Language="F#" Value="member this.QueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventHandler " Usage="member this.QueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.QueryPageSettingsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="324c9-239">각 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 이벤트 바로 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-239">Occurs immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="324c9-240">다양 한 페이지 설정을 사용 하 여 문서의 각 페이지를 인쇄 하는 것이 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-240">It is possible to print each page of a document using different page settings.</span></span> <span data-ttu-id="324c9-241">개별 속성을 수정 하 여 페이지 설정을 설정 합니다 <xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=nameWithType> 속성 또는 속성을 설정 하 여를 <xref:System.Drawing.Printing.PageSettings>입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-241">You set page settings by modifying individual properties of the <xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=nameWithType> property or by setting the property to a <xref:System.Drawing.Printing.PageSettings>.</span></span> <span data-ttu-id="324c9-242">변경 된 <xref:System.Drawing.Printing.PageSettings> 현재 페이지만, 문서의 기본 페이지 설정이 아닌에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-242">Changes made to the <xref:System.Drawing.Printing.PageSettings> affect only the current page, not the document's default page settings.</span></span> <span data-ttu-id="324c9-243">설정 하 여 인쇄 작업을 취소 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true` 에 대 한는 <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-243">The print job can also be canceled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` for the <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>.</span></span>  
  
 <span data-ttu-id="324c9-244">이벤트를 이벤트 처리기를 연결 하려면 인스턴스를 추가 합니다 <xref:System.Drawing.Printing.QueryPageSettingsEventHandler> 이벤트에 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-244">To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.QueryPageSettingsEventHandler> delegate to the event.</span></span> <span data-ttu-id="324c9-245">이벤트 처리기는 이벤트가 발생할 때마다 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-245">The event handler is called whenever the event occurs.</span></span> <span data-ttu-id="324c9-246">대리자를 사용 하 여 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-246">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
<span data-ttu-id="324c9-247">사용 하는 경우는 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 성능을 프린터 설정을 수정 하려면 이벤트를 <xref:System.Windows.Forms.PrintPreviewDialog> 최적화 구성 스위치를 설정한 경우에 제어 향상 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-247">If you use the <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> event to modify printer settings, the performance of the <xref:System.Windows.Forms.PrintPreviewDialog> control will not improve even if an optimization configuration switch is set.</span></span> <span data-ttu-id="324c9-248">자세한 내용은 [PrintPreviewDialog 컨트롤 개요](~/docs/framework/winforms/controls/printpreviewdialog-control-overview-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-248">For more information, see [PrintPreviewDialog control overview](~/docs/framework/winforms/controls/printpreviewdialog-control-overview-windows-forms.md).</span></span>   
  
## Examples  
 <span data-ttu-id="324c9-249">프린터에서 지 원하는 경우 다음 코드 예제에서는 색의 첫 번째 페이지를 사용 하 여 문서를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-249">The following code example prints a document with the first page in color, if the printer supports it.</span></span> <span data-ttu-id="324c9-250">예제를 실행 하려면를 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 생성 된 및 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 및 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 이벤트를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-250">The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.</span></span> <span data-ttu-id="324c9-251">합니다 `currentPageNumber` 모든 페이지에 인쇄 되 면 변수가 증가 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 표시 되지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="324c9-251">The `currentPageNumber` variable is incremented after every page is printed in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, which is not shown.</span></span>  
  
 <span data-ttu-id="324c9-252">사용 된 <xref:System.Drawing> 및 <xref:System.Drawing.Printing> 이 예제에 대 한 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="324c9-252">Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.</span></span>  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="printDocument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="324c9-253">인쇄 문서에 대한 정보를 문자열 형식으로 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-253">Provides information about the print document, in string form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="324c9-254">문자열</span>
          <span class="sxs-lookup">
            <span data-stu-id="324c9-254">A string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>