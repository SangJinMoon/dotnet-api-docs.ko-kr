<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HandleProcessCorruptedStateExceptionsAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e5713d1583a1d1ee0f3d65b449efaee6521bf597.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5713d1583a1d1ee0f3d65b449efaee6521bf597</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>Enables managed code to handle exceptions that indicate a corrupted process state.</source>
          <target state="translated">관리되는 코드가 손상된 프로세스 상태를 나타내는 예외를 처리하도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>Corrupted process state exceptions are exceptions that indicate that the state of a process has been corrupted.</source>
          <target state="translated">손상 된 프로세스 상태 예외는 프로세스의 상태가 손상 되었는지 여부를 나타내는 예외입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>We do not recommend executing your application in this state.</source>
          <target state="translated">이 상태에서 응용 프로그램을 실행 하는 것은 좋지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>By default, the common language runtime (CLR) does not deliver these exceptions to managed code, and the <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> blocks (and other exception-handling clauses) are not invoked for them.</source>
          <target state="translated">기본적으로 공용 언어 런타임 (CLR)을 전달 하지 않으므로 이러한 예외를 관리 코드로 및 <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> 블록 (및 다른 예외 처리 절)을 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>If you are absolutely sure that you want to maintain your handling of these exceptions, you must apply the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> attribute to the method whose exception-handling clauses you want to execute.</source>
          <target state="translated">이러한 예외 처리를 유지 하려면 확실히 인 경우에 적용 해야는 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> 특성을 메서드에 예외 처리 절을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>The CLR delivers the corrupted process state exception to applicable exception clauses only in methods that have both the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph> attributes.</source>
          <target state="translated">메서드는 둘 다에 해당 예외 절에 손상 된 프로세스 상태 예외를 배달 하는 CLR의 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>You can also add the  to your application's configuration file.</source>
          <target state="translated">추가할 수도 있습니다는 응용 프로그램의 구성 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>This will ensure that corrupted state exceptions are delivered to your exception handlers without the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph> attribute.</source>
          <target state="translated">이 방법을 사용 하면 손상 된 상태 예외 없이 예외 처리기에 배달 되는 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.SecurityCriticalAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>This configuration element has no effect on applications that were compiled in versions previous to the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> but are running in the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> or later; corrupted state exceptions will continue to be delivered for those applications.</source>
          <target state="translated">이 구성 요소에 이전 버전에서 컴파일된 응용 프로그램에 영향을 주지는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> 하지만 실행 되는 <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 또는 이상, 손상 된 상태 예외는 계속 해당 응용 프로그램으로 전달 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> attribute is ignored when it is encountered in partially trusted or transparent code, because a trusted host should not allow an untrusted add-in to catch and ignore these serious exceptions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute&gt;</ph> 신뢰할 수 있는 호스트를 신뢰할 수 없는 추가 기능을 catch 하 고 이러한 심각한 예외를 무시 허용 하지 않는 특성이 부분적으로 신뢰할 수 있는 또는 투명 코드에서 발견 된 경우에 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
          <source>For more information about corrupted process state exceptions, see the entry <bpt id="p1">[</bpt>Handling Corrupted State Exceptions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=179681)</ept> in the CLR Inside Out blog.</source>
          <target state="translated">손상 된 프로세스 상태 예외에 대 한 자세한 내용은 항목을 참조 하십시오. <bpt id="p1">[</bpt>손상 된 상태 예외 처리<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=179681)</ept> CLR 자세히 보기 블로그에서.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>