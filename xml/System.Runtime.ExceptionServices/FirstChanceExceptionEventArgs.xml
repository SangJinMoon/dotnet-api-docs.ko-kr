<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FirstChanceExceptionEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55b82b33fd434c2b4d5434a6080b2c61d46168149.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b82b33fd434c2b4d5434a6080b2c61d46168149</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Provides data for the notification event that is raised when a managed exception first occurs, before the common language runtime begins searching for event handlers.</source>
          <target state="translated">관리되는 예외가 처음으로 발생할 때 공용 언어 런타임에서 이벤트 처리기를 검색하기 전에 발생하는 알림 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>This class provides the exception handler for the <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> event with access to the exception.</source>
          <target state="translated">에 대 한 예외 처리기를 제공 하는이 클래스는 <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType&gt;</ph> 예외에 대 한 액세스를 사용 하 여 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>The following example creates a series of application domains named <ph id="ph1">`Child_0`</ph> through <ph id="ph2">`Child_3`</ph>, with a <ph id="ph3">`Worker`</ph> object in each application domain.</source>
          <target state="translated">다음 예제에서는 일련의 명명 된 응용 프로그램 도메인 <ph id="ph1">`Child_0`</ph> 통해 <ph id="ph2">`Child_3`</ph>와 <ph id="ph3">`Worker`</ph> 각 응용 프로그램 도메인의 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Each <ph id="ph1">`Worker`</ph> object has a reference to the <ph id="ph2">`Worker`</ph> object in the next application domain, except for the <ph id="ph3">`Worker`</ph> in the last application domain.</source>
          <target state="translated">각 <ph id="ph1">`Worker`</ph> 개체에 대 한 참조에는 <ph id="ph2">`Worker`</ph> 을 제외 하 고 다음 응용 프로그램 도메인의 개체는 <ph id="ph3">`Worker`</ph> 마지막 응용 프로그램 도메인입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> event is handled in all application domains except <ph id="ph2">`Child_1`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> 제외한 모든 응용 프로그램 도메인에서 이벤트를 처리 <ph id="ph2">`Child_1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>When the application domains have been created, the default application domain calls the <ph id="ph1">`TestException`</ph> method for the first child application domain.</source>
          <target state="translated">응용 프로그램 도메인을 만든 경우 기본 응용 프로그램 도메인 호출는 <ph id="ph1">`TestException`</ph> 첫 번째 자식 응용 프로그램 도메인에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Each <ph id="ph1">`Worker`</ph> object calls the <ph id="ph2">`TestException`</ph> method for the next, until the last <ph id="ph3">`Worker`</ph> throws an exception that is either handled or unhandled.</source>
          <target state="translated">각 <ph id="ph1">`Worker`</ph> 호출 개체는 <ph id="ph2">`TestException`</ph> 마지막 될 때까지 다음에 대 한 메서드 <ph id="ph3">`Worker`</ph> 처리 되거나 처리 되지 않는 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Thus, the current thread passes through all the application domains, and <ph id="ph1">`TestException`</ph> is added to the stack in each application domain.</source>
          <target state="translated">따라서, 현재 스레드는 모든 응용 프로그램 도메인을 통해 전달 및 <ph id="ph1">`TestException`</ph> 스택을에 각 응용 프로그램 도메인에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>When the last <ph id="ph1">`Worker`</ph> object handles the exception, the <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> event is raised only in the last application domain.</source>
          <target state="translated">때 마지막 <ph id="ph1">`Worker`</ph> 개체에서 예외를 처리는 <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> 이벤트는 마지막 응용 프로그램 도메인에만 발생 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>The other application domains never get a chance to handle the exception, so the event is not raised.</source>
          <target state="translated">다른 응용 프로그램 도메인에 가져오지 하므로 이벤트는 예외를 처리 하 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>When the last <ph id="ph1">`Worker`</ph> object does not handle the exception, the <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> event is raised in each application domain that has an event handler.</source>
          <target state="translated">때 마지막 <ph id="ph1">`Worker`</ph> 개체는 예외를 처리 하지 않는 <ph id="ph2">&lt;xref:System.AppDomain.FirstChanceException&gt;</ph> 이벤트는 이벤트 처리기가 각 응용 프로그램 도메인에서 발생 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>After each event handler has finished, the stack continues to unwind until the exception is caught by the default application domain.</source>
          <target state="translated">각 이벤트 처리기가 끝나면 스택을 계속 예외는 기본 응용 프로그램 도메인에서 걸러진 될 때까지 해제 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>To see how the stack display grows as the event is raised closer and closer to the default application domain, change <ph id="ph1">`e.Exception.Message`</ph> to <ph id="ph2">`e.Exception`</ph> in the <ph id="ph3">`FirstChanceHandler`</ph> event handlers.</source>
          <target state="translated">변경 이벤트가 곧 제공 될 때 스택 디스플레이 증가 하는 방법을 하 고 기본 응용 프로그램 도메인에 가까울수록 서로 볼 <ph id="ph1">`e.Exception.Message`</ph> 를 <ph id="ph2">`e.Exception`</ph> 에 <ph id="ph3">`FirstChanceHandler`</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
          <source>Notice that when <ph id="ph1">`TestException`</ph> is called across application domain boundaries, it appears twice: once for the proxy and once for the stub.</source>
          <target state="translated">때 <ph id="ph1">`TestException`</ph> 라고 응용 프로그램 도메인 경계에서 두 번 나타납니다: 프록시에 대해 한 번씩, 한 번 스텁에 대해 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)">
          <source>The exception that was just thrown by managed code, and that will be examined by the <ph id="ph1">&lt;see cref="E:System.AppDomain.UnhandledException" /&gt;</ph> event.</source>
          <target state="translated">관리 코드에서 방금 throw된 예외이며 <ph id="ph1">&lt;see cref="E:System.AppDomain.UnhandledException" /&gt;</ph> 이벤트를 통해 검사됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /&gt;</ph> class with a specified exception.</source>
          <target state="translated">지정된 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)">
          <source>This constructor is called by the common language runtime, not by application code.</source>
          <target state="translated">이 생성자는 응용 프로그램 코드가 아닌 공용 언어 런타임에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>The managed exception object that corresponds to the exception thrown in managed code.</source>
          <target state="translated">관리되는 코드에서 throw된 예외에 해당하는 관리되는 예외 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>The newly thrown exception.</source>
          <target state="translated">새로 throw된 예외입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>The method that handles the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph> event can examine the exception and perform appropriate logging or other notification services.</source>
          <target state="translated">처리 하는 메서드는 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException?displayProperty=nameWithType&gt;</ph> 이벤트는 예외를 검토 하 고 적절 한 로깅 또는 알림 서비스를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception">
          <source>For example code, see <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt;</ph>.</source>
          <target state="translated">예제 코드를 보려면 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs&gt;</ph>를 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>