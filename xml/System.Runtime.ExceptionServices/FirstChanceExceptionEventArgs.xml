<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2030e55041a262d9e02246639317d0ba84021bfc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36635493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FirstChanceExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d34ac-101">관리되는 예외가 처음으로 발생할 때 공용 언어 런타임에서 이벤트 처리기를 검색하기 전에 발생하는 알림 이벤트에 대한 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d34ac-101">Provides data for the notification event that is raised when a managed exception first occurs, before the common language runtime begins searching for event handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34ac-102">에 대 한 예외 처리기를 제공 하는이 클래스는 <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> 예외에 대 한 액세스를 사용 하 여 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-102">This class provides the exception handler for the <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> event with access to the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d34ac-103">다음 예제에서는 일련의 명명 된 응용 프로그램 도메인 `Child_0` 통해 `Child_3`와 `Worker` 각 응용 프로그램 도메인의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-103">The following example creates a series of application domains named `Child_0` through `Child_3`, with a `Worker` object in each application domain.</span></span> <span data-ttu-id="d34ac-104">각 `Worker` 개체에 대 한 참조에는 `Worker` 을 제외 하 고 다음 응용 프로그램 도메인의 개체는 `Worker` 마지막 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-104">Each `Worker` object has a reference to the `Worker` object in the next application domain, except for the `Worker` in the last application domain.</span></span> <span data-ttu-id="d34ac-105"><xref:System.AppDomain.FirstChanceException> 제외한 모든 응용 프로그램 도메인에서 이벤트를 처리 `Child_1`합니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-105">The <xref:System.AppDomain.FirstChanceException> event is handled in all application domains except `Child_1`.</span></span>  
  
 <span data-ttu-id="d34ac-106">응용 프로그램 도메인을 만든 경우 기본 응용 프로그램 도메인 호출는 `TestException` 첫 번째 자식 응용 프로그램 도메인에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="d34ac-106">When the application domains have been created, the default application domain calls the `TestException` method for the first child application domain.</span></span> <span data-ttu-id="d34ac-107">각 `Worker` 호출 개체는 `TestException` 마지막 될 때까지 다음에 대 한 메서드 `Worker` 처리 되거나 처리 되지 않는 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-107">Each `Worker` object calls the `TestException` method for the next, until the last `Worker` throws an exception that is either handled or unhandled.</span></span> <span data-ttu-id="d34ac-108">따라서, 현재 스레드는 모든 응용 프로그램 도메인을 통해 전달 및 `TestException` 스택을에 각 응용 프로그램 도메인에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-108">Thus, the current thread passes through all the application domains, and `TestException` is added to the stack in each application domain.</span></span>  
  
 <span data-ttu-id="d34ac-109">때 마지막 `Worker` 개체에서 예외를 처리는 <xref:System.AppDomain.FirstChanceException> 이벤트는 마지막 응용 프로그램 도메인에만 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-109">When the last `Worker` object handles the exception, the <xref:System.AppDomain.FirstChanceException> event is raised only in the last application domain.</span></span> <span data-ttu-id="d34ac-110">다른 응용 프로그램 도메인에 가져오지 하므로 이벤트는 예외를 처리 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-110">The other application domains never get a chance to handle the exception, so the event is not raised.</span></span>  
  
 <span data-ttu-id="d34ac-111">때 마지막 `Worker` 개체는 예외를 처리 하지 않는 <xref:System.AppDomain.FirstChanceException> 이벤트는 이벤트 처리기가 각 응용 프로그램 도메인에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-111">When the last `Worker` object does not handle the exception, the <xref:System.AppDomain.FirstChanceException> event is raised in each application domain that has an event handler.</span></span> <span data-ttu-id="d34ac-112">각 이벤트 처리기가 끝나면 스택을 계속 예외는 기본 응용 프로그램 도메인에서 걸러진 될 때까지 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-112">After each event handler has finished, the stack continues to unwind until the exception is caught by the default application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d34ac-113">변경 이벤트가 곧 제공 될 때 스택 디스플레이 증가 하는 방법을 하 고 기본 응용 프로그램 도메인에 가까울수록 서로 볼 `e.Exception.Message` 를 `e.Exception` 에 `FirstChanceHandler` 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-113">To see how the stack display grows as the event is raised closer and closer to the default application domain, change `e.Exception.Message` to `e.Exception` in the `FirstChanceHandler` event handlers.</span></span> <span data-ttu-id="d34ac-114">때 `TestException` 라고 응용 프로그램 도메인 경계에서 두 번 나타납니다: 프록시에 대해 한 번씩, 한 번 스텁에 대해 합니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-114">Notice that when `TestException` is called across application domain boundaries, it appears twice: once for the proxy and once for the stub.</span></span>  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs : Exception -&gt; System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" Usage="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="d34ac-115">관리 코드에서 방금 throw된 예외이며 <see cref="E:System.AppDomain.UnhandledException" /> 이벤트를 통해 검사됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34ac-115">The exception that was just thrown by managed code, and that will be examined by the <see cref="E:System.AppDomain.UnhandledException" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d34ac-116">지정된 예외를 사용하여 <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34ac-116">Initializes a new instance of the <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> class with a specified exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34ac-117">이 생성자는 응용 프로그램 코드가 아닌 공용 언어 런타임에 의해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-117">This constructor is called by the common language runtime, not by application code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d34ac-118">관리되는 코드에서 throw된 예외에 해당하는 관리되는 예외 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34ac-118">The managed exception object that corresponds to the exception thrown in managed code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d34ac-119">새로 throw된 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d34ac-119">The newly thrown exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d34ac-120">처리 하는 메서드는 <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> 이벤트는 예외를 검토 하 고 적절 한 로깅 또는 알림 서비스를 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d34ac-120">The method that handles the <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> event can examine the exception and perform appropriate logging or other notification services.</span></span>  
  
 <span data-ttu-id="d34ac-121">예제 코드를 보려면 <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="d34ac-121">For example code, see <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>