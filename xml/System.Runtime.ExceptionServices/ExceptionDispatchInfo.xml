<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionDispatchInfo.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c9705c7cab056ffd2d3a6a05962a03c0ae933d19.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9705c7cab056ffd2d3a6a05962a03c0ae933d19</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>Represents an exception whose state is captured at a certain point in code.</source>
          <target state="translated">상태가 코드의 특정 지점에서 캡처되는 예외를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object stores the stack trace information and Watson information that the exception contains at the point where it is captured.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> 스택 추적 정보 및 예외는 캡처된 지점에 포함 된 Watson 정보를 저장 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>The exception can be thrown at another time and possibly on another thread by calling the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">예외 throw 될 수 있는 다른 시간에 및 다른 스레드에서 호출 하 여 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source>The exception is thrown as if it had flowed from the point where it was captured to the point where the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method is called.</source>
          <target state="translated">지점에 캡처 지점에서 이동 했습니다 하는 경우 예외가 throw 됩니다 위치는 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
          <source><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> cannot be serialized and is not intended to cross application domain boundaries.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> 직렬화 할 수 없습니다 하며 응용 프로그램 도메인 경계를 교차 하는 적합 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>The exception whose state is captured, and which is represented by the returned object.</source>
          <target state="translated">상태가 캡처되고 반환된 개체로 표시되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> object that represents the specified exception at the current point in code.</source>
          <target state="translated">코드의 현재 지점에서 지정된 예외를 나타내는 <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>An object that represents the specified exception at the current point in code.</source>
          <target state="translated">코드의 현재 지점에서 지정된 예외를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> 개체 경우 반환 되는이 방법으로 나중에 및 지정된 된 예외를 다시 throw 할 다른 스레드에서 처럼 예외는 다시 throw 하는 지점에 캡처이 지점에서 이동 했습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.</source>
          <target state="translated">예외는 캡처 시 활성, 현재 스택 추적 정보 및에 포함 된 Watson 정보는 예외 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source>If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.</source>
          <target state="translated">활성 상태인 경우 즉, 하지 발생 했는지, 하지은 모든 스택 추적 정보 또는 Watson 정보입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>Gets the exception that is represented by the current instance.</source>
          <target state="translated">현재 인스턴스로 표시되는 예외를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>The exception that is represented by the current instance.</source>
          <target state="translated">현재 인스턴스로 표시되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> object.</source>
          <target state="translated">여러 예외가 결합 하려면 예를 들어 작업 병렬 라이브러리에서이 속성은 사용 된 <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>It is not intended to be used by application code.</source>
          <target state="translated">응용 프로그램 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method to restore the state of the captured exception and throw it.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> 메서드를 캡처된 예외 상태를 복원 하 고이 throw 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
          <source>Throws the exception that is represented by the current <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> object, after restoring the state that was saved when the exception was captured.</source>
          <target state="translated">예외가 캡처될 때 저장된 상태로 복원한 후 <ph id="ph1">&lt;see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /&gt;</ph> 개체로 표현되는 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
          <source>When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: "End of stack trace from the previous location where the exception was thrown".</source>
          <target state="translated">복원 지점을 나타내기 위해 스택 추적에서 다음 문자열이 삽입 되는 예외를 복원할 때: "예외가 throw 된 이전 위치의 스택 추적 끝"입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
          <source>This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.</source>
          <target state="translated">이 내부 예외 또는 마샬링된 예외 스택 추적에 표시 됩니다는 방식과 비슷합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>