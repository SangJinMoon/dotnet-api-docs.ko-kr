<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RuntimeCompatibilityAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bfc7338dc35c89cd84d20ed96cc478386bb8a195.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfc7338dc35c89cd84d20ed96cc478386bb8a195</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>Specifies whether to wrap exceptions that do not derive from the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 클래스에서 파생되지 않은 예외를 <ph id="ph2">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /&gt;</ph> 개체로 래핑할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>Some languages, such as C++, allow you to throw exceptions of any type.</source>
          <target state="translated">C + +와 같은 일부 언어에서는 모든 형식의 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> class.</source>
          <target state="translated">Microsoft C# 및 Visual Basic의 경우와 같은 다른 언어에서는 모든 throw 된 예외에서 파생 될 필요는 <ph id="ph1">&lt;xref:System.Exception&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from <ph id="ph1">&lt;xref:System.Exception&gt;</ph> in a <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt;</ph> object.</source>
          <target state="translated">언어 간 호환성을 위해 공용 언어 런타임 (CLR)에서 파생 되지 않은 개체를 래핑합니다 <ph id="ph1">&lt;xref:System.Exception&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> 어셈블리에 대 한 예외를 catch 블록 및 예외 필터 내부에 래핑되어 표시할지 여부를 지정 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.</source>
          <target state="translated">Microsoft C# 및 Visual Basic 컴파일러를 비롯 한 많은 언어 컴파일러 배치 동작을 지정 하는 기본적으로이 특성을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>Note that the runtime still wraps exceptions even if you use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> class to specify that you do not want them wrapped.</source>
          <target state="translated">런타임에서 사용 하는 경우에 여전히 예외를 래핑하는 참고는 <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> 하지 않기로 래핑하지 지정 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>In this case, exceptions are unwrapped only inside catch blocks or exception filters.</source>
          <target state="translated">이 경우 예외 catch 블록 또는 예외 필터 안에서 래핑 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
          <source>The following code example demonstrates how to apply the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> class to an assembly that throws a <ph id="ph2">&lt;xref:System.String&gt;</ph> object as an exception in C++ and catches it using a <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt;</ph> object.</source>
          <target state="translated">다음 코드 예제에 적용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> throw 하는 어셈블리에 클래스는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 개체도 c + +에서 예외를 사용 하 여 catch는 <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor">
          <source>The following code example applies the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> attribute to an assembly to disable exception wrapping.</source>
          <target state="translated">다음 코드 예제에서는 적용는 <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> 예외 래핑을 사용 하지 않으려면 어셈블리에 대 한 특성입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
          <source>Gets or sets a value that indicates whether to wrap exceptions that do not derive from the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 클래스에서 파생되지 않은 예외를 <ph id="ph2">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /&gt;</ph> 개체로 래핑할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if exceptions that do not derive from the <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph> class should appear wrapped with a <ph id="ph3">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph> 클래스에서 파생되지 않은 예외가 <ph id="ph3">&lt;see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" /&gt;</ph> 개체로 래핑되어 나타나면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
          <source>The following code example applies the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> attribute to an assembly to disable exception wrapping.</source>
          <target state="translated">다음 코드 예제에서는 적용는 <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> 예외 래핑을 사용 하지 않으려면 어셈블리에 대 한 특성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>