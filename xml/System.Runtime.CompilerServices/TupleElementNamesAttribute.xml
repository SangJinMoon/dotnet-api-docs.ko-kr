<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TupleElementNamesAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50a03b79eddac8c421b3b71426d1f48b6c4b77874.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a03b79eddac8c421b3b71426d1f48b6c4b77874</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netframework-4.7,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.TupleElementNamesAttribute">
          <source>Indicates that the use of a value tuple on a member is meant to be treated as a tuple with element names.</source>
          <target state="translated">멤버에 대해 값 튜플을 사용하는 경우 해당 튜플을 요소 이름이 포함된 튜플로 처리함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])">
          <source>A string array that specifies, in a pre-order depth-first traversal of a type's construction, which value tuple occurrences are meant to carry element names.</source>
          <target state="translated">튜플 발생이 요소 이름을 전달해야 하는 값을 순서가 미리 정해진 유형 생성의 깊이 우선 통과 방식으로 지정하는 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.TupleElementNamesAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.TupleElementNamesAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])">
          <source>This constructor is used on types that contain a value tuple instance with element names.</source>
          <target state="translated">이 생성자는 요소 이름 사용 하는 값 튜플 인스턴스를 포함 하는 형식에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])">
          <source>For example, if <ph id="ph1">`C`</ph> is a generic type with          two type parameters, then the use of the constructed type <ph id="ph2">`C(`</ph><ph id="ph3">&lt;xref:System.ValueTuple%602&gt;</ph><ph id="ph4">`,`</ph> <ph id="ph5">&lt;xref:System.ValueTuple%603&gt;</ph><ph id="ph6">`)`</ph> might be intended to          treat the first type argument as a tuple with element names and the          second as a tuple without element names.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`C`</ph> 생성 된 형식 사용 하 여 다음 두 형식 매개 변수가 있는 제네릭 형식 인지 <ph id="ph2">`C(`</ph> <ph id="ph3">&lt;xref:System.ValueTuple%602&gt;</ph> <ph id="ph4">`,`</ph> <ph id="ph5">&lt;xref:System.ValueTuple%603&gt;</ph> <ph id="ph6">`)`</ph> ele 인 튜플에으로 첫 번째 형식 인수를 처리 하도록 하려는 할인가 이름 및 요소 이름이 없는 튜플로 서 두 번째입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])">
          <source>In this case, the          appropriate attribute specification should use a          <ph id="ph1">`transformNames`</ph> value of <ph id="ph2">`{ "name1", "name2", null, null,          null}`</ph>.</source>
          <target state="translated">이 경우에 적절 한 특성 사양 사용 해야는 <ph id="ph1">`transformNames`</ph> 값 <ph id="ph2">`{ "name1", "name2", null, null,          null}`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames">
          <source>Specifies, in a pre-order depth-first traversal of a type's construction, which value tuple elements are meant to carry element names.</source>
          <target state="translated">튜플 요소가 요소 이름을 전달해야 하는 값을 순서가 미리 정해진 유형 생성의 깊이 우선 통과 방식으로 지정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames">
          <source>An array that indicates which value tuple elements are meant to carry element names.</source>
          <target state="translated">튜플 요소가 요소 이름을 전달해야 하는 값을 나타내는 배열입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>