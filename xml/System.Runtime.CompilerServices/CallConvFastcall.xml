<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CallConvFastcall.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ec177ba300518c563985343ef38faf7229a3df09.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec177ba300518c563985343ef38faf7229a3df09</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>This calling convention is not supported in this version of the .NET Framework.</source>
          <target state="translated">이 버전의 .NET Framework에서는 이 호출 규칙이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>The <ph id="ph1">`__fastcall`</ph> calling convention specifies that arguments to functions be passed in registers, when possible.</source>
          <target state="translated"><ph id="ph1">`__fastcall`</ph> 호출 규칙이 있는 함수에 대 한 인수는 가능한 경우 레지스터에 전달 하도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>The classes in <ph id="ph1">&lt;xref:System.Runtime.CompilerServices&gt;</ph> are for compiler writers' use only.</source>
          <target state="translated">클래스 <ph id="ph1">&lt;xref:System.Runtime.CompilerServices&gt;</ph> 는 컴파일러 작성자 용도로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</source>
          <target state="translated">컴파일러는 적시에 (JIT) 컴파일러가 기본 동작은 적절 하지 않은 경우 값을 처리 하는 방식을 변경 하려면 메타 데이터 내에서 사용자 지정 한정자를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</source>
          <target state="translated">JIT 컴파일러는 사용자 지정 한정자를 발견 하면는 한정자 지정 하는 방식으로 값을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>Compilers can apply custom modifiers to methods, parameters, and return values.</source>
          <target state="translated">컴파일러는 메서드 매개 변수를 사용자 지정 한정자를 적용 하 고 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>The JIT compiler must respond to required modifiers but can ignore optional modifiers.</source>
          <target state="translated">JIT 컴파일러는 필수 한정자에 응답 해야 하지만 선택적 한정자를 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in manner that is not compatible with C++ by default.</source>
          <target state="translated">C + + 컴파일러는 기본적으로 JIT 컴파일러는 c + +와 호환 되지 않는 방식에서 바이트를 처리 하는 경우에는 바이트에 처리 해야는 방법을 설명 하는 사용자 지정 한정자를 내보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>You can emit custom modifiers into metadata using one of the following techniques:</source>
          <target state="translated">다음 방법 중 하나를 사용 하는 메타 데이터를 사용자 지정 한정자를 내보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>Using methods in the <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> class like <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>.</source>
          <target state="translated">메서드를 사용 하는 <ph id="ph1">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> 와 같은 클래스 <ph id="ph2">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <ph id="ph1">`modopt`</ph> and <ph id="ph2">`modreq`</ph>, and assembling the file with the <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>.</source>
          <target state="translated">에 대 한 호출을 포함 하는 Microsoft MSIL (intermediate language) 명령 파일을 생성 <ph id="ph1">`modopt`</ph> 및 <ph id="ph2">`modreq`</ph>, 하 고 사용 하 여 파일을 어셈블할는 <bpt id="p1">[</bpt>Ilasm.exe (IL 어셈블러)<ept id="p1">](~/docs/framework/tools/ilasm-exe-il-assembler.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.CallConvFastcall">
          <source>Using the unmanaged reflection API.</source>
          <target state="translated">관리 되지 않는 리플렉션 API를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.CallConvFastcall.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.CallConvFastcall" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.CallConvFastcall" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.CallConvFastcall.#ctor">
          <source>The classes in <ph id="ph1">&lt;xref:System.Runtime.CompilerServices&gt;</ph> are for compiler writers' use only.</source>
          <target state="translated">클래스 <ph id="ph1">&lt;xref:System.Runtime.CompilerServices&gt;</ph> 는 컴파일러 작성자 용도로 사용 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>