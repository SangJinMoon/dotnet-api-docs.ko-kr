<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DynamicAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55ddc2d5ee0473dd31989303c7bafc28758658df6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ddc2d5ee0473dd31989303c7bafc28758658df6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.DynamicAttribute">
          <source>Indicates that the use of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on a member is meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">멤버에서 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>를 사용하면 동적으로 디스패치되는 형식으로 처리된다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.DynamicAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor">
          <source>When used in an attribute specification, the default constructor is semantically equivalent to <ph id="ph1">`DynamicAttribute({ true })`</ph>, and can be considered a shorthand for that expression.</source>
          <target state="translated">기본 생성자는 기능적으로 동일 특성 지정에 사용 하면, <ph id="ph1">`DynamicAttribute({ true })`</ph>, 해당 식에 대 한 줄임 간주할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor">
          <source>It should therefore only be used on an element of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">만 형식의 요소에 사용 하므로 해야 <ph id="ph1">&lt;xref:System.Object&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>Specifies, in a prefix traversal of a type's construction, which <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> occurrences are meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">형식의 접두사 순회 생성 시 동적으로 디스패치되는 형식으로 처리될 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 를 지정합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>This constructor is meant to be used on types that are built on an underlying occurrence of <ph id="ph1">&lt;xref:System.Object&gt;</ph> that is meant to be treated dynamically.</source>
          <target state="translated">이 생성자의 기본 항목을 기반으로 하는 형식에서 사용 하는 것은 <ph id="ph1">&lt;xref:System.Object&gt;</ph> 동적으로 처리 될 것입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>For instance, if <ph id="ph1">`C`</ph> is a generic type with two type parameters, a use of the constructed type <ph id="ph2">`C&lt;Object,Object&gt;`</ph> might be intended to treat the first type argument dynamically and the second typically, in which case the appropriate attribute specification should use a <ph id="ph3">`transformFlags`</ph> value of <ph id="ph4">`{ false, true, false }`</ph>.</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`C`</ph> 제네릭 형식이 형식 매개 변수가 두 개의 생성된 된 형식 사용 하는 <ph id="ph2">`C&lt;Object,Object&gt;`</ph> 첫 번째 형식 인수를 동적으로 처리 하도록 하려는 및 두 번째 일반적으로 경우 적절 한 특성 지정 사용 해야는 <ph id="ph3">`transformFlags`</ph> 값 <ph id="ph4">`{ false, true, false }`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.DynamicAttribute.TransformFlags">
          <source>Specifies, in a prefix traversal of a type's construction, which <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> occurrences are meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">형식의 접두사 순회 생성 시 동적으로 디스패치되는 형식으로 처리될 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 를 지정합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.DynamicAttribute.TransformFlags">
          <source>The list of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> occurrences that are meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">동적으로 디스패치되는 형식으로 처리될 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>의 목록입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>